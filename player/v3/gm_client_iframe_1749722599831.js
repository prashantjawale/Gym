!function(e){function n(){}function t(e,n){return function(){e.apply(n,arguments)}}function o(e){if("object"!=typeof this)throw new TypeError("Promises must be constructed via new");if("function"!=typeof e)throw new TypeError("not a function");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],s(e,this)}function i(e,n){for(;3===e._state;)e=e._value;return 0===e._state?void e._deferreds.push(n):(e._handled=!0,void o._immediateFn(function(){var t=1===e._state?n.onFulfilled:n.onRejected;if(null===t)return void(1===e._state?r:u)(n.promise,e._value);var o;try{o=t(e._value)}catch(i){return void u(n.promise,i)}r(n.promise,o)}))}function r(e,n){try{if(n===e)throw new TypeError("A promise cannot be resolved with itself.");if(n&&("object"==typeof n||"function"==typeof n)){var i=n.then;if(n instanceof o)return e._state=3,e._value=n,void f(e);if("function"==typeof i)return void s(t(i,n),e)}e._state=1,e._value=n,f(e)}catch(r){u(e,r)}}function u(e,n){e._state=2,e._value=n,f(e)}function f(e){2===e._state&&0===e._deferreds.length&&o._immediateFn(function(){e._handled||o._unhandledRejectionFn(e._value)});for(var n=0,t=e._deferreds.length;n<t;n++)i(e,e._deferreds[n]);e._deferreds=null}function c(e,n,t){this.onFulfilled="function"==typeof e?e:null,this.onRejected="function"==typeof n?n:null,this.promise=t}function s(e,n){var t=!1;try{e(function(e){t||(t=!0,r(n,e))},function(e){t||(t=!0,u(n,e))})}catch(o){if(t)return;t=!0,u(n,o)}}var a=setTimeout;o.prototype["catch"]=function(e){return this.then(null,e)},o.prototype.then=function(e,t){var o=new this.constructor(n);return i(this,new c(e,t,o)),o},o.all=function(e){var n=Array.prototype.slice.call(e);return new o(function(e,t){function o(r,u){try{if(u&&("object"==typeof u||"function"==typeof u)){var f=u.then;if("function"==typeof f)return void f.call(u,function(e){o(r,e)},t)}n[r]=u,0===--i&&e(n)}catch(c){t(c)}}if(0===n.length)return e([]);for(var i=n.length,r=0;r<n.length;r++)o(r,n[r])})},o.resolve=function(e){return e&&"object"==typeof e&&e.constructor===o?e:new o(function(n){n(e)})},o.reject=function(e){return new o(function(n,t){t(e)})},o.race=function(e){return new o(function(n,t){for(var o=0,i=e.length;o<i;o++)e[o].then(n,t)})},o._immediateFn="function"==typeof setImmediate&&function(e){setImmediate(e)}||function(e){a(e,0)},o._unhandledRejectionFn=function(e){"undefined"!=typeof console&&console&&console.warn("Possible Unhandled Promise Rejection:",e)},o._setImmediateFn=function(e){o._immediateFn=e},o._setUnhandledRejectionFn=function(e){o._unhandledRejectionFn=e},"undefined"!=typeof module&&module.exports?module.exports=o:e.Promise||(e.Promise=o)}(this);
if (GmCXt === undefined) var GmCXt = {};

GmCXt.browserApp = false;
GmCXt.isFirefox = typeof InstallTrigger !== 'undefined';
GmCXt.isChrome = !!window.chrome;

if (GmCXt.isFirefox && typeof browser !== 'undefined') {
	GmCXt.browserApp = 'firefox';
} else if (GmCXt.isChrome && chrome.storage) {
	GmCXt.browserApp = 'chrome';
} else if ((navigator.userAgent.indexOf("Opera") || navigator.userAgent.indexOf('OPR')) != -1) {
	GmCXt.browserApp = "Opera";
} else if (navigator.userAgent.indexOf("Safari") != -1) {
	GmCXt.browserApp = "Safari";
}

GmCXt.isIE = /*@cc_on!@*/ false || !!document.documentMode;
if (GmCXt.isIE) {
	var PROMISES_POLYFILL = "";
	if (!window.Promise && typeof Promise !== 'undefined') {
		window.Promise = Promise;
	}
	GmCXt.browserApp = 'ie';
}
if (GmCXt === undefined) {
	var GmCXt = {};
}

GmCXt.conf = {};
GmCXt.conf.version = "2025.3.2";
GmCXt.conf.env = "Test";

GmCXt.conf.creatorApp = 'mgExt';
GmCXt.conf.playerApp = 'mgPlayer';
GmCXt.conf.appName = "mgPlayer";

GmCXt.conf.allowedDomains = [];
GmCXt.conf.appTypeExt = 'Extension';
GmCXt.conf.appTypeScript = 'JScript';
GmCXt.conf.appTypeElectron = 'electron';
GmCXt.conf.Premise = 'Premise';
GmCXt.conf.runEnv = "browser";
GmCXt.conf.msgPrefix = "mgPlayerJSTest_";

GmCXt.conf.showWidget = false;

GmCXt.conf.playerExtension = GmCXt.conf.playerApp + GmCXt.conf.appTypeExt;
GmCXt.conf.playerJS = GmCXt.conf.playerApp + GmCXt.conf.appTypeScript;

GmCXt.conf.websiteUrl = "https://myguide.org";
GmCXt.conf.privacyPolicyUrl = "https://www.edcast.com/corp/privacy-policy/";
GmCXt.conf.termsURL = "https://www.edcast.com/corp/terms-of-service/";
GmCXt.conf.feedbackDetails = "mailto:support@csod.com?Subject=MyGuide Feedback";
GmCXt.conf.adminEmail = "<a href='mailto:admin@edcast.com' target='_top'>admin@edcast.com</a>";
GmCXt.conf.hideCaptcha = "";

try {
	chrome.runtime.onMessage.addListener(function() {
		return true;
	});
	GmCXt.conf.appType = GmCXt.conf.appTypeExt;
} catch (e) {
	try {
		var uri = safari.extension.baseURI;
		if (uri !== null) {
			GmCXt.conf.appType = GmCXt.conf.appTypeExt;
		}
	} catch (e2) {
		GmCXt.conf.appType = GmCXt.conf.appTypeScript;
	}
}

// Default true, guideme icon will be visible on all urls. 
// If false, guideme icon will only be visible on urls where user have created tours. 

GmCXt.conf.allUrls = true;

GmCXt.setConfig = function() {
	GmCXt.conf.clientJsBaseUrl = "https://stagecdn.guideme.io/guideme-player/ent/";
	GmCXt.conf.chromeExtensionUrl = "";
	GmCXt.conf.webServiceUrl = "https://qa-api.guideme.io/v3/";
	GmCXt.conf.staticContentPath = "https://stagecdn.guideme.io/guideme-assests/";
	GmCXt.conf.webPortalUrl = "https://qa-admin.myguide.org/";
	GmCXt.conf.analyticsPath = "https://analytics-qa.guideme.io/";
	GmCXt.conf.analyticsPortalUrl = "https://analytics-qa.myguide.org/";

	GmCXt.conf.cdn = "https://stagecdn.guideme.io/";
	GmCXt.conf.jsonStorageUrl = "https://stage-mycdn.guideme.io/";
	
	GmCXt.conf.ssoRedirectionUrl = "https://qa-sso.guideme.io/saml2/sp/sso/";
	GmCXt.conf.ssoApiUrl = "https://qa-sso.guideme.io/saml2/sp/session/";
	GmCXt.conf.ssoConfigUrl = "https://stagecdn.guideme.io/guideme-auth-qa/objects/";
	GmCXt.conf.publicTimestampUrl = "https://stagecdn.guideme.io/guideme-auth-qa/timestamp/";
};

GmCXt.setConfig();

(function() {
	if (GmCXt.conf.appType === GmCXt.conf.appTypeExt) {

		var root = '';

		if (GmCXt.browserApp === 'Safari') {
			root = safari.extension.baseURI;
		} else if (GmCXt.browserApp === 'firefox' ) {

			root = chrome.extension.getURL('');

		} else {
			root = chrome.runtime.getURL('');
		}
	}

})();

GmCXt.conf.appConfig = {
	login: {guideme: 1},
	testme: 1,
	customer: 'myguide',
	desktopCommunication: false,
	iframeInjection: true
};
/*! jQuery v3.7.1 | (c) OpenJS Foundation and other contributors | jquery.org/license */
var hostJquery;
var host$;
if (typeof jQuery !== 'undefined') {
	hostJquery = jQuery;
	host$ = $;
}
!function(e,t){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=e.document?t(e,!0):function(e){if(!e.document)throw new Error("jQuery requires a window with a document");return t(e)}:t(e)}("undefined"!=typeof window?window:this,function(ie,e){"use strict";var oe=[],r=Object.getPrototypeOf,ae=oe.slice,g=oe.flat?function(e){return oe.flat.call(e)}:function(e){return oe.concat.apply([],e)},s=oe.push,se=oe.indexOf,n={},i=n.toString,ue=n.hasOwnProperty,o=ue.toString,a=o.call(Object),le={},v=function(e){return"function"==typeof e&&"number"!=typeof e.nodeType&&"function"!=typeof e.item},y=function(e){return null!=e&&e===e.window},C=ie.document,u={type:!0,src:!0,nonce:!0,noModule:!0};function m(e,t,n){var r,i,o=(n=n||C).createElement("script");if(o.text=e,t)for(r in u)(i=t[r]||t.getAttribute&&t.getAttribute(r))&&o.setAttribute(r,i);n.head.appendChild(o).parentNode.removeChild(o)}function x(e){return null==e?e+"":"object"==typeof e||"function"==typeof e?n[i.call(e)]||"object":typeof e}var t="3.7.1",l=/HTML$/i,ce=function(e,t){return new ce.fn.init(e,t)};function c(e){var t=!!e&&"length"in e&&e.length,n=x(e);return!v(e)&&!y(e)&&("array"===n||0===t||"number"==typeof t&&0<t&&t-1 in e)}function fe(e,t){return e.nodeName&&e.nodeName.toLowerCase()===t.toLowerCase()}ce.fn=ce.prototype={jquery:t,constructor:ce,length:0,toArray:function(){return ae.call(this)},get:function(e){return null==e?ae.call(this):e<0?this[e+this.length]:this[e]},pushStack:function(e){var t=ce.merge(this.constructor(),e);return t.prevObject=this,t},each:function(e){return ce.each(this,e)},map:function(n){return this.pushStack(ce.map(this,function(e,t){return n.call(e,t,e)}))},slice:function(){return this.pushStack(ae.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},even:function(){return this.pushStack(ce.grep(this,function(e,t){return(t+1)%2}))},odd:function(){return this.pushStack(ce.grep(this,function(e,t){return t%2}))},eq:function(e){var t=this.length,n=+e+(e<0?t:0);return this.pushStack(0<=n&&n<t?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:s,sort:oe.sort,splice:oe.splice},ce.extend=ce.fn.extend=function(){var e,t,n,r,i,o,a=arguments[0]||{},s=1,u=arguments.length,l=!1;for("boolean"==typeof a&&(l=a,a=arguments[s]||{},s++),"object"==typeof a||v(a)||(a={}),s===u&&(a=this,s--);s<u;s++)if(null!=(e=arguments[s]))for(t in e)r=e[t],"__proto__"!==t&&a!==r&&(l&&r&&(ce.isPlainObject(r)||(i=Array.isArray(r)))?(n=a[t],o=i&&!Array.isArray(n)?[]:i||ce.isPlainObject(n)?n:{},i=!1,a[t]=ce.extend(l,o,r)):void 0!==r&&(a[t]=r));return a},ce.extend({expando:"jQuery"+(t+Math.random()).replace(/\D/g,""),isReady:!0,error:function(e){throw new Error(e)},noop:function(){},isPlainObject:function(e){var t,n;return!(!e||"[object Object]"!==i.call(e))&&(!(t=r(e))||"function"==typeof(n=ue.call(t,"constructor")&&t.constructor)&&o.call(n)===a)},isEmptyObject:function(e){var t;for(t in e)return!1;return!0},globalEval:function(e,t,n){m(e,{nonce:t&&t.nonce},n)},each:function(e,t){var n,r=0;if(c(e)){for(n=e.length;r<n;r++)if(!1===t.call(e[r],r,e[r]))break}else for(r in e)if(!1===t.call(e[r],r,e[r]))break;return e},text:function(e){var t,n="",r=0,i=e.nodeType;if(!i)while(t=e[r++])n+=ce.text(t);return 1===i||11===i?e.textContent:9===i?e.documentElement.textContent:3===i||4===i?e.nodeValue:n},makeArray:function(e,t){var n=t||[];return null!=e&&(c(Object(e))?ce.merge(n,"string"==typeof e?[e]:e):s.call(n,e)),n},inArray:function(e,t,n){return null==t?-1:se.call(t,e,n)},isXMLDoc:function(e){var t=e&&e.namespaceURI,n=e&&(e.ownerDocument||e).documentElement;return!l.test(t||n&&n.nodeName||"HTML")},merge:function(e,t){for(var n=+t.length,r=0,i=e.length;r<n;r++)e[i++]=t[r];return e.length=i,e},grep:function(e,t,n){for(var r=[],i=0,o=e.length,a=!n;i<o;i++)!t(e[i],i)!==a&&r.push(e[i]);return r},map:function(e,t,n){var r,i,o=0,a=[];if(c(e))for(r=e.length;o<r;o++)null!=(i=t(e[o],o,n))&&a.push(i);else for(o in e)null!=(i=t(e[o],o,n))&&a.push(i);return g(a)},guid:1,support:le}),"function"==typeof Symbol&&(ce.fn[Symbol.iterator]=oe[Symbol.iterator]),ce.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(e,t){n["[object "+t+"]"]=t.toLowerCase()});var pe=oe.pop,de=oe.sort,he=oe.splice,ge="[\\x20\\t\\r\\n\\f]",ve=new RegExp("^"+ge+"+|((?:^|[^\\\\])(?:\\\\.)*)"+ge+"+$","g");ce.contains=function(e,t){var n=t&&t.parentNode;return e===n||!(!n||1!==n.nodeType||!(e.contains?e.contains(n):e.compareDocumentPosition&&16&e.compareDocumentPosition(n)))};var f=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;function p(e,t){return t?"\0"===e?"\ufffd":e.slice(0,-1)+"\\"+e.charCodeAt(e.length-1).toString(16)+" ":"\\"+e}ce.escapeSelector=function(e){return(e+"").replace(f,p)};var ye=C,me=s;!function(){var e,b,w,o,a,T,r,C,d,i,k=me,S=ce.expando,E=0,n=0,s=W(),c=W(),u=W(),h=W(),l=function(e,t){return e===t&&(a=!0),0},f="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",t="(?:\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\[^\\r\\n\\f]|[\\w-]|[^\0-\\x7f])+",p="\\["+ge+"*("+t+")(?:"+ge+"*([*^$|!~]?=)"+ge+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+t+"))|)"+ge+"*\\]",g=":("+t+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+p+")*)|.*)\\)|)",v=new RegExp(ge+"+","g"),y=new RegExp("^"+ge+"*,"+ge+"*"),m=new RegExp("^"+ge+"*([>+~]|"+ge+")"+ge+"*"),x=new RegExp(ge+"|>"),j=new RegExp(g),A=new RegExp("^"+t+"$"),D={ID:new RegExp("^#("+t+")"),CLASS:new RegExp("^\\.("+t+")"),TAG:new RegExp("^("+t+"|[*])"),ATTR:new RegExp("^"+p),PSEUDO:new RegExp("^"+g),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+ge+"*(even|odd|(([+-]|)(\\d*)n|)"+ge+"*(?:([+-]|)"+ge+"*(\\d+)|))"+ge+"*\\)|)","i"),bool:new RegExp("^(?:"+f+")$","i"),needsContext:new RegExp("^"+ge+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+ge+"*((?:-\\d)?\\d*)"+ge+"*\\)|)(?=[^-]|$)","i")},N=/^(?:input|select|textarea|button)$/i,q=/^h\d$/i,L=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,H=/[+~]/,O=new RegExp("\\\\[\\da-fA-F]{1,6}"+ge+"?|\\\\([^\\r\\n\\f])","g"),P=function(e,t){var n="0x"+e.slice(1)-65536;return t||(n<0?String.fromCharCode(n+65536):String.fromCharCode(n>>10|55296,1023&n|56320))},M=function(){V()},R=J(function(e){return!0===e.disabled&&fe(e,"fieldset")},{dir:"parentNode",next:"legend"});try{k.apply(oe=ae.call(ye.childNodes),ye.childNodes),oe[ye.childNodes.length].nodeType}catch(e){k={apply:function(e,t){me.apply(e,ae.call(t))},call:function(e){me.apply(e,ae.call(arguments,1))}}}function I(t,e,n,r){var i,o,a,s,u,l,c,f=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!r&&(V(e),e=e||T,C)){if(11!==p&&(u=L.exec(t)))if(i=u[1]){if(9===p){if(!(a=e.getElementById(i)))return n;if(a.id===i)return k.call(n,a),n}else if(f&&(a=f.getElementById(i))&&I.contains(e,a)&&a.id===i)return k.call(n,a),n}else{if(u[2])return k.apply(n,e.getElementsByTagName(t)),n;if((i=u[3])&&e.getElementsByClassName)return k.apply(n,e.getElementsByClassName(i)),n}if(!(h[t+" "]||d&&d.test(t))){if(c=t,f=e,1===p&&(x.test(t)||m.test(t))){(f=H.test(t)&&U(e.parentNode)||e)==e&&le.scope||((s=e.getAttribute("id"))?s=ce.escapeSelector(s):e.setAttribute("id",s=S)),o=(l=Y(t)).length;while(o--)l[o]=(s?"#"+s:":scope")+" "+Q(l[o]);c=l.join(",")}try{return k.apply(n,f.querySelectorAll(c)),n}catch(e){h(t,!0)}finally{s===S&&e.removeAttribute("id")}}}return re(t.replace(ve,"$1"),e,n,r)}function W(){var r=[];return function e(t,n){return r.push(t+" ")>b.cacheLength&&delete e[r.shift()],e[t+" "]=n}}function F(e){return e[S]=!0,e}function $(e){var t=T.createElement("fieldset");try{return!!e(t)}catch(e){return!1}finally{t.parentNode&&t.parentNode.removeChild(t),t=null}}function B(t){return function(e){return fe(e,"input")&&e.type===t}}function _(t){return function(e){return(fe(e,"input")||fe(e,"button"))&&e.type===t}}function z(t){return function(e){return"form"in e?e.parentNode&&!1===e.disabled?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&R(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function X(a){return F(function(o){return o=+o,F(function(e,t){var n,r=a([],e.length,o),i=r.length;while(i--)e[n=r[i]]&&(e[n]=!(t[n]=e[n]))})})}function U(e){return e&&"undefined"!=typeof e.getElementsByTagName&&e}function V(e){var t,n=e?e.ownerDocument||e:ye;return n!=T&&9===n.nodeType&&n.documentElement&&(r=(T=n).documentElement,C=!ce.isXMLDoc(T),i=r.matches||r.webkitMatchesSelector||r.msMatchesSelector,r.msMatchesSelector&&ye!=T&&(t=T.defaultView)&&t.top!==t&&t.addEventListener("visibilitychange",M),le.getById=$(function(e){return r.appendChild(e).id=ce.expando,!T.getElementsByName||!T.getElementsByName(ce.expando).length}),le.disconnectedMatch=$(function(e){return i.call(e,"*")}),le.scope=$(function(){return T.querySelectorAll(":scope")}),le.cssHas=$(function(){try{return T.querySelector(":has(*,:jqfake)"),!1}catch(e){return!0}}),le.getById?(b.filter.ID=function(e){var t=e.replace(O,P);return function(e){return e.getAttribute("id")===t}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n=t.getElementById(e);return n?[n]:[]}}):(b.filter.ID=function(e){var n=e.replace(O,P);return function(e){var t="undefined"!=typeof e.getAttributeNode&&e.getAttributeNode("id");return t&&t.value===n}},b.find.ID=function(e,t){if("undefined"!=typeof t.getElementById&&C){var n,r,i,o=t.getElementById(e);if(o){if((n=o.getAttributeNode("id"))&&n.value===e)return[o];i=t.getElementsByName(e),r=0;while(o=i[r++])if((n=o.getAttributeNode("id"))&&n.value===e)return[o]}return[]}}),b.find.TAG=function(e,t){return"undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e):t.querySelectorAll(e)},b.find.CLASS=function(e,t){if("undefined"!=typeof t.getElementsByClassName&&C)return t.getElementsByClassName(e)},d=[],$(function(e){var t;r.appendChild(e).innerHTML="<a id='"+S+"' href='' disabled='disabled'></a><select id='"+S+"-\r\\' disabled='disabled'><option selected=''></option></select>",e.querySelectorAll("[selected]").length||d.push("\\["+ge+"*(?:value|"+f+")"),e.querySelectorAll("[id~="+S+"-]").length||d.push("~="),e.querySelectorAll("a#"+S+"+*").length||d.push(".#.+[+~]"),e.querySelectorAll(":checked").length||d.push(":checked"),(t=T.createElement("input")).setAttribute("type","hidden"),e.appendChild(t).setAttribute("name","D"),r.appendChild(e).disabled=!0,2!==e.querySelectorAll(":disabled").length&&d.push(":enabled",":disabled"),(t=T.createElement("input")).setAttribute("name",""),e.appendChild(t),e.querySelectorAll("[name='']").length||d.push("\\["+ge+"*name"+ge+"*="+ge+"*(?:''|\"\")")}),le.cssHas||d.push(":has"),d=d.length&&new RegExp(d.join("|")),l=function(e,t){if(e===t)return a=!0,0;var n=!e.compareDocumentPosition-!t.compareDocumentPosition;return n||(1&(n=(e.ownerDocument||e)==(t.ownerDocument||t)?e.compareDocumentPosition(t):1)||!le.sortDetached&&t.compareDocumentPosition(e)===n?e===T||e.ownerDocument==ye&&I.contains(ye,e)?-1:t===T||t.ownerDocument==ye&&I.contains(ye,t)?1:o?se.call(o,e)-se.call(o,t):0:4&n?-1:1)}),T}for(e in I.matches=function(e,t){return I(e,null,null,t)},I.matchesSelector=function(e,t){if(V(e),C&&!h[t+" "]&&(!d||!d.test(t)))try{var n=i.call(e,t);if(n||le.disconnectedMatch||e.document&&11!==e.document.nodeType)return n}catch(e){h(t,!0)}return 0<I(t,T,null,[e]).length},I.contains=function(e,t){return(e.ownerDocument||e)!=T&&V(e),ce.contains(e,t)},I.attr=function(e,t){(e.ownerDocument||e)!=T&&V(e);var n=b.attrHandle[t.toLowerCase()],r=n&&ue.call(b.attrHandle,t.toLowerCase())?n(e,t,!C):void 0;return void 0!==r?r:e.getAttribute(t)},I.error=function(e){throw new Error("Syntax error, unrecognized expression: "+e)},ce.uniqueSort=function(e){var t,n=[],r=0,i=0;if(a=!le.sortStable,o=!le.sortStable&&ae.call(e,0),de.call(e,l),a){while(t=e[i++])t===e[i]&&(r=n.push(i));while(r--)he.call(e,n[r],1)}return o=null,e},ce.fn.uniqueSort=function(){return this.pushStack(ce.uniqueSort(ae.apply(this)))},(b=ce.expr={cacheLength:50,createPseudo:F,match:D,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(e){return e[1]=e[1].replace(O,P),e[3]=(e[3]||e[4]||e[5]||"").replace(O,P),"~="===e[2]&&(e[3]=" "+e[3]+" "),e.slice(0,4)},CHILD:function(e){return e[1]=e[1].toLowerCase(),"nth"===e[1].slice(0,3)?(e[3]||I.error(e[0]),e[4]=+(e[4]?e[5]+(e[6]||1):2*("even"===e[3]||"odd"===e[3])),e[5]=+(e[7]+e[8]||"odd"===e[3])):e[3]&&I.error(e[0]),e},PSEUDO:function(e){var t,n=!e[6]&&e[2];return D.CHILD.test(e[0])?null:(e[3]?e[2]=e[4]||e[5]||"":n&&j.test(n)&&(t=Y(n,!0))&&(t=n.indexOf(")",n.length-t)-n.length)&&(e[0]=e[0].slice(0,t),e[2]=n.slice(0,t)),e.slice(0,3))}},filter:{TAG:function(e){var t=e.replace(O,P).toLowerCase();return"*"===e?function(){return!0}:function(e){return fe(e,t)}},CLASS:function(e){var t=s[e+" "];return t||(t=new RegExp("(^|"+ge+")"+e+"("+ge+"|$)"))&&s(e,function(e){return t.test("string"==typeof e.className&&e.className||"undefined"!=typeof e.getAttribute&&e.getAttribute("class")||"")})},ATTR:function(n,r,i){return function(e){var t=I.attr(e,n);return null==t?"!="===r:!r||(t+="","="===r?t===i:"!="===r?t!==i:"^="===r?i&&0===t.indexOf(i):"*="===r?i&&-1<t.indexOf(i):"$="===r?i&&t.slice(-i.length)===i:"~="===r?-1<(" "+t.replace(v," ")+" ").indexOf(i):"|="===r&&(t===i||t.slice(0,i.length+1)===i+"-"))}},CHILD:function(d,e,t,h,g){var v="nth"!==d.slice(0,3),y="last"!==d.slice(-4),m="of-type"===e;return 1===h&&0===g?function(e){return!!e.parentNode}:function(e,t,n){var r,i,o,a,s,u=v!==y?"nextSibling":"previousSibling",l=e.parentNode,c=m&&e.nodeName.toLowerCase(),f=!n&&!m,p=!1;if(l){if(v){while(u){o=e;while(o=o[u])if(m?fe(o,c):1===o.nodeType)return!1;s=u="only"===d&&!s&&"nextSibling"}return!0}if(s=[y?l.firstChild:l.lastChild],y&&f){p=(a=(r=(i=l[S]||(l[S]={}))[d]||[])[0]===E&&r[1])&&r[2],o=a&&l.childNodes[a];while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if(1===o.nodeType&&++p&&o===e){i[d]=[E,a,p];break}}else if(f&&(p=a=(r=(i=e[S]||(e[S]={}))[d]||[])[0]===E&&r[1]),!1===p)while(o=++a&&o&&o[u]||(p=a=0)||s.pop())if((m?fe(o,c):1===o.nodeType)&&++p&&(f&&((i=o[S]||(o[S]={}))[d]=[E,p]),o===e))break;return(p-=g)===h||p%h==0&&0<=p/h}}},PSEUDO:function(e,o){var t,a=b.pseudos[e]||b.setFilters[e.toLowerCase()]||I.error("unsupported pseudo: "+e);return a[S]?a(o):1<a.length?(t=[e,e,"",o],b.setFilters.hasOwnProperty(e.toLowerCase())?F(function(e,t){var n,r=a(e,o),i=r.length;while(i--)e[n=se.call(e,r[i])]=!(t[n]=r[i])}):function(e){return a(e,0,t)}):a}},pseudos:{not:F(function(e){var r=[],i=[],s=ne(e.replace(ve,"$1"));return s[S]?F(function(e,t,n,r){var i,o=s(e,null,r,[]),a=e.length;while(a--)(i=o[a])&&(e[a]=!(t[a]=i))}):function(e,t,n){return r[0]=e,s(r,null,n,i),r[0]=null,!i.pop()}}),has:F(function(t){return function(e){return 0<I(t,e).length}}),contains:F(function(t){return t=t.replace(O,P),function(e){return-1<(e.textContent||ce.text(e)).indexOf(t)}}),lang:F(function(n){return A.test(n||"")||I.error("unsupported lang: "+n),n=n.replace(O,P).toLowerCase(),function(e){var t;do{if(t=C?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return(t=t.toLowerCase())===n||0===t.indexOf(n+"-")}while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var t=ie.location&&ie.location.hash;return t&&t.slice(1)===e.id},root:function(e){return e===r},focus:function(e){return e===function(){try{return T.activeElement}catch(e){}}()&&T.hasFocus()&&!!(e.type||e.href||~e.tabIndex)},enabled:z(!1),disabled:z(!0),checked:function(e){return fe(e,"input")&&!!e.checked||fe(e,"option")&&!!e.selected},selected:function(e){return e.parentNode&&e.parentNode.selectedIndex,!0===e.selected},empty:function(e){for(e=e.firstChild;e;e=e.nextSibling)if(e.nodeType<6)return!1;return!0},parent:function(e){return!b.pseudos.empty(e)},header:function(e){return q.test(e.nodeName)},input:function(e){return N.test(e.nodeName)},button:function(e){return fe(e,"input")&&"button"===e.type||fe(e,"button")},text:function(e){var t;return fe(e,"input")&&"text"===e.type&&(null==(t=e.getAttribute("type"))||"text"===t.toLowerCase())},first:X(function(){return[0]}),last:X(function(e,t){return[t-1]}),eq:X(function(e,t,n){return[n<0?n+t:n]}),even:X(function(e,t){for(var n=0;n<t;n+=2)e.push(n);return e}),odd:X(function(e,t){for(var n=1;n<t;n+=2)e.push(n);return e}),lt:X(function(e,t,n){var r;for(r=n<0?n+t:t<n?t:n;0<=--r;)e.push(r);return e}),gt:X(function(e,t,n){for(var r=n<0?n+t:n;++r<t;)e.push(r);return e})}}).pseudos.nth=b.pseudos.eq,{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})b.pseudos[e]=B(e);for(e in{submit:!0,reset:!0})b.pseudos[e]=_(e);function G(){}function Y(e,t){var n,r,i,o,a,s,u,l=c[e+" "];if(l)return t?0:l.slice(0);a=e,s=[],u=b.preFilter;while(a){for(o in n&&!(r=y.exec(a))||(r&&(a=a.slice(r[0].length)||a),s.push(i=[])),n=!1,(r=m.exec(a))&&(n=r.shift(),i.push({value:n,type:r[0].replace(ve," ")}),a=a.slice(n.length)),b.filter)!(r=D[o].exec(a))||u[o]&&!(r=u[o](r))||(n=r.shift(),i.push({value:n,type:o,matches:r}),a=a.slice(n.length));if(!n)break}return t?a.length:a?I.error(e):c(e,s).slice(0)}function Q(e){for(var t=0,n=e.length,r="";t<n;t++)r+=e[t].value;return r}function J(a,e,t){var s=e.dir,u=e.next,l=u||s,c=t&&"parentNode"===l,f=n++;return e.first?function(e,t,n){while(e=e[s])if(1===e.nodeType||c)return a(e,t,n);return!1}:function(e,t,n){var r,i,o=[E,f];if(n){while(e=e[s])if((1===e.nodeType||c)&&a(e,t,n))return!0}else while(e=e[s])if(1===e.nodeType||c)if(i=e[S]||(e[S]={}),u&&fe(e,u))e=e[s]||e;else{if((r=i[l])&&r[0]===E&&r[1]===f)return o[2]=r[2];if((i[l]=o)[2]=a(e,t,n))return!0}return!1}}function K(i){return 1<i.length?function(e,t,n){var r=i.length;while(r--)if(!i[r](e,t,n))return!1;return!0}:i[0]}function Z(e,t,n,r,i){for(var o,a=[],s=0,u=e.length,l=null!=t;s<u;s++)(o=e[s])&&(n&&!n(o,r,i)||(a.push(o),l&&t.push(s)));return a}function ee(d,h,g,v,y,e){return v&&!v[S]&&(v=ee(v)),y&&!y[S]&&(y=ee(y,e)),F(function(e,t,n,r){var i,o,a,s,u=[],l=[],c=t.length,f=e||function(e,t,n){for(var r=0,i=t.length;r<i;r++)I(e,t[r],n);return n}(h||"*",n.nodeType?[n]:n,[]),p=!d||!e&&h?f:Z(f,u,d,n,r);if(g?g(p,s=y||(e?d:c||v)?[]:t,n,r):s=p,v){i=Z(s,l),v(i,[],n,r),o=i.length;while(o--)(a=i[o])&&(s[l[o]]=!(p[l[o]]=a))}if(e){if(y||d){if(y){i=[],o=s.length;while(o--)(a=s[o])&&i.push(p[o]=a);y(null,s=[],i,r)}o=s.length;while(o--)(a=s[o])&&-1<(i=y?se.call(e,a):u[o])&&(e[i]=!(t[i]=a))}}else s=Z(s===t?s.splice(c,s.length):s),y?y(null,t,s,r):k.apply(t,s)})}function te(e){for(var i,t,n,r=e.length,o=b.relative[e[0].type],a=o||b.relative[" "],s=o?1:0,u=J(function(e){return e===i},a,!0),l=J(function(e){return-1<se.call(i,e)},a,!0),c=[function(e,t,n){var r=!o&&(n||t!=w)||((i=t).nodeType?u(e,t,n):l(e,t,n));return i=null,r}];s<r;s++)if(t=b.relative[e[s].type])c=[J(K(c),t)];else{if((t=b.filter[e[s].type].apply(null,e[s].matches))[S]){for(n=++s;n<r;n++)if(b.relative[e[n].type])break;return ee(1<s&&K(c),1<s&&Q(e.slice(0,s-1).concat({value:" "===e[s-2].type?"*":""})).replace(ve,"$1"),t,s<n&&te(e.slice(s,n)),n<r&&te(e=e.slice(n)),n<r&&Q(e))}c.push(t)}return K(c)}function ne(e,t){var n,v,y,m,x,r,i=[],o=[],a=u[e+" "];if(!a){t||(t=Y(e)),n=t.length;while(n--)(a=te(t[n]))[S]?i.push(a):o.push(a);(a=u(e,(v=o,m=0<(y=i).length,x=0<v.length,r=function(e,t,n,r,i){var o,a,s,u=0,l="0",c=e&&[],f=[],p=w,d=e||x&&b.find.TAG("*",i),h=E+=null==p?1:Math.random()||.1,g=d.length;for(i&&(w=t==T||t||i);l!==g&&null!=(o=d[l]);l++){if(x&&o){a=0,t||o.ownerDocument==T||(V(o),n=!C);while(s=v[a++])if(s(o,t||T,n)){k.call(r,o);break}i&&(E=h)}m&&((o=!s&&o)&&u--,e&&c.push(o))}if(u+=l,m&&l!==u){a=0;while(s=y[a++])s(c,f,t,n);if(e){if(0<u)while(l--)c[l]||f[l]||(f[l]=pe.call(r));f=Z(f)}k.apply(r,f),i&&!e&&0<f.length&&1<u+y.length&&ce.uniqueSort(r)}return i&&(E=h,w=p),c},m?F(r):r))).selector=e}return a}function re(e,t,n,r){var i,o,a,s,u,l="function"==typeof e&&e,c=!r&&Y(e=l.selector||e);if(n=n||[],1===c.length){if(2<(o=c[0]=c[0].slice(0)).length&&"ID"===(a=o[0]).type&&9===t.nodeType&&C&&b.relative[o[1].type]){if(!(t=(b.find.ID(a.matches[0].replace(O,P),t)||[])[0]))return n;l&&(t=t.parentNode),e=e.slice(o.shift().value.length)}i=D.needsContext.test(e)?0:o.length;while(i--){if(a=o[i],b.relative[s=a.type])break;if((u=b.find[s])&&(r=u(a.matches[0].replace(O,P),H.test(o[0].type)&&U(t.parentNode)||t))){if(o.splice(i,1),!(e=r.length&&Q(o)))return k.apply(n,r),n;break}}}return(l||ne(e,c))(r,t,!C,n,!t||H.test(e)&&U(t.parentNode)||t),n}G.prototype=b.filters=b.pseudos,b.setFilters=new G,le.sortStable=S.split("").sort(l).join("")===S,V(),le.sortDetached=$(function(e){return 1&e.compareDocumentPosition(T.createElement("fieldset"))}),ce.find=I,ce.expr[":"]=ce.expr.pseudos,ce.unique=ce.uniqueSort,I.compile=ne,I.select=re,I.setDocument=V,I.tokenize=Y,I.escape=ce.escapeSelector,I.getText=ce.text,I.isXML=ce.isXMLDoc,I.selectors=ce.expr,I.support=ce.support,I.uniqueSort=ce.uniqueSort}();var d=function(e,t,n){var r=[],i=void 0!==n;while((e=e[t])&&9!==e.nodeType)if(1===e.nodeType){if(i&&ce(e).is(n))break;r.push(e)}return r},h=function(e,t){for(var n=[];e;e=e.nextSibling)1===e.nodeType&&e!==t&&n.push(e);return n},b=ce.expr.match.needsContext,w=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;function T(e,n,r){return v(n)?ce.grep(e,function(e,t){return!!n.call(e,t,e)!==r}):n.nodeType?ce.grep(e,function(e){return e===n!==r}):"string"!=typeof n?ce.grep(e,function(e){return-1<se.call(n,e)!==r}):ce.filter(n,e,r)}ce.filter=function(e,t,n){var r=t[0];return n&&(e=":not("+e+")"),1===t.length&&1===r.nodeType?ce.find.matchesSelector(r,e)?[r]:[]:ce.find.matches(e,ce.grep(t,function(e){return 1===e.nodeType}))},ce.fn.extend({find:function(e){var t,n,r=this.length,i=this;if("string"!=typeof e)return this.pushStack(ce(e).filter(function(){for(t=0;t<r;t++)if(ce.contains(i[t],this))return!0}));for(n=this.pushStack([]),t=0;t<r;t++)ce.find(e,i[t],n);return 1<r?ce.uniqueSort(n):n},filter:function(e){return this.pushStack(T(this,e||[],!1))},not:function(e){return this.pushStack(T(this,e||[],!0))},is:function(e){return!!T(this,"string"==typeof e&&b.test(e)?ce(e):e||[],!1).length}});var k,S=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/;(ce.fn.init=function(e,t,n){var r,i;if(!e)return this;if(n=n||k,"string"==typeof e){if(!(r="<"===e[0]&&">"===e[e.length-1]&&3<=e.length?[null,e,null]:S.exec(e))||!r[1]&&t)return!t||t.jquery?(t||n).find(e):this.constructor(t).find(e);if(r[1]){if(t=t instanceof ce?t[0]:t,ce.merge(this,ce.parseHTML(r[1],t&&t.nodeType?t.ownerDocument||t:C,!0)),w.test(r[1])&&ce.isPlainObject(t))for(r in t)v(this[r])?this[r](t[r]):this.attr(r,t[r]);return this}return(i=C.getElementById(r[2]))&&(this[0]=i,this.length=1),this}return e.nodeType?(this[0]=e,this.length=1,this):v(e)?void 0!==n.ready?n.ready(e):e(ce):ce.makeArray(e,this)}).prototype=ce.fn,k=ce(C);var E=/^(?:parents|prev(?:Until|All))/,j={children:!0,contents:!0,next:!0,prev:!0};function A(e,t){while((e=e[t])&&1!==e.nodeType);return e}ce.fn.extend({has:function(e){var t=ce(e,this),n=t.length;return this.filter(function(){for(var e=0;e<n;e++)if(ce.contains(this,t[e]))return!0})},closest:function(e,t){var n,r=0,i=this.length,o=[],a="string"!=typeof e&&ce(e);if(!b.test(e))for(;r<i;r++)for(n=this[r];n&&n!==t;n=n.parentNode)if(n.nodeType<11&&(a?-1<a.index(n):1===n.nodeType&&ce.find.matchesSelector(n,e))){o.push(n);break}return this.pushStack(1<o.length?ce.uniqueSort(o):o)},index:function(e){return e?"string"==typeof e?se.call(ce(e),this[0]):se.call(this,e.jquery?e[0]:e):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(e,t){return this.pushStack(ce.uniqueSort(ce.merge(this.get(),ce(e,t))))},addBack:function(e){return this.add(null==e?this.prevObject:this.prevObject.filter(e))}}),ce.each({parent:function(e){var t=e.parentNode;return t&&11!==t.nodeType?t:null},parents:function(e){return d(e,"parentNode")},parentsUntil:function(e,t,n){return d(e,"parentNode",n)},next:function(e){return A(e,"nextSibling")},prev:function(e){return A(e,"previousSibling")},nextAll:function(e){return d(e,"nextSibling")},prevAll:function(e){return d(e,"previousSibling")},nextUntil:function(e,t,n){return d(e,"nextSibling",n)},prevUntil:function(e,t,n){return d(e,"previousSibling",n)},siblings:function(e){return h((e.parentNode||{}).firstChild,e)},children:function(e){return h(e.firstChild)},contents:function(e){return null!=e.contentDocument&&r(e.contentDocument)?e.contentDocument:(fe(e,"template")&&(e=e.content||e),ce.merge([],e.childNodes))}},function(r,i){ce.fn[r]=function(e,t){var n=ce.map(this,i,e);return"Until"!==r.slice(-5)&&(t=e),t&&"string"==typeof t&&(n=ce.filter(t,n)),1<this.length&&(j[r]||ce.uniqueSort(n),E.test(r)&&n.reverse()),this.pushStack(n)}});var D=/[^\x20\t\r\n\f]+/g;function N(e){return e}function q(e){throw e}function L(e,t,n,r){var i;try{e&&v(i=e.promise)?i.call(e).done(t).fail(n):e&&v(i=e.then)?i.call(e,t,n):t.apply(void 0,[e].slice(r))}catch(e){n.apply(void 0,[e])}}ce.Callbacks=function(r){var e,n;r="string"==typeof r?(e=r,n={},ce.each(e.match(D)||[],function(e,t){n[t]=!0}),n):ce.extend({},r);var i,t,o,a,s=[],u=[],l=-1,c=function(){for(a=a||r.once,o=i=!0;u.length;l=-1){t=u.shift();while(++l<s.length)!1===s[l].apply(t[0],t[1])&&r.stopOnFalse&&(l=s.length,t=!1)}r.memory||(t=!1),i=!1,a&&(s=t?[]:"")},f={add:function(){return s&&(t&&!i&&(l=s.length-1,u.push(t)),function n(e){ce.each(e,function(e,t){v(t)?r.unique&&f.has(t)||s.push(t):t&&t.length&&"string"!==x(t)&&n(t)})}(arguments),t&&!i&&c()),this},remove:function(){return ce.each(arguments,function(e,t){var n;while(-1<(n=ce.inArray(t,s,n)))s.splice(n,1),n<=l&&l--}),this},has:function(e){return e?-1<ce.inArray(e,s):0<s.length},empty:function(){return s&&(s=[]),this},disable:function(){return a=u=[],s=t="",this},disabled:function(){return!s},lock:function(){return a=u=[],t||i||(s=t=""),this},locked:function(){return!!a},fireWith:function(e,t){return a||(t=[e,(t=t||[]).slice?t.slice():t],u.push(t),i||c()),this},fire:function(){return f.fireWith(this,arguments),this},fired:function(){return!!o}};return f},ce.extend({Deferred:function(e){var o=[["notify","progress",ce.Callbacks("memory"),ce.Callbacks("memory"),2],["resolve","done",ce.Callbacks("once memory"),ce.Callbacks("once memory"),0,"resolved"],["reject","fail",ce.Callbacks("once memory"),ce.Callbacks("once memory"),1,"rejected"]],i="pending",a={state:function(){return i},always:function(){return s.done(arguments).fail(arguments),this},"catch":function(e){return a.then(null,e)},pipe:function(){var i=arguments;return ce.Deferred(function(r){ce.each(o,function(e,t){var n=v(i[t[4]])&&i[t[4]];s[t[1]](function(){var e=n&&n.apply(this,arguments);e&&v(e.promise)?e.promise().progress(r.notify).done(r.resolve).fail(r.reject):r[t[0]+"With"](this,n?[e]:arguments)})}),i=null}).promise()},then:function(t,n,r){var u=0;function l(i,o,a,s){return function(){var n=this,r=arguments,e=function(){var e,t;if(!(i<u)){if((e=a.apply(n,r))===o.promise())throw new TypeError("Thenable self-resolution");t=e&&("object"==typeof e||"function"==typeof e)&&e.then,v(t)?s?t.call(e,l(u,o,N,s),l(u,o,q,s)):(u++,t.call(e,l(u,o,N,s),l(u,o,q,s),l(u,o,N,o.notifyWith))):(a!==N&&(n=void 0,r=[e]),(s||o.resolveWith)(n,r))}},t=s?e:function(){try{e()}catch(e){ce.Deferred.exceptionHook&&ce.Deferred.exceptionHook(e,t.error),u<=i+1&&(a!==q&&(n=void 0,r=[e]),o.rejectWith(n,r))}};i?t():(ce.Deferred.getErrorHook?t.error=ce.Deferred.getErrorHook():ce.Deferred.getStackHook&&(t.error=ce.Deferred.getStackHook()),ie.setTimeout(t))}}return ce.Deferred(function(e){o[0][3].add(l(0,e,v(r)?r:N,e.notifyWith)),o[1][3].add(l(0,e,v(t)?t:N)),o[2][3].add(l(0,e,v(n)?n:q))}).promise()},promise:function(e){return null!=e?ce.extend(e,a):a}},s={};return ce.each(o,function(e,t){var n=t[2],r=t[5];a[t[1]]=n.add,r&&n.add(function(){i=r},o[3-e][2].disable,o[3-e][3].disable,o[0][2].lock,o[0][3].lock),n.add(t[3].fire),s[t[0]]=function(){return s[t[0]+"With"](this===s?void 0:this,arguments),this},s[t[0]+"With"]=n.fireWith}),a.promise(s),e&&e.call(s,s),s},when:function(e){var n=arguments.length,t=n,r=Array(t),i=ae.call(arguments),o=ce.Deferred(),a=function(t){return function(e){r[t]=this,i[t]=1<arguments.length?ae.call(arguments):e,--n||o.resolveWith(r,i)}};if(n<=1&&(L(e,o.done(a(t)).resolve,o.reject,!n),"pending"===o.state()||v(i[t]&&i[t].then)))return o.then();while(t--)L(i[t],a(t),o.reject);return o.promise()}});var H=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;ce.Deferred.exceptionHook=function(e,t){ie.console&&ie.console.warn&&e&&H.test(e.name)&&ie.console.warn("jQuery.Deferred exception: "+e.message,e.stack,t)},ce.readyException=function(e){ie.setTimeout(function(){throw e})};var O=ce.Deferred();function P(){C.removeEventListener("DOMContentLoaded",P),ie.removeEventListener("load",P),ce.ready()}ce.fn.ready=function(e){return O.then(e)["catch"](function(e){ce.readyException(e)}),this},ce.extend({isReady:!1,readyWait:1,ready:function(e){(!0===e?--ce.readyWait:ce.isReady)||(ce.isReady=!0)!==e&&0<--ce.readyWait||O.resolveWith(C,[ce])}}),ce.ready.then=O.then,"complete"===C.readyState||"loading"!==C.readyState&&!C.documentElement.doScroll?ie.setTimeout(ce.ready):(C.addEventListener("DOMContentLoaded",P),ie.addEventListener("load",P));var M=function(e,t,n,r,i,o,a){var s=0,u=e.length,l=null==n;if("object"===x(n))for(s in i=!0,n)M(e,t,s,n[s],!0,o,a);else if(void 0!==r&&(i=!0,v(r)||(a=!0),l&&(a?(t.call(e,r),t=null):(l=t,t=function(e,t,n){return l.call(ce(e),n)})),t))for(;s<u;s++)t(e[s],n,a?r:r.call(e[s],s,t(e[s],n)));return i?e:l?t.call(e):u?t(e[0],n):o},R=/^-ms-/,I=/-([a-z])/g;function W(e,t){return t.toUpperCase()}function F(e){return e.replace(R,"ms-").replace(I,W)}var $=function(e){return 1===e.nodeType||9===e.nodeType||!+e.nodeType};function B(){this.expando=ce.expando+B.uid++}B.uid=1,B.prototype={cache:function(e){var t=e[this.expando];return t||(t={},$(e)&&(e.nodeType?e[this.expando]=t:Object.defineProperty(e,this.expando,{value:t,configurable:!0}))),t},set:function(e,t,n){var r,i=this.cache(e);if("string"==typeof t)i[F(t)]=n;else for(r in t)i[F(r)]=t[r];return i},get:function(e,t){return void 0===t?this.cache(e):e[this.expando]&&e[this.expando][F(t)]},access:function(e,t,n){return void 0===t||t&&"string"==typeof t&&void 0===n?this.get(e,t):(this.set(e,t,n),void 0!==n?n:t)},remove:function(e,t){var n,r=e[this.expando];if(void 0!==r){if(void 0!==t){n=(t=Array.isArray(t)?t.map(F):(t=F(t))in r?[t]:t.match(D)||[]).length;while(n--)delete r[t[n]]}(void 0===t||ce.isEmptyObject(r))&&(e.nodeType?e[this.expando]=void 0:delete e[this.expando])}},hasData:function(e){var t=e[this.expando];return void 0!==t&&!ce.isEmptyObject(t)}};var _=new B,z=new B,X=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,U=/[A-Z]/g;function V(e,t,n){var r,i;if(void 0===n&&1===e.nodeType)if(r="data-"+t.replace(U,"-$&").toLowerCase(),"string"==typeof(n=e.getAttribute(r))){try{n="true"===(i=n)||"false"!==i&&("null"===i?null:i===+i+""?+i:X.test(i)?JSON.parse(i):i)}catch(e){}z.set(e,t,n)}else n=void 0;return n}ce.extend({hasData:function(e){return z.hasData(e)||_.hasData(e)},data:function(e,t,n){return z.access(e,t,n)},removeData:function(e,t){z.remove(e,t)},_data:function(e,t,n){return _.access(e,t,n)},_removeData:function(e,t){_.remove(e,t)}}),ce.fn.extend({data:function(n,e){var t,r,i,o=this[0],a=o&&o.attributes;if(void 0===n){if(this.length&&(i=z.get(o),1===o.nodeType&&!_.get(o,"hasDataAttrs"))){t=a.length;while(t--)a[t]&&0===(r=a[t].name).indexOf("data-")&&(r=F(r.slice(5)),V(o,r,i[r]));_.set(o,"hasDataAttrs",!0)}return i}return"object"==typeof n?this.each(function(){z.set(this,n)}):M(this,function(e){var t;if(o&&void 0===e)return void 0!==(t=z.get(o,n))?t:void 0!==(t=V(o,n))?t:void 0;this.each(function(){z.set(this,n,e)})},null,e,1<arguments.length,null,!0)},removeData:function(e){return this.each(function(){z.remove(this,e)})}}),ce.extend({queue:function(e,t,n){var r;if(e)return t=(t||"fx")+"queue",r=_.get(e,t),n&&(!r||Array.isArray(n)?r=_.access(e,t,ce.makeArray(n)):r.push(n)),r||[]},dequeue:function(e,t){t=t||"fx";var n=ce.queue(e,t),r=n.length,i=n.shift(),o=ce._queueHooks(e,t);"inprogress"===i&&(i=n.shift(),r--),i&&("fx"===t&&n.unshift("inprogress"),delete o.stop,i.call(e,function(){ce.dequeue(e,t)},o)),!r&&o&&o.empty.fire()},_queueHooks:function(e,t){var n=t+"queueHooks";return _.get(e,n)||_.access(e,n,{empty:ce.Callbacks("once memory").add(function(){_.remove(e,[t+"queue",n])})})}}),ce.fn.extend({queue:function(t,n){var e=2;return"string"!=typeof t&&(n=t,t="fx",e--),arguments.length<e?ce.queue(this[0],t):void 0===n?this:this.each(function(){var e=ce.queue(this,t,n);ce._queueHooks(this,t),"fx"===t&&"inprogress"!==e[0]&&ce.dequeue(this,t)})},dequeue:function(e){return this.each(function(){ce.dequeue(this,e)})},clearQueue:function(e){return this.queue(e||"fx",[])},promise:function(e,t){var n,r=1,i=ce.Deferred(),o=this,a=this.length,s=function(){--r||i.resolveWith(o,[o])};"string"!=typeof e&&(t=e,e=void 0),e=e||"fx";while(a--)(n=_.get(o[a],e+"queueHooks"))&&n.empty&&(r++,n.empty.add(s));return s(),i.promise(t)}});var G=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Y=new RegExp("^(?:([+-])=|)("+G+")([a-z%]*)$","i"),Q=["Top","Right","Bottom","Left"],J=C.documentElement,K=function(e){return ce.contains(e.ownerDocument,e)},Z={composed:!0};J.getRootNode&&(K=function(e){return ce.contains(e.ownerDocument,e)||e.getRootNode(Z)===e.ownerDocument});var ee=function(e,t){return"none"===(e=t||e).style.display||""===e.style.display&&K(e)&&"none"===ce.css(e,"display")};function te(e,t,n,r){var i,o,a=20,s=r?function(){return r.cur()}:function(){return ce.css(e,t,"")},u=s(),l=n&&n[3]||(ce.cssNumber[t]?"":"px"),c=e.nodeType&&(ce.cssNumber[t]||"px"!==l&&+u)&&Y.exec(ce.css(e,t));if(c&&c[3]!==l){u/=2,l=l||c[3],c=+u||1;while(a--)ce.style(e,t,c+l),(1-o)*(1-(o=s()/u||.5))<=0&&(a=0),c/=o;c*=2,ce.style(e,t,c+l),n=n||[]}return n&&(c=+c||+u||0,i=n[1]?c+(n[1]+1)*n[2]:+n[2],r&&(r.unit=l,r.start=c,r.end=i)),i}var ne={};function re(e,t){for(var n,r,i,o,a,s,u,l=[],c=0,f=e.length;c<f;c++)(r=e[c]).style&&(n=r.style.display,t?("none"===n&&(l[c]=_.get(r,"display")||null,l[c]||(r.style.display="")),""===r.style.display&&ee(r)&&(l[c]=(u=a=o=void 0,a=(i=r).ownerDocument,s=i.nodeName,(u=ne[s])||(o=a.body.appendChild(a.createElement(s)),u=ce.css(o,"display"),o.parentNode.removeChild(o),"none"===u&&(u="block"),ne[s]=u)))):"none"!==n&&(l[c]="none",_.set(r,"display",n)));for(c=0;c<f;c++)null!=l[c]&&(e[c].style.display=l[c]);return e}ce.fn.extend({show:function(){return re(this,!0)},hide:function(){return re(this)},toggle:function(e){return"boolean"==typeof e?e?this.show():this.hide():this.each(function(){ee(this)?ce(this).show():ce(this).hide()})}});var xe,be,we=/^(?:checkbox|radio)$/i,Te=/<([a-z][^\/\0>\x20\t\r\n\f]*)/i,Ce=/^$|^module$|\/(?:java|ecma)script/i;xe=C.createDocumentFragment().appendChild(C.createElement("div")),(be=C.createElement("input")).setAttribute("type","radio"),be.setAttribute("checked","checked"),be.setAttribute("name","t"),xe.appendChild(be),le.checkClone=xe.cloneNode(!0).cloneNode(!0).lastChild.checked,xe.innerHTML="<textarea>x</textarea>",le.noCloneChecked=!!xe.cloneNode(!0).lastChild.defaultValue,xe.innerHTML="<option></option>",le.option=!!xe.lastChild;var ke={thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};function Se(e,t){var n;return n="undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t||"*"):"undefined"!=typeof e.querySelectorAll?e.querySelectorAll(t||"*"):[],void 0===t||t&&fe(e,t)?ce.merge([e],n):n}function Ee(e,t){for(var n=0,r=e.length;n<r;n++)_.set(e[n],"globalEval",!t||_.get(t[n],"globalEval"))}ke.tbody=ke.tfoot=ke.colgroup=ke.caption=ke.thead,ke.th=ke.td,le.option||(ke.optgroup=ke.option=[1,"<select multiple='multiple'>","</select>"]);var je=/<|&#?\w+;/;function Ae(e,t,n,r,i){for(var o,a,s,u,l,c,f=t.createDocumentFragment(),p=[],d=0,h=e.length;d<h;d++)if((o=e[d])||0===o)if("object"===x(o))ce.merge(p,o.nodeType?[o]:o);else if(je.test(o)){a=a||f.appendChild(t.createElement("div")),s=(Te.exec(o)||["",""])[1].toLowerCase(),u=ke[s]||ke._default,a.innerHTML=u[1]+ce.htmlPrefilter(o)+u[2],c=u[0];while(c--)a=a.lastChild;ce.merge(p,a.childNodes),(a=f.firstChild).textContent=""}else p.push(t.createTextNode(o));f.textContent="",d=0;while(o=p[d++])if(r&&-1<ce.inArray(o,r))i&&i.push(o);else if(l=K(o),a=Se(f.appendChild(o),"script"),l&&Ee(a),n){c=0;while(o=a[c++])Ce.test(o.type||"")&&n.push(o)}return f}var De=/^([^.]*)(?:\.(.+)|)/;function Ne(){return!0}function qe(){return!1}function Le(e,t,n,r,i,o){var a,s;if("object"==typeof t){for(s in"string"!=typeof n&&(r=r||n,n=void 0),t)Le(e,s,n,r,t[s],o);return e}if(null==r&&null==i?(i=n,r=n=void 0):null==i&&("string"==typeof n?(i=r,r=void 0):(i=r,r=n,n=void 0)),!1===i)i=qe;else if(!i)return e;return 1===o&&(a=i,(i=function(e){return ce().off(e),a.apply(this,arguments)}).guid=a.guid||(a.guid=ce.guid++)),e.each(function(){ce.event.add(this,t,i,r,n)})}function He(e,r,t){t?(_.set(e,r,!1),ce.event.add(e,r,{namespace:!1,handler:function(e){var t,n=_.get(this,r);if(1&e.isTrigger&&this[r]){if(n)(ce.event.special[r]||{}).delegateType&&e.stopPropagation();else if(n=ae.call(arguments),_.set(this,r,n),this[r](),t=_.get(this,r),_.set(this,r,!1),n!==t)return e.stopImmediatePropagation(),e.preventDefault(),t}else n&&(_.set(this,r,ce.event.trigger(n[0],n.slice(1),this)),e.stopPropagation(),e.isImmediatePropagationStopped=Ne)}})):void 0===_.get(e,r)&&ce.event.add(e,r,Ne)}ce.event={global:{},add:function(t,e,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.get(t);if($(t)){n.handler&&(n=(o=n).handler,i=o.selector),i&&ce.find.matchesSelector(J,i),n.guid||(n.guid=ce.guid++),(u=v.events)||(u=v.events=Object.create(null)),(a=v.handle)||(a=v.handle=function(e){return"undefined"!=typeof ce&&ce.event.triggered!==e.type?ce.event.dispatch.apply(t,arguments):void 0}),l=(e=(e||"").match(D)||[""]).length;while(l--)d=g=(s=De.exec(e[l])||[])[1],h=(s[2]||"").split(".").sort(),d&&(f=ce.event.special[d]||{},d=(i?f.delegateType:f.bindType)||d,f=ce.event.special[d]||{},c=ce.extend({type:d,origType:g,data:r,handler:n,guid:n.guid,selector:i,needsContext:i&&ce.expr.match.needsContext.test(i),namespace:h.join(".")},o),(p=u[d])||((p=u[d]=[]).delegateCount=0,f.setup&&!1!==f.setup.call(t,r,h,a)||t.addEventListener&&t.addEventListener(d,a)),f.add&&(f.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),i?p.splice(p.delegateCount++,0,c):p.push(c),ce.event.global[d]=!0)}},remove:function(e,t,n,r,i){var o,a,s,u,l,c,f,p,d,h,g,v=_.hasData(e)&&_.get(e);if(v&&(u=v.events)){l=(t=(t||"").match(D)||[""]).length;while(l--)if(d=g=(s=De.exec(t[l])||[])[1],h=(s[2]||"").split(".").sort(),d){f=ce.event.special[d]||{},p=u[d=(r?f.delegateType:f.bindType)||d]||[],s=s[2]&&new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=p.length;while(o--)c=p[o],!i&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||r&&r!==c.selector&&("**"!==r||!c.selector)||(p.splice(o,1),c.selector&&p.delegateCount--,f.remove&&f.remove.call(e,c));a&&!p.length&&(f.teardown&&!1!==f.teardown.call(e,h,v.handle)||ce.removeEvent(e,d,v.handle),delete u[d])}else for(d in u)ce.event.remove(e,d+t[l],n,r,!0);ce.isEmptyObject(u)&&_.remove(e,"handle events")}},dispatch:function(e){var t,n,r,i,o,a,s=new Array(arguments.length),u=ce.event.fix(e),l=(_.get(this,"events")||Object.create(null))[u.type]||[],c=ce.event.special[u.type]||{};for(s[0]=u,t=1;t<arguments.length;t++)s[t]=arguments[t];if(u.delegateTarget=this,!c.preDispatch||!1!==c.preDispatch.call(this,u)){a=ce.event.handlers.call(this,u,l),t=0;while((i=a[t++])&&!u.isPropagationStopped()){u.currentTarget=i.elem,n=0;while((o=i.handlers[n++])&&!u.isImmediatePropagationStopped())u.rnamespace&&!1!==o.namespace&&!u.rnamespace.test(o.namespace)||(u.handleObj=o,u.data=o.data,void 0!==(r=((ce.event.special[o.origType]||{}).handle||o.handler).apply(i.elem,s))&&!1===(u.result=r)&&(u.preventDefault(),u.stopPropagation()))}return c.postDispatch&&c.postDispatch.call(this,u),u.result}},handlers:function(e,t){var n,r,i,o,a,s=[],u=t.delegateCount,l=e.target;if(u&&l.nodeType&&!("click"===e.type&&1<=e.button))for(;l!==this;l=l.parentNode||this)if(1===l.nodeType&&("click"!==e.type||!0!==l.disabled)){for(o=[],a={},n=0;n<u;n++)void 0===a[i=(r=t[n]).selector+" "]&&(a[i]=r.needsContext?-1<ce(i,this).index(l):ce.find(i,this,null,[l]).length),a[i]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return l=this,u<t.length&&s.push({elem:l,handlers:t.slice(u)}),s},addProp:function(t,e){Object.defineProperty(ce.Event.prototype,t,{enumerable:!0,configurable:!0,get:v(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(e){return e[ce.expando]?e:new ce.Event(e)},special:{load:{noBubble:!0},click:{setup:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click",!0),!1},trigger:function(e){var t=this||e;return we.test(t.type)&&t.click&&fe(t,"input")&&He(t,"click"),!0},_default:function(e){var t=e.target;return we.test(t.type)&&t.click&&fe(t,"input")&&_.get(t,"click")||fe(t,"a")}},beforeunload:{postDispatch:function(e){void 0!==e.result&&e.originalEvent&&(e.originalEvent.returnValue=e.result)}}}},ce.removeEvent=function(e,t,n){e.removeEventListener&&e.removeEventListener(t,n)},ce.Event=function(e,t){if(!(this instanceof ce.Event))return new ce.Event(e,t);e&&e.type?(this.originalEvent=e,this.type=e.type,this.isDefaultPrevented=e.defaultPrevented||void 0===e.defaultPrevented&&!1===e.returnValue?Ne:qe,this.target=e.target&&3===e.target.nodeType?e.target.parentNode:e.target,this.currentTarget=e.currentTarget,this.relatedTarget=e.relatedTarget):this.type=e,t&&ce.extend(this,t),this.timeStamp=e&&e.timeStamp||Date.now(),this[ce.expando]=!0},ce.Event.prototype={constructor:ce.Event,isDefaultPrevented:qe,isPropagationStopped:qe,isImmediatePropagationStopped:qe,isSimulated:!1,preventDefault:function(){var e=this.originalEvent;this.isDefaultPrevented=Ne,e&&!this.isSimulated&&e.preventDefault()},stopPropagation:function(){var e=this.originalEvent;this.isPropagationStopped=Ne,e&&!this.isSimulated&&e.stopPropagation()},stopImmediatePropagation:function(){var e=this.originalEvent;this.isImmediatePropagationStopped=Ne,e&&!this.isSimulated&&e.stopImmediatePropagation(),this.stopPropagation()}},ce.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,code:!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:!0},ce.event.addProp),ce.each({focus:"focusin",blur:"focusout"},function(r,i){function o(e){if(C.documentMode){var t=_.get(this,"handle"),n=ce.event.fix(e);n.type="focusin"===e.type?"focus":"blur",n.isSimulated=!0,t(e),n.target===n.currentTarget&&t(n)}else ce.event.simulate(i,e.target,ce.event.fix(e))}ce.event.special[r]={setup:function(){var e;if(He(this,r,!0),!C.documentMode)return!1;(e=_.get(this,i))||this.addEventListener(i,o),_.set(this,i,(e||0)+1)},trigger:function(){return He(this,r),!0},teardown:function(){var e;if(!C.documentMode)return!1;(e=_.get(this,i)-1)?_.set(this,i,e):(this.removeEventListener(i,o),_.remove(this,i))},_default:function(e){return _.get(e.target,r)},delegateType:i},ce.event.special[i]={setup:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i);n||(C.documentMode?this.addEventListener(i,o):e.addEventListener(r,o,!0)),_.set(t,i,(n||0)+1)},teardown:function(){var e=this.ownerDocument||this.document||this,t=C.documentMode?this:e,n=_.get(t,i)-1;n?_.set(t,i,n):(C.documentMode?this.removeEventListener(i,o):e.removeEventListener(r,o,!0),_.remove(t,i))}}}),ce.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(e,i){ce.event.special[e]={delegateType:i,bindType:i,handle:function(e){var t,n=e.relatedTarget,r=e.handleObj;return n&&(n===this||ce.contains(this,n))||(e.type=r.origType,t=r.handler.apply(this,arguments),e.type=i),t}}}),ce.fn.extend({on:function(e,t,n,r){return Le(this,e,t,n,r)},one:function(e,t,n,r){return Le(this,e,t,n,r,1)},off:function(e,t,n){var r,i;if(e&&e.preventDefault&&e.handleObj)return r=e.handleObj,ce(e.delegateTarget).off(r.namespace?r.origType+"."+r.namespace:r.origType,r.selector,r.handler),this;if("object"==typeof e){for(i in e)this.off(i,t,e[i]);return this}return!1!==t&&"function"!=typeof t||(n=t,t=void 0),!1===n&&(n=qe),this.each(function(){ce.event.remove(this,e,n,t)})}});var Oe=/<script|<style|<link/i,Pe=/checked\s*(?:[^=]|=\s*.checked.)/i,Me=/^\s*<!\[CDATA\[|\]\]>\s*$/g;function Re(e,t){return fe(e,"table")&&fe(11!==t.nodeType?t:t.firstChild,"tr")&&ce(e).children("tbody")[0]||e}function Ie(e){return e.type=(null!==e.getAttribute("type"))+"/"+e.type,e}function We(e){return"true/"===(e.type||"").slice(0,5)?e.type=e.type.slice(5):e.removeAttribute("type"),e}function Fe(e,t){var n,r,i,o,a,s;if(1===t.nodeType){if(_.hasData(e)&&(s=_.get(e).events))for(i in _.remove(t,"handle events"),s)for(n=0,r=s[i].length;n<r;n++)ce.event.add(t,i,s[i][n]);z.hasData(e)&&(o=z.access(e),a=ce.extend({},o),z.set(t,a))}}function $e(n,r,i,o){r=g(r);var e,t,a,s,u,l,c=0,f=n.length,p=f-1,d=r[0],h=v(d);if(h||1<f&&"string"==typeof d&&!le.checkClone&&Pe.test(d))return n.each(function(e){var t=n.eq(e);h&&(r[0]=d.call(this,e,t.html())),$e(t,r,i,o)});if(f&&(t=(e=Ae(r,n[0].ownerDocument,!1,n,o)).firstChild,1===e.childNodes.length&&(e=t),t||o)){for(s=(a=ce.map(Se(e,"script"),Ie)).length;c<f;c++)u=e,c!==p&&(u=ce.clone(u,!0,!0),s&&ce.merge(a,Se(u,"script"))),i.call(n[c],u,c);if(s)for(l=a[a.length-1].ownerDocument,ce.map(a,We),c=0;c<s;c++)u=a[c],Ce.test(u.type||"")&&!_.access(u,"globalEval")&&ce.contains(l,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?ce._evalUrl&&!u.noModule&&ce._evalUrl(u.src,{nonce:u.nonce||u.getAttribute("nonce")},l):m(u.textContent.replace(Me,""),u,l))}return n}function Be(e,t,n){for(var r,i=t?ce.filter(t,e):e,o=0;null!=(r=i[o]);o++)n||1!==r.nodeType||ce.cleanData(Se(r)),r.parentNode&&(n&&K(r)&&Ee(Se(r,"script")),r.parentNode.removeChild(r));return e}ce.extend({htmlPrefilter:function(e){return e},clone:function(e,t,n){var r,i,o,a,s,u,l,c=e.cloneNode(!0),f=K(e);if(!(le.noCloneChecked||1!==e.nodeType&&11!==e.nodeType||ce.isXMLDoc(e)))for(a=Se(c),r=0,i=(o=Se(e)).length;r<i;r++)s=o[r],u=a[r],void 0,"input"===(l=u.nodeName.toLowerCase())&&we.test(s.type)?u.checked=s.checked:"input"!==l&&"textarea"!==l||(u.defaultValue=s.defaultValue);if(t)if(n)for(o=o||Se(e),a=a||Se(c),r=0,i=o.length;r<i;r++)Fe(o[r],a[r]);else Fe(e,c);return 0<(a=Se(c,"script")).length&&Ee(a,!f&&Se(e,"script")),c},cleanData:function(e){for(var t,n,r,i=ce.event.special,o=0;void 0!==(n=e[o]);o++)if($(n)){if(t=n[_.expando]){if(t.events)for(r in t.events)i[r]?ce.event.remove(n,r):ce.removeEvent(n,r,t.handle);n[_.expando]=void 0}n[z.expando]&&(n[z.expando]=void 0)}}}),ce.fn.extend({detach:function(e){return Be(this,e,!0)},remove:function(e){return Be(this,e)},text:function(e){return M(this,function(e){return void 0===e?ce.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=e)})},null,e,arguments.length)},append:function(){return $e(this,arguments,function(e){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||Re(this,e).appendChild(e)})},prepend:function(){return $e(this,arguments,function(e){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var t=Re(this,e);t.insertBefore(e,t.firstChild)}})},before:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this)})},after:function(){return $e(this,arguments,function(e){this.parentNode&&this.parentNode.insertBefore(e,this.nextSibling)})},empty:function(){for(var e,t=0;null!=(e=this[t]);t++)1===e.nodeType&&(ce.cleanData(Se(e,!1)),e.textContent="");return this},clone:function(e,t){return e=null!=e&&e,t=null==t?e:t,this.map(function(){return ce.clone(this,e,t)})},html:function(e){return M(this,function(e){var t=this[0]||{},n=0,r=this.length;if(void 0===e&&1===t.nodeType)return t.innerHTML;if("string"==typeof e&&!Oe.test(e)&&!ke[(Te.exec(e)||["",""])[1].toLowerCase()]){e=ce.htmlPrefilter(e);try{for(;n<r;n++)1===(t=this[n]||{}).nodeType&&(ce.cleanData(Se(t,!1)),t.innerHTML=e);t=0}catch(e){}}t&&this.empty().append(e)},null,e,arguments.length)},replaceWith:function(){var n=[];return $e(this,arguments,function(e){var t=this.parentNode;ce.inArray(this,n)<0&&(ce.cleanData(Se(this)),t&&t.replaceChild(e,this))},n)}}),ce.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(e,a){ce.fn[e]=function(e){for(var t,n=[],r=ce(e),i=r.length-1,o=0;o<=i;o++)t=o===i?this:this.clone(!0),ce(r[o])[a](t),s.apply(n,t.get());return this.pushStack(n)}});var _e=new RegExp("^("+G+")(?!px)[a-z%]+$","i"),ze=/^--/,Xe=function(e){var t=e.ownerDocument.defaultView;return t&&t.opener||(t=ie),t.getComputedStyle(e)},Ue=function(e,t,n){var r,i,o={};for(i in t)o[i]=e.style[i],e.style[i]=t[i];for(i in r=n.call(e),t)e.style[i]=o[i];return r},Ve=new RegExp(Q.join("|"),"i");function Ge(e,t,n){var r,i,o,a,s=ze.test(t),u=e.style;return(n=n||Xe(e))&&(a=n.getPropertyValue(t)||n[t],s&&a&&(a=a.replace(ve,"$1")||void 0),""!==a||K(e)||(a=ce.style(e,t)),!le.pixelBoxStyles()&&_e.test(a)&&Ve.test(t)&&(r=u.width,i=u.minWidth,o=u.maxWidth,u.minWidth=u.maxWidth=u.width=a,a=n.width,u.width=r,u.minWidth=i,u.maxWidth=o)),void 0!==a?a+"":a}function Ye(e,t){return{get:function(){if(!e())return(this.get=t).apply(this,arguments);delete this.get}}}!function(){function e(){if(l){u.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",l.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",J.appendChild(u).appendChild(l);var e=ie.getComputedStyle(l);n="1%"!==e.top,s=12===t(e.marginLeft),l.style.right="60%",o=36===t(e.right),r=36===t(e.width),l.style.position="absolute",i=12===t(l.offsetWidth/3),J.removeChild(u),l=null}}function t(e){return Math.round(parseFloat(e))}var n,r,i,o,a,s,u=C.createElement("div"),l=C.createElement("div");l.style&&(l.style.backgroundClip="content-box",l.cloneNode(!0).style.backgroundClip="",le.clearCloneStyle="content-box"===l.style.backgroundClip,ce.extend(le,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),o},pixelPosition:function(){return e(),n},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),i},reliableTrDimensions:function(){var e,t,n,r;return null==a&&(e=C.createElement("table"),t=C.createElement("tr"),n=C.createElement("div"),e.style.cssText="position:absolute;left:-11111px;border-collapse:separate",t.style.cssText="box-sizing:content-box;border:1px solid",t.style.height="1px",n.style.height="9px",n.style.display="block",J.appendChild(e).appendChild(t).appendChild(n),r=ie.getComputedStyle(t),a=parseInt(r.height,10)+parseInt(r.borderTopWidth,10)+parseInt(r.borderBottomWidth,10)===t.offsetHeight,J.removeChild(e)),a}}))}();var Qe=["Webkit","Moz","ms"],Je=C.createElement("div").style,Ke={};function Ze(e){var t=ce.cssProps[e]||Ke[e];return t||(e in Je?e:Ke[e]=function(e){var t=e[0].toUpperCase()+e.slice(1),n=Qe.length;while(n--)if((e=Qe[n]+t)in Je)return e}(e)||e)}var et=/^(none|table(?!-c[ea]).+)/,tt={position:"absolute",visibility:"hidden",display:"block"},nt={letterSpacing:"0",fontWeight:"400"};function rt(e,t,n){var r=Y.exec(t);return r?Math.max(0,r[2]-(n||0))+(r[3]||"px"):t}function it(e,t,n,r,i,o){var a="width"===t?1:0,s=0,u=0,l=0;if(n===(r?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=ce.css(e,n+Q[a],!0,i)),r?("content"===n&&(u-=ce.css(e,"padding"+Q[a],!0,i)),"margin"!==n&&(u-=ce.css(e,"border"+Q[a]+"Width",!0,i))):(u+=ce.css(e,"padding"+Q[a],!0,i),"padding"!==n?u+=ce.css(e,"border"+Q[a]+"Width",!0,i):s+=ce.css(e,"border"+Q[a]+"Width",!0,i));return!r&&0<=o&&(u+=Math.max(0,Math.ceil(e["offset"+t[0].toUpperCase()+t.slice(1)]-o-u-s-.5))||0),u+l}function ot(e,t,n){var r=Xe(e),i=(!le.boxSizingReliable()||n)&&"border-box"===ce.css(e,"boxSizing",!1,r),o=i,a=Ge(e,t,r),s="offset"+t[0].toUpperCase()+t.slice(1);if(_e.test(a)){if(!n)return a;a="auto"}return(!le.boxSizingReliable()&&i||!le.reliableTrDimensions()&&fe(e,"tr")||"auto"===a||!parseFloat(a)&&"inline"===ce.css(e,"display",!1,r))&&e.getClientRects().length&&(i="border-box"===ce.css(e,"boxSizing",!1,r),(o=s in e)&&(a=e[s])),(a=parseFloat(a)||0)+it(e,t,n||(i?"border":"content"),o,r,a)+"px"}function at(e,t,n,r,i){return new at.prototype.init(e,t,n,r,i)}ce.extend({cssHooks:{opacity:{get:function(e,t){if(t){var n=Ge(e,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,aspectRatio:!0,borderImageSlice:!0,columnCount:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,gridArea:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnStart:!0,gridRow:!0,gridRowEnd:!0,gridRowStart:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,scale:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeMiterlimit:!0,strokeOpacity:!0},cssProps:{},style:function(e,t,n,r){if(e&&3!==e.nodeType&&8!==e.nodeType&&e.style){var i,o,a,s=F(t),u=ze.test(t),l=e.style;if(u||(t=Ze(s)),a=ce.cssHooks[t]||ce.cssHooks[s],void 0===n)return a&&"get"in a&&void 0!==(i=a.get(e,!1,r))?i:l[t];"string"===(o=typeof n)&&(i=Y.exec(n))&&i[1]&&(n=te(e,t,i),o="number"),null!=n&&n==n&&("number"!==o||u||(n+=i&&i[3]||(ce.cssNumber[s]?"":"px")),le.clearCloneStyle||""!==n||0!==t.indexOf("background")||(l[t]="inherit"),a&&"set"in a&&void 0===(n=a.set(e,n,r))||(u?l.setProperty(t,n):l[t]=n))}},css:function(e,t,n,r){var i,o,a,s=F(t);return ze.test(t)||(t=Ze(s)),(a=ce.cssHooks[t]||ce.cssHooks[s])&&"get"in a&&(i=a.get(e,!0,n)),void 0===i&&(i=Ge(e,t,r)),"normal"===i&&t in nt&&(i=nt[t]),""===n||n?(o=parseFloat(i),!0===n||isFinite(o)?o||0:i):i}}),ce.each(["height","width"],function(e,u){ce.cssHooks[u]={get:function(e,t,n){if(t)return!et.test(ce.css(e,"display"))||e.getClientRects().length&&e.getBoundingClientRect().width?ot(e,u,n):Ue(e,tt,function(){return ot(e,u,n)})},set:function(e,t,n){var r,i=Xe(e),o=!le.scrollboxSize()&&"absolute"===i.position,a=(o||n)&&"border-box"===ce.css(e,"boxSizing",!1,i),s=n?it(e,u,n,a,i):0;return a&&o&&(s-=Math.ceil(e["offset"+u[0].toUpperCase()+u.slice(1)]-parseFloat(i[u])-it(e,u,"border",!1,i)-.5)),s&&(r=Y.exec(t))&&"px"!==(r[3]||"px")&&(e.style[u]=t,t=ce.css(e,u)),rt(0,t,s)}}}),ce.cssHooks.marginLeft=Ye(le.reliableMarginLeft,function(e,t){if(t)return(parseFloat(Ge(e,"marginLeft"))||e.getBoundingClientRect().left-Ue(e,{marginLeft:0},function(){return e.getBoundingClientRect().left}))+"px"}),ce.each({margin:"",padding:"",border:"Width"},function(i,o){ce.cssHooks[i+o]={expand:function(e){for(var t=0,n={},r="string"==typeof e?e.split(" "):[e];t<4;t++)n[i+Q[t]+o]=r[t]||r[t-2]||r[0];return n}},"margin"!==i&&(ce.cssHooks[i+o].set=rt)}),ce.fn.extend({css:function(e,t){return M(this,function(e,t,n){var r,i,o={},a=0;if(Array.isArray(t)){for(r=Xe(e),i=t.length;a<i;a++)o[t[a]]=ce.css(e,t[a],!1,r);return o}return void 0!==n?ce.style(e,t,n):ce.css(e,t)},e,t,1<arguments.length)}}),((ce.Tween=at).prototype={constructor:at,init:function(e,t,n,r,i,o){this.elem=e,this.prop=n,this.easing=i||ce.easing._default,this.options=t,this.start=this.now=this.cur(),this.end=r,this.unit=o||(ce.cssNumber[n]?"":"px")},cur:function(){var e=at.propHooks[this.prop];return e&&e.get?e.get(this):at.propHooks._default.get(this)},run:function(e){var t,n=at.propHooks[this.prop];return this.options.duration?this.pos=t=ce.easing[this.easing](e,this.options.duration*e,0,1,this.options.duration):this.pos=t=e,this.now=(this.end-this.start)*t+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):at.propHooks._default.set(this),this}}).init.prototype=at.prototype,(at.propHooks={_default:{get:function(e){var t;return 1!==e.elem.nodeType||null!=e.elem[e.prop]&&null==e.elem.style[e.prop]?e.elem[e.prop]:(t=ce.css(e.elem,e.prop,""))&&"auto"!==t?t:0},set:function(e){ce.fx.step[e.prop]?ce.fx.step[e.prop](e):1!==e.elem.nodeType||!ce.cssHooks[e.prop]&&null==e.elem.style[Ze(e.prop)]?e.elem[e.prop]=e.now:ce.style(e.elem,e.prop,e.now+e.unit)}}}).scrollTop=at.propHooks.scrollLeft={set:function(e){e.elem.nodeType&&e.elem.parentNode&&(e.elem[e.prop]=e.now)}},ce.easing={linear:function(e){return e},swing:function(e){return.5-Math.cos(e*Math.PI)/2},_default:"swing"},ce.fx=at.prototype.init,ce.fx.step={};var st,ut,lt,ct,ft=/^(?:toggle|show|hide)$/,pt=/queueHooks$/;function dt(){ut&&(!1===C.hidden&&ie.requestAnimationFrame?ie.requestAnimationFrame(dt):ie.setTimeout(dt,ce.fx.interval),ce.fx.tick())}function ht(){return ie.setTimeout(function(){st=void 0}),st=Date.now()}function gt(e,t){var n,r=0,i={height:e};for(t=t?1:0;r<4;r+=2-t)i["margin"+(n=Q[r])]=i["padding"+n]=e;return t&&(i.opacity=i.width=e),i}function vt(e,t,n){for(var r,i=(yt.tweeners[t]||[]).concat(yt.tweeners["*"]),o=0,a=i.length;o<a;o++)if(r=i[o].call(n,t,e))return r}function yt(o,e,t){var n,a,r=0,i=yt.prefilters.length,s=ce.Deferred().always(function(){delete u.elem}),u=function(){if(a)return!1;for(var e=st||ht(),t=Math.max(0,l.startTime+l.duration-e),n=1-(t/l.duration||0),r=0,i=l.tweens.length;r<i;r++)l.tweens[r].run(n);return s.notifyWith(o,[l,n,t]),n<1&&i?t:(i||s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l]),!1)},l=s.promise({elem:o,props:ce.extend({},e),opts:ce.extend(!0,{specialEasing:{},easing:ce.easing._default},t),originalProperties:e,originalOptions:t,startTime:st||ht(),duration:t.duration,tweens:[],createTween:function(e,t){var n=ce.Tween(o,l.opts,e,t,l.opts.specialEasing[e]||l.opts.easing);return l.tweens.push(n),n},stop:function(e){var t=0,n=e?l.tweens.length:0;if(a)return this;for(a=!0;t<n;t++)l.tweens[t].run(1);return e?(s.notifyWith(o,[l,1,0]),s.resolveWith(o,[l,e])):s.rejectWith(o,[l,e]),this}}),c=l.props;for(!function(e,t){var n,r,i,o,a;for(n in e)if(i=t[r=F(n)],o=e[n],Array.isArray(o)&&(i=o[1],o=e[n]=o[0]),n!==r&&(e[r]=o,delete e[n]),(a=ce.cssHooks[r])&&"expand"in a)for(n in o=a.expand(o),delete e[r],o)n in e||(e[n]=o[n],t[n]=i);else t[r]=i}(c,l.opts.specialEasing);r<i;r++)if(n=yt.prefilters[r].call(l,o,c,l.opts))return v(n.stop)&&(ce._queueHooks(l.elem,l.opts.queue).stop=n.stop.bind(n)),n;return ce.map(c,vt,l),v(l.opts.start)&&l.opts.start.call(o,l),l.progress(l.opts.progress).done(l.opts.done,l.opts.complete).fail(l.opts.fail).always(l.opts.always),ce.fx.timer(ce.extend(u,{elem:o,anim:l,queue:l.opts.queue})),l}ce.Animation=ce.extend(yt,{tweeners:{"*":[function(e,t){var n=this.createTween(e,t);return te(n.elem,e,Y.exec(t),n),n}]},tweener:function(e,t){v(e)?(t=e,e=["*"]):e=e.match(D);for(var n,r=0,i=e.length;r<i;r++)n=e[r],yt.tweeners[n]=yt.tweeners[n]||[],yt.tweeners[n].unshift(t)},prefilters:[function(e,t,n){var r,i,o,a,s,u,l,c,f="width"in t||"height"in t,p=this,d={},h=e.style,g=e.nodeType&&ee(e),v=_.get(e,"fxshow");for(r in n.queue||(null==(a=ce._queueHooks(e,"fx")).unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,p.always(function(){p.always(function(){a.unqueued--,ce.queue(e,"fx").length||a.empty.fire()})})),t)if(i=t[r],ft.test(i)){if(delete t[r],o=o||"toggle"===i,i===(g?"hide":"show")){if("show"!==i||!v||void 0===v[r])continue;g=!0}d[r]=v&&v[r]||ce.style(e,r)}if((u=!ce.isEmptyObject(t))||!ce.isEmptyObject(d))for(r in f&&1===e.nodeType&&(n.overflow=[h.overflow,h.overflowX,h.overflowY],null==(l=v&&v.display)&&(l=_.get(e,"display")),"none"===(c=ce.css(e,"display"))&&(l?c=l:(re([e],!0),l=e.style.display||l,c=ce.css(e,"display"),re([e]))),("inline"===c||"inline-block"===c&&null!=l)&&"none"===ce.css(e,"float")&&(u||(p.done(function(){h.display=l}),null==l&&(c=h.display,l="none"===c?"":c)),h.display="inline-block")),n.overflow&&(h.overflow="hidden",p.always(function(){h.overflow=n.overflow[0],h.overflowX=n.overflow[1],h.overflowY=n.overflow[2]})),u=!1,d)u||(v?"hidden"in v&&(g=v.hidden):v=_.access(e,"fxshow",{display:l}),o&&(v.hidden=!g),g&&re([e],!0),p.done(function(){for(r in g||re([e]),_.remove(e,"fxshow"),d)ce.style(e,r,d[r])})),u=vt(g?v[r]:0,r,p),r in v||(v[r]=u.start,g&&(u.end=u.start,u.start=0))}],prefilter:function(e,t){t?yt.prefilters.unshift(e):yt.prefilters.push(e)}}),ce.speed=function(e,t,n){var r=e&&"object"==typeof e?ce.extend({},e):{complete:n||!n&&t||v(e)&&e,duration:e,easing:n&&t||t&&!v(t)&&t};return ce.fx.off?r.duration=0:"number"!=typeof r.duration&&(r.duration in ce.fx.speeds?r.duration=ce.fx.speeds[r.duration]:r.duration=ce.fx.speeds._default),null!=r.queue&&!0!==r.queue||(r.queue="fx"),r.old=r.complete,r.complete=function(){v(r.old)&&r.old.call(this),r.queue&&ce.dequeue(this,r.queue)},r},ce.fn.extend({fadeTo:function(e,t,n,r){return this.filter(ee).css("opacity",0).show().end().animate({opacity:t},e,n,r)},animate:function(t,e,n,r){var i=ce.isEmptyObject(t),o=ce.speed(e,n,r),a=function(){var e=yt(this,ce.extend({},t),o);(i||_.get(this,"finish"))&&e.stop(!0)};return a.finish=a,i||!1===o.queue?this.each(a):this.queue(o.queue,a)},stop:function(i,e,o){var a=function(e){var t=e.stop;delete e.stop,t(o)};return"string"!=typeof i&&(o=e,e=i,i=void 0),e&&this.queue(i||"fx",[]),this.each(function(){var e=!0,t=null!=i&&i+"queueHooks",n=ce.timers,r=_.get(this);if(t)r[t]&&r[t].stop&&a(r[t]);else for(t in r)r[t]&&r[t].stop&&pt.test(t)&&a(r[t]);for(t=n.length;t--;)n[t].elem!==this||null!=i&&n[t].queue!==i||(n[t].anim.stop(o),e=!1,n.splice(t,1));!e&&o||ce.dequeue(this,i)})},finish:function(a){return!1!==a&&(a=a||"fx"),this.each(function(){var e,t=_.get(this),n=t[a+"queue"],r=t[a+"queueHooks"],i=ce.timers,o=n?n.length:0;for(t.finish=!0,ce.queue(this,a,[]),r&&r.stop&&r.stop.call(this,!0),e=i.length;e--;)i[e].elem===this&&i[e].queue===a&&(i[e].anim.stop(!0),i.splice(e,1));for(e=0;e<o;e++)n[e]&&n[e].finish&&n[e].finish.call(this);delete t.finish})}}),ce.each(["toggle","show","hide"],function(e,r){var i=ce.fn[r];ce.fn[r]=function(e,t,n){return null==e||"boolean"==typeof e?i.apply(this,arguments):this.animate(gt(r,!0),e,t,n)}}),ce.each({slideDown:gt("show"),slideUp:gt("hide"),slideToggle:gt("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(e,r){ce.fn[e]=function(e,t,n){return this.animate(r,e,t,n)}}),ce.timers=[],ce.fx.tick=function(){var e,t=0,n=ce.timers;for(st=Date.now();t<n.length;t++)(e=n[t])()||n[t]!==e||n.splice(t--,1);n.length||ce.fx.stop(),st=void 0},ce.fx.timer=function(e){ce.timers.push(e),ce.fx.start()},ce.fx.interval=13,ce.fx.start=function(){ut||(ut=!0,dt())},ce.fx.stop=function(){ut=null},ce.fx.speeds={slow:600,fast:200,_default:400},ce.fn.delay=function(r,e){return r=ce.fx&&ce.fx.speeds[r]||r,e=e||"fx",this.queue(e,function(e,t){var n=ie.setTimeout(e,r);t.stop=function(){ie.clearTimeout(n)}})},lt=C.createElement("input"),ct=C.createElement("select").appendChild(C.createElement("option")),lt.type="checkbox",le.checkOn=""!==lt.value,le.optSelected=ct.selected,(lt=C.createElement("input")).value="t",lt.type="radio",le.radioValue="t"===lt.value;var mt,xt=ce.expr.attrHandle;ce.fn.extend({attr:function(e,t){return M(this,ce.attr,e,t,1<arguments.length)},removeAttr:function(e){return this.each(function(){ce.removeAttr(this,e)})}}),ce.extend({attr:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof e.getAttribute?ce.prop(e,t,n):(1===o&&ce.isXMLDoc(e)||(i=ce.attrHooks[t.toLowerCase()]||(ce.expr.match.bool.test(t)?mt:void 0)),void 0!==n?null===n?void ce.removeAttr(e,t):i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:(e.setAttribute(t,n+""),n):i&&"get"in i&&null!==(r=i.get(e,t))?r:null==(r=ce.find.attr(e,t))?void 0:r)},attrHooks:{type:{set:function(e,t){if(!le.radioValue&&"radio"===t&&fe(e,"input")){var n=e.value;return e.setAttribute("type",t),n&&(e.value=n),t}}}},removeAttr:function(e,t){var n,r=0,i=t&&t.match(D);if(i&&1===e.nodeType)while(n=i[r++])e.removeAttribute(n)}}),mt={set:function(e,t,n){return!1===t?ce.removeAttr(e,n):e.setAttribute(n,n),n}},ce.each(ce.expr.match.bool.source.match(/\w+/g),function(e,t){var a=xt[t]||ce.find.attr;xt[t]=function(e,t,n){var r,i,o=t.toLowerCase();return n||(i=xt[o],xt[o]=r,r=null!=a(e,t,n)?o:null,xt[o]=i),r}});var bt=/^(?:input|select|textarea|button)$/i,wt=/^(?:a|area)$/i;function Tt(e){return(e.match(D)||[]).join(" ")}function Ct(e){return e.getAttribute&&e.getAttribute("class")||""}function kt(e){return Array.isArray(e)?e:"string"==typeof e&&e.match(D)||[]}ce.fn.extend({prop:function(e,t){return M(this,ce.prop,e,t,1<arguments.length)},removeProp:function(e){return this.each(function(){delete this[ce.propFix[e]||e]})}}),ce.extend({prop:function(e,t,n){var r,i,o=e.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&ce.isXMLDoc(e)||(t=ce.propFix[t]||t,i=ce.propHooks[t]),void 0!==n?i&&"set"in i&&void 0!==(r=i.set(e,n,t))?r:e[t]=n:i&&"get"in i&&null!==(r=i.get(e,t))?r:e[t]},propHooks:{tabIndex:{get:function(e){var t=ce.find.attr(e,"tabindex");return t?parseInt(t,10):bt.test(e.nodeName)||wt.test(e.nodeName)&&e.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),le.optSelected||(ce.propHooks.selected={get:function(e){var t=e.parentNode;return t&&t.parentNode&&t.parentNode.selectedIndex,null},set:function(e){var t=e.parentNode;t&&(t.selectedIndex,t.parentNode&&t.parentNode.selectedIndex)}}),ce.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){ce.propFix[this.toLowerCase()]=this}),ce.fn.extend({addClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).addClass(t.call(this,e,Ct(this)))}):(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++)i=e[o],n.indexOf(" "+i+" ")<0&&(n+=i+" ");a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this},removeClass:function(t){var e,n,r,i,o,a;return v(t)?this.each(function(e){ce(this).removeClass(t.call(this,e,Ct(this)))}):arguments.length?(e=kt(t)).length?this.each(function(){if(r=Ct(this),n=1===this.nodeType&&" "+Tt(r)+" "){for(o=0;o<e.length;o++){i=e[o];while(-1<n.indexOf(" "+i+" "))n=n.replace(" "+i+" "," ")}a=Tt(n),r!==a&&this.setAttribute("class",a)}}):this:this.attr("class","")},toggleClass:function(t,n){var e,r,i,o,a=typeof t,s="string"===a||Array.isArray(t);return v(t)?this.each(function(e){ce(this).toggleClass(t.call(this,e,Ct(this),n),n)}):"boolean"==typeof n&&s?n?this.addClass(t):this.removeClass(t):(e=kt(t),this.each(function(){if(s)for(o=ce(this),i=0;i<e.length;i++)r=e[i],o.hasClass(r)?o.removeClass(r):o.addClass(r);else void 0!==t&&"boolean"!==a||((r=Ct(this))&&_.set(this,"__className__",r),this.setAttribute&&this.setAttribute("class",r||!1===t?"":_.get(this,"__className__")||""))}))},hasClass:function(e){var t,n,r=0;t=" "+e+" ";while(n=this[r++])if(1===n.nodeType&&-1<(" "+Tt(Ct(n))+" ").indexOf(t))return!0;return!1}});var St=/\r/g;ce.fn.extend({val:function(n){var r,e,i,t=this[0];return arguments.length?(i=v(n),this.each(function(e){var t;1===this.nodeType&&(null==(t=i?n.call(this,e,ce(this).val()):n)?t="":"number"==typeof t?t+="":Array.isArray(t)&&(t=ce.map(t,function(e){return null==e?"":e+""})),(r=ce.valHooks[this.type]||ce.valHooks[this.nodeName.toLowerCase()])&&"set"in r&&void 0!==r.set(this,t,"value")||(this.value=t))})):t?(r=ce.valHooks[t.type]||ce.valHooks[t.nodeName.toLowerCase()])&&"get"in r&&void 0!==(e=r.get(t,"value"))?e:"string"==typeof(e=t.value)?e.replace(St,""):null==e?"":e:void 0}}),ce.extend({valHooks:{option:{get:function(e){var t=ce.find.attr(e,"value");return null!=t?t:Tt(ce.text(e))}},select:{get:function(e){var t,n,r,i=e.options,o=e.selectedIndex,a="select-one"===e.type,s=a?null:[],u=a?o+1:i.length;for(r=o<0?u:a?o:0;r<u;r++)if(((n=i[r]).selected||r===o)&&!n.disabled&&(!n.parentNode.disabled||!fe(n.parentNode,"optgroup"))){if(t=ce(n).val(),a)return t;s.push(t)}return s},set:function(e,t){var n,r,i=e.options,o=ce.makeArray(t),a=i.length;while(a--)((r=i[a]).selected=-1<ce.inArray(ce.valHooks.option.get(r),o))&&(n=!0);return n||(e.selectedIndex=-1),o}}}}),ce.each(["radio","checkbox"],function(){ce.valHooks[this]={set:function(e,t){if(Array.isArray(t))return e.checked=-1<ce.inArray(ce(e).val(),t)}},le.checkOn||(ce.valHooks[this].get=function(e){return null===e.getAttribute("value")?"on":e.value})});var Et=ie.location,jt={guid:Date.now()},At=/\?/;ce.parseXML=function(e){var t,n;if(!e||"string"!=typeof e)return null;try{t=(new ie.DOMParser).parseFromString(e,"text/xml")}catch(e){}return n=t&&t.getElementsByTagName("parsererror")[0],t&&!n||ce.error("Invalid XML: "+(n?ce.map(n.childNodes,function(e){return e.textContent}).join("\n"):e)),t};var Dt=/^(?:focusinfocus|focusoutblur)$/,Nt=function(e){e.stopPropagation()};ce.extend(ce.event,{trigger:function(e,t,n,r){var i,o,a,s,u,l,c,f,p=[n||C],d=ue.call(e,"type")?e.type:e,h=ue.call(e,"namespace")?e.namespace.split("."):[];if(o=f=a=n=n||C,3!==n.nodeType&&8!==n.nodeType&&!Dt.test(d+ce.event.triggered)&&(-1<d.indexOf(".")&&(d=(h=d.split(".")).shift(),h.sort()),u=d.indexOf(":")<0&&"on"+d,(e=e[ce.expando]?e:new ce.Event(d,"object"==typeof e&&e)).isTrigger=r?2:3,e.namespace=h.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+h.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=n),t=null==t?[e]:ce.makeArray(t,[e]),c=ce.event.special[d]||{},r||!c.trigger||!1!==c.trigger.apply(n,t))){if(!r&&!c.noBubble&&!y(n)){for(s=c.delegateType||d,Dt.test(s+d)||(o=o.parentNode);o;o=o.parentNode)p.push(o),a=o;a===(n.ownerDocument||C)&&p.push(a.defaultView||a.parentWindow||ie)}i=0;while((o=p[i++])&&!e.isPropagationStopped())f=o,e.type=1<i?s:c.bindType||d,(l=(_.get(o,"events")||Object.create(null))[e.type]&&_.get(o,"handle"))&&l.apply(o,t),(l=u&&o[u])&&l.apply&&$(o)&&(e.result=l.apply(o,t),!1===e.result&&e.preventDefault());return e.type=d,r||e.isDefaultPrevented()||c._default&&!1!==c._default.apply(p.pop(),t)||!$(n)||u&&v(n[d])&&!y(n)&&((a=n[u])&&(n[u]=null),ce.event.triggered=d,e.isPropagationStopped()&&f.addEventListener(d,Nt),n[d](),e.isPropagationStopped()&&f.removeEventListener(d,Nt),ce.event.triggered=void 0,a&&(n[u]=a)),e.result}},simulate:function(e,t,n){var r=ce.extend(new ce.Event,n,{type:e,isSimulated:!0});ce.event.trigger(r,null,t)}}),ce.fn.extend({trigger:function(e,t){return this.each(function(){ce.event.trigger(e,t,this)})},triggerHandler:function(e,t){var n=this[0];if(n)return ce.event.trigger(e,t,n,!0)}});var qt=/\[\]$/,Lt=/\r?\n/g,Ht=/^(?:submit|button|image|reset|file)$/i,Ot=/^(?:input|select|textarea|keygen)/i;function Pt(n,e,r,i){var t;if(Array.isArray(e))ce.each(e,function(e,t){r||qt.test(n)?i(n,t):Pt(n+"["+("object"==typeof t&&null!=t?e:"")+"]",t,r,i)});else if(r||"object"!==x(e))i(n,e);else for(t in e)Pt(n+"["+t+"]",e[t],r,i)}ce.param=function(e,t){var n,r=[],i=function(e,t){var n=v(t)?t():t;r[r.length]=encodeURIComponent(e)+"="+encodeURIComponent(null==n?"":n)};if(null==e)return"";if(Array.isArray(e)||e.jquery&&!ce.isPlainObject(e))ce.each(e,function(){i(this.name,this.value)});else for(n in e)Pt(n,e[n],t,i);return r.join("&")},ce.fn.extend({serialize:function(){return ce.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var e=ce.prop(this,"elements");return e?ce.makeArray(e):this}).filter(function(){var e=this.type;return this.name&&!ce(this).is(":disabled")&&Ot.test(this.nodeName)&&!Ht.test(e)&&(this.checked||!we.test(e))}).map(function(e,t){var n=ce(this).val();return null==n?null:Array.isArray(n)?ce.map(n,function(e){return{name:t.name,value:e.replace(Lt,"\r\n")}}):{name:t.name,value:n.replace(Lt,"\r\n")}}).get()}});var Mt=/%20/g,Rt=/#.*$/,It=/([?&])_=[^&]*/,Wt=/^(.*?):[ \t]*([^\r\n]*)$/gm,Ft=/^(?:GET|HEAD)$/,$t=/^\/\//,Bt={},_t={},zt="*/".concat("*"),Xt=C.createElement("a");function Ut(o){return function(e,t){"string"!=typeof e&&(t=e,e="*");var n,r=0,i=e.toLowerCase().match(D)||[];if(v(t))while(n=i[r++])"+"===n[0]?(n=n.slice(1)||"*",(o[n]=o[n]||[]).unshift(t)):(o[n]=o[n]||[]).push(t)}}function Vt(t,i,o,a){var s={},u=t===_t;function l(e){var r;return s[e]=!0,ce.each(t[e]||[],function(e,t){var n=t(i,o,a);return"string"!=typeof n||u||s[n]?u?!(r=n):void 0:(i.dataTypes.unshift(n),l(n),!1)}),r}return l(i.dataTypes[0])||!s["*"]&&l("*")}function Gt(e,t){var n,r,i=ce.ajaxSettings.flatOptions||{};for(n in t)void 0!==t[n]&&((i[n]?e:r||(r={}))[n]=t[n]);return r&&ce.extend(!0,e,r),e}Xt.href=Et.href,ce.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Et.href,type:"GET",isLocal:/^(?:about|app|app-storage|.+-extension|file|res|widget):$/.test(Et.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":zt,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":ce.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(e,t){return t?Gt(Gt(e,ce.ajaxSettings),t):Gt(ce.ajaxSettings,e)},ajaxPrefilter:Ut(Bt),ajaxTransport:Ut(_t),ajax:function(e,t){"object"==typeof e&&(t=e,e=void 0),t=t||{};var c,f,p,n,d,r,h,g,i,o,v=ce.ajaxSetup({},t),y=v.context||v,m=v.context&&(y.nodeType||y.jquery)?ce(y):ce.event,x=ce.Deferred(),b=ce.Callbacks("once memory"),w=v.statusCode||{},a={},s={},u="canceled",T={readyState:0,getResponseHeader:function(e){var t;if(h){if(!n){n={};while(t=Wt.exec(p))n[t[1].toLowerCase()+" "]=(n[t[1].toLowerCase()+" "]||[]).concat(t[2])}t=n[e.toLowerCase()+" "]}return null==t?null:t.join(", ")},getAllResponseHeaders:function(){return h?p:null},setRequestHeader:function(e,t){return null==h&&(e=s[e.toLowerCase()]=s[e.toLowerCase()]||e,a[e]=t),this},overrideMimeType:function(e){return null==h&&(v.mimeType=e),this},statusCode:function(e){var t;if(e)if(h)T.always(e[T.status]);else for(t in e)w[t]=[w[t],e[t]];return this},abort:function(e){var t=e||u;return c&&c.abort(t),l(0,t),this}};if(x.promise(T),v.url=((e||v.url||Et.href)+"").replace($t,Et.protocol+"//"),v.type=t.method||t.type||v.method||v.type,v.dataTypes=(v.dataType||"*").toLowerCase().match(D)||[""],null==v.crossDomain){r=C.createElement("a");try{r.href=v.url,r.href=r.href,v.crossDomain=Xt.protocol+"//"+Xt.host!=r.protocol+"//"+r.host}catch(e){v.crossDomain=!0}}if(v.data&&v.processData&&"string"!=typeof v.data&&(v.data=ce.param(v.data,v.traditional)),Vt(Bt,v,t,T),h)return T;for(i in(g=ce.event&&v.global)&&0==ce.active++&&ce.event.trigger("ajaxStart"),v.type=v.type.toUpperCase(),v.hasContent=!Ft.test(v.type),f=v.url.replace(Rt,""),v.hasContent?v.data&&v.processData&&0===(v.contentType||"").indexOf("application/x-www-form-urlencoded")&&(v.data=v.data.replace(Mt,"+")):(o=v.url.slice(f.length),v.data&&(v.processData||"string"==typeof v.data)&&(f+=(At.test(f)?"&":"?")+v.data,delete v.data),!1===v.cache&&(f=f.replace(It,"$1"),o=(At.test(f)?"&":"?")+"_="+jt.guid+++o),v.url=f+o),v.ifModified&&(ce.lastModified[f]&&T.setRequestHeader("If-Modified-Since",ce.lastModified[f]),ce.etag[f]&&T.setRequestHeader("If-None-Match",ce.etag[f])),(v.data&&v.hasContent&&!1!==v.contentType||t.contentType)&&T.setRequestHeader("Content-Type",v.contentType),T.setRequestHeader("Accept",v.dataTypes[0]&&v.accepts[v.dataTypes[0]]?v.accepts[v.dataTypes[0]]+("*"!==v.dataTypes[0]?", "+zt+"; q=0.01":""):v.accepts["*"]),v.headers)T.setRequestHeader(i,v.headers[i]);if(v.beforeSend&&(!1===v.beforeSend.call(y,T,v)||h))return T.abort();if(u="abort",b.add(v.complete),T.done(v.success),T.fail(v.error),c=Vt(_t,v,t,T)){if(T.readyState=1,g&&m.trigger("ajaxSend",[T,v]),h)return T;v.async&&0<v.timeout&&(d=ie.setTimeout(function(){T.abort("timeout")},v.timeout));try{h=!1,c.send(a,l)}catch(e){if(h)throw e;l(-1,e)}}else l(-1,"No Transport");function l(e,t,n,r){var i,o,a,s,u,l=t;h||(h=!0,d&&ie.clearTimeout(d),c=void 0,p=r||"",T.readyState=0<e?4:0,i=200<=e&&e<300||304===e,n&&(s=function(e,t,n){var r,i,o,a,s=e.contents,u=e.dataTypes;while("*"===u[0])u.shift(),void 0===r&&(r=e.mimeType||t.getResponseHeader("Content-Type"));if(r)for(i in s)if(s[i]&&s[i].test(r)){u.unshift(i);break}if(u[0]in n)o=u[0];else{for(i in n){if(!u[0]||e.converters[i+" "+u[0]]){o=i;break}a||(a=i)}o=o||a}if(o)return o!==u[0]&&u.unshift(o),n[o]}(v,T,n)),!i&&-1<ce.inArray("script",v.dataTypes)&&ce.inArray("json",v.dataTypes)<0&&(v.converters["text script"]=function(){}),s=function(e,t,n,r){var i,o,a,s,u,l={},c=e.dataTypes.slice();if(c[1])for(a in e.converters)l[a.toLowerCase()]=e.converters[a];o=c.shift();while(o)if(e.responseFields[o]&&(n[e.responseFields[o]]=t),!u&&r&&e.dataFilter&&(t=e.dataFilter(t,e.dataType)),u=o,o=c.shift())if("*"===o)o=u;else if("*"!==u&&u!==o){if(!(a=l[u+" "+o]||l["* "+o]))for(i in l)if((s=i.split(" "))[1]===o&&(a=l[u+" "+s[0]]||l["* "+s[0]])){!0===a?a=l[i]:!0!==l[i]&&(o=s[0],c.unshift(s[1]));break}if(!0!==a)if(a&&e["throws"])t=a(t);else try{t=a(t)}catch(e){return{state:"parsererror",error:a?e:"No conversion from "+u+" to "+o}}}return{state:"success",data:t}}(v,s,T,i),i?(v.ifModified&&((u=T.getResponseHeader("Last-Modified"))&&(ce.lastModified[f]=u),(u=T.getResponseHeader("etag"))&&(ce.etag[f]=u)),204===e||"HEAD"===v.type?l="nocontent":304===e?l="notmodified":(l=s.state,o=s.data,i=!(a=s.error))):(a=l,!e&&l||(l="error",e<0&&(e=0))),T.status=e,T.statusText=(t||l)+"",i?x.resolveWith(y,[o,l,T]):x.rejectWith(y,[T,l,a]),T.statusCode(w),w=void 0,g&&m.trigger(i?"ajaxSuccess":"ajaxError",[T,v,i?o:a]),b.fireWith(y,[T,l]),g&&(m.trigger("ajaxComplete",[T,v]),--ce.active||ce.event.trigger("ajaxStop")))}return T},getJSON:function(e,t,n){return ce.get(e,t,n,"json")},getScript:function(e,t){return ce.get(e,void 0,t,"script")}}),ce.each(["get","post"],function(e,i){ce[i]=function(e,t,n,r){return v(t)&&(r=r||n,n=t,t=void 0),ce.ajax(ce.extend({url:e,type:i,dataType:r,data:t,success:n},ce.isPlainObject(e)&&e))}}),ce.ajaxPrefilter(function(e){var t;for(t in e.headers)"content-type"===t.toLowerCase()&&(e.contentType=e.headers[t]||"")}),ce._evalUrl=function(e,t,n){return ce.ajax({url:e,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,converters:{"text script":function(){}},dataFilter:function(e){ce.globalEval(e,t,n)}})},ce.fn.extend({wrapAll:function(e){var t;return this[0]&&(v(e)&&(e=e.call(this[0])),t=ce(e,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&t.insertBefore(this[0]),t.map(function(){var e=this;while(e.firstElementChild)e=e.firstElementChild;return e}).append(this)),this},wrapInner:function(n){return v(n)?this.each(function(e){ce(this).wrapInner(n.call(this,e))}):this.each(function(){var e=ce(this),t=e.contents();t.length?t.wrapAll(n):e.append(n)})},wrap:function(t){var n=v(t);return this.each(function(e){ce(this).wrapAll(n?t.call(this,e):t)})},unwrap:function(e){return this.parent(e).not("body").each(function(){ce(this).replaceWith(this.childNodes)}),this}}),ce.expr.pseudos.hidden=function(e){return!ce.expr.pseudos.visible(e)},ce.expr.pseudos.visible=function(e){return!!(e.offsetWidth||e.offsetHeight||e.getClientRects().length)},ce.ajaxSettings.xhr=function(){try{return new ie.XMLHttpRequest}catch(e){}};var Yt={0:200,1223:204},Qt=ce.ajaxSettings.xhr();le.cors=!!Qt&&"withCredentials"in Qt,le.ajax=Qt=!!Qt,ce.ajaxTransport(function(i){var o,a;if(le.cors||Qt&&!i.crossDomain)return{send:function(e,t){var n,r=i.xhr();if(r.open(i.type,i.url,i.async,i.username,i.password),i.xhrFields)for(n in i.xhrFields)r[n]=i.xhrFields[n];for(n in i.mimeType&&r.overrideMimeType&&r.overrideMimeType(i.mimeType),i.crossDomain||e["X-Requested-With"]||(e["X-Requested-With"]="XMLHttpRequest"),e)r.setRequestHeader(n,e[n]);o=function(e){return function(){o&&(o=a=r.onload=r.onerror=r.onabort=r.ontimeout=r.onreadystatechange=null,"abort"===e?r.abort():"error"===e?"number"!=typeof r.status?t(0,"error"):t(r.status,r.statusText):t(Yt[r.status]||r.status,r.statusText,"text"!==(r.responseType||"text")||"string"!=typeof r.responseText?{binary:r.response}:{text:r.responseText},r.getAllResponseHeaders()))}},r.onload=o(),a=r.onerror=r.ontimeout=o("error"),void 0!==r.onabort?r.onabort=a:r.onreadystatechange=function(){4===r.readyState&&ie.setTimeout(function(){o&&a()})},o=o("abort");try{r.send(i.hasContent&&i.data||null)}catch(e){if(o)throw e}},abort:function(){o&&o()}}}),ce.ajaxPrefilter(function(e){e.crossDomain&&(e.contents.script=!1)}),ce.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(e){return ce.globalEval(e),e}}}),ce.ajaxPrefilter("script",function(e){void 0===e.cache&&(e.cache=!1),e.crossDomain&&(e.type="GET")}),ce.ajaxTransport("script",function(n){var r,i;if(n.crossDomain||n.scriptAttrs)return{send:function(e,t){r=ce("<script>").attr(n.scriptAttrs||{}).prop({charset:n.scriptCharset,src:n.url}).on("load error",i=function(e){r.remove(),i=null,e&&t("error"===e.type?404:200,e.type)}),C.head.appendChild(r[0])},abort:function(){i&&i()}}});var Jt,Kt=[],Zt=/(=)\?(?=&|$)|\?\?/;ce.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var e=Kt.pop()||ce.expando+"_"+jt.guid++;return this[e]=!0,e}}),ce.ajaxPrefilter("json jsonp",function(e,t,n){var r,i,o,a=!1!==e.jsonp&&(Zt.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Zt.test(e.data)&&"data");if(a||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=v(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(Zt,"$1"+r):!1!==e.jsonp&&(e.url+=(At.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return o||ce.error(r+" was not called"),o[0]},e.dataTypes[0]="json",i=ie[r],ie[r]=function(){o=arguments},n.always(function(){void 0===i?ce(ie).removeProp(r):ie[r]=i,e[r]&&(e.jsonpCallback=t.jsonpCallback,Kt.push(r)),o&&v(i)&&i(o[0]),o=i=void 0}),"script"}),le.createHTMLDocument=((Jt=C.implementation.createHTMLDocument("").body).innerHTML="<form></form><form></form>",2===Jt.childNodes.length),ce.parseHTML=function(e,t,n){return"string"!=typeof e?[]:("boolean"==typeof t&&(n=t,t=!1),t||(le.createHTMLDocument?((r=(t=C.implementation.createHTMLDocument("")).createElement("base")).href=C.location.href,t.head.appendChild(r)):t=C),o=!n&&[],(i=w.exec(e))?[t.createElement(i[1])]:(i=Ae([e],t,o),o&&o.length&&ce(o).remove(),ce.merge([],i.childNodes)));var r,i,o},ce.fn.load=function(e,t,n){var r,i,o,a=this,s=e.indexOf(" ");return-1<s&&(r=Tt(e.slice(s)),e=e.slice(0,s)),v(t)?(n=t,t=void 0):t&&"object"==typeof t&&(i="POST"),0<a.length&&ce.ajax({url:e,type:i||"GET",dataType:"html",data:t}).done(function(e){o=arguments,a.html(r?ce("<div>").append(ce.parseHTML(e)).find(r):e)}).always(n&&function(e,t){a.each(function(){n.apply(this,o||[e.responseText,t,e])})}),this},ce.expr.pseudos.animated=function(t){return ce.grep(ce.timers,function(e){return t===e.elem}).length},ce.offset={setOffset:function(e,t,n){var r,i,o,a,s,u,l=ce.css(e,"position"),c=ce(e),f={};"static"===l&&(e.style.position="relative"),s=c.offset(),o=ce.css(e,"top"),u=ce.css(e,"left"),("absolute"===l||"fixed"===l)&&-1<(o+u).indexOf("auto")?(a=(r=c.position()).top,i=r.left):(a=parseFloat(o)||0,i=parseFloat(u)||0),v(t)&&(t=t.call(e,n,ce.extend({},s))),null!=t.top&&(f.top=t.top-s.top+a),null!=t.left&&(f.left=t.left-s.left+i),"using"in t?t.using.call(e,f):c.css(f)}},ce.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){ce.offset.setOffset(this,t,e)});var e,n,r=this[0];return r?r.getClientRects().length?(e=r.getBoundingClientRect(),n=r.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var e,t,n,r=this[0],i={top:0,left:0};if("fixed"===ce.css(r,"position"))t=r.getBoundingClientRect();else{t=this.offset(),n=r.ownerDocument,e=r.offsetParent||n.documentElement;while(e&&(e===n.body||e===n.documentElement)&&"static"===ce.css(e,"position"))e=e.parentNode;e&&e!==r&&1===e.nodeType&&((i=ce(e).offset()).top+=ce.css(e,"borderTopWidth",!0),i.left+=ce.css(e,"borderLeftWidth",!0))}return{top:t.top-i.top-ce.css(r,"marginTop",!0),left:t.left-i.left-ce.css(r,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){var e=this.offsetParent;while(e&&"static"===ce.css(e,"position"))e=e.offsetParent;return e||J})}}),ce.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,i){var o="pageYOffset"===i;ce.fn[t]=function(e){return M(this,function(e,t,n){var r;if(y(e)?r=e:9===e.nodeType&&(r=e.defaultView),void 0===n)return r?r[i]:e[t];r?r.scrollTo(o?r.pageXOffset:n,o?n:r.pageYOffset):e[t]=n},t,e,arguments.length)}}),ce.each(["top","left"],function(e,n){ce.cssHooks[n]=Ye(le.pixelPosition,function(e,t){if(t)return t=Ge(e,n),_e.test(t)?ce(e).position()[n]+"px":t})}),ce.each({Height:"height",Width:"width"},function(a,s){ce.each({padding:"inner"+a,content:s,"":"outer"+a},function(r,o){ce.fn[o]=function(e,t){var n=arguments.length&&(r||"boolean"!=typeof e),i=r||(!0===e||!0===t?"margin":"border");return M(this,function(e,t,n){var r;return y(e)?0===o.indexOf("outer")?e["inner"+a]:e.document.documentElement["client"+a]:9===e.nodeType?(r=e.documentElement,Math.max(e.body["scroll"+a],r["scroll"+a],e.body["offset"+a],r["offset"+a],r["client"+a])):void 0===n?ce.css(e,t,i):ce.style(e,t,n,i)},s,n?e:void 0,n)}})}),ce.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(e,t){ce.fn[t]=function(e){return this.on(t,e)}}),ce.fn.extend({bind:function(e,t,n){return this.on(e,null,t,n)},unbind:function(e,t){return this.off(e,null,t)},delegate:function(e,t,n,r){return this.on(t,e,n,r)},undelegate:function(e,t,n){return 1===arguments.length?this.off(e,"**"):this.off(t,e||"**",n)},hover:function(e,t){return this.on("mouseenter",e).on("mouseleave",t||e)}}),ce.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(e,n){ce.fn[n]=function(e,t){return 0<arguments.length?this.on(n,null,e,t):this.trigger(n)}});var en=/^[\s\uFEFF\xA0]+|([^\s\uFEFF\xA0])[\s\uFEFF\xA0]+$/g;ce.proxy=function(e,t){var n,r,i;if("string"==typeof t&&(n=e[t],t=e,e=n),v(e))return r=ae.call(arguments,2),(i=function(){return e.apply(t||this,r.concat(ae.call(arguments)))}).guid=e.guid=e.guid||ce.guid++,i},ce.holdReady=function(e){e?ce.readyWait++:ce.ready(!0)},ce.isArray=Array.isArray,ce.parseJSON=JSON.parse,ce.nodeName=fe,ce.isFunction=v,ce.isWindow=y,ce.camelCase=F,ce.type=x,ce.now=Date.now,ce.isNumeric=function(e){var t=ce.type(e);return("number"===t||"string"===t)&&!isNaN(e-parseFloat(e))},ce.trim=function(e){return null==e?"":(e+"").replace(en,"$1")},"function"==typeof define&&define.amd&&define("jquery",[],function(){return ce});var tn=ie.jQuery,nn=ie.$;return ce.noConflict=function(e){return ie.$===ce&&(ie.$=nn),e&&ie.jQuery===ce&&(ie.jQuery=tn),ce},"undefined"==typeof e&&(ie.jQuery=ie.$=ce),ce});
var mg$ = $.noConflict(true);
if (hostJquery) {
	jQuery = hostJquery;
	$ = host$;
}
!function(t){var i=t(window);t.fn.visible=function(t,e,o){if(!(this.length<1)){var r=this.length>1?this.eq(0):this,n=r.get(0),f=i.width(),h=i.height(),o=o?o:"both",l=e===!0?n.offsetWidth*n.offsetHeight:!0;if("function"==typeof n.getBoundingClientRect){var g=n.getBoundingClientRect(),u=g.top>=0&&g.top<h,s=g.bottom>0&&g.bottom<=h,c=g.left>=0&&g.left<f,a=g.right>0&&g.right<=f,v=t?u||s:u&&s,b=t?c||a:c&&a;if("both"===o)return l&&v&&b;if("vertical"===o)return l&&v;if("horizontal"===o)return l&&b}else{var d=i.scrollTop(),p=d+h,w=i.scrollLeft(),m=w+f,y=r.offset(),z=y.top,B=z+r.height(),C=y.left,R=C+r.width(),j=t===!0?B:z,q=t===!0?z:B,H=t===!0?R:C,L=t===!0?C:R;if("both"===o)return!!l&&p>=q&&j>=d&&m>=L&&H>=w;if("vertical"===o)return!!l&&p>=q&&j>=d;if("horizontal"===o)return!!l&&m>=L&&H>=w}}}}(mg$);

if (GmCXt === undefined) var GmCXt = {};

if (GmCXt.requestHandler === undefined) GmCXt.requestHandler = {};

var GuideMeXt = GmCXt;
var senderTabId;
GmCXt.stopVideoUpload = false;
GmCXt.isPageReloaded = false;

GmCXt.ELEMENT_FOUND = 'elementFound';
GmCXt.ELEMENT_NOT_FOUND = 'elementNotFound';
GmCXt.ELEMENT_PRECISION_MEDIUM = 'Medium';
GmCXt.DOM_CRITERIA_DEFAULT = 'default';
GmCXt.DOM_CRITERIA_TEXT = 'identify_by_text';
GmCXt.DOM_CRITERIA_JQUERY = 'jquery_selector';
GmCXt.DOM_CRITERIA_CUSTOM = 'custom_selector';
GmCXt.ANALYTICS_EVENT_CHAIN_ID = '';
GmCXt.INSIGHTS_EVENT_CHAIN_ID = '';
GmCXt.STEP_TEXT_SLIDE_TYPE = 'textSlide';
GmCXt.isSFDCApp = false;
GmCXt.ONBOARDING_SINGLE_SCREEN = 'single_screen';
GmCXt.ONBOARDING_SIDE_BY = 'side_by_side';
GmCXt.tooltipValidRulesArr = ['value', 'message', 'alignment', 'selectionMode', 'customPosition'];
GmCXt.validImageFiles = ['png', 'jpg', 'jpeg', 'gif'];
GmCXt.unknownError = 'Unknown error';
GmCXt.accessibility = false;
GmCXt.sourceDesktop = 'desktop';
GmCXt.videoFileExtns = ['.webm', '.mpg', '.mp2', '.mpeg', '.mpe', '.mpv', '.ogg', '.mp4', '.m4p', '.m4v', '.avi', '.wmv', '.mov', '.qt', '.flv', '.swf'];
GmCXt.notiTimeOpts = ["1", "2", "3", "4", "5", "7", "10", "12", "15", "18", "20", "24", "36", "48"];
GmCXt.defaultWidgetZindex = '2147483646';

/**
 * Note that following constant values must match to the values of
 *  $scope.playVideoTour = 'video';
 *  $scope.playSlideshow = 'slideshow';
 * defined in angular app
 */
GmCXt.TOUR_PLAYER_SLIDESHOW = 'slideshow';
GmCXt.TOUR_PLAYER_VIDEO = 'video';
GmCXt.TOUR_PLAYER_GIPHY = 'giphy';

GmCXt.ruleTextLimit = 200;

GmCXt.failedImages = [];
GmCXt.creatorInterval = null;
GmCXt.playedTour = [];
GmCXt.isMediaPlayerOn = false;

// For test Automation
GmCXt.testResultsFromCreator = {};

GmCXt.showPlayer = false;
GmCXt.isMiniPlayer = false;

GmCXt.keyInputGuides = [];

GmCXt.feedbackImgSrc = '';

if (!GmCXt.domSelectorTracker) {
    GmCXt.domSelectorTracker = {};
}

if (!Array.prototype.find) {
    Object.defineProperty(Array.prototype, 'find', {
        value: function(predicate) {
            // 1. Let O be ? ToObject(this value).
            if (this == null) {
                throw new TypeError('"this" is null or not defined');
            }

            var o = Object(this);

            // 2. Let len be ? ToLength(? Get(O, "length")).
            var len = o.length >>> 0;

            // 3. If IsCallable(predicate) is false, throw a TypeError exception.
            if (typeof predicate !== 'function') {
                throw new TypeError('predicate must be a function');
            }

            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.
            var thisArg = arguments[1];

            // 5. Let k be 0.
            var k = 0;

            // 6. Repeat, while k < len
            while (k < len) {
                // a. Let Pk be ! ToString(k).
                // b. Let kValue be ? Get(O, Pk).
                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).
                // d. If testResult is true, return kValue.
                var kValue = o[k];
                if (predicate.call(thisArg, kValue, k, o)) {
                    return kValue;
                }
                // e. Increase k by 1.
                k++;
            }

            // 7. Return undefined.
            return undefined;
        }
    });
}

if (Element.prototype.getAttributeNames == undefined) {
    Element.prototype.getAttributeNames = function() {
        var attributes = this.attributes;
        var length = attributes.length;
        var result = new Array(length);
        for (var i = 0; i < length; i++) {
            result[i] = attributes[i].name;
        }
        return result;
    };
}

if (typeof Object.assign != 'function') {
    Object.assign = function(target) {
        'use strict';
        if (target == null) {
            throw new TypeError('Cannot convert undefined or null to object');
        }

        target = Object(target);
        for (var index = 1; index < arguments.length; index++) {
            var source = arguments[index];
            if (source != null) {
                for (var key in source) {
                    if (Object.prototype.hasOwnProperty.call(source, key)) {
                        target[key] = source[key];
                    }
                }
            }
        }
        return target;
    };
}

// Rules Engine
GmCXt.EXISTS = 'Exists';
GmCXt.NOT_EXISTS = 'Not Exists';
GmCXt.EQUALS = 'Equals';
GmCXt.NOT_EQUAL = 'Not Equals';
GmCXt.TXT_EQUALS = 'Text Is';
GmCXt.NOT_TXT = 'Text Is Not';
GmCXt.CONTAINS = 'Contains';
GmCXt.NOT_CONTAINS = 'Does Not Contain';
GmCXt.STARTS_WITH = 'Starts With';
GmCXt.ENDS_WITH = 'Ends With';
GmCXt.GREAT_THAN = 'Greater Than';
GmCXt.LESS_THAN = 'Less Than';
GmCXt.TXT_MATCHES = 'Text Matches';
GmCXt.TXT_CONTAINS = 'Text Contains';
GmCXt.ATTRIBUTES = 'Has Attribute(s)';
GmCXt.NOT_ATTRIBUTES = 'Excludes Attribute(s)';
GmCXt.CLASSES = 'Has CSS Class(s)';
GmCXt.NOT_CLASSES = 'Excludes CSS Class(s)';
GmCXt.SELECTED = 'Is Selected';
GmCXt.NOT_SELECTED = 'Is Not Selected';
GmCXt.CHECKED = 'Checked';
GmCXt.NOT_CHECKED = 'Unchecked';
GmCXt.DISABLED = 'Is Disabled';
GmCXt.NOT_DISABLED = 'Not Disabled';
GmCXt.DAY_OF_WEEK = 'Day of the Week';
GmCXt.FIX_TIME = 'Fixed Time in the Day';
GmCXt.DATE_RANGE = 'Date Range';
GmCXt.IS_VALID = 'Get Validity';
GmCXt.VISIBLE = 'Visible';
GmCXt.NOT_VISIBLE = 'Not Visible';
GmCXt.iframePorts = GmCXt.iframePorts ?? {};
GmCXt.iframeEls = {};
GmCXt.msgChannel = new MessageChannel();
GmCXt.startMsgChannel = function(initiator) {
    window.top.postMessage(initiator, '*', [GmCXt.msgChannel.port2]);
};
GmCXt.globalMsgData = {};

GmCXt.getHostnameFromUrl = function(url) {
    if (url) {
        if (url.includes('https://')) {
            url = url.split('https://')[1];
        }
        if (url.includes('http://')) {
            url = url.split('http://')[1];
        }
        if (url.includes('/')) {
            url = url.split('/')[0];
        }
    }

    return url;
};

GmCXt.updateStepRequest = function(data) {
    if (!data) return;
    const keysToUpdate = [
        "step_video_url",
        "image_url",
        "thumbnail_url",
        "screen_url",
        "step_audio",
        "step_thumb",
        "step_video_thumbnail",
        "videoUrl"
    ];

    keysToUpdate.forEach((key) => {
        if (data[key]) {
            data[key] = GmCXt.getPathnameFromUrl(data[key]);
        }
    });
};

GmCXt.getPathnameFromUrl = function(url) {
    if (url.startsWith('http://') || url.startsWith('https://')) {
        return new URL(url).pathname.replace(/^\/+/, "");
    }
    return url;
}

GmCXt.getStrippedPath = function(elem, type) {
    let originalSrc = ""
    if (type === "image") {
        originalSrc = elem.src;
    } else if (type === "video") {
        originalSrc = elem.querySelectorAll('source')[0].src;
    } else {
        originalSrc = elem;
    }

    let hostname = GmCXt.getHostnameFromUrl(originalSrc);


    if (GmCXt.isCurrentHost(hostname) && originalSrc.indexOf(GmCXt.organization.bucket) !== -1) {
        originalSrc = originalSrc.replace(GmCXt.urlParts.fullUrl, "");
        originalSrc = originalSrc.split("/").map(word => {
            return location.href.toLowerCase().includes(word.toLowerCase()) ? "" : word;
        }).filter(Boolean).join("/");
    }

    let hasProtocol = originalSrc.startsWith("http://") || originalSrc.startsWith("https://");

    if (hasProtocol && GmCXt.getHostnameFromUrl(originalSrc) !== GmCXt.getHostnameFromUrl(GmCXt.conf.cdn)) {
        if (type === "image") {
            elem.src = originalSrc;
        } else if (type === "video") {
            elem.querySelectorAll('source')[0].src = originalSrc
        } else {
            elem = originalSrc;
        }
    } else {
        if (originalSrc) {
            let newSrc = GmCXt.getPathnameFromUrl(originalSrc) || originalSrc; // Use originalSrc if URL is already relative
            if (type === "image") {
                elem.src = newSrc;
            } else if (type === "video") {
                elem.querySelectorAll('source')[0].src = newSrc;
            } else {
                elem = newSrc;
            }
        }
    }

    return elem;
}

GmCXt.stripAssetSrcToPathname = function(htmlString) {
    if (!htmlString) {
        return '';
    }
    let isHtml = /<\/?[a-z][\s\S]*>/i.test(htmlString);

    if (!isHtml) {
        let originalSrc = GmCXt.getStrippedPath(htmlString);
        return originalSrc;
    }

    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, 'text/html');

    let images = doc.querySelectorAll('img');
    let video = doc.querySelectorAll('video');

    images.forEach(img => {
        img = GmCXt.getStrippedPath(img, "image");
    });

    video.forEach(vLink => {
        vLink = GmCXt.getStrippedPath(vLink, "video");
    });

    return doc.body.innerHTML;
};



GmCXt.restoreAssetSrc = function(inputString, prefix = "", suffix = "") {
    // Check if the input contains HTML tags
    let isHtml = /<\/?[a-z][\s\S]*>/i.test(inputString);

    if (isHtml) {
        return GmCXt.handleHtmlAssets(inputString, prefix, suffix);
    } else {
        return GmCXt.handlePlainTextAssets(inputString, GmCXt.conf.cdn, "");
    }
};

GmCXt.getRestorePath = function(elem, type) {
    let originalSrc = ""
    if (type === "image") {
        originalSrc = elem.src;
    } else if (type === "video") {
        originalSrc = elem.querySelectorAll('source')[0].src;
    } 

    let hostname = GmCXt.getHostnameFromUrl(originalSrc);


    if (GmCXt.isCurrentHost(hostname) && originalSrc.indexOf(GmCXt.organization.bucket) !== -1) {
        originalSrc = originalSrc.replace(GmCXt.urlParts.fullUrl, "");
        originalSrc = originalSrc.split("/").map(word => {
            return location.href.toLowerCase().includes(word.toLowerCase()) ? "" : word;
        }).filter(Boolean).join("/");
    }

    let hasProtocol = originalSrc.startsWith("http://") || originalSrc.startsWith("https://");

    if (hasProtocol && GmCXt.getHostnameFromUrl(originalSrc) !== GmCXt.getHostnameFromUrl(GmCXt.conf.cdn)) {
        if (type === "image") {
            elem.src = GmCXt.updateSrcAttribute(originalSrc, "", "");
        } else if (type === "video") {
            elem.querySelectorAll('source')[0].src = GmCXt.updateSrcAttribute(originalSrc, "", "");
        } 
    } else {
        if (originalSrc) {
            let newSrc = GmCXt.updateInternalSrcAttribute(originalSrc);
            if (type === "image") {
                elem.src = newSrc;
            } else if (type === "video") {
                elem.querySelectorAll('source')[0].src = newSrc;
            }
        }
    }

    return elem;
}

GmCXt.handleHtmlAssets = function(htmlString, prefix, suffix) {
    const parser = new DOMParser();
    const doc = parser.parseFromString(htmlString, 'text/html');

    let images = doc.querySelectorAll('img');
    let video = doc.querySelectorAll('video');

    images.forEach(img => {
        img = GmCXt.getRestorePath(img, "image");
    });

    video.forEach(vLink => {
        vLink = GmCXt.getRestorePath(vLink, "video");
    });

    return doc.body.innerHTML;
};

GmCXt.handlePlainTextAssets = function(textString, prefix, suffix) {
    if (!textString || textString.trim() === "") return textString;
    let cleanedPath = textString.replace(/^\/+/, ''); // Remove leading slashes
    var hostname = GmCXt.getHostnameFromUrl(textString);

    let hasProtocol = cleanedPath.startsWith("http://") || cleanedPath.startsWith("https://");

    if (!hasProtocol || hostname === GmCXt.getHostnameFromUrl(GmCXt.conf.cdn)) {
        return GmCXt.updateInternalSrcAttribute(cleanedPath);
    } else {
        return GmCXt.updateSrcAttribute(cleanedPath, prefix, suffix);
    }
};

GmCXt.updateInternalSrcAttribute = function(originalSrc) {
    if (originalSrc.includes(GmCXt.user.cdn_signature.split("=")[0])) {
        originalSrc = originalSrc.split(GmCXt.user.cdn_signature.split("=")[0])[0];
    }
    return GmCXt.updateSrcAttribute(originalSrc, GmCXt.conf.cdn, GmCXt.user.cdn_signature);
}

GmCXt.updateSrcAttribute = function(originalSrc, prefix, suffix) {
    let hasProtocol = originalSrc.startsWith("http://") || originalSrc.startsWith("https://");
    return hasProtocol ? originalSrc + suffix : prefix + originalSrc + suffix;
};

GmCXt.getUrlScheme = function() {
    var scheme = "http";
    var url = GmCXt._location().href;

    if (url.indexOf('https://') !== -1) {
        scheme = "https";
    }

    return scheme;
};

/**
 * @function filter URL scheme
 */
GmCXt.filterUrlScheme = function(url) {
    if (url.length) {
        if (url[url.length - 1] === "#") {
            url = url.substr(0, url.length - 1);
        }
        if (url[url.length - 1] === "/") {
            url = url.substr(0, url.length - 1);
        }
    }

    if (url.indexOf('https://') !== -1) {
        url = url.split('https://')[1];
    }
    if (url.indexOf('http://') !== -1) {
        url = url.split('http://')[1];
    }

    return url;
};

GmCXt.sendMessageToBackgroundService = function(m, cb) {
    if (m.data) {
        m.mgdata = m.data;
        delete m.data;
    }
    if (m && GmCXt.isExtension()) {
        if (GmCXt.browserApp === 'chrome') {
            chrome.runtime.sendMessage(m, cb);
        } else if (GmCXt.browserApp === 'Safari') {
            safari.extension.dispatchMessage(m.action, m.mgdata);
            if (cb) {
                cb(1);
            }
        } else if (typeof browser !== 'undefined') {
            browser.runtime.sendMessage(m, cb);
        }
    } else if (cb) {
        cb(1);
    }
};

GmCXt.loader = function() {
    return GmCXt.getBasePath('common/img/g_new_loader.gif');
};

GmCXt.decodeVersion = function(v) {

    if (!v) return 0;

    var num = [0, 0, 0];
    v = v.split('.');
    num[0] = v[0];
    num[1] = doubleDigit(v[1]);
    num[2] = doubleDigit(v[2]);
    if (v[3]) {
        num.push(doubleDigit(v[3]));
    } else {
        num.push("00");
    }

    return parseInt(num.join(''));

    function doubleDigit(num) {
        if (num && num <= 9 && num.length === 1) {
            num = "0" + num.slice(-2);
        }
        return num;
    }
};

GmCXt.arrayMerge = function(array1, array2) {
    return array1.concat(array2.filter(function(item) {
        return array1.indexOf(item) < 0;
    }));
};

GmCXt.isNotNull = function(val) {
    if (val != null) return true;
    else return false;
};

GmCXt.isNumeric = function(val) {
    if (val !== undefined && mg$.isNumeric(val)) return true;
    else return false;
};

GmCXt.isTagged = function(el) {
    var val = false;
    if (el) {
        var className = el.attr('class');
        var parentClassName = el.parent().attr('class');

        if (className && className.indexOf('mg-ft-tag') !== -1)
            val = className;
        else if (parentClassName && parentClassName.indexOf('mg-ft-tag') !== -1)
            val = parentClassName;
    }

    return val;
};

GmCXt.getTagStepAndTourId = function(classStr) {
    var classes = classStr.split(' ');
    for (var i = 0; i < classes.length; i++) {
        if (classes[i].indexOf('mgftag') !== -1) {
            var ids = classes[i].split('-');
            return {
                step_id: ids[1],
                tour_id: ids[2],
                group_id: ids[3].replaceAll(':', "-")
            };
        }
    }
};

GmCXt.tagClassName = function(step) {
    return 'mgftag-' + step.step_id + '-' + step.tour_id + '-' + step.step_settings.groupId.replaceAll('-', ":");
};

GmCXt.isGmElement = function(el) {
    var isGmElement = false;

    isGmElement = (
        el &&
        (
            el.parent('wmgPlayerJSTest_').length ||
            el.parent('.mgPlayerJSTest_beacon-icon').length ||
            el.parent('.mgPlayerJSTest_smarttip-icon').length ||
            el.parents('wmgPlayerJSTest_').length
        )
    );

    if (!isGmElement && el) {
        var className = el.attr('class');
        var parentClassName = el.parent().attr('class');

        if ((className && className.indexOf('mgPlayerJSTest_') !== -1) || (parentClassName && parentClassName.indexOf('mgPlayerJSTest_') !== -1))
            isGmElement = true;
    }

    return isGmElement;
};

GmCXt.onImageLoadError = function(obj) {

    var isCDNCheck = obj.hasClass('mgPlayerJSTest_cdnChecked');
    var cn, isMyGuideImage, isSrcEmpty, src;

    var updateSign = function() {
        if (isMyGuideImage && !isSrcEmpty) {

            GmCXt.failedImages.push(obj);

            if (window.self === window.top) {
                GmCXt.getCdnSignature(true);
            } else {
                var m = {
                    action: 'mgPlayerJSTest_action:get_cdn_signature',
                };
                GmCXt.sendToParentWindow(m);
            }
        } else if (obj.hasClass('mgPlayerJSTest_dap-card-image')) {
            obj.attr('src', GmCXt.conf.staticContentPath + 'technology.jpg');
        }
    };

    if (obj && obj.length && (obj[0].tagName === 'IMG' || GmCXt.isGmElement(obj)) && !isCDNCheck) {

        cn = 'mgPlayerJSTest_custom-image'; // Never do this 'gss'
        isMyGuideImage = obj.hasClass(cn);
        if (GmCXt.isGmElement(obj) && obj[0].tagName === 'SOURCE') {
            isMyGuideImage = true;
        }

        isSrcEmpty = (obj.attr('src') && obj.attr('src').length) ? false : true;

        src = obj.attr('src');

        obj.addClass('mgPlayerJSTest_cdnChecked');
        updateSign();
    }
};

GmCXt.isAutomationStep = function(step) {
    return step && (step.step_type !== GmCXt.STEP_TYPE_TAG && (step.step_type === GmCXt.STEP_TYPE_AUTOMATION ||
        (step.step_settings.creation_type && step.step_settings.creation_type === GmCXt.STEP_TYPE_AUTOMATION)));
};

GmCXt.currentTimeStamp = function() {
    return Math.floor((new Date()).getTime() / 1000);
};

GmCXt.inArray = function(id, array) {
    if (mg$.inArray(parseInt(id), array) !== -1) return true;
    else return false;
};

GmCXt.removeDuplicates = function(iArr) {
    var oArr = [];
    mg$.each(iArr, function(i, el) {
        if (mg$.inArray(el, oArr) === -1) oArr.push(el);
    });
    return oArr;
};

GmCXt.convertToInt = function(arr) {
    return arr.map(function(v) {
        return parseInt(v, 10);
    });
};

GmCXt.migrateMatchAlgoSetting = function(de) {

    var c = mg$.extend(true, {}, de.criteria);
    var m = mg$.extend(true, {}, de.meta);
    var tempde = mg$.extend(true, {}, de);

    if ((c.precision_type === GmCXt.DOM_CRITERIA_JQUERY && c.jquery_selector_builder) ||
        (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM && !c.jquery_selector)) {
        // Old jQuery selector builder (later renamed as custom selector)
        c.jquery_selector = null;
        delete c.jquery_selector_builder;
        c.precision_type = GmCXt.DOM_CRITERIA_DEFAULT;
    }

    if (c.precision_level === "High" && (GmCXt.decodeVersion(tempde.version) < 2020041502)) {
        c.precision_level = "Medium";
    }

    if (c.precision_type === GmCXt.DOM_CRITERIA_JQUERY) {
        c.precision_type = GmCXt.DOM_CRITERIA_CUSTOM;
        var selectorArray = [c.jquery_selector];
        c.matchAttributes = Object.keys(GmCXt.dom.getAttributes(selectorArray)[0]);
        c.matchAttributes.splice(c.matchAttributes.indexOf('tagName'), 1);
    }

    if (c.precision_type === GmCXt.DOM_CRITERIA_TEXT)
        c.precision_type = GmCXt.DOM_CRITERIA_DEFAULT;

    if (!GmCXt.isEmpty(tempde.selector)) {
        for (var key in tempde.selector) {
            if (GmCXt.isEmpty(tempde.selector[key]))
                delete tempde.selector[key];
        }

        if (tempde.selector.hasOwnProperty('css')) {
            delete tempde.selector.css;
        }

        if (m.attributes && m.attributes.hasOwnProperty('js')) {
            m.selectorAttributes = mg$.extend(true, {}, m.attributes);
            for (key in tempde.selector) {
                if (!m.selectorAttributes.hasOwnProperty(key)) {
                    m.selectorAttributes[key] = [];
                }
            }
            delete m.attributes;
        }

        if (!m.hasOwnProperty('executionPriority')) {
            if (GmCXt.isEmpty(m.selectorAttributes)) {
                m.selectorAttributes = GmCXt.getAttributesFromSelector(tempde.selector);
            }
            m.executionPriority = GmCXt.getSelectorExecutionPriority(m.selectorAttributes);
        }
    } else {
        m.executionPriority = ['text'];
    }

    tempde.criteria = c;
    tempde.meta = m;

    return tempde;
};

GmCXt.getAttributesFromSelector = function(sel) {
    var matchedAttr = {};
    for (var key in sel) {
        matchedAttr[key] = [];

        var selectorAttr = GmCXt.dom.getMatchAttributes(key);
        var jsSelector = sel[key];

        for (var i = 0; i < selectorAttr.length; i++) {
            var attr = selectorAttr[i];

            for (var j = 0; j < jsSelector.length; j++) {

                var present = false;
                if (jsSelector[j].includes("[" + attr + "=")) {
                    present = true;
                } else if (attr === 'text') {
                    if (jsSelector[j].includes("[placeholder=") || jsSelector[j].includes("[value="))
                        present = true;
                }

                if (present) {
                    matchedAttr[key].push(attr);
                    break;
                }
            }
        }
    }
    return matchedAttr;
};

GmCXt.getSelectorExecutionPriority = function(selectorAttributes) {
    var priority = Object.keys(selectorAttributes);
    priority.push('text');

    function getNumberOfAttrs(s) {
        if (s === 'text')
            return 3; // Prioritize text selector above jsSelectors with attribute length < 3
        else if (s === 'custom')
            return 0;
        else
            return selectorAttributes[s].length;
    }

    priority = priority.sort(function(a, b) {
        l1 = getNumberOfAttrs(a);
        l2 = getNumberOfAttrs(b);

        // Sort in desc order of length
        if (l2 > l1) return 1;
        if (l2 < l1) return -1;

        return 0;
    });

    return priority;
};

GmCXt.containBranchStep = function(tour) {
    if (!tour || (tour && !GmCXt.isDefined(tour.steps))) return false;

    var steps = mg$.extend({}, tour.steps);
    for (var ind in steps) {
        var step = steps[ind];
        if (GmCXt.checkForBranchVariationSteps(step)) {
            return true;
        }
    }
    return false;
};

GmCXt.getRuleText = function(el) {
    var elValue = '';
    var elTagName = el.tagName.toLowerCase();

    if (elTagName === 'select') {
        elValue = el.options[el.selectedIndex].textContent;
    } else if (elTagName === 'input' && el.value) {
        elValue = el.value;
    } else {
        elValue = el.textContent.trim();
    }
    return elValue;
};

GmCXt.getElementText = function(el) {

    var elValue = GmCXt.getRuleText(el);

    if (!elValue) {

        var value = el.getAttribute('value');
        var placeholder = el.getAttribute('placeholder');
        var name = el.getAttribute('name');

        if ((el.tagName === 'INPUT' || el.tagName === 'BUTTON') &&
            (el.type === 'submit' || el.type === 'button') &&
            value
        ) {
            elValue = value;
        }

        if (!elValue && el.tagName === 'INPUT' && placeholder) {
            elValue = placeholder;
        }
        if (!elValue && el.tagName === 'INPUT' && name) {
            elValue = name;
        }
    }

    return elValue.trim();
};

GmCXt.getOrgLevelBrandLogoSetting = function() {
    return GmCXt.getStepSettings().hideBrandLogo;
};

GmCXt.convertType = function(value) {
    var v = Number(value);
    return !isNaN(v) ? v :
        value === "undefined" ? undefined :
        value === "null" ? null :
        value === "true" ? true :
        value === "false" ? false :
        value;
};

GmCXt.isMyGuideIframe = function(url) {
    if (url.indexOf('side_panel/sidepanel_1749722599831.html') !== -1) {
        return true;
    } else
        return false;
};

GmCXt.getCurrentStepIndex = function(t, step_id) {
    var index = -1;
    if (t && step_id) {
        t.steps.forEach(function(step, i) {
            if (step.step_id === step_id) {
                index = i;
            }
        });
    } else {
        GmCXt.playerI.tour.steps.forEach(function(step, i) {
            if (step.step_id == GmCXt.playerI.currentStepId) {
                index = i;
            }
        });
    }
    return index;
};

GmCXt.isOne = function(val) {
    if (val && val.length === 1) return true;
    else return false;
};

GmCXt.isZero = function(val) {
    if (val && val.length === 0) return true;
    else return false;
};

GmCXt.isMoreThanOne = function(val) {
    if (val && val.length > 1) return true;
    else return false;
};

GmCXt.isMany = function(val) {
    if (val && val.length > 0) return true;
    else return false;
};

GmCXt.reverse = function(s) {
    return mg$.extend([], s).reverse();
};

GmCXt.getValidationTypes = function(val) {
    return {
        required: val,
        numeric: val,
        date: val,
        time: val,
        email: val,
        url: val,
        phone: val,
        charCount: val,
        bulletCount: val,
        regex: val
    };
};

GmCXt.getDiableEleDefaultVal = function() {
    return {
        opacity: '0.5',
        color: '#C0C0C0'
    };
};

GmCXt.isFalse = function(val) {
    if (val === 0 || val === 'false' || val === false || val === '0' || val === '' || val === "undefined" || val === undefined)
        return true;
    else
        return false;
};

GmCXt.validateText = function(str) {
    str = str.trim();
    return str != '' && str.length > 0 && str.length < 100;
};

GmCXt.getStepInfoLog = function(step) {
    var title = step.step_title;
    if (step.step_type === 'smartTip' && step.step_settings.smartTip) {
        title = step.step_settings.smartTip.guidanceMessage;
        title = GmCXt.restoreAssetSrc(title);
    }

    title = mg$('<span />').html(GmCXt.updateOrgAndAddSignature(title)).text().trim();
    if (title.length > 50) {
        title = title.substr(0, 50);
    }
    return "[" + step.step_type.toUpperCase() + "] [" + step.step_id + "] " + title;
};

GmCXt.isAnonymousUser = function() {
    if (GmCXt.user && !GmCXt.isEmpty(GmCXt.organization)) {
        var anonymous = 'anonymous-' + GmCXt.organization.organization_id;
        var userEmail = GmCXt.user.user_email;

        if ((userEmail.indexOf(anonymous) !== -1 || userEmail === 'End+user@edcast.com') && !GmCXt.user.signin_user_email)
            return true;
        else
            return false;
    } else
        return false;
};

GmCXt.getAttributePriority = function(attr, el) {
    switch (attr) {
        case 'id':
            return 1;
        case 'class':
            return 2;
        case 'text':
        case 'name':
        case 'title':
        case 'placeholder':
            return 3;
        default: {
            if (attr === 'value' && el.tagName !== 'INPUT')
                return 3;

            if (attr.includes('Id') || attr.toLowerCase().indexOf('id') === 0 ||
                attr.toLowerCase().includes('_id') || attr.toLowerCase().includes('-id')) {
                return 1;
            }

            if (attr.indexOf('aria') === 0)
                return 4;

            if (typeof el.getAttribute(attr) === 'boolean')
                return 5;

            return 6;
        }
    }
};

GmCXt.skipMyGuideAttributes = function(attr) {
    attr = attr.filter(function(attr) {
        return (attr.indexOf('gm') !== 0);
    });
    return attr;
};

GmCXt.skipSpecialCharValues = function(attrList, he) {

    var textAttr = ['text', 'placeholder', 'value', 'title', 'name'];

    attrList = attrList.filter(function(attr) {
        if (attr === 'text') return true;

        value = he.getAttribute(attr);
        if (!GmCXt.isEmpty(value)) {
            if (textAttr.includes(attr)) return true;

            if (!value.match(/[[\]{}():*+?.,\\^$|#]/g)) return true;
        }

        return false;
    });

    return attrList;
};

GmCXt.skipMyGuideClasses = function(attrList, meta) {
    if (meta && meta.elAttributes && !meta.elAttributes.class) {
        var index = attrList.indexOf('class');
        if (index > -1) {
            attrList.splice(index, 1);
        }
    }
    return attrList;
};

GmCXt.getCustomMatchAttributes = function(he, meta) {
    var attrList = he.getAttributeNames();

    if (!GmCXt.isEmpty(meta.textPropertyValue) && meta.textPropertyName === 'textContent')
        attrList.push('text');

    attrList = GmCXt.skipMyGuideAttributes(attrList);

    attrList = GmCXt.skipSpecialCharValues(attrList, he);

    attrList = GmCXt.skipMyGuideClasses(attrList, meta);

    return attrList;
};

GmCXt.visibleInViewport = function(pos, winHeight, winWidth) {

    var elHeight = Math.abs(pos.height);
    var elWidth = Math.abs(pos.width);

    var elTop = pos.top;
    var elBottom = pos.top + elHeight;
    var elLeft = pos.left;
    var elRight = pos.left + elWidth;

    var bufferH = Math.round(winHeight * 12 / 100);
    var bufferW = Math.round(winWidth * 12 / 100); // 12% buffer

    bufferH = bufferH > elHeight ? 0 : bufferH;
    bufferW = bufferW > elWidth ? 0 : bufferW; // Do not use buffer for elements smaller than buffer

    if (elTop > (winHeight - bufferH) || elBottom < bufferH ||
        elLeft > (winWidth - bufferW) || elRight < bufferW) { // Completely outside window
        return false;
    }

    if (elHeight > winHeight || elWidth > winWidth) { // Do not check partially-in-viewport for el bigger than viewport
        return true;
    }

    return !(elTop < 0 || elBottom > winHeight ||
        elLeft < 0 || elRight > winWidth); //partially in viewport
};

GmCXt.sendToParentWindow = function(m) {
    if (m.data && typeof m.data === 'object') {
        if (GmCXt.isDefined(GmCXt.isSidePanelApp)) {
            m.data.fromSidePanel = GmCXt.isSidePanelApp;
        }

        if (m.action !== "mgPlayerJSTest_action:update_custom_labels" &&
            m.action !== "mgPlayerJSTest_action:set_lang_content_script" &&
            m.action !== "mgPlayerJSTest_action:update:player_mode" &&
            m.action !== "mgPlayerJSTest_action:save_user_info" &&
            m.action !== "mgPlayerJSTest_action:payload_event_call"
        ) {
            m.data.user = GmCXt.user;
        }

        if (m.action === "mgPlayerJSTest_action:payload_event_call") {
            delete m.data.fromSidePanel;
        }
    }
    GmCXt.msgChannel.port1.postMessage(GmCXt.formatMsg(m));
};

GmCXt.msgToThisWin = function(m) {
    GmCXt.msgChannel.port1.postMessage(GmCXt.formatMsg(m));
};

GmCXt.handleError = function(apiName) {
    console.dir("There is error in API response: " + apiName);
};

GmCXt.getBrandingSetting = function() {
    var setting = false;
    if (GmCXt.appList) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
    }

    if (activeApp && activeApp.settings) {
        setting = activeApp.settings;
    }
    return setting;
};

GmCXt.getBrandLogo = function() {
    return GmCXt.getBrandingSetting().logo;
};

GmCXt.brandLogo = function() {

    var brandLogo = GmCXt.getDefaultIcon();
    var logo = GmCXt.getBrandLogo();

    if (logo && !GmCXt.isDefaultIcon(logo)) {
        brandLogo = GmCXt.restoreAssetSrc(logo);
    }

    return brandLogo;
};

GmCXt.getPopupLogo = function() {
    var brandLogo = GmCXt.getDefaultIcon();

    var logo = GmCXt.getBrandLogo();
    if (logo && !GmCXt.isDefaultIcon(logo)) {
        brandLogo = GmCXt.restoreAssetSrc(logo);
    }

    return "<img class='mgPlayerJSTest_logo-image' src='" + brandLogo + "' alt='" + GmCXt.label.brandLogo + "' />";
};

GmCXt.seggregateRules = function(ruleGroup) {
    var rules = {
        dom: [],
        url: [],
        api: []
    };
    for (var i = 0; i < ruleGroup.length; i++) {
        rule = ruleGroup[i];
        if (rule.type.includes('Select ') || rule.type === "Variables") {
            rule.domRule = true;
            rules.dom.push(rule);
            ruleGroup.checkDom = true;
        } else if (rule.condition === 'Get Validity') {
            rule.apiRule = true;
            rules.api.push(rule);
            ruleGroup.checkApi = true;
        } else {
            rules.url.push(rule);
        }
    }
    return rules;
};

GmCXt.numberOfDomRules = function(rules) {
    var count = 0;
    for (var i = 0; i < rules.length; i++) {
        if (rules[i].type === 'Select Element' || rules[i].type === 'Select Table' || rules[i].type === 'Variables') {
            count++;
        }
    }
    return count;
};

GmCXt.buildGuidePlayStructure = function(tour) {
    var steps = tour.steps;
    var playStructure = [];
    for (var i = 0, j = steps.length; i < j; i++) {
        var item = {
            id: steps[i].step_id
        };
        if (steps[i + 1]) item.tail = steps[i + 1].step_id;
        else item.tail = null;

        playStructure.push(item);
    }

    return playStructure;
};

GmCXt.getStepsForPS = function(steps, type) {
    if (GmCXt.playerI && (GmCXt.playerI.automate || GmCXt.playerI.isAutomation) || GmCXt.isAutomationRunning() || type === "doitforme") {
        return steps;
    } else {
        return GmCXt.filterOutAutomationSteps(steps);
    }
};

GmCXt.getGuidePlayStructure = function(tour, type) {

    var playStructure = tour.tour_settings.play_structure;
    tour.steps = GmCXt.getStepsForPS(tour.steps, type);

    if (!GmCXt.containBranchStep(tour)) {
        return GmCXt.buildGuidePlayStructure(tour);

    } else if (mg$.isArray(playStructure) && playStructure.length) {
        playStructure = GmCXt.repairPlayStructure(playStructure, tour.steps);
        return playStructure;
    }
};

GmCXt.reloadFailedImages = function() {
    if (GmCXt.failedImages && GmCXt.failedImages.length) {
        for (var i = 0; i < GmCXt.failedImages.length; i++) {
            var obj = GmCXt.failedImages[i];
            if (obj.length) {
                var src = obj.attr('src');
                if (src) {
                    src = src.split("?");
                    if (src[0] && src.length > 1) {
                        var newSrc = src[0] + GmCXt.getCdnSign();
                        obj.attr('src', newSrc);
                    }
                }
            }
        }

        GmCXt.failedImages = [];
    }

    if (window.self === window.top) {
        var msg = "mgPlayerJSTest_action:reload_images";
        GmCXt.sendMessageToApp(msg);
    }

    GmCXt.waitForCdnSignature = false;
};

GmCXt.getLXPLang = function() {
    if (GmCXt.isLXP() && !GmCXt.isFalse(GmCXt.mgActiveLang) && GmCXt.mgActiveLang.indexOf('en-') === -1)
        return GmCXt.mgActiveLang;
    else
        return false;
};

GmCXt.getOrgSettings = function() {

    var os = false;

    if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
        os = GmCXt.organization.settings;
    }

    return os;
};

GmCXt.getWidgetSettings = function() {

    var ws = false;

    if (GmCXt.appList && GmCXt.activeAppId) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];

        if (activeApp && activeApp.settings) {
            ws = activeApp.settings;
            ws.clientVersion = activeApp.settings.version;
        }
    }
    if (GmCXt.isWestpac()) {
        ws.guide_count_on_widget = false;
    }

    return ws;
};

GmCXt.getStepSettings = function() {

    var appSettings = false;

    if (!GmCXt.isEmpty(GmCXt.appList)) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];

        if (activeApp && activeApp.settings) {
            appSettings = activeApp.settings;
        }
    } else if (window.self !== window.top && !GmCXt.isEmpty(GmCXt.activeAppSettings)) {
        appSettings = GmCXt.activeAppSettings;
    }

    if (GmCXt.isDesktop()) {
        appSettings = (!GmCXt.isEmpty(GmCXt.playerI.tour.steps[0].orgSettings)) ? GmCXt.playerI.tour.steps[0].orgSettings : GmCXt.playerI.tour.steps[0].appSettings;
        appSettings = GmCXt.validateDataModel(appSettings, GmCXt.model.organization.settings._obj);
    }

    return appSettings;
};

GmCXt.getAppSetting = function(opt) {
    var appSettings = false;
    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId) {

        if (!GmCXt.appList['app:' + GmCXt.activeAppId] && GmCXt.user) {
            GmCXt.logoutUser();
        } else {
            appSettings = GmCXt.appList['app:' + GmCXt.activeAppId].settings;
        }

    } else if (window.self !== window.top && !GmCXt.isEmpty(GmCXt.activeAppSettings)) {
        appSettings = GmCXt.activeAppSettings;
    }

    if (appSettings && opt) {
        return appSettings[opt];
    }

    return appSettings;
};

GmCXt.getCdnSign = function() {
    var sign = '';

    if (GmCXt.user) {
        sign = GmCXt.user.cdn_signature;
    }

    return sign;
};

GmCXt.getDefaultIcon = function() {
    return GmCXt.conf.staticContentPath + "myguide.png";
};

GmCXt.getChatDefaultIcon = function() {
    return GmCXt.conf.staticContentPath + "chat_bot_icon.png";
};

GmCXt.getDefaultGuideIcon = function() {
    return GmCXt.conf.staticContentPath + 'default_guide.png';
};

GmCXt.isFalseObj = function(o) {
    if (!o || typeof o !== "object") return true;

    var r = true;
    for (var i in o) {
        if (o[i] === true) {
            r = false;
            break;
        }
    }
    return r;
};

GmCXt.getRectObject = function(rect) {
    var obj = {
        top: rect.top,
        left: rect.left,
        bottom: rect.bottom,
        right: rect.right,
        width: rect.width,
        height: rect.height,
        x: rect.x,
        y: rect.y
    };
    return obj;
};

GmCXt.redirect = function(to) {
    GmCXt.log(1, "ROUTE to " + to);
    GmCXt.timeout(function() {
        location.replace(to);
    }, 0);
};

GmCXt.getPosition = function(cssPos) {
    if (cssPos) {
        return 'mgPlayerJSTest_fixed-position';
    } else {
        return 'mgPlayerJSTest_absolute-position';
    }
};

GmCXt.isInspectToolON = function() {

    if ((GmCXt.selectorTool && GmCXt.selectorTool.status !== 'inactive') ||
        (GmCXt.selectorToolFill && GmCXt.selectorToolFill.status !== 'inactive') ||
        (GmCXt.selectorToolRules && GmCXt.selectorToolRules.status !== 'inactive')
    ) {
        return true;
    }

    return false;
};

GmCXt.getExtUrl = function(localUrl) {
    var url = GmCXt.getBrowserUrl(localUrl);

    return url;
};

GmCXt.getBaseUrl = function(f) {

    if (GmCXt.isExtension()) {
        return GmCXt.getExtUrl(f);
    } else {
        if (GmCXt.isClientJs() && !GmCXt.conf.baseUrl && GmCXt.conf.clientJsBaseUrl) {
            GmCXt.conf.baseUrl = GmCXt.conf.clientJsBaseUrl;
        }
        return GmCXt.conf.baseUrl + f;
    }
};

GmCXt.capitalizeFirstLetter = function(str) {
    str = str || "";
    return str.charAt(0).toUpperCase() + str.slice(1);
};

GmCXt.encode = function(args) {
    var data = '';
    if (args) {
        var argcount = 0;
        for (var key in args) {
            if (args.hasOwnProperty(key)) {
                if (argcount++) data += '&';
                data += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);
            }
        }
    }
    return data;
};

GmCXt.returnNavigator = function() {
    return navigator.getUserMedia || navigator.webkitGetUserMedia ||
        navigator.mozGetUserMedia || navigator.msGetUserMedia;
};

GmCXt.getDefaultError = function() {
    return {
        code: 403,
        message: [GmCXt.unknownError]
    };
};

GmCXt.getCodeError = function() {
    return {
        code: 405,
        message: [GmCXt.unknownError]
    };
};

GmCXt.externalApiCall = function(url) {
    var params = {
        url: url,
        method: 'GET',
        data: '',
    };
    var promise = GmCXt.xhr(params, true, true);

    return promise;
};

GmCXt.checkFileExist = function(url) {

    var params = {
        url: url,
        method: 'GET',
    };
    var promise = GmCXt.xhr(params, true);

    return promise;
};

/**
 * @function
 * @returns Current webpage url
 */
GmCXt.getUrl = function() {
    var url = GmCXt._location().href;
    return GmCXt.filterUrlScheme(url);
};

GmCXt.checkWorkdayTextfield = function(el, identifier) {
    var customSettings = el.customSettings;
    if (customSettings && customSettings.workday && !customSettings.workday.isTableHeader) {
        var workday = customSettings.workday;
        if (!workday.isWDCustomSelect || identifier !== 'rules-engine-request') {
            return Object.keys(workday).some(function(k) {
                return workday[k];
            });
        }
    }

    return false;
};

GmCXt.filterMyguideClassValue = function(classVal) {
    var classes = [];
    classes = classVal.split(/\s+/);
    classes = classes.filter(function(className) {
        if (className.indexOf("doitforme-") === -1 && className.indexOf("mg-smarttip") === -1) {
            return true;
        }
    });

    classVal = classes.join(' ');
    return classVal.trim();
};

GmCXt.getAttributeValues = function(el, attributes) {

    if (el.nodeType !== 1) {
        return {};
    }

    var attrList = attributes || el.getAttributeNames();

    var attrObj = {
        tagName: el.tagName
    };

    attrList.forEach(function(attr) {
        var value = el.getAttribute(attr);

        if (!GmCXt.isEmpty(value)) {
            attrObj[attr] = value;
        }
    });

    if (attrObj.class) {
        attrObj.class = GmCXt.filterMyguideClassValue(attrObj.class);
        if (GmCXt.isEmpty(attrObj.class)) {
            delete attrObj.class;
        }
    }

    if (el.textContent && el.textContent.length > 500) {
        delete attrObj.text;
    } else if (!GmCXt.isEmpty(el.textContent)) {
        attrObj.text = el.textContent.trim();
    }

    return attrObj;
};

GmCXt.isOnboarding = function(t) {
    if (t && t.tour_type && t.tour_type.indexOf('onboarding') !== -1) return true;
    else return false;
};

GmCXt.isAnnouncement = function(t) {
    if (t && t.tour_settings && GmCXt.isOnboarding(t) && t.tour_settings.tutorial_tour_type &&
        t.tour_settings.tutorial_tour_type === "announcement") {
        return true;
    } else {
        return false;
    }
};

GmCXt.isFeatureTags = function(t) {
    if (t && t.tour_type.indexOf('insights') >= 0) return true;
    else return false;
};

GmCXt.isBotGuide = function(t) {
    if (t && t.tour_type === 'bot') return true;
    else return false;
};

GmCXt.isChatEnable = function() {
    var flag = false;
    if (!GmCXt.isEmpty(GmCXt.appList)) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
        if (activeApp && activeApp.settings.enable_chatbot) {
            flag = true;
        }
    }
    return flag;
};

GmCXt.isGuide = function(t) {

    if (GmCXt.isOnboarding(t))
        return false;
    if (t && (
            t.tour_type.indexOf('walkthrough_tour') !== -1 ||
            t.tour_type.indexOf('videoScreencast') !== -1 ||
            t.tour_type.indexOf('videoCapture') !== -1
        )) {
        return true;
    } else
        return false;
};

GmCXt.initPlayerModeFeatures = function(showPlayer, isMiniPlayer, isPlayerMode) {
    GmCXt.showPlayer = showPlayer;
    GmCXt.isMiniPlayer = isMiniPlayer;
    GmCXt.playerMode = isPlayerMode;
    if (GmCXt.isPlayer()) {
        GmCXt.FT = GmCXt.getPlayerFeatures();
    } else {
        GmCXt.FT = GmCXt.getCreatorAppFeatures();
    }

    if (GmCXt.isMicroPlayer()) {
        mg$(".mgPlayerJSTest_panel").addClass('mgPlayerJSTest_theme-mplayer');
    } else {
        mg$(".mgPlayerJSTest_panel").removeClass('mgPlayerJSTest_theme-mplayer');
    }
};

GmCXt.matchUrlRegEx = function(regExUrl, url2) {
    var match = false;

    var regexString = '';
    var splitArr = regExUrl.split("[*.]");

    for (var i = 0; i < splitArr.length; i++) {

        if (i === splitArr.length - 1) {
            regexString += splitArr[i];
        } else {
            regexString += splitArr[i] + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";
        }
    }
    var regexPattern = new RegExp("^" + regexString + '$');
    match = regexPattern.test(url2);

    return match;
};

GmCXt.trimAndLowerCaseURL = function(url) {
    var newURL = '';
    url = GmCXt.filterUrlScheme(url);
    if (url) {
        newURL = url.toLowerCase();
        if (newURL.indexOf("www.") === 0) {
            newURL = newURL.slice(4, newURL.length);
        }
    }
    return newURL;
};

function getTailFromBranchStep(branches, e, sId, tour) {
    var bInd = 0;
    var retVal = null;
    var pi = GmCXt.playerI;
    var currentStep = null;
    var getStep = function(stepId, tour) {
        if (stepId) {
            for (var i = 0; i < tour.steps.length; i++) {
                if (parseInt(tour.steps[i].step_id) === parseInt(stepId)) {
                    return tour.steps[i];
                }
            }
        } else {
            return false;
        }
    };

    if (pi) {
        currentStep = getStep(pi.currentStepId, pi.tour);
    } else {
        currentStep = getStep(sId, tour);
    }

    for (bInd = 0; bInd < branches.length; bInd++) {
        if (GmCXt.isStepInlineBranch(currentStep)) {
            if (e) {
                if (bInd === 1) {
                    var b = branches[bInd];
                    if (b.tail) {
                        retVal = b.tail;
                        break;
                    }
                }
            } else {
                var b = branches[bInd];
                if (b.tail) {
                    retVal = b.tail;
                    break;
                }
            }
        } else {
            var b = branches[bInd];
            if (b.tail) {
                retVal = b.tail;
                break;
            }
        }
    }

    return retVal;
}

GmCXt.getTail = function(id, playStructure, e, t) {
    if (!id || !playStructure) return false;

    var tail = null;

    for (var i = 0; i < playStructure.length; i++) {

        if (!GmCXt.isEmpty(playStructure[i]) && parseInt(playStructure[i].id) === parseInt(id)) {

            if (playStructure[i].branch) {
                tail = getTailFromBranchStep(playStructure[i].branch, e, id, t);
            } else {
                tail = playStructure[i].tail;
            }

        }
    }
    let sameTail = GmCXt.numberOfSameTail(tail, playStructure);
    if (sameTail > 1) {
        GmCXt.playerI.mergingFromId = id;
    }
    return tail;
};

GmCXt.getPageDomain = function() {
    var d = (GmCXt._location().host.match(/([^.]+)\.\w{2,3}(?:\.\w{2})?$/) || [])[1];
    if (d)
        return d;
    else
        return GmCXt._location().host;
};

GmCXt.getDomain = function(url) {
    url = url.split("/")[0];
    var d = (url.match(/([^.]+)\.\w{2,3}(?:\.\w{2})?$/) || [])[1];
    if (d)
        return d;
    else
        return url;
};

GmCXt.getUrlParam = function() {
    var param = '';
    var temp = GmCXt.urlParts.href.split("?");
    if (temp[1]) {
        param = '?' + temp[1];
    }

    return param;
};

GmCXt.isFQDN = function() {
    var os = GmCXt.getOrgSettings();
    var as = (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) ? GmCXt.organization.admin_settings : {};

    if (!GmCXt.isEmpty(os) && os.fqdn) {
        return true;
    } else if (GmCXt.isPlayer() && as.app_switcher === false) {
        return true;
    } else {
        return false;
    }
};

GmCXt.isDomainInActiveApp = function() {
    if (!GmCXt.isFQDN()) {
        return true;
    }

    var domainMatch = false;
    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId) {
        var activeApp = GmCXt.appList['app:' + GmCXt.activeAppId];
        var domains = activeApp && activeApp.settings.domains;

        if (activeApp && activeApp.settings && activeApp.settings.sandbox) {
            domainMatch = true;
        } else if (domains) {

            var matchedDomain = GmCXt.getCurrentDomainApp(domains, GmCXt.urlParts.fullUrl);

            if (!GmCXt.isEmpty(matchedDomain)) {
                domainMatch = true;
            }
        }
    }
    return domainMatch;
};

GmCXt.getActiveAppSetting = function() {
    if (GmCXt.isEmpty(GmCXt.appList)) return {};

    var app = GmCXt.appList['app:' + GmCXt.activeAppId];
    if (app && app.settings) {
        return app.settings;
    } else {
        return {};
    }
};

GmCXt.findDomainMatch = function(domainList, fullUrl, oldPathLength) {

    var match = {};

    var url = GmCXt.getHostnameFromUrl(fullUrl);
    url = GmCXt.trimAndLowerCaseURL(url);

    for (var i = 0; i < domainList.length; i++) {
        var appUrl = domainList[i].url;
        appUrl = GmCXt.trimAndLowerCaseURL(appUrl);
        fullUrl = GmCXt.trimAndLowerCaseURL(fullUrl);
        if (appUrl.indexOf('/') >= 0 && fullUrl.indexOf(appUrl) >= 0) {
            var pathLength = (appUrl.match(/\//g) || []).length;
            if (oldPathLength && oldPathLength > pathLength) {
                continue;
            } else {
                match = domainList[i];
                match.pathMatch = true;
                match.pathLength = pathLength;
            }
        } else if (url === appUrl && !oldPathLength) {
            match = domainList[i];
        } else if (appUrl.indexOf("[*.]") > -1) {
            var regExMatch = GmCXt.matchUrlRegEx(appUrl, url);

            if (regExMatch) {
                match = domainList[i];
            }
        }
    }

    return match;
};

GmCXt.getCurrentDomainApp = function(domainList, currUrl, pathLength) {

    if (!domainList) {
        return {};
    }

    if (GmCXt.isElectron()) {
        return GmCXt.getCurrentMyGuideApp(domainList);
    } else {
        return GmCXt.findDomainMatch(domainList, currUrl, pathLength);
    }
};

GmCXt.getCurrentMyGuideApp = function(domainList) {

    var match = {};
    var hostApp = GmCXt.elAppName.toLowerCase();

    for (var i = 0; i < domainList.length; i++) {
        if (domainList[i].appName && (hostApp === domainList[i].appName.toLowerCase())) {
            match = domainList[i];
            break;
        }
    }

    return match;
};

GmCXt.isMirrorApp = function() {
    var isMirrorApp = false;
    if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization) && GmCXt.organization.has_mirror_apps &&
        parseInt(GmCXt.organization.has_mirror_apps) !== 0) {
        isMirrorApp = true;
    }
    return isMirrorApp;
};

GmCXt.getBaseAppId = function() {
    var baseAppId = GmCXt.activeAppId;
    if (GmCXt.activeAppId && GmCXt.appList && !GmCXt.inPlayer) {
        for (var key in GmCXt.appList) {
            var app = GmCXt.appList[key];
            if (GmCXt.activeAppId === app.application_id &&
                app.base_app_id && parseInt(app.base_app_id) !== 0) {
                baseAppId = app.base_app_id;
                break;
            }
        }
    }
    return baseAppId;
};

GmCXt.checkDomainInApps = function(url) {

    var ob = {
        domainMatch: false,
        appName: false
    };
    var pathLength = false;

    for (var key in GmCXt.appList) {
        var app = GmCXt.appList[key];
        var domains = app.settings.domains;
        var matchedDomain = GmCXt.getCurrentDomainApp(domains, url, pathLength);

        if (!GmCXt.isEmpty(matchedDomain)) {

            ob = {
                domainMatch: true,
                appName: app.title,
                appId: app.application_id,
                env: matchedDomain.env,
                app_env: matchedDomain.app_env,
                baseAppId: app.base_app_id
            };
        }
        if (matchedDomain.pathLength) {
            pathLength = matchedDomain.pathLength;
        }
    }
    var str = "DOMAIN CHECK. [" + url + "] " + (ob.domainMatch ? "EXISTS" : "DOES NOT EXIST");
    GmCXt.log(1, str, ob);

    return ob;
};

GmCXt.getAppEnvByDomain = function() {

    var activeDomain = GmCXt.checkDomainInApps(GmCXt.urlParts.fullUrl);
    var env;

    if (!GmCXt.isDefined(activeDomain.app_env)) {
        env = 'env_3';
    } else if (GmCXt.isDefined(activeDomain.app_env)) {
        env = activeDomain.app_env;
    }

    GmCXt.log(1, "DOMAIN ENVIRONMENT: " + env);

    return env;
};

GmCXt.updateOrgAndAddSignature = function(str) {

    if (str && GmCXt.containsMedia(str)) {

        if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
            var orgId = GmCXt.organization.organization_id;
            str = str.replace(/[-][0-9]*[/]/g, '-' + orgId + '/');
        }

        str = str.replace(/.mp4(.*?)\"/g, '.mp4' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.gif(.*?)\"/g, '.gif' + GmCXt.getCdnSign() + '"');

        str = str.replace(/.png(.*?)\"/g, '.png' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.html(.*?)\"/g, '.html' + GmCXt.getCdnSign() + '"');
        str = str.replace(/.txt(.*?)\"/g, '.txt' + GmCXt.getCdnSign() + '"');
        str = str.replace(/\.pdf(.*?)\"/g, '.pdf' + GmCXt.getCdnSign() + '"');
    }

    return str;
};

GmCXt.containsMedia = function(str) {
    if (str.indexOf('.png') >= 0 ||
        str.indexOf('.gif') >= 0 ||
        str.indexOf('.mp4') >= 0 ||
        str.indexOf('.html') >= 0 ||
        str.indexOf('.txt') >= 0 ||
        str.indexOf('.pdf') >= 0)
        return true;
    else
        return false;
};

GmCXt.getOnPremJsonURL = function() {
    var retUrl = GmCXt.conf.webServiceUrl;
    return retUrl;
};

GmCXt.branchStepExist = function(t) {
    var isBranch = false;

    if (t && t.tour_settings && t.tour_settings.play_structure) {
        t.tour_settings.play_structure.forEach(function(s, key) {
            if (s.branch) {
                isBranch = true;
            }
        });
    }

    return isBranch;
};

GmCXt.branchStepExistInPS = function() {
    var isBranch = false;

    if (GmCXt.playerI.playStructure) {
        GmCXt.playerI.playStructure.forEach(function(s, key) {
            if (s.branch) {
                isBranch = true;
            }
        });
    }

    return isBranch;
};

GmCXt.restartInParent = function(hideLog) {
    if (!hideLog) {
        GmCXt.log(33, "BACK to parent window");
    }
    GmCXt.storage().set({
        'restartInParent': true
    });
};

GmCXt.getSleepTime = function(lbls) {
    var t = 24;

    var nt = GmCXt.getAppSetting('notificationsTime');

    if (nt) {
        t = parseFloat(nt);
        if (t < 1) t = 1;
    }

    var hourString = t > 1 ? lbls.hours : lbls.hour;
    t = t + ' ' + hourString;

    if ((nt && typeof nt !== 'number') && (nt.includes("week") || nt.includes("hour"))) {
        t = nt;
    }

    return t;
};

GmCXt.getIframeAttributes = function(node) {
    var attrs = {};
    mg$.each(node[0].attributes, function(index, attribute) {
        attrs[attribute.name] = attribute.value;
    });

    attrs.isVisible = GmCXt.getElVisibility(node[0], true) === 'visible';

    return attrs;
};

GmCXt.isDomainMatch = function(startURLDomain, stepDomain) {
    return (GmCXt.getDomain(startURLDomain) === GmCXt.getDomain(stepDomain));
};

GmCXt.getDefaultDomain = function(stepURL, tour) {
    var defaultURL = stepURL;
    if (tour.allDomains.length > 0) {
        var allDomains = tour.allDomains;
        for (var i = 0; i < allDomains.length; i++) {
            if (allDomains[i].isDefault) {
                defaultURL = allDomains[i].url;
                break;
            }
        }
    }
    return GmCXt.getHostnameFromUrl(defaultURL);
};

GmCXt.getRedirectUrlForAuto = function(stepURL, tour, startURLDomain) {
    var stepDomain = GmCXt.getHostnameFromUrl(stepURL);
    if (startURLDomain) {
        if (GmCXt.isDomainMatch(startURLDomain, stepDomain)) {
            stepURL = stepURL.replace(stepDomain, startURLDomain);
        }
    }

    // Change this flag to true when multiple domain support is needed.
    var redirectToDefaultDomain = false;
    if (redirectToDefaultDomain) {
        var appDomain = GmCXt.getDefaultDomain(stepURL, tour);
        if (appDomain) {
            stepURL = stepURL.replace(stepDomain, appDomain);
        }
    }
    var completeURL = '';
    if (!stepURL.startsWith('http')) {
        completeURL = location.protocol + '//' + stepURL;
    } else {
        completeURL = stepURL;
    }
    GmCXt.log(33, "REDIRECTING TO URL - ", {
        URL: completeURL
    });
    return completeURL;
};

function showDomainNotConfiguredPopup(redirectUrl) {
    GmCXt.cleanPlayer();
    GmCXt.auto.destroyAutomation();
    var option = {
        description: GmCXt.label.missingDomainAppConfig,
        button1: GmCXt.label.ok,
        closeTour: true
    };
    GmCXt.alertV2(option).show();
}

GmCXt.changeUrl = function(stepURL, tour, startURLDomain) {
    var redirectUrl = GmCXt.getRedirectUrlForAuto(stepURL, tour, startURLDomain);

    // When redirected by tour player
    if (!startURLDomain) {
        window.location = redirectUrl;
        return;
    }

    // When triggered by Automation
    var source = GmCXt.checkDomainInApps(stepURL);
    var destination = GmCXt.checkDomainInApps(redirectUrl);
    var os = GmCXt.getOrgSettings();

    if (os.fqdn && (!source.domainMatch || !destination.domainMatch)) {

        if (GmCXt.isAutomationRunning()) {

            var errorDomains = '';
            if (!source.domainMatch) {
                errorDomains += 'Source (' + GmCXt.getHostnameFromUrl(stepURL) + ') domain not configured. ';
            }
            if (!destination.domainMatch) {
                errorDomains += 'Destination (' + GmCXt.getHostnameFromUrl(redirectUrl) + ') domain not configured.';
            }

            GmCXt.auto.fail(null, {
                errorMessage: errorDomains
            });
        } else {
            showDomainNotConfiguredPopup(redirectUrl);
        }
    } else {
        window.location = redirectUrl;
    }
};

GmCXt.validateTargetFrame = function(stepFrame, currentFrame) {
    if (!GmCXt.isEmpty(stepFrame) && !GmCXt.isEmpty(currentFrame)) {

        if (!GmCXt.isEmpty(currentFrame.isVisible) && !currentFrame.isVisible) {
            return false; // Current frame not visible
        }

        return GmCXt.compareObjectsByPercentMatch(stepFrame, currentFrame);

    }
    return false;
};

GmCXt.cleanPlayerI = function() {
    GmCXt.tourPlayerI = null;
    GmCXt.playerI = null;
};

GmCXt.cleanPlayer = function() {

    GmCXt.log(33, 'Player instance cleared.');

    if (GmCXt.playerI) {
        GmCXt.trackGuide();
        window.removeEventListener("mouseup", GmCXt.registerClickListner, true);
        window.removeEventListener("mousedown", GmCXt.registerClickListner, true);
        window.removeEventListener("keyup", GmCXt.registerClickListner, true);
        window.removeEventListener("keydown", GmCXt.registerClickListner, true);
    }

    GmCXt.cleanPlayerI();

    GmCXt.sendMessageToApp("mgPlayerJSTest_action:clean_tour_player");

    GmCXt.storage().set({
        'mgPlayerJSTest_mgPlayerJSTest_GM_PLAYER_STORAGE_KEY': null
    });

    GmCXt.storage().remove(['mgPlayerJSTest_mgPlayerJSTest_GM_PLAYER_STORAGE_KEY']);
};

GmCXt.compareAttributes = function(el, topEl) {

    var topElAttrs = GmCXt.getAttributeValues(topEl);
    var elAttrs = GmCXt.getAttributeValues(el);
    var attrsMatch = GmCXt.compareObjectsByPercentMatch(topElAttrs, elAttrs, 100);

    return attrsMatch;
};

GmCXt.filterParentNodes = function(nodes, text) {

    // filter parent nodes retured by "text contains" query.
    var text = text.trim().toLowerCase();

    nodes = nodes.filter(function(index, node) {
        if (node.innerText && node.innerText.trim().toLowerCase() === text) {
            mg$(node).parents().addClass('mgPlayerJSTest_dummy-class');
            return true;
        }
        return false;
    });

    var childNodes = nodes.filter(function(index, node) {
        return !mg$(node).hasClass('mgPlayerJSTest_dummy-class');
    });

    mg$('.mgPlayerJSTest_dummy-class').removeClass('mgPlayerJSTest_dummy-class');

    if (childNodes.length === 1) {
        GmCXt.l.add('All nodes resulting from the query are hierachichally linked (parent-child)');
        return nodes;
    }

    if (childNodes.length === 2 && GmCXt.compareAttributes(nodes[0], nodes[1])) {
        // LXP header has two identical elements placed on top of each other
        if (GmCXt.getElVisibility(nodes[0]) === 'visible') {
            return nodes.slice(0, 1);
        } else if (GmCXt.getElVisibility(nodes[1]) === 'visible') {
            return nodes.slice(1);
        }
    }

    GmCXt.l.add('Text is present at multiple places on the screen');
    return [];
};

GmCXt.getElectronAppName = function() {
    var app = require('electron').remote.app;
    return app.name || app.getName();
};

GmCXt.getErrObj = function(msg, data, isAnalytics) {
    var code = isAnalytics ? data.code : parseInt(data.code);

    if (msg[0] && msg[0].message) {
        msg = msg[0].message;
    }

    if (typeof data.info === "string") {
        msg += " : " + data.info;
    }

    var eObj = {
        build: GmCXt.conf.appName,
        version: GmCXt.conf.version,
        type: 'CODE ERROR',
        code: code,
        message: msg,
        browser: GmCXt.browserApp
    };

    if (!GmCXt.isBackgroundPage) {
        eObj.current_url = GmCXt.urlParts.fullUrl;
    } else {
        eObj.current_url = '';
    }

    if (data.info.apiUrl) {
        eObj.type = "Insights";
        eObj.message += " , api: " + data.info.apiUrl;

        if (data.apiData)
            eObj.apiData = JSON.stringify(data.apiData);
    }

    if (GmCXt.user && GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
        eObj.organization_id = GmCXt.organization.organization_id;
        eObj.organization_name = GmCXt.organization.name;
        eObj.application_id = GmCXt.activeAppId;
        eObj.user_id = GmCXt.user.user_id;
        eObj.user_email = GmCXt.user.user_email;
    }
    return eObj;
};

// Elements might have classes like 'mgPlayerJSTest_select-outline' or 'mgPlayerJSTest_dummy-class'
GmCXt.checkMyGuideClass = function(className) {

    var mgClass = false;
    if (className && typeof className === 'string') {
        var arrClass = className.split(/\s+/).filter(Boolean);
        mgClass = arrClass.filter(function(cls) {
            return cls.indexOf('mgPlayerJSTest_') === 0;
        })[0];
    }
    return mgClass;
};

GmCXt.hasMyGuideEl = function(nodes) {
    if (nodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (GmCXt.checkMyGuideClass(nodes[i].className)) {
                return true;
            }
        }
    }
    return false;
};

GmCXt.sortToursByModifcationDate = function(tours) {
    return tours.sort(function(a, b) {
        return parseInt(b.modification_date) - parseInt(a.modification_date);
    });
};

GmCXt.getFontFile = function() {
    var i = 'common/lib/fonts/';
    if (GmCXt.isExtension()) {
        i = GmCXt.getBrowserUrl(i);
    } else {
        i = GmCXt.conf.baseUrl + i;
    }

    return i;
};

GmCXt.getCustomFontStyle = function() {
    var styleElem = document.getElementById('mgPlayerJSTest_nunito-font-style');
    if (!GmCXt.isEmpty(styleElem)) styleElem.remove();

    var newStyle = document.createElement('style');
    newStyle.id = "mgPlayerJSTest_nunito-font-style";
    var FontName = "Nunito";
    var FontUrl = GmCXt.getFontFile() + "Nunito-Regular.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    var FontName = "Calibri";
    var FontUrl = GmCXt.getFontFile() + "Calibri-Regular.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    var FontName = "Frutiger";
    var FontUrl = GmCXt.getFontFile() + "Frutiger.woff";
    newStyle.appendChild(document.createTextNode("@font-face { font-family: '" + FontName + "'; src: url('" + FontUrl + "') format('woff');}"));

    return newStyle;
};

GmCXt.isUrlValid = function(userInput) {
    if (GmCXt.isEmpty(userInput)) return true;
    var res = userInput.match(/(http(s)?:\/\/.)?(www\.)?[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/g);
    if (res == null)
        return false;
    else
        return true;
};

GmCXt.getURLMediaType = function(url) {
    if (!GmCXt.isUrlValid(url)) return false;

    if (url.search(/^http[s]?\:\/\//) === -1) {
        return 'https://' + url;
    }

    var ext = url.split('/').pop().match(/^[\w\s-,.]+\.([a-zA-Z0-9]{3,4})/);
    if (ext) {
        ext = ext[1];
    }

    url = new URL(url);
    var mediaType = "";
    if (ext && GmCXt.videoFileExtns.indexOf("." + ext) !== -1) {
        mediaType = "video";
    } else if (ext === "pdf") {
        mediaType = "pdf";
    }

    return mediaType;
};

GmCXt.attachDragEvents = function(elmnt, dragEl) {
    var pos1 = 0,
        pos2 = 0,
        pos3 = 0,
        pos4 = 0;
    dragEl.onmousedown = dragMouseDown;
    dragEl.onmouseup = dragMouseUp;

    if (window.matchMedia("(max-width: 480px)").matches) {
        dragEl.ontouchstart = dragMouseDown;
        dragEl.ontouchend = dragMouseUp;
    }

    function resetDragEvents() {
        document.onmouseup = null;
        document.onmousemove = null;
        document.onmouseout = null;

        if (window.matchMedia("(max-width: 480px)").matches) {
            document.ontouchstart = null;
            document.ontouchmove = null;
            document.ontouchend = null;
        }
    }

    function dragMouseUp(e) {
        resetDragEvents();

        if (GmCXt.isMicroPlayer()) {
            mg$("#mgPlayerJSTest_micro_player_drag .mgPlayerJSTest_title-tooltip-wrapper").removeAttr("style");
        }
    }

    function dragOutEvent(e) {
        GmCXt.timeout(function() {
            mg$('.mgPlayerJSTest_slideshow_drag_over').hide();
        }, GmCXt.t.drag);

        if (dragEl.id === 'mgPlayerJSTest_mPlayer-drag') {
            resetDragEvents();
        }
    }

    function dragMouseDown(e) {
        e.preventDefault();
        e = e || window.event;
        // get the mouse cursor position at startup:
        if (window.matchMedia("(max-width: 480px)").matches) {
            e.clientX = e.targetTouches[0].clientX;
            e.clientY = e.targetTouches[0].clientY;
        }

        pos3 = e.clientX;
        pos4 = e.clientY;
        document.onmouseup = closeDragElement;
        document.onmouseout = dragOutEvent;
        // call a function whenever the cursor moves:
        document.onmousemove = elementDrag;

        if (window.matchMedia("(max-width: 480px)").matches) {
            document.ontouchend = closeDragElement;
            document.ontouchcancel = dragOutEvent;
            document.ontouchmove = elementDrag;
        }

        if (GmCXt.isMicroPlayer()) {
            mg$("#mgPlayerJSTest_micro_player_drag .mgPlayerJSTest_title-tooltip-wrapper").css("display", "none");
        }
    }

    function elementDrag(e) {
        mg$('.mgPlayerJSTest_slideshow_drag_over').show();
        e = e || window.event;
        // calculate the new cursor position:
        var wWdth = mg$(window).width();
        var wHgth = mg$(window).height();
        var offset = 50;

        if (window.matchMedia("(max-width: 480px)").matches) {
            e.clientX = e.targetTouches[0].clientX;
            e.clientY = e.targetTouches[0].clientY;
        }

        if (e.clientX > offset && e.clientY > offset && e.clientX < (wWdth - offset) && e.clientY < (wHgth - offset)) {
            pos1 = pos3 - e.clientX;
            pos2 = pos4 - e.clientY;
            pos3 = e.clientX;
            pos4 = e.clientY;
            // set the element's new position:
            elmnt.style.top = (elmnt.offsetTop - pos2) + "px";
            elmnt.style.left = (elmnt.offsetLeft - pos1) + "px";

            if (GmCXt.isMicroPlayer()) {
                elmnt.style.right = "initial";
                elmnt.style.transition = "initial";
            }

            if (!GmCXt.isMicroPlayer()) {
                mg$(elmnt)
                    .removeClass('top-left')
                    .removeClass('top-middle')
                    .removeClass('top-right')
                    .removeClass('right-top')
                    .removeClass('right-middle')
                    .removeClass('right-bottom')
                    .removeClass('bottom-left')
                    .removeClass('bottom-middle')
                    .removeClass('bottom-right')
                    .removeClass('left-top')
                    .removeClass('left-middle')
                    .removeClass('left-bottom');
            }
        }
    }

    function closeDragElement() {
        /* stop moving when mouse button is released:*/
        resetDragEvents();

        mg$('.mgPlayerJSTest_slideshow_drag_over').hide();
    }
};

GmCXt.isDefaultIcon = function(str) {
    if (str &&
        (str.indexOf('edcast.png') >= 0 ||
            str.indexOf('guidemeg.png') >= 0 ||
            str.indexOf('widget_icon.png') >= 0 ||
            str.indexOf('chat_bot_icon.png') >= 0 ||
            str.indexOf('default') >= 0 ||
            str.indexOf('myguide.png') >= 0
        )) {
        return true;
    } else {
        return false;
    }
};

GmCXt.syncPlayerInst = function(m) {
    if (m === "mgPlayerJSTest_action:started;task:select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_tooltips" ||
        m === "mgPlayerJSTest_action:task:init_new_iframe" ||
        m === "mgPlayerJSTest_action:update_player_instance" ||
        m === "mgPlayerJSTest_action:play_slideshow" ||
        m === "mgPlayerJSTest_action:play_video_step" ||
        m === "mgPlayerJSTest_action:play_image_step" ||
        m === "mgPlayerJSTest_action:click; on:mgPlayerJSTest_slideshow-close" ||
        m === "mgPlayerJSTest_action:mark_auto_tour_donotshow" ||
        m === "mgPlayerJSTest_action:update_player_instance_app" ||
        m === "mgPlayerJSTest_action:set_audio_mode_off" ||
        m === "mgPlayerJSTest_action:set_audio_mode_on" ||
        m === "mgPlayerJSTest_action:close_guide" ||
        m === "mgPlayerJSTest_action:set_style_audio_icon_response") {
        return true;
    } else {
        return false;
    }
};

GmCXt.syncCreateInst = function(m) {
    if (m === "mgPlayerJSTest_action:started;task:highlight_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:completed;task:edit_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_step_select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started;task:select_new_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:select_new_dom_element_for_edit_step" ||
        m === "mgPlayerJSTest_action:narrow_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:narrow_element_selection" ||
        m === "mgPlayerJSTest_action:expand_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:expand_element_selection" ||
        m === "mgPlayerJSTest_action:started;task:select_element_for_message_step" ||
        m === "mgPlayerJSTest_action:started;task:select_element_for_branching_step" ||
        m === "mgPlayerJSTest_action:started;task:select_new_element_for_dom_select_rule" ||
        m === "mgPlayerJSTest_action:started;task:select_new_table_for_dom_select_rule" ||
        m === "mgPlayerJSTest_action:started;task:delete_element_for_message_step" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_for_beacon" ||
        m === "mgPlayerJSTest_action:started;task:blackout_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_message_step_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:step_blackout_area_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_beacon_select_existing_dom_element" ||
        m === "mgPlayerJSTest_action:started;task:edit_beacon_select_existing_dom_element:target_frame_only" ||
        m === "mgPlayerJSTest_action:started:select_new_dom_element_for_smart_tip" ||
        m === "mgPlayerJSTest_action:find_element_to_get_precision" ||
        m === "mgPlayerJSTest_action:find_element_to_get_precision_for_rules" ||
        m === "mgPlayerJSTest_action:started;task:select_dom_element_for_matching_in_rules" ||
        m === "mgPlayerJSTest_action:do;task:enable_jQuery_selector" ||
        m === "mgPlayerJSTest_action:reselect_beacon_element" ||
        m === "mgPlayerJSTest_action:reselect_element" ||
        m === "mgPlayerJSTest_action:select_element" ||
        m === "mgPlayerJSTest_action:blackout_element" ||
        m === "mgPlayerJSTest_action:delete_step_element" ||
        m === "mgPlayerJSTest_action:find_element_precision" ||
        m === "mgPlayerJSTest_action:find_element_precision_for_rules" ||
        m === "mgPlayerJSTest_action:select_element_tag" ||
        m === "mgPlayerJSTest_action:started;task:edit_tag_select_existing_dom_element") {
        return true;
    } else {
        return false;
    }
};

GmCXt.setAutoTour = function(id) {
    if (window.self === window.top) {
        localStorage.setItem(GmCXt.storagePrefix + 'autoLaunchTour', id);
    } else {
        var data = {
            tourId: id
        };
        if (GmCXt.isSidePanelApp) {
            var m = {
                action: "mgPlayerJSTest_action:set_auto_tour"
            };
            m.data = data;
            GmCXt.sendToParentWindow(m);
        } else {
            GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:set_auto_tour', data);
        }
    }
};

GmCXt.getPreviousStep = function() {
    if (GmCXt.playerI) {
        var previousStepId = GmCXt.getPreviousStepId(GmCXt.playerI.currentStepId);
        if (previousStepId) {
            var step = GmCXt.createDeepCopy(GmCXt.getStepFromPlayerI(previousStepId));
            return step;
        } else {
            return null;
        }
    } else {
        return null;
    }
};

GmCXt.getPreviousStepId = function(id, mode) {
    var previousStepId = null;
    var PS = GmCXt.playerI.playStructure;
    var sameTail = GmCXt.numberOfSameTail(id, PS);
    if (sameTail > 1) {
        previousStepId = GmCXt.playerI.mergingFromId;
    } else {
        if (PS && PS.length) {
            for (var i = 0; i < PS.length; i++) {
                if (PS[i] && parseInt(PS[i].tail) === parseInt(id)) {
                    previousStepId = PS[i].id;
                    break;
                } else if (PS[i] && PS[i].branch) {
                    for (var j = 0; j < PS[i].branch.length; j++) {
                        if (parseInt(PS[i].branch[j].tail) === id) {

                            if (mode === 'slideshow') previousStepId = PS[i].id;
                            else previousStepId = GmCXt.getPreviousStepId(PS[i].id);

                            break;
                        }
                    }
                }
            }
        }
    }
    return previousStepId;
};

GmCXt.getPreviousStepsList = function(id) {
    var previousSteps = [];
    var PS = GmCXt.playerI.tour.tour_settings.play_structure;

    if (PS && PS.length) {
        for (var i = 0; i < PS.length; i++) {
            if (PS[i] && parseInt(PS[i].tail) === parseInt(id)) {
                previousSteps.push(PS[i].id);
            } else if (PS[i] && PS[i].branch) {
                for (var j = 0; j < PS[i].branch.length; j++) {
                    if (parseInt(PS[i].branch[j].tail) === id) {
                        previousSteps.push(PS[i].id);
                    }
                }
            }
        }
    }
    return previousSteps;
};

GmCXt.getFirstStepId = function() {
    var id = null;
    var playStructure = GmCXt.playerI.playStructure;

    if (playStructure && playStructure.length) {
        var firstStepObj = playStructure[0];
        if (firstStepObj && firstStepObj.id) {
            id = firstStepObj.id;
        }
    }
    return id;
};

//Always extract/extend data returned by this function before use.
GmCXt.getStepFromPlayerI = function(step_id) {
    var step = false;
    var steps = [];

    var steps = GmCXt.playerI.tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            step = steps[i];
            break;
        }
    }
    return step;
};

GmCXt.getStepFromTourData = function(step_id, tour) {
    var step = false;
    var steps = [];

    var steps = tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            step = steps[i];
            break;
        }
    }
    return step;
};

GmCXt.getNextBotStepFromTour = function(step_id, tour) {
    var step = false;
    var steps = tour.steps;

    for (var i = 0; i < steps.length; i++) {
        if (parseInt(steps[i].step_id) === parseInt(step_id)) {
            if ((steps[i].step_settings.automation.enableBot &&
                    steps[i].step_settings.automation.botQuestion) ||
                (steps[i].step_type === GmCXt.STEP_TYPE_GUIDE ||
                    steps[i].step_type === GmCXt.STEP_TYPE_BRANCH ||
                    steps[i].step_type === "textSlide")) {
                step = steps[i];
                break;
            } else {
                step_id = GmCXt.getTail(steps[i].step_id, tour.tour_settings.play_structure, null, tour);
                GmCXt.getNextBotStepFromTour(step_id, tour);
            }
        }
    }
    return step;
};

GmCXt.isGuideAudioDisabled = function() {

    if (!GmCXt.isEmpty(GmCXt.playerI) && !GmCXt.isEmpty(GmCXt.playerI.tour)) {
        var s = GmCXt.playerI.tour.tour_settings;
        var val = s.disableAudio;

        return typeof val === 'undefined' ? false : val;
    } else {
        return false;
    }
};

GmCXt.getGlobalAudioPrference = function() {
    var val = GmCXt.getStepSettings().playAudio;
    return typeof val === 'undefined' ? true : val;
};

GmCXt.getAudioPreference = function(pref) {

    var flag = false;
    var userPref = (pref === undefined || pref === true);

    if (GmCXt.getGlobalAudioPrference()) {

        if (!GmCXt.isGuideAudioDisabled()) {

            if (userPref) flag = true;
        }

    } else if (GmCXt.isGuideAudioEnabled()) {
        if (userPref) flag = true;
    }
    return flag;
};

GmCXt.isGuideAudioEnabled = function() {

    var s = GmCXt.playerI.tour.tour_settings;
    var val = s.enableAudio;

    return typeof val === 'undefined' ? true : val;
};

GmCXt.isLastStep = function(stepId, playStructure) {

    var flag = false;

    if (GmCXt.getTail(stepId, playStructure) === null) {
        flag = true;
    }
    return flag;
};

GmCXt.isFirstStep = function(sid) {

    if (!GmCXt.playerI) return false;

    var stepId = sid || GmCXt.playerI.currentStepId;

    // TODO, need to check behaviour when first step of tour in branch step
    if (stepId && GmCXt.playerI.tour) {
        var PS = GmCXt.getGuidePlayStructure(GmCXt.playerI.tour);

        if (PS && PS[0]) {
            var first = PS[0];

            if (first.id === stepId) {
                return true;
            }
        }
    }

    return false;
};

GmCXt.getFirstNonAutomationStep = function() {
    var id = null;
    var playStructure = GmCXt.getGuidePlayStructure(GmCXt.playerI.tour);
    if (playStructure) {
        for (var i = 0; i < playStructure.length; i++) {
            var stepObj = playStructure[i];
            if (stepObj && stepObj.id) {
                id = stepObj.id;
            }
            var step = GmCXt.getStepFromPlayerI(id);
            if (!GmCXt.isAutomationStep(step)) {
                return step;
            }
        }
    }
};

GmCXt.isFirstNonAutomationStep = function() {
    if (!GmCXt.playerI) return false;

    if (GmCXt.playerI.currentStepId && GmCXt.playerI.tour) {
        var s = GmCXt.getFirstNonAutomationStep();
        if (s && (s.step_id === GmCXt.playerI.currentStepId)) {
            return true;
        }
    }
    return false;
};

GmCXt.filterOutAutomationSteps = function(steps) {
    return steps.filter(function(s) {
        return (!GmCXt.isAutomationStep(s));
    });
};

GmCXt.initGlobals = function(action, data) {

    if (data) {

        if (data.debugMode) GmCXt.debugMode = data.debugMode;

        if (data.urlParts) GmCXt.urlParts = data.urlParts;

        if (GmCXt.syncCreateInst(action)) {
            if (window.self !== window.top) {
                if (data.stepReq || data.stepReq === null) {
                    GmCXt.stepReq = data.stepReq;
                }
            } else {
                if (GmCXt.stepReq && data.syncStepReq) {
                    GmCXt.stepReq = data.stepReq;
                }
            }
        }
        if (GmCXt.syncPlayerInst(action)) {
            if (window.self !== window.top) {
                if (data.playerInstance || data.playerInstance === null) {
                    GmCXt.playerI = data.playerInstance;
                }
            } else if (data.playerInstance && data.fromSidePanel) {
                GmCXt.playerI = data.playerInstance;
            }
        }
    }
};

GmCXt.verifyMsg = function(event) {
    if (mg$(window).width() <= 1 || mg$(window).height() <= 1) {
        return false;
    }

    event.data = GmCXt.parseJSON(event.data);
    event.data = GmCXt.convertMgdata(event.data);

    var message = event.data;
    var action = message ? message.action : '';

    GmCXt.log(3, "VERIFY MESSAGE " + action);
    if (!message || !action) return false;

    if (action && action.indexOf('MyGuideReporting:Ack') !== -1 &&
        message.data === GmCXt.getAppName()) {
        return; //Reject acknowledgement from self
    }

    if (action && action.indexOf('MyGuideReporting') !== -1) {
        GmCXt.saveAppPresence(message);
    }

    var valid = false;
    var data = message.data;

    var fromSelf = (action.indexOf('mgPlayerJSTest_action:') !== -1);

    // for salesforce and service now app backword compatibility
    if (action === "gmPlayerXt_action:init_sfdc_env" ||
        action === "gmPlayerXt_action:sfdc_play_tour" ||
        action === "gmPlayerXt_action:init_snow" ||
        action === "myguide_action:find_element_request_from_insight" ||
        action === "myguide_action:paste_tour_from_myguide_library" ||
        action === "gmPlayerXt_action:snow_panel_open") {
        fromSelf = true;
    }

    if (fromSelf) {
        if (message && message.data && message.data.sender === "other") {
            delete message.data.organization;
            delete message.data.user;
        }
        GmCXt.initGlobalUser(message);
        GmCXt.initGlobals(action, data);
        valid = true;
    }

    return valid;
};

GmCXt.initGlobalUser = function(m) {
    if (m.data && (window.self !== window.top || m.data.fromSidePanel)) {
        if (m.data.user && !GmCXt.isEmpty(m.data.user)) {
            GmCXt.updateGlobalUser(m.data.user);
        }
    }
};

GmCXt.toastMsg = function(message) {

    var self = {
        message: message || 'Default message'
    };

    return {
        show: function() {
            mg$("#mgPlayerJSTest_toast-msg").remove();

            var html = "<wmgPlayerJSTest_ id='mgPlayerJSTest_toast-msg'></wmgPlayerJSTest_>";
            if (GmCXt.browserApp === 'ie') {
                mg$("body").append(html);
            } else {
                mg$("html").append(html);
            }

            mg$("#mgPlayerJSTest_toast-msg").html(self.message);
            mg$("#mgPlayerJSTest_toast-msg").fadeIn();
            GmCXt.timeout(function() {
                mg$('#mgPlayerJSTest_toast-msg').fadeOut(500);
            }, GmCXt.t.toastMsg);
        }
    };
};

GmCXt.showToastMsg = function(message) {
    mg$("#mgPlayerJSTest_toast-msg").html(message);
    mg$("#mgPlayerJSTest_toast-msg").fadeIn();
};

GmCXt.hideToastMsg = function() {
    mg$('#mgPlayerJSTest_toast-msg').fadeOut(100);
};

GmCXt.toastMsgPersistent = function(message) {
    return {
        show: function() {
            var htmlstr = "<div class='mgPlayerJSTest_toast-msg-wrapper'><div id='mgPlayerJSTest_toast-msg-close' >x</div>";
            htmlstr += "<div id='mgPlayerJSTest_toast-msg-text' >" + message + "</div></div>";
            mg$("#mgPlayerJSTest_toast-msg").html(htmlstr);
            mg$("#mgPlayerJSTest_toast-msg").fadeIn();

            mg$("#mgPlayerJSTest_toast-msg-close").click(function() {
                GmCXt.toastMsgPersistent().hide();
            });
        },
        hide: function() {
            mg$('#mgPlayerJSTest_toast-msg').fadeOut(500);
        }
    };
};

GmCXt.clearScreen = function() {
    mg$('.mgPlayerJSTest_inline-step-capture-screen').remove();
};

GmCXt.stopEventPropagation = function(e) {
    e.stopPropagation();
    e.stopImmediatePropagation();
};

GmCXt.unlockScroll = function() {

    if (GmCXt.lockScrollPosition === true) {
        GmCXt.lockScrollPosition = false;
        mg$('html').css('overflow', '');
        //mg$('body').css('overflow', '');
        document.removeEventListener('wheel', GmCXt.stopEventPropagation, true);
    }
};

GmCXt.getStepSortedByPS = function(PS, stepId) {

    var steps = [];

    var firstStep;
    if (stepId) {
        firstStep = GmCXt.getStepFromPlayerI(stepId);
    } else {
        firstStep = GmCXt.getStepFromPlayerI(PS[0].id);
    }

    steps.push(firstStep);

    var seedStepID = firstStep.step_id;
    if (firstStep.step_type !== GmCXt.STEP_TYPE_BRANCH || !stepId) {
        for (var i = 0; i < PS.length; i++) {
            var nextStepId = GmCXt.getTail(seedStepID, PS);
            if (nextStepId) {
                stepToPush = GmCXt.getStepFromPlayerI(nextStepId);
                if (stepToPush) {
                    seedStepID = stepToPush.step_id;
                    steps.push(stepToPush);
                    if (stepToPush.step_type === GmCXt.STEP_TYPE_BRANCH &&
                        stepToPush.step_id !== GmCXt.playerI.currentStepId) {
                        break;
                    }
                } else {
                    break;
                }

            } else {
                break;
            }
        }
    }
    return steps;
};

GmCXt.getDoNotShowTours = function(isNotif) {

    return GmCXt.storage().get(['tourIdArray', 'tourIdOnBoardingArray'])
        .then(function(st) {
            return GmCXt.processDoNotShowGuides(st, isNotif);
        });
};

GmCXt.saveSeenToursInDb = function(tour, userSettings) {

    if (!GmCXt.isEmpty(tour)) {

        userSettings.viewed_guide_notifications = tour;

        GmCXt.updateUserProfileSettings(userSettings);

        GmCXt.storage().remove(['tourIdArray']);
    }
};

GmCXt.processDoNotShowGuides = function(st, isNotif) {

    var obj = {};
    var tours = [];
    var userSettings = GmCXt.user.settings || {};

    if (GmCXt.isAnonymousUser()) {
        tours = st.tourIdArray || {};
        if (mg$.isArray(st.tourIdOnBoardingArray)) {
            tours = mg$.extend({}, tours, GmCXt.arrayToObjectNot(st.tourIdOnBoardingArray));
            GmCXt.storage().set({
                'tourIdArray': tours
            });
            GmCXt.storage().remove(['tourIdOnBoardingArray']);
        }
    } else {
        tours = userSettings.viewed_guide_notifications || {};
        if (mg$.isArray(userSettings.viewed_onboarding_guide_notifications)) {
            tours = mg$.extend({}, tours, GmCXt.arrayToObjectNot(userSettings.viewed_onboarding_guide_notifications));
            delete userSettings.viewed_onboarding_guide_notifications;
            GmCXt.saveSeenToursInDb(tours, userSettings);
        }
    }

    if (Array.isArray(tours)) {
        obj = GmCXt.arrayToObjectNot(tours);
        if (!GmCXt.isAnonymousUser()) GmCXt.saveSeenToursInDb(obj, userSettings);
    } else {
        obj = tours;
    }

    return obj;
};

GmCXt.arrayToObjectNot = function(tours) {
    var tempObj = {};
    for (var key in tours) {
        if (tours[key]) tempObj[tours[key]] = 1;
    }
    return tempObj;
};

GmCXt.escapeHtml = function(str) {
    if (str) {
        str = str.replace(/&/g, "&amp;")
            .replace(/</g, "&lt;")
            .replace(/>/g, "&gt;")
            .replace(/"/g, "&quot;")
            .replace(/'/g, "&#039;");
    }
    return str;
};

GmCXt.removeNotif = function() {
    mg$(".mgPlayerJSTest_overlay-tours-popup").remove();
    mg$(".mgPlayerJSTest_overlay-container").remove();
};

GmCXt.getObjectSize = function(obj) {
    var size = 0,
        key;
    for (key in obj) {
        if (obj.hasOwnProperty(key))
            size++;
    }
    return size;
};

GmCXt.updateUserProfileSettings = function(userSettings) {
    var user = GmCXt.user;
    user.settings = userSettings;

    GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_user_data', {
        user: user
    });

    GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_organization_data', {
        organization: GmCXt.organization
    });
};

GmCXt.updatePlayedSteps = function(step) {
    GmCXt.sendMessageToApp("mgPlayerJSTest_action:update_played_step", {
        playedStep: step
    });
};

GmCXt.lastCheckWidgetIcon = 0;

GmCXt.getWidgetIcon = function() {

    return new Promise(function(resolve, reject) {

        var i = 'common/img/widget_icon.png';

        i = GmCXt.getBasePath(i);

        var s = GmCXt.getWidgetSettings();

        if (s && s.widget_icon_path && !GmCXt.isDefaultIcon(s.widget_icon_path)) {
            i = GmCXt.restoreAssetSrc(s.widget_icon_path);
        }

        //check if widgetIcon needs to get new signature.
        var isSignExp = (GmCXt.getCurrentTimeInMilSec() - GmCXt.lastCheckWidgetIcon > GmCXt.t.refreshWidget) ? true : false;

        resolve(i);
    });
};

GmCXt.getChatIcon = function() {

    return new Promise(function(resolve, reject) {
        var i = GmCXt.conf.staticContentPath + "chat_bot_icon.png";

        var s = GmCXt.getAppSetting();

        if (s && s.chat_icon_path && !GmCXt.isDefaultIcon(s.chat_icon_path)) {
            i = GmCXt.restoreAssetSrc(s.chat_icon_path);
        }

        //check if widgetIcon needs to get new signature.
        var isSignExp = (GmCXt.getCurrentTimeInMilSec() - GmCXt.lastCheckWidgetIcon > GmCXt.t.refreshWidget) ? true : false;

        resolve(i);
    });
};

GmCXt.getWidgetAlignment = function() {
    var alignment = "right";
    return alignment;
};

GmCXt.visibleWindow = function(data) {
    if (data.checkIframe) {
        if (!GmCXt.isEmpty(data.frame.attributes) &&
            !data.frame.attributes.isVisible) {
            return false;
        }
    }
    return true;
};

GmCXt.getSteps = function(data) {

    if (GmCXt.isSidePanelApp) {
        return new Promise(function(resolve, reject) {
            GmCXt.api.getTour(data).then(function(_tour) {
                resolve(_tour);
            });
        });
    } else {
        return new Promise(function(resolve, reject) {
            GmCXt.callApi(data, "tour")
                .then(function(_tour) {
                    resolve(_tour);
                });
        });
    }
};

GmCXt.checkIfInvalidSegment = function(data) {
    return new Promise(function(resolve, reject) {
        GmCXt.getSteps(data).then(function(_tour) {
            var flag = true;
            if (!_tour) {
                flag = false;
            }
            resolve(flag);
        });
    });
};

GmCXt.updatePlayStructureLinkGuide = function(tour, playerInstance, cb) {

    var linkPS = GmCXt.getGuidePlayStructure(tour);

    var pi;
    if (GmCXt.playerI) {
        pi = GmCXt.playerI;
    } else if (playerInstance) {
        pi = playerInstance;
    }

    var tailCurrent = linkPS[0].id;
    var PS = pi.playStructure;
    var isFirstStepLink = false;

    for (var i = 0; i < PS.length; i++) {
        if (PS[i].tail === pi.currentStepId) {
            PS[i].tail = tailCurrent;
        } else if (PS[i].branch) {
            for (var j = 0; j < PS[i].branch.length; j++) {
                if (PS[i].branch[j].tail === pi.currentStepId) {
                    PS[i].branch[j].tail = tailCurrent;
                }
            }
        }
        if (PS[i].id === pi.currentStepId) {
            linkPS = GmCXt.updatePSLastTail(linkPS, PS[i].tail);
            PS[i].tail = null;
            if (i === 0) {
                isFirstStepLink = true;
            }
        }
    }

    pi.linkGuideFS = linkPS[0].id;

    if (isFirstStepLink) {
        PS[0] = linkPS[0];
        linkPS.splice(0, 1);
        pi.startStepId = PS[0].id;
    }

    var finalPS = mg$.extend([], PS.concat(linkPS));
    if (pi.type === GmCXt.TOUR_PLAYER_SLIDESHOW) {
        GmCXt.playerI = pi;
        GmCXt.playerI.playStructure = finalPS;
    } else if (playerInstance && !GmCXt.playerI) {
        if (cb) cb(finalPS);
    } else {
        GmCXt.globalMsgData['mgPlayerJSTest_action:update_PI_PS_done'].cb(finalPS);
    }
};

GmCXt.updatePSLastTail = function(PS, tail) {
    for (var i = 0; i < PS.length; i++) {
        if (PS[i].branch) {
            for (var j = 0; j < PS[i].branch.length; j++) {
                if (PS[i].branch[j].tail === null) {
                    PS[i].branch[j].tail = tail;
                }
            }
        } else if (PS[i].tail === null) {
            PS[i].tail = tail;
        }
    }
    return PS;
};

GmCXt.concatLinkGuideSteps = function(newSteps, tour, step_id, cb) {

    var guideStepIndex;
    if (tour && step_id) {
        guideStepIndex = GmCXt.getCurrentStepIndex(tour, step_id);
    } else {
        guideStepIndex = GmCXt.getCurrentStepIndex();
    }

    var steps = [];
    if (tour) {
        steps = mg$.extend([], tour.steps);
    } else {
        steps = mg$.extend([], GmCXt.playerI.tour.steps);
    }

    if (tour && step_id) {
        steps = steps.filter(function(step, i) {
            return step.step_id !== step_id;
        });
    } else {
        steps = steps.filter(function(step, i) {
            return step.step_id !== GmCXt.playerI.currentStepId;
        });
    }

    steps.splice.apply(steps, [guideStepIndex, 0].concat(newSteps));
    if (GmCXt.playerI) {
        if (GmCXt.playerI.type === GmCXt.TOUR_PLAYER_SLIDESHOW) {
            GmCXt.playerI.tour.steps = steps;
        } else {
            GmCXt.sendMessageToParentWindow("mgPlayerJSTest_action:update_PI_steps", steps);
        }
        GmCXt.playerI.totalStepCount = steps.length;
        GmCXt.playerI.tour.step_count = steps.length;
    } else {
        if (cb) cb(steps);
    }
};

GmCXt.stopNotification = function(isPreview) {
    var flag = false;
    var reason = '';

    if (!GmCXt.isPlayer() && !isPreview) {
        reason = "app is not a player";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_image-step-screen').is(':visible') || mg$('.mgPlayerJSTest_preview-step-popup-container').is(':visible')) {
        reason = "step is playing";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_user-guide-container').is(':visible')) {
        reason = "survey is open";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_notifcation-popup').is(':visible')) {
        reason = "org notification";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_slideshow-panel').is(':visible')) {
        reason = "slideshow playing";
        flag = true;
    } else if (mg$('.mgPlayerJSTest_play-pause-toolbar').is(':visible')) {
        reason = "pause guide";
        flag = true;
    } else if (GmCXt.APP_PANEL_OPEN && !GmCXt.getAppSetting('keep_player_panel_open')) {
        reason = "side panel open";
        flag = true;
    } else if (GmCXt.playerI) {
        reason = "tour is active";
        flag = true;
    } else if (!GmCXt.isEmpty(GmCXt.testMe)) {
        reason = "test me active";
        flag = true;
    }

    if (flag) {
        GmCXt.log(10, "STOP notification because " + reason);
    }
    return flag;
};

GmCXt.checkSalesForceSite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('salesforce.com') > 0 || url.indexOf('lightning.force.com') > 0)
        return true;
    else
        return false;
};

GmCXt.checkWorkdaySite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('workday.com') > 0)
        return true;
    else
        return false;
};

GmCXt.checkUBS = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('ubs.net') > -1 || url.indexOf('pwj.com') > -1)
        return true;
    else
        return false;
};

GmCXt.checkServiceNow = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('service-now.com') > -1)
        return true;
    else
        return false;
};

GmCXt.getCurrentStep = function(stepId) {

    var step = mg$.extend({}, GmCXt.getStepFromPlayerI(stepId));

    if (!step.step_description) step.step_description = " ";

    // Map properties
    step.image_url = step.image_url + GmCXt.getCdnSign();
    step.screen_url = step.screen_url + GmCXt.getCdnSign();

    return step;
};

GmCXt.getNextStep = function() {
    if (GmCXt.playerI) {
        var step = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
        var nextStepId = GmCXt.getTail(step.step_id, GmCXt.playerI.playStructure);

        if (nextStepId) {
            return GmCXt.getStepFromPlayerI(nextStepId);
        } else {
            return null;
        }
    } else {
        return null;
    }
};

GmCXt.getProcessedLang = function(l) {
    var langList = {
        'ar': 'ar-SA',
        'ar-EG': 'ar-EG',
        'ar-SA': 'ar-SA',
        'zh': 'zh-CN',
        'zh-HK': 'zh-HK',
        'zh-CN': 'zh-CN',
        'zh-TW': 'zh-TW',
        'zh-Hant': 'zh-TW',
        'cs': 'cs-CZ',
        'cs-CZ': 'cs-CZ',
        'da': 'da-DK',
        'da-DK': 'da-DK',
        'nl': 'nl-NL',
        'nl-NL': 'nl-NL',
        'en': '',
        'fi': 'fi-FI',
        'fi-FI': 'fi-FI',
        'fr': 'fr-FR',
        'fr-FR': 'fr-FR',
        'fr-CH': 'fr-CH',
        'fr-CA': 'fr-CA',
        'de': 'de-DE',
        'de-AT': 'de-AT',
        'de-DE': 'de-DE',
        'de-CH': 'de-CH',
        'el': 'el-GR',
        'el-GR': 'el-GR',
        'he': 'he-IL',
        'he-IL': 'he-IL',
        'hi': 'hi-IN',
        'hi-IN': 'hi-IN',
        'hu': 'hu-HU',
        'hu-HU': 'hu-HU',
        'id': 'id-ID',
        'id-ID': 'id-ID',
        'it': 'it-IT',
        'it-IT': 'it-IT',
        'ja': 'ja-JP',
        'ja-JP': 'ja-JP',
        'ko': 'ko-KR',
        'ko-KR': 'ko-KR',
        'pl': 'pl-PL',
        'pl-PL': 'pl-PL',
        'pt': 'pt-PT',
        'pt-PT': 'pt-PT',
        'pt-BR': 'pt-BR',
        'ro': 'ro-RO',
        'ro-RO': 'ro-RO',
        'ru': 'ru-RU',
        'ru-RU': 'ru-RU',
        'sk': 'sk-SK',
        'sk-SK': 'sk-SK',
        'es': 'es-ES',
        'es-ES': 'es-ES',
        'es-MX': 'es-MX',
        'sv': 'sv-SE',
        'sv-SE': 'sv-SE',
        'ta': 'ta-IN',
        'ta-IN': 'ta-IN',
        'te': 'te-IN',
        'te-IN': 'te-IN',
        'th': 'th-TH',
        'th-TH': 'th-TH',
        'tr': 'tr-TR',
        'tr-TR': 'tr-TR',
        'vi': 'vi-VN',
        'vi-VN': 'vi-VN'
    };

    var lang = langList[l];

    if (lang)
        return lang;
    else
        return 'en-US';
};

GmCXt.parseMsg = function(e) {

    e = mg$.extend({}, e);
    e.data = GmCXt.parseJSON(e.data);
    GmCXt.log(3, "PARSE MESSAGE " + e.data.action);
    return e.data;
};

GmCXt.browserLang = GmCXt.getProcessedLang(window.navigator.language);

GmCXt.checkLangExist = function(lArr, lang) {
    var retVal = false;

    if (lArr && !GmCXt.isFalse(lang)) {

        for (var i = 0; i < lArr.length; i++) {
            if (lArr[i].language === lang) {
                retVal = true;
                break;
            }
        }
    }

    return retVal;
};

GmCXt.removePreviewFrame = function() {

    mg$('.mgPlayerJSTest_preview-beacon').remove();
    mg$('.mgPlayerJSTest_preview-smarttip').remove();
    mg$('.gssSmarttip-form-submit').removeClass('mgPlayerJSTest_form-submit-preview gssSmarttip-form-submit');
    mg$('.mgPlayerJSTest_duct-tape-invisible-preview').removeClass('mgPlayerJSTest_duct-tape-invisible-preview');

    if (mg$('.mgPlayerJSTest_preview-smarttip-pwr-html').length)
        mg$('.mgPlayerJSTest_preview-smarttip-pwr-html').val('');
};

GmCXt.clearSession = function() {

    if (GmCXt.user) {
        GmCXt.user = false;
    }

    GmCXt.clearBeaconsAndTooltips(true);
    GmCXt.highlighter.clear();

    GmCXt.playedTour = [];
    GmCXt.storage().remove(['playedTour', 'stepsPlayed']);

    if (mg$('.mgPlayerJSTest_task-list-button').length > 0) {
        mg$('.mgPlayerJSTest_task-list-button').remove();
    }
};

GmCXt.clearBeaconsAndTooltips = function(isLogout, idList) {

    if (idList) {
        // Clear specific (if parameter is passed)
        if (idList.length) {
            for (var i = 0; i < idList.length; i++) {
                GmCXt.log(43, 'Clearing tooltips for tour: ' + idList[i]);
                mg$('.mgPlayerJSTest_smarttip-tour-' + idList[i]).remove();
                mg$('.mgPlayerJSTest_duct-tape-smarttip-tour-' + idList[i]).removeClass('mgPlayerJSTest_duct-tape-invisible');
                delete GmCXt.onScreenTooltipGuideInfo['tour_' + idList[i]];
            }

            GmCXt.onScreenTooltipGuideIds = GmCXt.onScreenTooltipGuideIds.filter(function(id) {
                return idList.indexOf(id) === -1;
            });

            GmCXt.partialVisibleTooltipsIds = GmCXt.partialVisibleTooltipsIds.filter(function(id) {
                return idList.indexOf(id) === -1;
            });
        }
    } else {
        // Clear all
        mg$('.mgPlayerJSTest_smarttip-icon').remove();
        mg$('.smarttip-guidance-msg').remove();
        mg$('.mgPlayerJSTest_smarttip').remove();
        mg$('.mgPlayerJSTest_smarttip-valid').remove();
        mg$('.mgPlayerJSTest_duct-tape').remove();
        mg$('.mgPlayerJSTest_duct-tape-invisible').removeClass('mgPlayerJSTest_duct-tape-invisible');
    }

    mg$(".mgPlayerJSTest_beacon-icon").remove();
    GmCXt.beaconsOnScreen = [];

    if (!isLogout) {
        GmCXt.sendMessageToApp("mgPlayerJSTest_action:close_power_form", {});
    }

    GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:forward;remove_active_smarttip_beacon', {
        idList: idList
    });
};

GmCXt.closeAppPanel = function() {
    GmCXt.APP_PANEL_OPEN = false;
    GmCXt.displayWidget();
    GmCXt.displayChatIcon();
    var alignment = GmCXt.getWidgetAlignment();
    mg$(".mgPlayerJSTest_panel .mgPlayerJSTest_app").css(alignment, "-9550px");
    mg$(".mgPlayerJSTest_panel").css(alignment, "-9550px");
    if (alignment === 'right') {
        mg$(".mgPlayerJSTest_panel").css('left', "initial");
    }

    if (GmCXt.isMicroPlayer() || GmCXt.isWBMicroPlayer()) {
        mg$(".mgPlayerJSTest_panel").css("left", "initial");
        mg$(".mgPlayerJSTest_panel").css("top", "50%");
    }

    mg$(".mgPlayerJSTest_panel").attr({
        'aria-hidden': true,
        'tabindex': -1
    });
    mg$("#mgPlayerJSTest_app").attr({
        'aria-hidden': true,
        'tabindex': -1
    });
    mg$(".mgPlayerJSTest_panel").focus();

    GmCXt.sendMessageToApp("mgPlayerJSTest_action:app_panel_closed", {});
};

GmCXt.legacyWildChar = function(v) {
    return GmCXt.decodeVersion(v) <= 2020063002;
};

GmCXt.getMd5 = function(val) {
    return md5(val);
};

GmCXt.getAppsArray = function(apps) {
    var r = [];

    for (var k in apps) {
        if (apps.hasOwnProperty(k)) {
            r.push(k);
        }
    }
    return r;
};

GmCXt.checkGmailSite = function() {
    var url = GmCXt.getUrl();
    if (url.indexOf('mail.google.com') === 0)
        return true;
    else
        return false;
};

GmCXt.sendMessageToDesktopApp = function(msg, d) {
    GmCXt.log(38, "Send message to Desktop App - ", msg, d);
    var url = '';
    var eventList = {
        "clickNext": 'click',
        "onRightClickNext": 'right-click',
        "onKeyupNext": 'keyup',
        "onChangeNext": 'change',
        "hoverNext": 'hover'
    };

    GmCXt.log(33, "Sending message to CAD");
    GmCXt.log(33, msg);

    switch (msg) {
        case 'step_complete':
            url = "event/step_complete" +
                "?step_id=" + d.step_id + "&step_order" + d.step_order;
            break;

        case 'step_failed':
            url = "event/step_failed" +
                "?step_id=" + d.step_id + "&tour_id=" + GmCXt.deskReq.testCaseId + "&jobId=" + GmCXt.deskReq.jobId;
            break;

        case 'trigger_event':
            var event = d.step_settings.completionEvent;
            var as = d.step_settings.automation;
            var query = '';

            if (as.enableDefaultData) {
                query += 'value=' + escape(as.defaultData);
            }
            query += '&human_interaction=' + escape(as.hasHumanInteraction);

            if (as.element && as.element.dataOptionsType) {
                query += '&type=' + escape(as.element.dataOptionsType);
            }

            if (as.file) {
                query += '&filePath=' + escape(as.file);
            }

            var cname = 'doitforme-' + d.step_id;

            url = "action/" + eventList[event] + "/" + cname + "?" + query;

            break;

        case 'image_comparison':
            var msg = 'Finding image match';
            if (!GmCXt.isEmpty(d.step_title)) {
                msg += (" for step '<b>" + d.step_title + "</b>' ");
            }
            GmCXt.toastMsg(msg).show();

            url = 'image_comparison/doitforme-' + d.step_id + '?';
            break;

        case 'task_complete':
            var query = '';

            if (GmCXt.deskReq) {
                if (GmCXt.deskReq.testCaseId) {
                    query += 'tour_id=' + GmCXt.deskReq.testCaseId;
                }
                if (GmCXt.deskReq.jobId) {
                    query += '&jobId=' + GmCXt.deskReq.jobId;
                }

                if (GmCXt.deskReq.jobRunId) {
                    query += '&jobRunId=' + GmCXt.deskReq.jobRunId;
                }
                if (d && d.isError) {
                    query += '&isError=true&errorMessage=' + d.errorMessage;
                }
            }
            if (d && d.entity_code) {
                query += '&entityCode=' + d.entity_code;
            }
            url = "event/task_complete?" + query;
            break;
    }

    if (GmCXt.deskReq && GmCXt.deskReq.driverId) {
        url += "&driver=" + GmCXt.deskReq.driverId;
    }

    GmCXt.log(33, url);

    function cb(tabId) {

        url += '&tabid=' + tabId;

        GmCXt.timeout(function() {
            var params = {
                url: url,
                stepType: (d && d.step_settings) ? d.step_settings.stepType : '',
            };

            if (d && d.step_type === GmCXt.STEP_TYPE_IMAGE) {
                params.info = d;
            }

            GmCXt.callApi(params, "connectMgDesktop");
        }, 3000);
    }
    GmCXt.log(37, "msg send to desktop", url);
    if (GmCXt.isBackgroundPage) {
        cb(GmCXt.trackerUtil.tabId);
    } else {
        GmCXt.sendMessageToBackgroundService({
            action: "mgPlayerJSTest_action:get_current_tab_id"
        }, cb);
    }
};

GmCXt.compareArraysByPercentMatch = function(arr1, arr2, val) {
    var similar = arr1.filter(function(n) {
        return this.has(n);
    }, new Set(arr2));

    var pc = 100 * (similar.length * 2) / (arr1.length + arr2.length);

    val = val || 75;
    return pc >= val;
};

GmCXt.compareObjectsByPercentMatch = function(o1, o2, val, keys) {

    if (!GmCXt.isEmpty(o1) && !GmCXt.isEmpty(o2)) {

        var textKeys = ['aria-label'];
        var matched = 0;
        var compared = 0;
        keys = keys || Object.keys(o1);
        var len = keys.length;

        for (var i = 0; i < len; i++) {
            var key = keys[i];
            if (o1.hasOwnProperty(key) && o2.hasOwnProperty(key)) {
                compared++;
                if (typeof o1[key] === 'object') {
                    if (Array.isArray(o1[key])) {
                        if (GmCXt.compareArraysByPercentMatch(o1[key], o2[key], 50)) matched++;
                    } else if (GmCXt.compareObjectsByPercentMatch(o1[key], o2[key], 50)) matched++;
                } else {
                    if (textKeys.includes(key) && o1[key] !== o2[key]) return false;
                    if (o1[key] === o2[key]) matched++;
                }
            }
        }

        if (!compared) return false;

        var currentPc = 100 * matched / compared;
        var pc = val || 75;

        if (currentPc >= pc) {
            return true;
        }
    }

    return false;
};

GmCXt.checkInsightEnabled = function() {
    var org = GmCXt.organization;
    if (org && org.admin_settings.insights.enabled && org.admin_settings.insights.guide) {
        return true;
    }
    return false;
};

GmCXt.getBasePath = function(i) {
    var url = "";
    if (GmCXt.isExtension()) {
        url = GmCXt.getBrowserUrl(i);
    } else {
        if (GmCXt.isDefined(GmCXt.conf.baseUrl)) {
            url = GmCXt.conf.baseUrl + i;
        } else {
            url = GmCXt.conf.clientJsBaseUrl + i;
        }
    }

    return url;
};

// Only applicable after version 2021.01.30.1
GmCXt.checkTourCreatedBefore = function(tourSettings, version) {
    return (!tourSettings.hasOwnProperty('created_version') || GmCXt.decodeVersion(tourSettings.created_version) < version);
};

GmCXt.getTourSegmentDetail = function(tour) {
    var segmentDetails = [];
    var tour_segs = tour.tour_settings.segment_groups;
    tour_segs.forEach(function(s) {
        var sg = GmCXt.getSegmentById(s);
        if (!GmCXt.isEmpty(sg)) {
            segmentDetails.push(sg);
        }
    });
    return segmentDetails;
};

GmCXt.getSegmentById = function(id) {
    if (GmCXt.allSegments) {
        return GmCXt.allSegments.filter(function(g) {
            return parseInt(g.group_id) === parseInt(id);
        })[0];
    } else return {};
};

GmCXt.validatedSegments = {};

GmCXt.areUserSegmentsValid = function(segments, segmentId) {
    var userProfileData = GmCXt.user.profile ? JSON.parse(GmCXt.user.profile) : "";
    var isValid = false;

    var userData = [];
    if (userProfileData && Object.prototype.toString.call(userProfileData) !== '[object Array]') {
        for (var i = 0; i < Object.keys(userProfileData).length; i++) {
            key = Object.keys(userProfileData)[i];
            value = userProfileData[key];
            userData.push({
                data: value
            });
        }
    } else {
        userData = userProfileData;
    }

    if (!userData) return isValid;

    if (!segments || !segments.length) return true;

    if (GmCXt.user.role !== "user") return true;

    for (var i = 0; i < segments.length; i++) { // For each segment in the segmentation
        if (!GmCXt.isEmpty(segments[i].data)) {
            for (var j = 0; j < userData.length; j++) {
                if (userData[j].id && !GmCXt.isEmpty(userData[j].data) && parseInt(segments[i].id) === parseInt(userData[j].id)) {
                    isValid = false;
                    for (var k = 0; k < segments[i].data.length; k++) {
                        if (userData[j].data.includes(segments[i].data[k])) {
                            isValid = true;
                            break;
                        }
                    }
                } else if (!GmCXt.isDefined(userData[j].id) && !GmCXt.isEmpty(userData[j].data)) {
                    for (var k = 0; k < segments[i].data.length; k++) {
                        if (userData[j].data.includes(segments[i].data[k])) {
                            isValid = true;
                            break;
                        }
                    }
                }
            }
            if (!isValid) break;
        }
    }

    GmCXt.log(68, "Valid User Segments: ", isValid);
    return isValid;
};

GmCXt.getSegmentSetting = function(segmentId) {
    var segment = GmCXt.getSegmentById(segmentId);

    var segmentSettings, segmentSetting;
    if (!GmCXt.isEmpty(segment) && segment.settings) {
        segmentSettings = GmCXt.parseJSON(segment.settings);
        for (var key in segmentSettings) {
            if (segmentSettings.hasOwnProperty(key)) {
                if (segmentSettings[key] === 1) {
                    segmentSetting = key;
                    break;
                }
            }
        }
    }

    return segmentSetting;
};

GmCXt.checkGuidesBasedOnSegment = function(tours, cb, from) {

    if (!tours || !tours.length) {
        cb({});
        return;
    }

    var allSegment = [];
    var totalSegment = 0;
    var toursProcessed = 0;
    var segmentProcessed = 0;
    var validatedTours = [];

    var totalTours = tours.length;

    function checkTourSegment(s_id) {
        tours.forEach(function(tour) {

            GmCXt.log(68, "Check Segments in Tour: " + GmCXt.tourLog(tour));

            var isSegmentValid = false;
            var segments = tour.tour_settings.segment_groups;
            if (GmCXt.inArray(segments, s_id)) {
                for (var i = 0; i < segments.length; i++) { // For each segmentation added
                    if (GmCXt.validatedSegments[segments[i]]) {
                        isSegmentValid = true;
                        break;
                    }
                }
                if (isSegmentValid && !GmCXt.inArray(tour.tour_id, validatedTours)) {

                    validatedTours.push(parseInt(tour.tour_id));

                    toursProcessed++;

                    GmCXt.log(68, "VALID Tour segments: " + GmCXt.tourLog(tour));

                }

                if (segments.length > 0) {

                    var segmentSetting = GmCXt.getSegmentSetting(segments[0]);

                    switch (segmentSetting) {
                        case 'show_guides_user_in_segment':
                            if (isSegmentValid) cb(tour); // Show the guide if user is part of the segment and `activeSegmentSetting` is "show_guides_user_in_segment"
                            break;
                        case 'hide_guides_user_in_segment':
                            if (!isSegmentValid) cb(tour); // Hide the guide if user is part of the segment and `activeSegmentSetting` is "hide_guides_user_in_segment"
                            break;
                        case 'show_guides_user_not_in_segment':
                            if (!isSegmentValid) cb(tour); // Show the guide if user is not part of the segment and `activeSegmentSetting` is "show_guides_user_not_in_segment"
                            break;
                        default:
                            if (isSegmentValid) cb(tour); // Default case
                            break;
                    }
                }
            }
        });
    }

    // segment rules call back
    function segmentRuleCallBack(r) {

        segmentProcessed++;

        if (GmCXt.isTrue(r.valid)) {
            GmCXt.validatedSegments[r.segmentId] = true;
            GmCXt.log(68, "Validat Segment ", r);
        }

        if (toursProcessed !== totalTours) {
            checkTourSegment(r.segmentId);
        }

        // if all segment is validated and no tour is processed
        if (segmentProcessed === totalSegment && toursProcessed === 0) {
            cb({});
        }

    }

    // get all segments from the tour
    tours.forEach(function(tour, i) {
        if (tour.tour_settings.segment_groups.length > 0) {
            allSegment.push(tour.tour_settings.segment_groups);
        } else {
            validatedTours.push(parseInt(tour.tour_id));
            toursProcessed++;
            cb(tour);
        }
    });

    var flattenAllsegment = allSegment.reduce(function(seg, val) {
        return seg.concat(val);
    }, []);

    allSegment = GmCXt.removeDuplicates(flattenAllsegment);
    totalSegment = allSegment.length;

    allSegment.forEach(function(segmentId, i) {

        GmCXt.log(68, "Validating Segment: ", segmentId);
        var segment = GmCXt.getSegmentById(segmentId);

        //if role based segments inside a segment group are not in user.profile, Invalidate those segment groups
        if (segment && !GmCXt.areUserSegmentsValid(segment.segments, segmentId)) {

            GmCXt.log(68, "Invalid User Segments: ", segmentId);
            segmentRuleCallBack({
                valid: false,
                segmentId: segmentId
            });
        } else if (GmCXt.validatedSegments[segmentId] && (segment && !segment.rule_check)) {
            //re-eval seg rules only if On page click option is selected
            segmentRuleCallBack({
                valid: true,
                segmentId: segmentId
            });
        } else {
            var rules = (segment && segment.rules && segment.rules.length) ? GmCXt.parseJSON(segment.rules) : [];
            var title = segment ? segment.title : "Segment not found";

            if (GmCXt.validatedSegments[segmentId]) {
                delete GmCXt.validatedSegments[segmentId];
            }

            var data = {
                rules: rules,
                tour: {
                    tour_id: segmentId,
                    tour_settings: {},
                    tour_title: title
                },
                timeoutVal: GmCXt.t.ruleTimeOut10s,
                timeout: GmCXt.t.ruleTimeOut10s,
                cb: segmentRuleCallBack,
                isTour: true,
                initiator: from,
                segmentId: segmentId
            };

            GmCXt.ruleEngine.queue(data);
        }

    });
};

GmCXt.takeScreenshot = function() {
    var promise = new Promise(function(resolve, reject) {
        if (GmCXt.isElectron()) {
            var _electron = require('electron').remote;
            _electron.getCurrentWindow().capturePage().then(function(img) {
                resolve(img.toDataURL());
            });
        } else if (GmCXt.isExtension()) {
            var m = {
                action: "mgPlayerJSTest_action:capture_browser_screen"
            };
            GmCXt.sendMessageToBackgroundService(m, function(resp) {
                resolve(resp.imgSrc);
            });
        } else {
            resolve(0);
        }
    });
    return promise;
};

GmCXt.triggerForOtherFunctions = function(id, ev) {
    switch (id) {
        case "mgPlayerJSTest_play_step_popup_drag":
        case "mgPlayerJSTest_play-step-popup-drag-icon":

            break;
        case "mgPlayerJSTest_play-step-audio-off":
            if (GmCXt.previewStepPopupInstance) {
                GmCXt.previewStepPopupInstance.setOnAudioMode();
            }
            break;
        case "mgPlayerJSTest_play-step-audio-on":
            if (GmCXt.previewStepPopupInstance) {
                GmCXt.previewStepPopupInstance.setOffAudioMode();
            }
            break;
    }
};

GmCXt.checkAndCallClick = function(target, ev) {
    if (GmCXt.isIDinGuidePlayList(target.id)) {
        if (ev.type === "mousedown") {
            GmCXt.tourPlayerI.triggerMyGuideClickMouseDown(ev);
        }
        GmCXt.tourPlayerI.triggerMyGuideClick(target.id, ev);
    } else if (GmCXt.isIDinOtherList(target.id)) {
        GmCXt.triggerForOtherFunctions(target.id, ev);
    } else if (GmCXt.checkMyGuideClass(target.className)) {
        GmCXt.checkAndCallClick(target.parentElement, ev);
    }
};

GmCXt.checkForSVGInstance = function(target) {
    var retTarget = target;
    if (target instanceof SVGElement) {
        retTarget = GmCXt.checkForSVGInstance(target.parentNode);
    }
    return retTarget;
};

GmCXt.registerClickListner = function(e) {
    var target = GmCXt.checkForSVGInstance(e.target);
    if (target && GmCXt.checkMyGuideClass(target.className)) {
        GmCXt.checkAndCallClick(target, e);
        if (GmCXt.playerI && GmCXt.playerI.automate) {
            GmCXt.checkSkipStepForTracking();
        }
    }
};

GmCXt.isIDinOtherList = function(id) {
    var retVal = false;
    var idList = ["mgPlayerJSTest_play_step_popup_drag", "mgPlayerJSTest_play-step-popup-drag-icon", "mgPlayerJSTest_play-step-audio-off",
        "mgPlayerJSTest_play-step-audio-on"
    ];

    if (GmCXt.inArrayString(id, idList)) {
        retVal = true;
    }

    return retVal;
};

GmCXt.isIDinGuidePlayList = function(id) {
    var retVal = false;
    var idList = ["mgPlayerJSTest_play_step_pause_classic", "mgPlayerJSTest_play_step_next", "mgPlayerJSTest_play_step_next_classic",
        "mgPlayerJSTest_play_step_prev", "mgPlayerJSTest_play_step_prev_classic", "mgPlayerJSTest_play_step_popup_close",
        "mgPlayerJSTest_play_step_pause", "mgPlayerJSTest_play_step_next_done", "mgPlayerJSTest_play_step_next_done_classic",
        "mgPlayerJSTest_play_step_popup_edit",
        "mgPlayerJSTest_play-step-popup-close-svg", "mgPlayerJSTest_play-step-popup-edit-icon",
        "mgPlayerJSTest_play-step-pause-svg"
    ];

    if (GmCXt.inArrayString(id, idList)) {
        retVal = true;
    }

    return retVal;
};

GmCXt.tooltipTitle = function(os, pEle) {
    var tTitleCss = "<div class='mgPlayerJSTest_tooltip-title-css'><style type='text/css'>" +
        "." + pEle + " p:first-child {" + "color: " + os.popupDesign.current.stepTitleColor + " !important; " +
        "font-family: " + os.popupDesign.current.stepTitleFontFamily + " !important; " +
        "font-size: " + os.popupDesign.current.stepTitleFontSize + " !important; " +
        "font-weight: " + os.popupDesign.current.stepTitleFontWeight + " !important; " +
        "padding-bottom: 10px !important;" +
        "}" +
        "</style></div>";

    return mg$("html").append(tTitleCss);
};

GmCXt.tooltipPopupCss = function(os, customEle) {

    var popUpCSS = "<div class='mgPlayerJSTest_tooltip-popup-css'><style type='text/css'>" +
        customEle + ".smarttip-guidance-msg-top:before {" +
        "border-top-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-top:after {" +
        "border-top-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-right:before {" +
        "border-right-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-right:after {" +
        "border-right-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-bottom:before {" +
        "border-bottom-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-bottom:after {" +
        "border-bottom-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-left:before {" +
        "border-left-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-left:after {" +
        "border-left-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-center:before {" +
        "border-left-color:" + os.popupDesign.current.bgColor + " !important;" +
        "}" +
        customEle + ".smarttip-guidance-msg-center:after {" +
        "border-left-color:" + os.popupDesign.current.borderColor + " !important;" +
        "}" +
        "</style></div>";

    return mg$("html").append(popUpCSS);
};

GmCXt.tooltipTheme = function(os, customEle, options) {

    var isTooltipTheme = os.tooltipTheme;
    var popupWidth = options && options.popupSize && options.popupSize.popupWidth ? options.popupSize.popupWidth : os.stepPopupWidth;

    var tObj = {
        'tooltipBgColor': '',
        'tooltipDescColor': '',
        'tooltipDescFfamily': '',
        'tooltipDescFsize': '',
        'tooltipBorderC': '',
        'tooltipBorderW': '',
        'tooltipBorderRadius': '',
        'tooltipMwidth': '',
        'tooltipWidth': '',
        'tooltipPaddingTop': '',
        'tooltipPaddingBottom': '',
        'tooltipPaddingLeft': '',
        'tooltipPaddingRight': ''
    };

    if (isTooltipTheme) {
        tObj.tooltipBgColor = "background:" + os.popupDesign.current.bgColor + " !important; box-shadow: rgb(0 0 0 / 50%) 0 0 10px -2px !important;";
        tObj.tooltipDescColor = "color:" + os.popupDesign.current.stepDescColor + " !important; ";
        tObj.tooltipDescFfamily = ("font-family:" + os.popupDesign.current.stepDesFontFamily + " !important; ").replace(/'/g, "\"");
        tObj.tooltipDescFsize = "font-size:" + os.popupDesign.current.stepDesFontSize + " !important; ";
        tObj.tooltipBorderC = "border-color:" + os.popupDesign.current.borderColor + " !important; ";
        tObj.tooltipBorderW = "border-width:" + os.popupDesign.current.borderWidth + "px !important; ";
        tObj.tooltipBorderRadius = "border-radius:" + os.popupDesign.current.borderRadius + "px !important; ";
        tObj.tooltipMwidth = "max-width:" + os.stepPopupWidth + "px !important; ";
        tObj.tooltipWidth = "width:" + popupWidth + "px !important; padding: 15px 15px 5px 15px !important; white-space: normal !important; line-height: initial !important;";
        tObj.tooltipPaddingTop = "padding-top:" + os.popupDesign.current.padding.top + "px !important; ";
        tObj.tooltipPaddingBottom = "padding-bottom:" + os.popupDesign.current.padding.bottom + "px !important; ";
        tObj.tooltipPaddingLeft = "padding-left:" + os.popupDesign.current.padding.left + "px !important; ";
        tObj.tooltipPaddingRight = "padding-right:" + os.popupDesign.current.padding.right + "px !important; ";

        GmCXt.tooltipPopupCss(os, customEle);
        GmCXt.tooltipTitle(os, 'smarttip-msg-inner');
    } else {
        tObj.tooltipBorderC = "border-color:" + os.tooltipColor + " !important; ";

        mg$(".mgPlayerJSTest_tooltip-popup-css").remove();
        mg$(".mgPlayerJSTest_tooltip-title-css").remove();
    }

    return tObj;
};

GmCXt.stringUsesVariable = function(str) {
    return (str.includes('{{') && str.includes('}}'));
};

GmCXt.replaceVariableWithValue = function(str) {
    var variables = GmCXt.getVariableData();
    if (GmCXt.stringUsesVariable(str)) {
        var isValid = false;
        for (var i = 0; i < variables.length; i++) {
            var regex = new RegExp('\{\{(?:\\s+)?(' + RegExp.escape(variables[i].name) + ')(?:\\s+)?\}\}', "g");
            isValid = regex.test(str);
            if (isValid && variables[i].value) {
                str = str.replace(regex, variables[i].value);
            }
        }
    }
    return str;
};

GmCXt.replaceVariableInText = function(str) {
    var regex = new RegExp('\{\{(?:\\s+)?(.+?)(?:\\s+)?\}\}', "g");
    var isValid = false;
    isValid = regex.test(str);
    if (isValid) {
        str = str.replace(regex, '').replace(/\s\s+/g, ' ');
    }
    return str;
};

GmCXt.variableRuleExistInGuide = function(rules) {
    for (var k = 0, l = rules.length; k < l; k++) {
        if (rules[k].type === 'Variables') {
            return true;
        }
    }
    return false;
};

GmCXt.updateZIndex = function(zIndex, add) {
    if (zIndex) {
        var updateBy = add ? 1 : -1;
        return (parseInt(zIndex) + updateBy).toString();
    }
    return "";
};

GmCXt.skipTags = function(he) {
    if (GmCXt.isSvgTag(he.tagName)) {

        he = he.parentNode;

        while (he && he.parentNode && GmCXt.isSvgTag(he.tagName)) {
            he = he.parentNode;
        }
    }

    if (GmCXt.checkSalesForceSite()) {
        if (he.tagName === 'LIGHTNING-PRIMITIVE-ICON') {
            he = he.parentNode;
        }

        var parent = he.parentNode;
        if (parent && he.tagName === 'BUTTON' &&
            (parent.tagName === 'LIGHTNING-BUTTON-ICON' || parent.tagName === 'LIGHTNING-BUTTON')) {
            he = parent;
        }
    }
    return he;
};

GmCXt.validateUrl = function(url) {

    var expression = /^(?:(?:https?|ftp):\/\/)?(?:[\w-]+\.)+[a-z]{2,}(?::\d{2,5})?(?:\/\S*)?$/i;
    if (expression.test(url)) {
        return true;
    } else {
        return false;
    }
};

GmCXt.trackElNotFound = function(d) {

    GmCXt.log(27, "track Element Not Found");

    return; // Stop "mi_rule_enhancement" events temporary for MG-25171

    // if (window.self === window.top) {
    //     GmCXt.trackerV1.trackElNotFound(d);
    // } else {
    //     GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:track_element_not_found', d);
    // }
};

GmCXt.onPopupRerender = function() {
    if (mg$('#mgPlayerJSTest_popup-reload').length > 0) {
        var forceClose = !GmCXt.playerI.testAutomation;
        GmCXt.confirmTourClose(forceClose);
    }
};

GmCXt.concatHTMLStringWithSpace = function(str) {
    if (GmCXt.isEmpty(str)) return str;
    str = str.split('</p>').join(' ');
    str = str.split('</div>').join(' ');
    str = str.split('</li>').join(' ');
    str = mg$('<span />').html(str).text().trim();
    return str;
};

GmCXt.resetElTracker = function() {
    if (window.self === window.top) {
        GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:reset_dom_tracker');
    }
};

GmCXt.resetElTrackerVariable = function() {
    if (!GmCXt.isEmpty(GmCXt.domSelectorTracker) && !GmCXt.isEmpty(GmCXt.domSelectorTracker[GmCXt.id])) {
        // Reset tracker
        GmCXt.domSelectorTracker = {};
    }
};

GmCXt.logElTracker = function() {
    if (window.self === window.top) {
        GmCXt.logTrackerData = false;
        GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:request_dom_tracker_info');
    }
};

GmCXt.shareDomTrackerInfo = function() {
    if (window.self !== window.top) {
        if (GmCXt.isEmpty(GmCXt.domSelectorTracker)) {
            GmCXt.domSelectorTracker[GmCXt.id] = {};
        }
        GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:send_dom_tracker_info', GmCXt.domSelectorTracker);
    } else {
        GmCXt.combineDomTrackerData();
    }
};

GmCXt.combineDomTrackerData = function(info) {
    if (window.self === window.top) {
        var finder = {};
        var query = {};
        var totalFinder = 0;
        var totalQuery = 0;
        var iFrameTally = 0;

        if (info) {
            GmCXt.domSelectorTracker = Object.assign(GmCXt.domSelectorTracker, info);
        }

        GmCXt.timeout(function() {
            if (!GmCXt.logTrackerData) {
                for (var i in GmCXt.domSelectorTracker) {
                    if (!GmCXt.isEmpty(GmCXt.domSelectorTracker[i])) {
                        iFrameTally++;
                        var iframeInfo = GmCXt.domSelectorTracker[i];
                        for (var key in iframeInfo) {
                            var elInfo = iframeInfo[key];

                            finder[key] = elInfo.finder;
                            totalFinder += elInfo.finder;

                            query[key] = elInfo.query;
                            totalQuery += elInfo.query;
                        }
                    }
                }
                var css = "color:#00a6d9;";
                console.log("%cNo. of iframes Searched –", css, iFrameTally);
                console.log("%cTotal calls to dom.finder() –", css, totalFinder);
                console.log("%cCalls to dom.finder() segregated by element –", css, finder);
                console.log("%cTotal calls to dom.query() –", css, totalQuery);
                console.log("%cCalls to dom.query() segregated by element –", css, query);

                GmCXt.logTrackerData = true;
            }
        }, 1500);
    }
};

GmCXt.handleLinkClickEvent = function(e) {
    var url = e.currentTarget.href;
    var mediaType = GmCXt.getURLMediaType(url);

    function isSmarttipLink(linkElem) {
        while (linkElem) {
            if (linkElem.classList.value.indexOf('smarttip') !== -1) return true;
            linkElem = linkElem.parentElement;
        }
        return false;
    }

    if (!GmCXt.isEmpty(e.target.tid) && !GmCXt.isEmpty(e.target.sid) &&
        !GmCXt.isEmpty(e.target.opt) && isSmarttipLink(e.target)) {
        var linkData = GmCXt.parseJSON(e.target.opt);
        linkData.tooltipURL = e.target.href;
        GmCXt.updateTooltipActionInfo(e.target.tid, e.target.sid, linkData, "url_click");
    }

    if (mediaType) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        if (mediaType === "pdf") {
            GmCXt.sendMessageToApp("mgPlayerJSTest_action:open_pdf", e.target.href);
        } else {
            GmCXt.sendMessageToApp("mgPlayerJSTest_action:open_video_player", e.target.href);
        }
    } else if (GmCXt.isElectron()) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        GmCXt.redirectLinkToBrowser(e);
    }

    GmCXt.storage().set({
        'linkClickOnStep': url
    });
};

GmCXt.isStepInlineBranch = function(s) {
    var retVal = false;
    if (s && s.step_settings && GmCXt.isTrue(s.step_settings.inlineBranch)) {
        retVal = true;
    }
    return retVal;
};

GmCXt.getVariableData = function() {
    var varData = false;

    if (!GmCXt.isEmpty(GmCXt.appList) && GmCXt.activeAppId && GmCXt.appList['app:' + GmCXt.activeAppId]) {
        var appId = GmCXt.getBaseAppId();
        varData = GmCXt.appList['app:' + appId].settings.variables;
    }

    return varData;
};

GmCXt.workdayAutoClick = function(index) {
    if (GmCXt.playerI) {
        var editIcon = "[data-automation-id='actionImage']";
        var el = mg$(editIcon)[index];
        mg$(el).trigger("click");
    }
};

GmCXt.captureScreenForFeedback = function(mailTo) {
    if (mailTo) {
        GmCXt.mailTo = mailTo;
    }

    GmCXt.takeScreenshot().then(function(imageSrc) {

        if (GmCXt.isEmpty(imageSrc)) {
            mg$(".mgPlayerJSTest_feedback-overlay-svg-error").show();
            mg$(".mgPlayerJSTest_feedback-re-edit-btn").hide();
            mg$("#mg-feedback-screenshot-check").removeAttr("checked");
        } else {
            mg$(".mgPlayerJSTest_feedback-overlay-svg-error").hide();
            mg$(".mgPlayerJSTest_feedback-re-edit-btn").show();
        }

        var img = mg$("#mg-feedback-screenshot-image");
        img.attr('src', imageSrc);
        GmCXt.feedbackImgSrc = imageSrc;
        GmCXt.showFeedBackToolbar();
    });
};

GmCXt.showFeedBackToolbar = function() {
    mg$("#mg-feedback-container-wrapper").show();
    GmCXt.showFeedBackPopup();
};

GmCXt.showFeedBackPopup = function() {
    mg$('DIV#mg-feedback-selector-toolbar').hide();
    mg$('DIV#mg-feedback-popup').show();
};

GmCXt.showFeedBackSelectorToolbar = function() {
    mg$('DIV#mg-feedback-popup').hide();
    mg$('DIV#mg-feedback-selector-toolbar').show();
};

GmCXt.onEditScreenshotClick = function() {
    GmCXt.showFeedBackSelectorToolbar();
};

GmCXt.onClickFeedbackHighlightArea = function() {
    var div = document.getElementById('mgPlayerJSTest_highlight');
    GmCXt.feedbackMarkArea(div);
};

GmCXt.onClickFeedbackHideArea = function() {
    var div = document.getElementById('mgPlayerJSTest_blackout');
    GmCXt.feedbackMarkArea(div, true);
};

GmCXt.onClickFeedbackEditDone = function() {
    mg$('DIV#mg-feedback-selector-toolbar').hide();
    GmCXt.captureScreenForFeedback();
};

GmCXt.feedbackMarkArea = function(div, hide) {
    var toolbar = mg$('DIV#mg-feedback-selector-toolbar');
    toolbar.hide();

    var wrapper = document.getElementById("mg-feedback-flex-container");
    wrapper.style.cursor = 'crosshair';
    wrapper.style.background = 'transparent';

    var x1 = 0,
        y1 = 0,
        x2 = 0,
        y2 = 0;

    function reCalc() {
        var x3 = Math.min(x1, x2);
        var x4 = Math.max(x1, x2);
        var y3 = Math.min(y1, y2);
        var y4 = Math.max(y1, y2);
        div.style.left = x3 + 'px';
        div.style.top = y3 + 'px';
        div.style.width = x4 - x3 + 'px';
        div.style.height = y4 - y3 + 'px';
    }

    var onmousedown = function(e) {
        e.preventDefault();
        div.style.display = 'block';
        x1 = e.clientX;
        y1 = e.clientY;
        reCalc();
    };

    var onmousemove = function(e) {
        x2 = e.clientX;
        y2 = e.clientY;
        reCalc();
    };

    var onmouseup = function(e) {
        var el = {
            id: 'r_' + Math.floor(Math.random() * 1000),
            element: {
                position: {
                    top: y1,
                    left: x1,
                    height: y2 - y1,
                    width: x2 - x1
                }
            }
        };
        div.style.display = 'none';
        wrapper.style.cursor = 'default';

        if (hide) {
            if (!GmCXt.sfHideElements) {
                GmCXt.sfHideElements = [];
            }
            GmCXt.sfHideElements.push(el);
            GmCXt.drawArea(GmCXt.sfHideElements, 'blackout-feedback');
        } else {
            if (!GmCXt.sfMarkElements) {
                GmCXt.sfMarkElements = [];
            }
            GmCXt.sfMarkElements.push(el);
            GmCXt.drawArea(GmCXt.sfMarkElements, 'highlight');
        }

        wrapper.style.background = '#26273b33';
        toolbar.show();

        wrapper.removeEventListener('mousedown', onmousedown);
        wrapper.removeEventListener('mouseup', onmouseup);
        wrapper.removeEventListener('mousemove', onmousemove);
    };

    wrapper.addEventListener('mousedown', onmousedown);
    wrapper.addEventListener('mouseup', onmouseup);
    wrapper.addEventListener('mousemove', onmousemove);
    div.onmouseup = onmouseup;
};

GmCXt.drawArea = function(arr, className) {
    var elems = arr;
    mg$('DIV.mgPlayerJSTest_selector-' + className).remove();

    for (var i = 0; i < elems.length && elems[i].id; i++) {
        var el = elems[i].element.position;

        var closeBtn = '<div class="mgPlayerJSTest_close-area mgPlayerJSTest_' + className + '-close" id=' + elems[i].id + '><div class="close-text">&times;</div></div>';
        var blackoutEl = mg$('<div class="mgPlayerJSTest_selector-' + className + '" id="mgPlayerJSTest_selector-' + className + '-' + elems[i].id + '">' +
                closeBtn +
                '</div>')
            .appendTo('#mg-feedback-flex-container')
            .css({
                'width': el.width,
                'height': el.height,
                'left': el.left,
                'top': el.top
            });
    }

    mg$("DIV.mgPlayerJSTest_" + className + "-close").on('click', function(e) {
        var oArr = [];
        arr.forEach(function(el, i) {
            if (el.id !== e.currentTarget.id) oArr.push(el);
        });
        arr = oArr;
        mg$("#mgPlayerJSTest_selector-" + className + "-" + e.currentTarget.id).remove();
    });
};

GmCXt.sendFeedback = function() {
    var feedbackText = document.getElementById("mg-feedback").value;
    var emailBody = {};

    if (GmCXt.isEmpty(feedbackText)) {
        var option = {
            description: GmCXt.label.feedbackRequired,
            button1: GmCXt.label.ok
        };
        GmCXt.alertV2(option).show();
        return;
    }

    emailBody.feedbackText = feedbackText;

    if (GmCXt.mailTo) {
        emailBody.mailTo = GmCXt.mailTo;
    }

    if (GmCXt.user) {
        var userInfo = {
            email: GmCXt.user.user_email,
            firstName: GmCXt.user.first_name,
            lastName: GmCXt.user.last_name
        };
        emailBody.userInfo = JSON.stringify(userInfo);
    }

    if (mg$('#mg-feedback-screenshot-check')[0].checked) {
        emailBody.imgSrc = GmCXt.feedbackImgSrc;
    }

    GmCXt.clearFeedBackView();

    GmCXt.api.sendFeedbackEmail(emailBody);
};

GmCXt.clearFeedBackView = function() {
    mg$("#mg-feedback-container-wrapper").remove();
    mg$('.mgPlayerJSTest_selector-highlight').remove();
    GmCXt.sfMarkElements = [];
    mg$('.mgPlayerJSTest_selector-blackout-feedback').remove();
    GmCXt.sfHideElements = [];
    GmCXt.mailTo = '';
    GmCXt.openAppPanel();
};

GmCXt.numberOfSameTail = function(id, ps) {
    let counter = 0;
    if (ps && ps.length) {
        for (var i = 0; i < ps.length; i++) {
            if (parseInt(ps[i].tail) === parseInt(id)) {
                counter++;
            }
        }
    }
    return counter;
};

GmCXt.getExcludedDomainList = function() {
    var excludedDomains = [];
    var os = GmCXt.getOrgSettings();
    if (os && os.excludeDomains && !GmCXt.isEmpty(os.excludeDomains)) {
        excludedDomains = os.excludeDomains;
    }
    return excludedDomains;
};

GmCXt.isExcludeDomain = function() {
    var isEx = false;
    if (GmCXt.urlParts && GmCXt.urlParts.fullUrl && GmCXt.isPlayer()) {
        var url = GmCXt.urlParts.host + GmCXt.urlParts.pathname;
        var excludeDomainList = GmCXt.getExcludedDomainList();

        if (excludeDomainList) {
            for (var x = 0; x < excludeDomainList.length; x++) {
                if (url && url.toLowerCase().includes(GmCXt.trimAndLowerCaseURL(excludeDomainList[x]))) {
                    isEx = true;
                    break;
                }
            }
        }
    }
    return isEx;
};

GmCXt.getStepPosFromPs = function(t, sId) {
    var pos = "";
    var PS = t.tour_settings.play_structure;

    for (var i = 0; i < PS.length; i++) {
        if (PS[i].id === sId) {
            pos = i + 1;
            break;
        }
    }

    return pos;
};

GmCXt.isValueInArray = function(array, keyToFind, valueToFind) {
    return array.some(function(obj) {
        return obj[keyToFind] === valueToFind;
    });
};

GmCXt.checkDomainInPublishedEnv = function(pubEnv) {
    var domainInPublishedEnv = false;
    if (GmCXt.isDefined(pubEnv)) {
        var domainEnv = GmCXt.getAppEnvByDomain();
        if (pubEnv.includes(domainEnv)) {
            domainInPublishedEnv = true;
        }
    } else {
        domainInPublishedEnv = true;
    }
    return domainInPublishedEnv;
};

GmCXt.updateNumericKeys = function(key) {
    var lastKey = key.slice(-1);
    var numKey = parseInt(lastKey);

    var specialCharArr = [")", "!", "@", "#", "$", "%", "^", "&", "*", "("];

    if (!isNaN(numKey)) {
        return key.slice(0, -1) + specialCharArr[numKey];
    } else {
        return key;
    }
};

GmCXt.addHttpIfMissing = function(url) {
    if (!url.trim().startsWith('http://') && !url.trim().startsWith('https://')) {
        url = 'https://' + url;
    }
    return url;
};

GmCXt.checkScheduleTime = function(tour) {
    if (tour.tour_settings && tour.tour_settings.visibilitySettings && tour.tour_settings.visibilitytimestamp) {
        var tourTs = tour.tour_settings.visibilitytimestamp;
        var currentTS = Date.now();
        if (parseInt(currentTS) < tourTs) {
            return false;
        } else {
            return true;
        }
    } else {
        return true;
    }
};

GmCXt.filterScheduleTours = function(tours) {
    var tours = tours.filter(function(tour) {
        if (GmCXt.checkScheduleTime(tour)) {
            return tour;
        }
    });

    return tours;
};

GmCXt.getCombinedDateFromTimestamp = function(timestamp) {
    // Create a new Date object with the timestamp in milliseconds
    var date = new Date(timestamp * 1000);

    // Extract the day, month, and year components from the Date object
    var day = date.getDate().toString().padStart(2, '0');
    var month = (date.getMonth() + 1).toString().padStart(2, '0'); // Month is zero-based, so we add 1
    var year = date.getFullYear();

    // Combine the components into a date string in the format "YYYY-MM-DD"
    var combinedDate = `${year}-${month}-${day}`;

    // Return the combined date string
    return combinedDate;
};

GmCXt.compareDates = function(dateStr1, dateStr2) {
    // Split the date strings into arrays of year, month, and day components
    var date1Components = dateStr1.split('-').map(Number);
    var date2Components = dateStr2.split('-').map(Number);

    // Compare year first
    if (date1Components[0] < date2Components[0]) {
        return -1;
    } else if (date1Components[0] > date2Components[0]) {
        return 1;
    }

    // If years are equal, compare months
    if (date1Components[1] < date2Components[1]) {
        return -1;
    } else if (date1Components[1] > date2Components[1]) {
        return 1;
    }

    // If months are equal, compare days
    if (date1Components[2] < date2Components[2]) {
        return -1;
    } else if (date1Components[2] > date2Components[2]) {
        return 1;
    }

    // If all components are equal, return 0
    return 0;
};

GmCXt.compareTimes = function(timeStr1, timeStr2) {
    // Split the time strings into hours and minutes
    var hoursMinutes1 = timeStr1.split(':');
    var hoursMinutes2 = timeStr2.split(':');
    var hours1 = parseInt(hoursMinutes1[0], 10);
    var hours2 = parseInt(hoursMinutes2[0], 10);
    var minutes1 = parseInt(hoursMinutes1[1], 10);
    var minutes2 = parseInt(hoursMinutes2[1], 10);

    // Compare hours
    if (hours1 < hours2) {
        return -1;
    } else if (hours1 > hours2) {
        return 1;
    } else {
        // Hours are equal, compare minutes
        if (minutes1 < minutes2) {
            return -1;
        } else if (minutes1 > minutes2) {
            return 1;
        } else {
            // Minutes are equal
            return 0;
        }
    }
};

GmCXt.truncate = function(text, maxlength) {
    if (!text) return '';
    return text.length > maxlength ? text.substring(0, maxlength) + '...' : text;
}

GmCXt.htmlToPlaintext = function(html) {
    return new DOMParser().parseFromString(html, 'text/html').body.textContent;
}

GmCXt.isCurrentHost = function(host) {
    if (GmCXt.urlParts && (GmCXt.urlParts.host.indexOf(host) !== -1 || location.href.indexOf(host) !== -1))
        return true;
    else
        return false;
};

GmCXt.getOrgStepWaitTime = function() {
	return 10000;
};
/**
	* @author Nilesh Pachpande
	*/

if (GmCXt === undefined) var GmCXt = {};

if (GmCXt.requestHandler === undefined) GmCXt.requestHandler = {};

// Extending string property for the StartsWith and EndWith for IE

if (!String.prototype.startsWith) {
	String.prototype.startsWith = function(search, pos) {
		return this.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;
	};
}

if (!String.prototype.endsWith) {
	String.prototype.endsWith = function(search, this_len) {
		if (this_len === undefined || this_len > this.length) {
			this_len = this.length;
		}
		return this.substring(this_len - search.length, this_len) === search;
	};
}

if (!String.prototype.includes) {
	String.prototype.includes = function(str) {
		return this.indexOf(str) !== -1;
	};
}

if (!Array.prototype.includes) {
	Array.prototype.includes = function(val) {
		return this.indexOf(val) !== -1;
	};
}

GmCXt.stepPopupWidth = 300;
GmCXt.stepPopupMaxHeight = 400;

GmCXt.tourActivity = {};

GmCXt.validateAlphanumeric = function(str) {
	if (!str || !str.trim()) {
		return false;
	} else if (str.match(".*[a-zA-Z].*")) {
		return true;
	} else {
		return false;
	}
};

GmCXt.validateEmpty = function(str) {
	if (!str || !str.trim()) {
		return false;
	} else if (str.length > 0) {
		return true;
	} else {
		return false;
	}
};

GmCXt.validateLength = function(str, limit) {

	if (str && str.length) {
		str = mg$('<div />').html(str).text().trim();
		if (str.length <= limit) {
			return true;
		} else {
			return false;
		}
	}

	return false;
};

GmCXt.openAppPanel = function(action, source) {

	if (GmCXt.APP_PANEL_OPEN) return;

	GmCXt.removeChatIcon();

	if (GmCXt.initialization && GmCXt.initialization.sidePanel && GmCXt.playerDomainCheck()) {

		GmCXt.hideWidgetIcon();

		if (GmCXt.editStepTout) {
			clearTimeout(GmCXt.editStepTout);
			mg$('.mgPlayerJSTest_edit-step-loader').hide();
		}

		var byPassRoute = (action === "byPassRoute" || action === "playSlideShow") ? true : false;
		if (!byPassRoute) {
			GmCXt.sendMessageToApp("mgPlayerJSTest_action:open_side_panel", {
				action: action
			});
		}

		if (GmCXt.tourPlayerI && (action !== "playSlideShow")) {
			GmCXt.tourPlayerI.stop(true);
			GmCXt.closePopup();
		} else if (GmCXt.isAutomationRunning()) {
			GmCXt.auto.stop(true);
		}

		if (GmCXt.user && GmCXt.user.user_key && source && !GmCXt.APP_PANEL_OPEN) {
			GmCXt.trackerV1.trackPanelOpen(source, action);
		}

		GmCXt.timeout(function() {
			var alignment = GmCXt.getWidgetAlignment();
			mg$(".mgPlayerJSTest_panel .mgPlayerJSTest_app").css(alignment, "0px");
			mg$(".mgPlayerJSTest_panel").css(alignment, "0px");

			if (GmCXt.isMicroPlayer() || GmCXt.isWBMicroPlayer()) {
				mg$(".mgPlayerJSTest_panel .mgPlayerJSTest_app").css("right", "50px");
				mg$(".mgPlayerJSTest_panel").css("right", "50px");
				GmCXt.taskListOpen = false;
			} else {
				mg$(".mgPlayerJSTest_panel").removeClass('mgPlayerJSTest_theme-mplayer');
				mg$(".mgPlayerJSTest_panel").css("top", "0");
				GmCXt.showPanelCloseBtn();
			}

			GmCXt.removePreviewTop();
			mg$(".mgPlayerJSTest_panel").attr({
				'aria-hidden': false,
				'tabindex': 0
			});
			mg$("#mgPlayerJSTest_app").attr({
				'aria-hidden': false,
				'tabindex': 0
			});
			mg$("#mgPlayerJSTest_app")
				.attr({
					"role": "dialog",
					"aria-modal": "true", 
					"aria-label": "Extension Panel", 
					"tabindex": "0"
				})
				.focus();


		}, GmCXt.t.appPanel);

		GmCXt.smartTipPreviewOn = false;
		GmCXt.closeNotificationPopup(true);
		GmCXt.APP_PANEL_OPEN = true;
	} else {
		GmCXt.showPanelDisabledPopup();
	}
};

GmCXt.showPanelDisabledPopup = function() {
	if (GmCXt.isExtension()) {
		var m = {
			action: 'mgPlayerJSTest_action:to_background;task:show_panel_disabled_popup'
		};
		GmCXt.sendMessageToBackgroundService(m);
	}
};

GmCXt.hideTips = function() {
	GmCXt.hideBeacons();
	GmCXt.hideSmartTips();
	GmCXt.removePreviewTop();
};

GmCXt.filterApps = function(apps, search) {
	var r = [];
	for (var i = 0; i < apps.length; i++) {
		if (apps[i].indexOf(search) !== -1)
			r.push(apps[i]);
	}
	return r;
};

GmCXt.getByPrecedence = function(apps, p) {
	var r = [];

	for (var i = 0; i < p.length; i++) {
		if (!r.length && p[i])
			r = GmCXt.filterApps(apps, p[i]);
		else
			break;
	}

	return r;
};

GmCXt.appPrecedence = [
	GmCXt.conf.creatorApp,
	GmCXt.conf.playerExtension,
	GmCXt.conf.playerJS
];
GmCXt.envPrecedence = ["Test", "Stage", "Preview", "Prod"];

GmCXt.checkPrecedence = function() {

	var app = "";
	var r = GmCXt.getAppsArray(GmCXt.myGuideApps);

	if (r.length === 0 && GmCXt.user) {
		// First time, after user logins
		return true;
	}

	r = GmCXt.getByPrecedence(r, GmCXt.appPrecedence);

	if (r.length > 1) r = GmCXt.getByPrecedence(r, GmCXt.envPrecedence);

	if (r.length === 1) app = r[0];

	if (GmCXt.getAppName() === app) return true;
	else return false;
};

GmCXt.getChatIconVisibility = function() {
	var s = GmCXt.getAppSetting();

	if (GmCXt.isEmpty(s)) return false;

	var rules = s.chatBotrules || [];
	var match = true;
	if (s.enable_chatbot) {
		if (rules.length > 0 && rules[0].value !== '') {

			var oldRegEx = true;
			if (GmCXt.isDefined(s.clientVersion)) {
				oldRegEx = false;
			}

			match = GmCXt.ruleEngine.evaluateRules(rules, oldRegEx);
		}

		if (!match) {
			GmCXt.log(21, "RULES NOT MATCHED, Hide chat widget");
			return false;
		}
		return true;
	} else {
		return false;
	}
};

GmCXt.getWidgetVisibility = function(forceShowWidget) {

	if (GmCXt.tourPlayerI && !forceShowWidget) {
		GmCXt.log(8, "PLAYER INSTANCE EXIST. HIDE WIDGET " + GmCXt.getAppName());
		return false;
	}

	if (GmCXt.isAutomationRunning()) {
		GmCXt.log(8, "AUTOMATION RUNNING. HIDE WIDGET " + GmCXt.getAppName());
		return false;
	}

	if (!GmCXt.checkPrecedence() && !GmCXt.conf.showWidget) {
		GmCXt.log(8, "NO PREFERENCE. HIDE WIDGET " + GmCXt.getAppName());
		return false;
	}

	if (GmCXt.snowApp) {
		GmCXt.log(8, "HIDE WIDGET on LXP || snowApp");
		return false;
	}

	if (GmCXt.isMcKessonClientJS()) {
		GmCXt.log(8, "HIDE WIDGET on McKesson ClientJS");
		return false;
	}

	var s = GmCXt.getWidgetSettings();

	if (!GmCXt.isEmpty(s) && s) {
		if (GmCXt.isFalse(s.showWidgetIcon)) {
			GmCXt.log(8, "HIDDEN IN ORG SETTINGS");
			return false;
		}

		var rules = s.rules || [];
		var match = true;

		if (rules.length > 0 && rules[0].value !== '') {

			var oldRegEx = true;
			if (GmCXt.isDefined(s.clientVersion)) {
				oldRegEx = false;
			}

			match = GmCXt.ruleEngine.evaluateRules(rules, oldRegEx);
		}

		if (!match) {
			GmCXt.log(8, "RULES NOT MATCHED, hide widget");
			return false;
		}

		if (s.hide_widget_if_noguide && GmCXt.isPlayer()) {
			if (!GmCXt.ifGuidesOnCurrentPage) {
				GmCXt.log(8, "NO GUIDES ON CURRENT PAGE. HIDE WIDGET " + GmCXt.getAppName());
				return false;
			}
		}

	} else if (!GmCXt.conf.showWidget) {
		return false;
	}

	return true;
};

GmCXt.displayWidget = function(forceShowWidget) {
	if (GmCXt.getWidgetVisibility(forceShowWidget)) {
		var widget = GmCXt.getWidgetInstance();
		if (widget.length) {
			GmCXt.getWidgetInstance().show();
			GmCXt.showCurrentPageGuidesIndicator();
		} else {
			GmCXt.showWidget();
		}
	} else {
		GmCXt.hideWidgetIcon();
	}
};

GmCXt.displayChatIcon = function(forceShowWidget) {
	if (!GmCXt.organization) {
		GmCXt.removeChatIcon();
		return;
	}

	if (GmCXt.isPlayer() && GmCXt.isChatEnable()) {
		var chat = GmCXt.getChatIconInstance();
		if (chat.length) {
			GmCXt.getChatIconInstance().show();
		} else {
			GmCXt.showChatIcon();
		}
	} else {
		GmCXt.removeChatIcon();
	}
};

GmCXt.getDocTitle = function() {
	var title = document.title;
	var parts = title.split(' '); // Split the string into words
	var newParts = [];
	for (var i = 0; i < parts.length; i++) {
		var part = parts[i];
		// Check if the part is a potential email address
		if (part.indexOf('@') !== -1 && part.indexOf('.') !== -1 && part.charAt(0) !== '.') {
			newParts.push(''); // Replace with an empty string
		} else {
			newParts.push(part); // Keep the part as is
		}
	}
	title = newParts.join(' '); // Join the parts back into a string
	return title;
};

/** @function Alert function to show message to a user
	* @param {object} options - having properties
	*  title: Popup title.
	*  message: Popup description.
	*  callback: Callback function to call on 'Ok' button click event.
	*  type: Popup type. For 'Confirm' type, 'Cancel' button is shown.
	*/
GmCXt.alert = function(options) {
	options = options || {};

	var pub = {};

	var self = {
		title: options.title,
		description: options.description,
		callback: options.callback,
		type: options.type
	};

	pub.show = function() {
		var popupType = 'mgPlayerJSTest_popup-info';
		var popupDescription = "";

		if (self.description) {
			popupDescription = "<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-info'>" + self.description + "</wmgPlayerJSTest_>";
		}

		var cancelButton = "";
		var okButton = "<wmgPlayerJSTest_ class='mgPlayerJSTest_panel-popup-ok mgPlayerJSTest_btn-default mgPlayerJSTest_ok-btn mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.ok + "</wmgPlayerJSTest_>";

		if (self.type === "confirm") {
			cancelButton = "<wmgPlayerJSTest_ class='mgPlayerJSTest_panel-popup-cancel mgPlayerJSTest_btn-default mgPlayerJSTest_btn-neutral mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.btnCancel + "</wmgPlayerJSTest_>";

		} else if (self.type === "onboarding") {
			okButton = "<wmgPlayerJSTest_ class='mgPlayerJSTest_panel-popup-ok mgPlayerJSTest_btn-default mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.btnGuideMe + "</wmgPlayerJSTest_>";
			cancelButton = "<wmgPlayerJSTest_ class='mgPlayerJSTest_panel-popup-cancel mgPlayerJSTest_btn-default mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.btnSkip + "</wmgPlayerJSTest_>";
		}

		var html = " <wmgPlayerJSTest_ class='mgPlayerJSTest_panel-popup-outer'></wmgPlayerJSTest_>" +
			" <wmgPlayerJSTest_ class='mgPlayerJSTest_popup " + popupType + "'>" +
			"    <div class='mgPlayerJSTest_popup-header-wrapper'>" +
			"	    <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'></div></div>" +
			"     </div>" +
			" 	  <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-wrapper'>" + self.title + "</wmgPlayerJSTest_>" +
			popupDescription +
			"     <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-btn-wrapper'>" +
			okButton +
			cancelButton +
			"    </wmgPlayerJSTest_>" +
			" </wmgPlayerJSTest_>";

		mg$("body").append(html);

		mg$(".mgPlayerJSTest_popup-header-icon").html(GmCXt.svgs.popup_info);

		mg$(".mgPlayerJSTest_panel-popup-outer").css('height', mg$(document).height());

		mg$(".mgPlayerJSTest_panel-popup-ok").on("click", function() {
			if (mg$.isFunction(self.callback))
				self.callback();
			pub.close();
		});

		mg$(".mgPlayerJSTest_panel-popup-cancel").on("click", function() {
			pub.close();
		});
	};

	pub.close = function() {
		mg$(".mgPlayerJSTest_popup").remove();
		mg$(".mgPlayerJSTest_panel-popup-outer").remove();
	};

	return pub;
};

function stopEventPropagation(e) {
	e.preventDefault();
	GmCXt.stopPropagation(e);
}

GmCXt.lockScroll = function() {

	if (GmCXt.lockScrollPosition === false || GmCXt.lockScrollPosition === undefined) {
		GmCXt.lockScrollPosition = true;
		mg$('html').css('overflow', 'hidden');
	}
};

GmCXt.getAutoLaunchTourId = function() {
	return localStorage.getItem(GmCXt.storagePrefix + 'autoLaunchTour');
};

GmCXt.isAutoTour = function() {
	var auto = localStorage.getItem(GmCXt.storagePrefix + 'autoLaunchTour');
	auto = parseInt(auto);
	if (!isNaN(auto) && auto > 0) {
		return true;
	} else {
		return false;
	}
};

GmCXt.alertV2 = function(options) {
	options = options || {};

	var pub = {};

	var self = {
		description: GmCXt.escapeHtml(options.description),
		button1: options.button1,
		button1Callback: options.button1Callback,
		button2: options.button2,
		button2Callback: options.button2Callback,
		button3: options.button3,
		button3Callback: options.button3Callback,
		keepScrollLock: options.keepScrollLock || false,
		closeTour: options.closeTour ? options.closeTour : false,
		showInputField: options.showInputField || false
	};

	var popupInputField = 'none';
	if (self.showInputField) {
		popupInputField = 'block';
	}
	pub.show = function() {
		var alt = GmCXt.getAutoLaunchTourId();
		var pi = GmCXt.playerI;
		var popupType = 'mgPlayerJSTest_popup-info';

		var html = " <wmgPlayerJSTest_ class='mgPlayerJSTest_overlay-container'></wmgPlayerJSTest_>" +
			"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup " + popupType + "'>" +
			"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
			"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'></div></div>" +
			"   </div>" +
			"<wmgPlayerJSTest_ style='display:" + popupInputField + "'><input type='text' class='mgPlayerJSTest_popup-input-field' maxlength='1000' /></wmgPlayerJSTest_>" +
			"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-wrapper'>" + self.description + "</wmgPlayerJSTest_>" +
			"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-btn-wrapper'>";

		if (self.button1) {
			html += "<wmgPlayerJSTest_ title='" + self.button1 + "' aria-label='" + self.button1 + "' class='mgPlayerJSTest_popup-ok-btn mgPlayerJSTest_btn-default mgPlayerJSTest_ok-btn mgPlayerJSTest_text-overflow-ellipsis mgPlayerJSTest_inline-block-vt'>" + self.button1 + "</wmgPlayerJSTest_>";
		}

		if (self.button3) {
			html += "<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-play-inapp mgPlayerJSTest_btn-default mgPlayerJSTest_ok-btn mgPlayerJSTest_inline-block-vt' aria-label='" + self.button3 + "'>" + self.button3 + "</wmgPlayerJSTest_>";
		}

		if (self.button2) {
			html += "<wmgPlayerJSTest_ title='" + self.button2 + "' aria-label='" + self.button2 + "' class='mgPlayerJSTest_popup-cancel-btn mgPlayerJSTest_btn-default mgPlayerJSTest_text-overflow-ellipsis mgPlayerJSTest_inline-block-vt'>" + self.button2 + "</wmgPlayerJSTest_>";
		}

		html += "</wmgPlayerJSTest_>";

		if (pi && alt && alt === pi.tour.tour_id)
			html += "<wmgPlayerJSTest_><input type='checkbox' class='mgPlayerJSTest_popup-checkbox mgPlayerJSTest_input-checkbox-custom'>" + GmCXt.label.doNotShowAgain + "</wmgPlayerJSTest_>" +
			"</wmgPlayerJSTest_>";

		mg$("html").append(html);

		mg$(".mgPlayerJSTest_popup-header-icon").html(GmCXt.svgs.popup_info);
		mg$(".mgPlayerJSTest_popup").on("mousedown", function(e) {
			GmCXt.stopPropagation(e);
		});

		mg$(".mgPlayerJSTest_overlay-container").on("mousedown", function(e) {
			GmCXt.stopPropagation(e);
		});

		mg$(".mgPlayerJSTest_popup-ok-btn").on("click", function(e) {
			GmCXt.stopPropagation(e);
			var popupInputFieldValue = mg$('.mgPlayerJSTest_popup-input-field').val();
			if (pi && alt && alt === pi.tour.tour_id) {

				var checked = mg$('.mgPlayerJSTest_popup-checkbox:checkbox:checked').length > 0;

				if (checked)
					GmCXt.setDoNotShowTours(pi.tour);
				else
					GmCXt.setSnoozedTour(pi.tour);
			}
			self.closeTour = false;
			pub.close();
			if (mg$.isFunction(self.button1Callback))
				self.button1Callback(popupInputFieldValue);
		});

		mg$(".mgPlayerJSTest_popup-play-inapp").on("click", function(e) {
			GmCXt.stopPropagation(e);
			pub.close();
			if (mg$.isFunction(self.button3Callback))
				self.button3Callback();
		});

		mg$(".mgPlayerJSTest_popup-cancel-btn").on("click", function(e) {
			GmCXt.stopPropagation(e);
			pub.close(self.keepScrollLock);
			if (mg$.isFunction(self.button2Callback))
				self.button2Callback();
		});

		mg$(".mgPlayerJSTest_popup-close-button").on("click", function(e) {
			GmCXt.stopPropagation(e);
			pub.close(self.keepScrollLock);
		});
	};

	pub.close = function(keepScrollLock) {

		if (!keepScrollLock)
			GmCXt.unlockScroll();

		if (self.closeTour) GmCXt.cleanPlayer();

		GmCXt.closePopup();
	};

	return pub;
};

GmCXt.showForceMode = function() {
	GmCXt.closePopup();
	var popupType = 'mgPlayerJSTest_popup-info';
	var html =
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_overlay-container'></wmgPlayerJSTest_>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup " + popupType + "'>" +
		"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
		"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'></div></div>" +
		"   </div>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-wrapper'>" + GmCXt.escapeHtml(GmCXt.label.userNotFollowingGuideMessage) + "</wmgPlayerJSTest_>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-btn-wrapper'>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_btn-default mgPlayerJSTest_btn-continue-guide mgPlayerJSTest_ok-btn mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.continueGuide + "</wmgPlayerJSTest_>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_btn-default mgPlayerJSTest_btn-neutral mgPlayerJSTest_btn-exit-guide mgPlayerJSTest_inline-block-vt'>" + GmCXt.label.exitGuide + "</wmgPlayerJSTest_>" +
		"</wmgPlayerJSTest_>" +
		"</wmgPlayerJSTest_>";

	mg$("html").append(html);

	GmCXt.stopAudioTrack();

	mg$(".mgPlayerJSTest_popup-header-icon").html(GmCXt.svgs.popup_info);
	GmCXt.enforceGuideMePopup = true;
	GmCXt.pauseAutomation();

	var windowHeight = mg$(window).height();
	var popupTop = (windowHeight - mg$('.mgPlayerJSTest_popup').height()) / 2;
	mg$('.mgPlayerJSTest_popup').css("top", popupTop);

	function close(e) {
		GmCXt.stopPropagation(e);
		GmCXt.closePopup();
		GmCXt.enforceGuideMePopup = false;
		if (GmCXt.playerI) GmCXt.resumeAutomation();
	}

	mg$(".mgPlayerJSTest_btn-continue-guide").on("click", close);

	mg$(".mgPlayerJSTest_btn-exit-guide").on("click", function(e) {
		if (GmCXt.isExitSurvey()) {
			GmCXt.showExitSurvey();
		}
		if (GmCXt.tourPlayerI) {
			GmCXt.tourPlayerI.stop();
		}
		close(e);
	});

	mg$(".mgPlayerJSTest_popup-close-button").on("click", close);
};

GmCXt.firstStepAutoLaunch = function() {

	// if user has played first step already than going previously at 1st step
	// don't show the option for the auto launch

	var t = GmCXt.playerI && GmCXt.playerI.tour;
	var viewNot = (GmCXt.user && GmCXt.user.settings.viewed_guide_notifications) || {};
	var result = false;

	if (GmCXt.isAutoTour() && GmCXt.isFirstNonAutomationStep()) {
		if (!GmCXt.isDefined(viewNot[t.tour_id]) || (viewNot[t.tour_id] < parseInt(t.version))) {
			result = true;
		}
	}

	return result;
};

GmCXt.showAutoLaunchCloseOptions = function(tour, closeStep) {
	var options = {
		tour: tour
	};

	if (closeStep) {
		options.isTour = true;
		options.okClose = closeStep;
	}

	GmCXt.showPushOptions(options).show();
};

GmCXt.pauseAutomation = function() {
	if (GmCXt.playerI && GmCXt.playerI.automate) {
		GmCXt.playerI.pauseAutomate = true;
		GmCXt.sendMessageToSyncPlayerI();
	}
};

GmCXt.resumeAutomation = function() {
	if (GmCXt.playerI) {
		GmCXt.playerI.pauseAutomate = false;
		GmCXt.sendMessageToSyncPlayerI();
	}
};

GmCXt.sendMessageToSyncPlayerI = function() {
	var msg = "mgPlayerJSTest_action:sync_playerinstance_for_automation";
	var data = {};
	data.playerInstance = GmCXt.playerI;
	GmCXt.sendMessageToAllWindows(msg, data);
};

GmCXt.getUrlParameter = function(sParam) {
	var pageURL = decodeURIComponent(GmCXt._location().search.substring(1));
	return GmCXt.getParameterValue(sParam, pageURL);
};

GmCXt.getParameterValue = function(sParam, url) {
	if (sParam && url) {
		var sURLVariables = url.split('&'),
			sParameterName,
			i;

		for (i = 0; i < sURLVariables.length; i++) {
			sParameterName = sURLVariables[i].split('=');

			if (sParameterName[0] === sParam) {
				return sParameterName[1] === undefined ? true : sParameterName[1];
			}
		}
	}

	return false;
};

GmCXt.setCookie = function(cname, cvalue, exdays) {
	document.cookie = cname + "=" + cvalue + ";path=/";
};

GmCXt.getCookie = function(cname) {
	var name = cname + "=";
	var decodedCookie = decodeURIComponent(document.cookie);
	var ca = decodedCookie.split(';');
	for (var i = 0; i < ca.length; i++) {
		var c = ca[i];
		while (c.charAt(0) == ' ') {
			c = c.substring(1);
		}
		if (c.indexOf(name) === 0) {
			return c.substring(name.length, c.length);
		}
	}
	return "";
};

GmCXt.hideTooltipDelay = function(step, options) {

	if (window.self === window.top) {
		GmCXt.hideTooltipTimeout = GmCXt.timeout(function() {
			GmCXt.hideTooltip(step, options);
		}, GmCXt.t.hiteTooltip);
	} else {
		var data = {
			stepId: step.step_id,
			options: options
		};
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:hide_smarttip_delay', data);
	}
};

GmCXt.clearTooltipTimeout = function() {

	if (window.self === window.top) {
		clearTimeout(GmCXt.hideTooltipTimeout);
	} else {
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:clear_smarttip_delay_timeout');
	}
};

GmCXt.hideValidationTooltip = function(step, showGuidanceTooltip) {
	var data = {
		stepId: step.step_id,
		showGuidanceTooltip: showGuidanceTooltip
	};
	if (window.self === window.top) {
		GmCXt.requestHandler.hideValidationSmarttip(data);
	} else {
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:hide_validation_smarttip', data);
	}

	mg$("#mgPlayerJSTest_smarttip-valid-" + step.step_id).hide();
};

GmCXt.hideTooltip = function(step, options) {
	var data = {
		stepId: step.step_id
	};

	if (window.self === window.top) {
		GmCXt.requestHandler.hideSmartTip(data, options);
	} else {
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:hide_smarttip', data);
	}
};

GmCXt.validateDateFormat = function(str) {
	var matches = 
		/^(\d{1,2})[:](\d{1,2})[:](\d{4})$/.exec(str) || // HH:MM:YYYY
		/^(\d{1,2})[-](\d{1,2})[-](\d{4})$/.exec(str) || // DD-MM-YYYY or MM-DD-YYYY
		/^(\d{1,2})[/](\d{1,2})[/](\d{4})$/.exec(str) || // DD/MM/YYYY or MM/DD/YYYY
		/^(\d{4})\/(\d{1,2})\/(\d{1,2})$/.exec(str); // YYYY/MM/DD

		
	if (matches == null) return false;

	if (matches[1].length === 4) {
        // YYYY/MM/DD
        y = matches[1];
        m = matches[2] - 1;
        d = matches[3];
    } else {
        // DD/MM/YYYY, MM-DD-YYYY, etc.
        d = matches[2];
        m = matches[1] - 1;
        y = matches[3];
    }
	
	var composedDate = new Date(y, m, d);
	return composedDate.getDate() == d &&
		composedDate.getMonth() == m &&
		composedDate.getFullYear() == y;
};

GmCXt.validateTimeFormat = function(str) {
	var isValid = false;
	if (str.length > 8)
		isValid = false;
	else if (str.length < 6) {
		isValid = /^(0[0-9]|1[0-9]|2[0-3]):[0-5][0-9]$/.test(str);
	} else {
		isValid = /(?:[01]\d|2[0123]):(?:[012345]\d):(?:[012345]\d)/.test(str);
	}
	return isValid;
};

GmCXt.validateNumeric = function(str) {
	//  check for valid numeric strings
	var strValidChars = "0123456789.-";
	var strChar;
	var blnResult = true;

	if (str.length === 0) return false;

	//  test strString consists of valid characters listed above
	for (i = 0; i < str.length && blnResult === true; i++) {
		strChar = str.charAt(i);
		if (strValidChars.indexOf(strChar) == -1) {
			blnResult = false;
		}
	}
	return blnResult;
};

GmCXt.validatePhonenumber = function(str) {
	var isValid = /^[1-9][0-9]{4,14}$/.test(str);
	return isValid;
};

GmCXt.validateEmail = function(str) {
	var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
	return re.test(str);
};

GmCXt.validateRegex = function(regex, value) {
	var re = new RegExp(regex);
	return re.test(value);
};

GmCXt.getBulletCount = function(value) {
	return (value.match(/<li/g) || []).length;
};

GmCXt.validateWebUrl = function(str) {
	var re = /^(http[s]?:\/\/){0,1}(www\.){0,1}[a-zA-Z0-9\.\-]+\.[a-zA-Z]{2,5}[\.]{0,1}/;
	return re.test(str);
};

GmCXt.getMatchingFrame = function(frames, event, match) {
	for (var i = 0, len = frames.length; i < len; i++) {
		frame = frames[i];
		// check if frame window matches to the sender window
		if (frame.contentWindow == event.source) {
			match.found = true;
			match.frame = frame;
			break;
		}
	}
	return match;
};

GmCXt.addFrameOffset = function(event, pos) {
	var match = {
		found: false,
		frame: null
	};

	var frames = document.getElementsByTagName('iframe');
	match = GmCXt.getMatchingFrame(frames, event, match);

	if (!match.found) {
		frames = document.getElementsByTagName('frame');
		match = GmCXt.getMatchingFrame(frames, event, match);
	}

	if (!match.found) {
		frames = GmCXt.getIframesFromShadowDom();
		match = GmCXt.getMatchingFrame(frames, event, match);
	}

	if (match.found) {

		const iframe = match.frame;
		const rect = iframe.getBoundingClientRect();
		let nestedRect = { left: 0, top: 0 };
	
		const querySelector = event?.data?.data?.data?.querySelector;
		const iframeDoc = iframe?.contentDocument;
		
		if (querySelector && iframeDoc && !iframeDoc.querySelector(querySelector)) {
			let nestedIframes = iframeDoc.querySelectorAll("iframe");
			for (const nestedIframe of nestedIframes) {
				const nestedDoc = nestedIframe?.contentDocument;
				const elementInsideNestedIframe = nestedDoc?.querySelector(querySelector);
	
				if (elementInsideNestedIframe) {
					nestedRect = nestedIframe.getBoundingClientRect();
					break;
				}
			}
		}
	
		pos.left += rect.left + nestedRect.left;
		pos.top += rect.top + nestedRect.top;
	}

	pos.windowWidth = mg$(window).width();
	pos.windowHeight = mg$(window).height();

	return pos;
};

GmCXt.addScrollOffset = function(position, cssPosition) {
	if (!cssPosition) {
		var top = mg$(window).scrollTop();
		var left = mg$(window).scrollLeft();

		position.left += left;
		position.origTop = position.top;
		position.top += top;
	}

	return position;
};

GmCXt.extractFileName = function(url) {
	var arr = url.split("/");
	if (arr.length > 1) {
		return GmCXt.conf.webServiceUrl + arr[arr.length - 1];
	} else {
		return url;
	}
};

GmCXt.clearPreviewPopupAlignment = function($popup) {
	$popup
		.removeClass('top-left')
		.removeClass('top-middle')
		.removeClass('top-right')
		.removeClass('right-top')
		.removeClass('right-middle')
		.removeClass('right-bottom')
		.removeClass('bottom-left')
		.removeClass('bottom-middle')
		.removeClass('bottom-right')
		.removeClass('left-top')
		.removeClass('left-middle')
		.removeClass('left-bottom');
};

GmCXt.alignMessagePreview = function($popup, $container, alignment, stepSettings) {

	GmCXt.clearPreviewPopupAlignment($popup);
	var popupWidth = $popup.width();
	var popupHeight = $popup.height();
	var windowWidth = $container.width();
	var windowHeight = $container.height();
	var left = (windowWidth - popupWidth) / 2;
	var top = 0;

	if (!popupWidth || !popupHeight) return;

	switch (alignment) {

		case 'top':
			top = 20;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'center':
			top = (windowHeight - popupHeight) / 2;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'bottom':
			top = windowHeight - popupHeight - 20;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'left-top':
			top = 20;
			left = 20;
			break;

		case 'left-center':
			top = (windowHeight - popupHeight) / 2;
			left = 20;
			break;

		case 'left-bottom':
			top = windowHeight - popupHeight - 20;
			left = 20;
			break;

		case 'right-top':
			top = 20;
			left = windowWidth - popupWidth - 20;
			break;

		case 'right-center':
			top = (windowHeight - popupHeight) / 2;
			left = windowWidth - popupWidth - 20;
			break;

		case 'right-bottom':
			top = windowHeight - popupHeight - 20;
			left = windowWidth - popupWidth - 20;
			break;

		case 'custom':
			top = (stepSettings.elementTop * windowHeight) / 100;
			left = (stepSettings.elementLeft * windowWidth) / 100;
			break;
	}

	$popup.css({
		left: left,
		top: top,
		position: 'fixed'
	});
};

GmCXt.closeNotificationPopup = function(isSidePanelOpen) {
	GmCXt.sendMessageToApp('mgPlayerJSTest_action:close_notification_popup', {
		isSidePanelOpen: isSidePanelOpen
	});
};

GmCXt.removePreviewTop = function() {
	GmCXt.removePreviewFrame();
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:remove_preview");
};

GmCXt.hideSmartTipsIfOptionON = function() {
	var org = GmCXt.organization;
	if (org && org.admin_settings.show_tooltips_during_workflow_guide) {
		return;
	}
	GmCXt.hideSmartTips();
};

GmCXt.hideSmartTips = function() {
	mg$('.mgPlayerJSTest_smarttip-icon').addClass('tooltip-hidden');
	mg$('.mgPlayerJSTest_smarttip').addClass('tooltip-hidden');
	mg$('.mgPlayerJSTest_smarttip-valid').addClass('tooltip-hidden');
	GmCXt.smarttipAreHidden = true;
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:hide_all_smarttip");
};

GmCXt.showSmartTips = function(forceShow) {

	if ((GmCXt.tourPlayerI && !forceShow) || GmCXt.isSurveyVisible) return;

	mg$('.mgPlayerJSTest_smarttip-icon').removeClass('tooltip-hidden');
	mg$('.mgPlayerJSTest_smarttip').removeClass('tooltip-hidden');
	mg$('.mgPlayerJSTest_smarttip-valid').removeClass('tooltip-hidden');
	GmCXt.smarttipAreHidden = false;
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:show_all_smarttip");
};

GmCXt.previewSmartTips = function(id) {
	mg$('.mgPlayerJSTest_smarttip-icon-wrapper-' + id).removeClass('tooltip-hidden');
	mg$('.mgPlayerJSTest_smarttip-icon-wrapper-' + id).show();
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:show_preview_smarttip", {
		id: id
	});
};

GmCXt.hideBeacons = function() {
	mg$('.mgPlayerJSTest_beacon-icon').addClass('mgPlayerJSTest_hidden');
	mg$('#mgPlayerJSTest_beacon-icon-pos-select').show();
	GmCXt.beaconsAreHidden = true;
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:hide_beacons");
};

GmCXt.showBeacons = function(forceShow) {

	if ((GmCXt.tourPlayerI && !forceShow) || GmCXt.isSurveyVisible) {
		GmCXt.log(48, "STOP showing beacons. player instance || survey on screen");
		return;
	}

	mg$('.mgPlayerJSTest_beacon-icon').removeClass('mgPlayerJSTest_hidden');
	mg$('#mgPlayerJSTest_beacon-icon-pos-select').hide();
	GmCXt.beaconsAreHidden = false;
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:show_beacons");
};

GmCXt.previewBeacons = function(id) {
	mg$('.mgPlayerJSTest_beacon-icon-tour-' + id).removeClass('mgPlayerJSTest_hidden');
	GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:show_preview_beacons", {
		id: id
	});
};

GmCXt.getScrollParent = function(node) {

	if (node == null || node.nodeType !== 1) return null;

	var tag = node.tagName;
	if (tag) tag = tag.toLowerCase();

	if (tag == 'body' || tag == 'html') return null;

	var overflowY = getComputedStyle(node).overflowY;

	var isScrollable = overflowY !== 'visible';

	if (isScrollable && node.scrollHeight > (node.clientHeight + 5)) {
		return node;
	} else {
		return GmCXt.getScrollParent(node.parentNode);
	}
};

GmCXt.setPopUpForImage = function(description, parentClassName) {
	// Check for image exist if yes then add popup js
	var imgSrc = '';
	GmCXt.setImagePopUp();
	var fsBtn = "<div class='mgPlayerJSTest_full-screen-icon-cont'><button class='mgPlayerJSTest_full-screen-icon'>&#x26F6;</button></div>";

	mg$(parentClassName).addClass('mgPlayerJSTest_play-step-popup-loader');

	var stepPopupImgList = mg$(parentClassName + ' img');

	var finalStepPopupContent = "";

	stepPopupImgList.each(function(e) {
		var stepPopupContent = mg$(parentClassName)[0].innerHTML;
		var stepImgVar = stepPopupImgList[e].outerHTML;
		var stepImgOverlay = "<div class='mgPlayerJSTest_step-img-popup-overlay'></div>";
		var newStepImgVar = "<div class='mgPlayerJSTest_display-inline-block mgPlayerJSTest_position-relative mgPlayerJSTest_step-img-popup-cont'>" + stepImgOverlay + fsBtn + stepImgVar + "</div>";
		finalStepPopupContent = stepPopupContent.replace(stepImgVar, newStepImgVar);
		mg$(parentClassName)[0].innerHTML = finalStepPopupContent;
	}).addClass('mgPlayerJSTest_custom-image');

	mg$(".mgPlayerJSTest_full-screen-icon").html(GmCXt.svgs.fullscreen);

	mg$('.mgPlayerJSTest_full-screen-icon').on("click", function(e) {
		var modalImg = document.getElementById("mgPlayerJSTest_img_desc");
		var container = this.closest('.mgPlayerJSTest_step-img-popup-cont');
		var imgElem = container.getElementsByTagName('img')[0];
		imgSrc = imgElem.src;
		var imgWrp = document.getElementsByClassName('mgPlayerJSTest_image-popup')[0];
		GmCXt.stopPropagation(e);
		imgWrp.style.display = "block";
		modalImg.src = imgSrc;
		mg$('.mgPlayerJSTest_preview-step-popup-container').css({
			'z-index': '2147483646'
		});
	});



	mg$(parentClassName + ' img').on("load", function() {
		if (GmCXt.alignPopupI) GmCXt.alignPopupI.redo();
		mg$(parentClassName).removeClass('mgPlayerJSTest_play-step-popup-loader');
	});
};

GmCXt.getText = function(s) {
	if (s) {
		s = mg$('<gssdummy />').html(s).text();
	}
	return s;
};

GmCXt.singleLineTitle = function(t) {
	var c = '';
	if (t && t.length < 28) c = 'mgPlayerJSTest_nowrap-div';
	return c;
};

GmCXt.setLinkClickhandler = function(description, parentClassName) {
	if (description && description.indexOf("<a ") !== -1) {
		mg$(parentClassName + ' a').each(function() {
			mg$(parentClassName + ' a').on("click", function(e) {
				GmCXt.handleLinkClickEvent(e);
			});
		});
	}
};

GmCXt.setTooltipLinkClickhandler = function(description, parentClassName, linkData) {
	if (description && description.indexOf("<a ") !== -1) {
		mg$(parentClassName + ' a').each(function(linkIndex, linkElement) {
			var linkId = "mgPlayerJSTest_tlink" + linkIndex + "-sid" + linkData.sid;
			if (GmCXt.isEmpty(linkElement.id)) {
				linkElement.id = linkId;
				linkElement.sid = linkData.sid;
				linkElement.tid = linkData.tid;
				linkElement.opt = JSON.stringify(linkData.opt);
			}
			mg$('#' + linkId).off().on("click", function(e) {
				GmCXt.handleLinkClickEvent(e);
			});
		});
	}
};

GmCXt.getPageHostPathName = function() {
	var hostname = GmCXt._location().hostname;
	var pathname = GmCXt._location().pathname;
	return hostname + pathname;
};

GmCXt.getAppName = function() {
	var a = GmCXt.conf.appName;

	if (GmCXt.isPlayer() && !GmCXt.playerMode) a += GmCXt.conf.appType;

	return a + GmCXt.conf.env;
};

GmCXt.reportPresence = function() {
	var message = {
		action: 'MyGuideReporting',
		data: GmCXt.getAppName()
	};

	GmCXt.log(63, "Broadcast presence of: " + GmCXt.getAppName());
	GmCXt.sendToParentWindow(message);
};

GmCXt.setOnAudioMode = function() {
	var d = {
		user: GmCXt.user
	};
	GmCXt.sendMsgToAudioFrame('mgPlayerJSTest_action:set_audio_mode_on', d);
};

GmCXt.setOffAudioMode = function() {
	var d = {
		user: GmCXt.user
	};
	GmCXt.sendMsgToAudioFrame('mgPlayerJSTest_action:set_audio_mode_off', d);
};

GmCXt.setOnOnBoarAudioMode = function() {
	mg$('.mgPlayerJSTest_tooltip-title-mute').show();
	mg$('.mgPlayerJSTest_tooltip-title-unmute').hide();
	mg$('.mgPlayerJSTest_onboarding-audio-off').hide();
	mg$('.mgPlayerJSTest_onboarding-audio-on').show();
	mg$('.mgPlayerJSTest_onboarding-audio').addClass('playing-audio');
};

GmCXt.setOffOnBoarAudioMode = function() {
	mg$('.mgPlayerJSTest_tooltip-title-mute').hide();
	mg$('.mgPlayerJSTest_tooltip-title-unmute').show();
	mg$('.mgPlayerJSTest_onboarding-audio-on').hide();
	mg$('.mgPlayerJSTest_onboarding-audio-off').show();
	mg$('.mgPlayerJSTest_onboarding-audio').removeClass('playing-audio');
};

GmCXt.getBoundingRect = function(he) {
	try {
		return he.getBoundingClientRect();
	} catch (e) {
		return false;
	}
};

GmCXt.getElVisibility = function(el, isFrame) {
	var display = 'visible';

	if (!isFrame && isUBSDrawerEl(el)) {
		return 'visible';
	}

	if (!el || !isVisibleByElStyle(el, true)) {
		display = 'hidden';
	} else {
		var pos = GmCXt.getBoundingRect(el);
		if (!pos) return 'hidden';

		var xPosMid = pos.left + (pos.width / 2);
		var yPosMid = pos.top + (pos.height / 2);

		if (xPosMid > window.innerWidth) {
			xPosMid = pos.left + (window.innerWidth - pos.left) / 2;
		} else if (xPosMid < 0) {
			xPosMid = (pos.left + pos.width) / 2;
		}

		if (yPosMid > window.innerHeight) {
			yPosMid = pos.top + (window.innerHeight - pos.top) / 2;
		} else if (yPosMid < 0) {
			yPosMid = (pos.top + pos.height) / 2;
		}

		disable('.mgPlayerJSTest_smarttip-icon');
		disable('.mgPlayerJSTest_beacon-icon');

		var topEl = document.elementFromPoint(xPosMid, yPosMid);

		if (!isFrame && isUBSDrawerOpen(topEl)) {
			return 'hidden';
		}

		enable('.mgPlayerJSTest_smarttip-icon');
		enable('.mgPlayerJSTest_beacon-icon');

		if (topEl === null) {
			topEl = document.elementFromPoint(pos.left, pos.top);

			if (topEl === null) {
				topEl = document.elementFromPoint(pos.left + pos.width, pos.top);
			}
			if (topEl === null) {
				topEl = document.elementFromPoint(pos.left, pos.top + pos.height);
			}
			if (topEl === null) {
				topEl = document.elementFromPoint(pos.left + pos.width, pos.top + pos.height);
			}
		}

		if (topEl === null) {
			display = 'hidden';
		} else {

			if (el !== topEl && !GmCXt.isMyGuideEl(topEl)) {
				var containsShadowRoot = (el.getRootNode !== undefined && el.getRootNode() instanceof ShadowRoot);

				if (mg$.contains(topEl, el) || (containsShadowRoot && !isFrame)) {

					if (!checkParentVisibility(topEl, el, containsShadowRoot) && !GmCXt.checkServiceNow()) {
						display = 'hidden';
					}

				} else if (!mg$.contains(topEl, el) && !mg$.contains(el, topEl) &&
					(el.parentNode && !mg$.contains(el.parentNode, topEl)) &&
					isElCompletelyCovered(el, topEl)) {

					display = 'hidden';

				}
			}
		}
	}

	function isUBSDrawerEl(el) {
		if (el && GmCXt.checkUBS()) {
			var temp = el;
			while (temp && temp !== document) {
				if (temp.classList.contains('drawer-dialog') || temp.tagName === 'BRML-DRAWER') {
					return true;
				}
				temp = findParent(temp);
			}
		}
		return false;
	}

	function isUBSDrawerOpen(topEl) {

		/*
		HTML structure:
		'BR-PLUTUX-RCAP-GEN5' >
			'shadowRoot' >
				'div.rcap-container' > 'BR-PLUTUX-CONTEXT-BASED-DRAWERS-GEN5'
					3 children '<type>-DRAWER-GEN5' each of which is populated by HTML if either kind of drawer is opened
		*/

		if (GmCXt.checkUBS() && topEl && topEl.tagName === 'BR-PLUTUX-RCAP-GEN5') {
			// Element in background; checking if drawer is open
			var temp = topEl.shadowRoot;
			if (temp) {
				temp = mg$(temp).find('BR-PLUTUX-CONTEXT-BASED-DRAWERS-GEN5');
				if (temp.length) {
					temp = temp[0].shadowRoot;
					var nodes = mg$(temp).children();
					for (var i in nodes) {
						var node = nodes[i];
						if (node.tagName && node.tagName.includes('-DRAWER-GEN5')) {
							temp = node.shadowRoot;
							temp = mg$(temp).find('BRML-DRAWER');
							if (temp.length) {
								temp = temp[0].shadowRoot;
								temp = mg$(temp).find('DIV.drawer-dialog');
								if (temp.length) return true;
							}
						}
					}
				}
			}
		}
		return false;
	}

	function checkParentVisibility(topEl, el, checkPosition) {
		var visible = true;

		while (el !== topEl && el !== document) {

			if (el && GmCXt.checkUBS() && el.classList.contains('hydrated')) {
				// Custom handling for UBS
				// Skip elements with 'hydrated' class as they return incorrect visibility by style
				el = findParent(el);
				continue;
			}

			el = findParent(el);

			if (!el || !isVisibleByElStyle(el, checkPosition)) {
				visible = false;
				break;
			}
		}

		return visible;
	}

	function findParent(el) {
		if (el) {
			var temp = el.parentElement || el.getRootNode().host || el.getRootNode();
			if (temp !== el) {
				return temp;
			}
		}
		return null;
	}

	function isVisibleByElStyle(el, checkPosition) {
		if (!mg$(el).is(':visible')) {
			return false;
		}

		var style = getComputedStyle(el);
		if (style.visibility === 'hidden') {
			return false;
		}

		if (parseInt(style.opacity) <= 0) {
			return false;
		}

		if (checkPosition) {
			if (parseInt(style.height) <= 0 || parseInt(style.width) <= 0) {
				return false;
			}
			if (style.position === 'fixed' && (parseInt(style.left) + parseInt(style.width) <= 0 || parseInt(style.top) + parseInt(style.height) <= 0)) {
				return false;
			}
		}

		return true;
	}

	function isElCompletelyCovered(el, topEl) {

		var pos = GmCXt.getBoundingRect(el);
		var topElPos = topEl.getBoundingClientRect();

		if (topElPos.height < pos.height || topElPos.width < pos.width) {
			var tempTop = topEl;
			while (tempTop !== document && !mg$.contains(tempTop.parentNode, el)) {
				tempTop = tempTop.parentNode;
				if (tempTop.offsetHeight > pos.height && tempTop.offsetWidth > pos.width) {
					return true;
				}
			}
			if (GmCXt.checkSalesForceSite()) {
				var calender = mg$(topEl).parents("lightning-calendar");
				if (calender.length && GmCXt.dom.levelCheck(calender[0], topEl, 10)) {
					return true;
				}
			}
			return false;
		}

		var width20pc = (20 / 100) * pos.width;
		var height20pc = (20 / 100) * pos.height;

		var left = pos.left + width20pc;
		var right = pos.right - width20pc;
		var top = pos.top + height20pc;
		var bottom = pos.bottom - height20pc;

		if (topElPos.top <= pos.top && topElPos.bottom >= pos.bottom &&
			topElPos.left <= pos.left && topElPos.right >= pos.right) {
			return true;
		} else if (document.elementFromPoint(left, top) !== el &&
			document.elementFromPoint(right, top) !== el &&
			document.elementFromPoint(left, bottom) !== el &&
			document.elementFromPoint(right, bottom) !== el) {
			return true;
		}

		return false;
	}

	function disable(selector) {
		mg$(selector).css("pointer-events", "none");
	}

	function enable(selector) {
		mg$(selector).css("pointer-events", "initial");
	}

	return display;
};

// Extracts Tag name from GuideMe JS Selector
GmCXt.getTagName = function(selector) {
	var tag = selector.match(/^(.*?)\[/g);
	if (tag === null) {
		tag = selector.match(/^(.*?)(:visible|:eq)/g);
		tag = tag[0].replace(/:visible|:eq/g, '');
		return tag;
	} else {
		tag = tag[0].replace(/\[/g, '');
		return tag;
	}
};

GmCXt.alignImageStepPreview = function($popup, $container, alignment, addScroll, stepSettings) {

	GmCXt.clearPreviewPopupAlignment($popup);

	var popupWidth = $popup.width();
	var popupHeight = $popup.height();
	var windowWidth = $container.width();
	var windowHeight = $container.height();
	var left = (windowWidth - popupWidth) / 2;
	var top = 0;

	if (!popupWidth || !popupHeight) {
		return;
	}

	switch (alignment) {
		case 'top':
			top = 20;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'center':
			top = (windowHeight - popupHeight) / 2;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'bottom':
			top = windowHeight - popupHeight - 20;
			left = (windowWidth - popupWidth) / 2;
			break;

		case 'left-top':
			top = 20;
			left = 20;
			break;

		case 'left-center':
			top = (windowHeight - popupHeight) / 2;
			left = 20;
			break;

		case 'left-bottom':
			top = windowHeight - popupHeight - 20;
			left = 20;
			break;

		case 'right-top':
			top = 20;
			left = windowWidth - popupWidth - 20;
			break;

		case 'right-center':
			top = (windowHeight - popupHeight) / 2;
			left = windowWidth - popupWidth - 20;
			break;

		case 'right-bottom':
			top = windowHeight - popupHeight - 20;
			left = windowWidth - popupWidth - 20;
			break;

		case 'custom':
			top = (stepSettings.elementTop * windowHeight) / 100;
			left = (stepSettings.elementLeft * windowWidth) / 100;
			break;
	}

	if (addScroll === true) {
		top += $container.scrollTop();
		left += $container.scrollLeft();
	}

	top += $container.offset().top;
	left += $container.offset().left;

	$popup.css({
		left: left,
		top: top
	});
};

GmCXt.isLooping = function() {

	var PI = GmCXt.playerI;
	var flag = false;

	if (PI.loops - PI.currentLoop > 0) {
		flag = true;
		GmCXt.log(33, "Current loop: " + PI.currentLoop);
	}
	return flag;
};

GmCXt.openPowerForm = function(data) {

	if (window.self === window.top) {
		GmCXt.sendMessageToApp('mgPlayerJSTest_action:show_power_form', data);
	} else {
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:open_power_form', data);
	}
};

GmCXt.rotateGear = function() {
	var c = 1;
	var i = null;

	var id = '#mgPlayerJSTest_auto-progress-';
	var cls = 'mgPlayerJSTest_active-progress';

	i = setInterval(function() {
		if (c === 1 || mg$(id + (c - 1)).hasClass(cls)) { // check for the previous gear
			mg$(id + c).addClass(cls);
		}
		c++;
		if (c > 3) clearInterval(i);
	}, 900);
};

GmCXt.removeTooltips = function(t) {

	GmCXt.log(43, "REMOVE Tooltip" + GmCXt.tourLog(t));

	for (var j = 0; j < t.steps.length; j++) {
		var step = t.steps[j];
		var data = {
			step_id: step.step_id,
			tour_id: t.tour_id
		};

		if (GmCXt.inTopWindow(step.step_settings)) {
			GmCXt.requestHandler.removeToolip(data);
		} else {
			GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:remove_tooltip", data);
		}

		if (t.steps[j].step_settings.smartTip.type === 'injector') {
			GmCXt.sendMessageToApp("mgPlayerJSTest_action:remove_power_form", data);
		}

	}
};

GmCXt.updateBeaconsOnScreen = function(tourId, isValid) {

	if (window.self === window.top) {
		tourId = parseInt(tourId);
		var i = GmCXt.beaconsOnScreen.indexOf(tourId);

		if (isValid && i < 0) {
			GmCXt.beaconsOnScreen.push(tourId);
			GmCXt.log(49, "ADDED on screen: " + tourId);
			GmCXt.auto.setBeaconsAutoDataToStorage(GmCXt.beaconsOnScreen);
			GmCXt.setBeaconsDisplayFrequency(tourId);
		} else if (!isValid) {
			GmCXt.beaconsOnScreen.splice(i, 1);
			GmCXt.log(49, "REMOVED from screen: " + tourId);
		}
	} else {
		var data = {
			jobId: tourId,
			isValid: isValid
		};
		GmCXt.sendMessageToTheTopWindow("mgPlayerJSTest_action:update_beacons_on_screen", data);
	}
};

GmCXt.setOnScreenTooltipGuideInfo = function(tour) {

	GmCXt.log(43, "INFO SET: " + GmCXt.tourLog(tour));

	var tid = "tour_" + tour.tour_id;
	var t = GmCXt.onScreenTooltipGuideInfo[tid];

	if (t) {
		GmCXt.onScreenTooltipGuideInfo[tid].total = tour.steps.length;
	} else {
		GmCXt.onScreenTooltipGuideInfo[tid] = {
			total: tour.steps.length,
			visible: [],
			watchRules: tour.tour_settings.ruleCheckOnClick
		};
	}
	GmCXt.onScreenTooltipGuideInfo[tid].rules = tour.tour_settings.rules.map(function(rule) {
		return rule.type;
	});

	if (GmCXt.isAutomationRunning()) {
		GmCXt.tooltipInfoForAutomation = Object.assign({}, GmCXt.onScreenTooltipGuideInfo);
	}
};

GmCXt.updateOnScreenTooltipGuideIds = function(t, tid) {
	var i = GmCXt.onScreenTooltipGuideIds.indexOf(tid);

	var pid = GmCXt.partialVisibleTooltipsIds.indexOf(tid);

	if (t.total === t.visible.length) {
		// All tooltips visible

		if (i < 0) {
			// Entry not present in 'onScreenTooltipGuideIds'
			GmCXt.onScreenTooltipGuideIds.push(tid);
			GmCXt.log(43, "ADDED on screen: " + tid);

			if (pid >= 0) {
				GmCXt.partialVisibleTooltipsIds.splice(pid, 1);
			}
		}
	} else {
		// One or more tooltips in the guide are hidden

		if (i >= 0) {
			// Entry present in 'onScreenTooltipGuideIds'
			GmCXt.onScreenTooltipGuideIds.splice(i, 1);
			GmCXt.log(43, "REMOVED from screen: " + tid);
		}

		if (t.visible.length === 0) {
			// All tooltips in the guide are hidden
			if (pid >= 0) {
				GmCXt.partialVisibleTooltipsIds.splice(pid, 1);
				GmCXt.log(43, "REMOVED from screen (ALL HIDDEN): " + tid);
			}
		} else {
			if (pid < 0) {
				// Update partially loaded tooltip list
				GmCXt.partialVisibleTooltipsIds.push(tid);
				GmCXt.log(43, "ADDED on screen (PARTIALLY): " + tid);
			}
		}
	}
};

GmCXt.updateOnScreenTooltipGuideInfo = function(tour, tourId, stepId, isValid, smartTip, url) {
	if (window.self === window.top) {
		var t = GmCXt.onScreenTooltipGuideInfo["tour_" + tourId];

		//FOR: tooltip tracking
		//if valid => tooltip rendered
		if (isValid) {
			GmCXt.setTooltipRenderInfo(tour, tourId, stepId, smartTip, url);
		}

		//FOR: on screen tooltip rendering
		if (t) {
			var stepIndex = t.visible.indexOf(stepId);

			if (isValid) {
				if (stepIndex < 0) {
					t.visible.push(stepId);

					GmCXt.log(43, "VISIBLE: " + GmCXt.stepLog(stepId, tourId));

					if (GmCXt.isAutomationRunning()) {
						GmCXt.tooltipInfoForAutomation["tour_" + tourId].visible.push(stepId);
					}
				}
			} else {
				if (stepIndex >= 0) {
					t.visible.splice(stepIndex, 1);

					GmCXt.log(43, "HIDDEN: " + GmCXt.stepLog(stepId, tourId));
				}
			}

			GmCXt.updateOnScreenTooltipGuideIds(t, tourId);
			GmCXt.auto.setTooltipAutoDataToStorage(GmCXt.tooltipInfoForAutomation);
		}

	} else {
		var data = {
			tour: tour,
			tourId: tourId,
			stepId: stepId,
			isValid: isValid,
			smartTip: smartTip,
			url: url
		};
		GmCXt.sendMessageToTheTopWindow("mgPlayerJSTest_action:update_smarttip_on_screen", data);
	}
};

GmCXt.getTooltipName = function(type) {
	var name = '';
	switch (type) {
		case 'disableElement':
			name = "digital_duct_tape";
			break;

		case 'injector':
			name = "power_html";
			break;

		case 'formSubmit':
			name = "form_submit";
			break;

		case 'both':
			name = "guidance_validation";
			break;

		default:
			name = type;
			break;
	}
	return name;
};

GmCXt.clearDataOnLogout = function(d) {

	GmCXt.beaconTours = [];
	GmCXt.beaconsOnScreen = [];

	GmCXt.urlBasedTours = [];

	GmCXt.tooltipTours = [];
	GmCXt.fTags = [];
	GmCXt.onScreenTooltipGuideInfo = {};
	GmCXt.onScreenTooltipGuideIds = [];
	GmCXt.partialVisibleTooltipsIds = [];

	GmCXt.closeNotificationPopup();

	GmCXt.trackerV1.trackPageVisit();

	if (GmCXt.creatorInterval) {
		clearInterval(GmCXt.creatorInterval);
	}
	//Triggering login without delay
	if (d.instantReLogin) {
		GmCXt.loginUsingAuthKey();
	}

	// If player and user was logged in before
	if (GmCXt.inPlayer && d.startInterval) {
		GmCXt.startReloginInterval();
	}

	if (GmCXt.isClientJs()) {
		GmCXt.trackerV1.sendEvents(true);
	}

	GmCXt.storage().remove(['trackingTours', 'guideTrackingInProcess', 'userPulsePayloadTime', 'tooltipTrackData']);

	GmCXt.user = false;
	GmCXt.organization = false;

	GmCXt.clearSession();
	GmCXt.sendMessageToAllWindows('mgPlayerJSTest_action:clear_session');
};

GmCXt.startReloginInterval = function() {

	GmCXt.log(21, "Start re-login Interval");

	if (GmCXt.reloginInterval) {
		clearInterval(GmCXt.reloginInterval);
	}

	GmCXt.reloginInterval = setInterval(function() {
		if (GmCXt.user) {

			GmCXt.log(21, "CLEAR: re-login interval");
			clearInterval(GmCXt.reloginInterval);
		} else {
			GmCXt.log(21, "RE-LOGIN using orgkey");
			GmCXt.storage().remove(['user']).then(function() {
				GmCXt.log(21, "CLEARED user data ");
				GmCXt.loginUsingAuthKey();
			});
		}
	}, GmCXt.t.autoRelogin);
};

GmCXt.checkIfSurveySubmitted = function(playerInstance, data, isExitSurvey, cb) {
	var flag = false;
	GmCXt.storage().get(['surveyCompleted'])
		.then(function(st) {
			function checkSurveySubmited(version, surveyObj) {
				if (surveyObj[data.tourId]) {
					if (version > surveyObj[data.tourId]) {
						return true;
					} else {
						return false;
					}
				} else {
					return true;
				}
			}

			data.instance = {
				tour: {
					tour_settings: playerInstance.tour.tour_settings
				}
			};

			if (GmCXt.isAnonymousUser()) {
				if (GmCXt.getObjectSize(st) === 0) st.surveyCompleted = {};
				flag = checkSurveySubmited(parseInt(data.version), st.surveyCompleted);
			} else {
				var userSettings = GmCXt.user.settings || {};
				userSettings.surveyCompleted = userSettings.surveyCompleted || {};
				flag = checkSurveySubmited(parseInt(data.version), userSettings.surveyCompleted);
			}

		}).then(function() {
			if (cb) {
				cb(flag);
			}
		});
};

GmCXt.showSurveyScreen = function(data, isExitSurvey) {
	return new Promise(function(resolve, reject) {
		GmCXt.isSurveyVisible = false;

		if (isExitSurvey) {
			GmCXt.isSurveyVisible = true;
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:exit_survey_start;task:show_survey', data);
			resolve(GmCXt.isSurveyVisible);

		} else if (data.type === "stepPlay") {
			GmCXt.isSurveyVisible = true;
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:survey_start;task:show_survey', data);
			resolve(GmCXt.isSurveyVisible);

		} else {
			var playerInstance = mg$.extend({}, data.playerInstance);

			if (GmCXt.isEmpty(playerInstance)) return;

			GmCXt.checkIfSurveySubmitted(playerInstance, data, isExitSurvey, function(f) {
				if (f) {
					GmCXt.isSurveyVisible = true;
					GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:survey_start;task:show_survey', data);
				}
				resolve(GmCXt.isSurveyVisible);
			});
		}

		if (!GmCXt.isSidePanelApp) GmCXt.closeAppPanel();
	});
};

GmCXt.checkCurrentStepSurvey = function(pi) {

	var currentStep = GmCXt.getCurrentStep(pi.currentStepId);
	if (currentStep.step_type === "survey") {
		return true;
	} else {
		return false;
	}
};

GmCXt.getSurveyScreen = function(PI, guideNotCompleted) {
	return new Promise(function(resolve, reject) {
		var f = false;

		if (GmCXt.playerI && GmCXt.isLooping()) {
			resolve(f);

		} else if (PI && PI.tour) {

			var tour = PI.tour;

			var data = {
				tourId: tour.tour_id,
				version: tour.version,
				playerInstance: PI
			};

			if (guideNotCompleted) {
				f = true;

				if (PI && GmCXt.checkCurrentStepSurvey(PI)) {

					var currentStep = GmCXt.getCurrentStep(PI.currentStepId);
					var sentiment = currentStep.step_settings.sentiment;
					data.data = {};
					data.data.sentimentCode = sentiment.sentiment_code;
					data.step = currentStep;
					data.type = 'stepPlay';
					GmCXt.showSurveyScreen(data, false, guideNotCompleted).then(function() {
						resolve(f);
					});

				} else if (GmCXt.isExitSurvey()) {

					if (GmCXt.isPlayer()) {
						GmCXt.showSurveyScreen(data, true).then(function() {
							resolve(f);
						});

					} else {
						var ti = GmCXt.tourPlayerI;
						if (ti) {
							ti.closeGuide();
						}
						resolve(f);
					}
				}

			} else if (GmCXt.showSurvey(PI) && GmCXt.isPlayer()) {
				data.type = 'guide';
				GmCXt.showSurveyScreen(data).then(function(f) {
					resolve(f);
				});
			}
		}
	});
};

GmCXt.showSurvey = function(PI) {

	var tour = PI.tour;

	if (tour.is_published &&
		tour.tour_settings.enableSentiment &&
		PI.completeEventTracked &&
		GmCXt.isLastStep(PI.currentStepId, PI.playStructure))
		return true;
	else if (!GmCXt.playerI && tour && tour.is_published && tour.tour_settings.enableSentiment) {
		return true;
	} else
		return false;
};

GmCXt.getOpacity = function(step) {

	var opacity = 0;
	var setting = step.step_settings;

	if (setting && GmCXt.isNumeric(setting.overlayOpacity)) {
		opacity = parseInt(setting.overlayOpacity);
	}
	return opacity;
};

GmCXt.recordGuideEvents = function() {
	var PI = GmCXt.playerI;

	if (!PI || PI.length === 0) return;

	if (GmCXt.isFirstNonAutomationStep()) PI.firstStepPlayed = true;

	var tour = PI.tour;

	if (!GmCXt.guidePlayTracker["tour:" + tour.tour_id]) {
		GmCXt.setGuidePlayTracker(tour.tour_id);
	}

	if (PI.completeEventTracked !== true &&
		PI.firstStepPlayed === true &&
		GmCXt.isLastStep(PI.currentStepId, PI.playStructure)
	) {
		PI.completeEventTracked = true;

		//Update Guide tracker
		var completionEventType = 'guide_complete';

		GmCXt.guidePlayTracker["tour:" + tour.tour_id][completionEventType] = 1;

		if (PI.linkedGuides) {
			PI.linkedGuides.forEach(function(tourId) {
				if (!GmCXt.guidePlayTracker["tour:" + tourId]) GmCXt.setGuidePlayTracker(tourId);

				if (GmCXt.guidePlayTracker["tour:" + tourId]) {
					GmCXt.guidePlayTracker["tour:" + tourId][completionEventType] = 1;
					GmCXt.guidePlayTracker["tour:" + tourId].play_instance_id = GmCXt.guidePlayTracker["tour:" + tour.tour_id].play_instance_id;
				}
			});
		}
	}

	if (PI.linkedGuides) {
		PI.linkedGuides.forEach(function(tourId) {
			if (GmCXt.guidePlayTracker["tour:" + tourId]) {
				GmCXt.guidePlayTracker["tour:" + tourId].play_instance_id = GmCXt.guidePlayTracker["tour:" + tour.tour_id].play_instance_id;
			}
		});
	}

	if (GmCXt.isLastStep(PI.currentStepId, PI.playStructure) && GmCXt.tourActivity['t:' + PI.tour.tour_id]) {
		delete GmCXt.tourActivity['t:' + PI.tour.tour_id];
		GmCXt.sendMessageToApp("mgPlayerJSTest_action:update_tour_activity", {
			tourActivity: GmCXt.tourActivity
		});
	}
};

GmCXt.isClickInStepPopup = function(e) {
	if (mg$(e.target).parents('.mgPlayerJSTest_preview-step-popup-container').length ||
		mg$(e.target).hasClass('mgPlayerJSTest_image-popup') ||
		mg$(e.target).parents('.mgPlayerJSTest_image-popup').length ||
		mg$(e.target).hasClass('mgPlayerJSTest_icon-image-prev-button') ||
		mg$(e.target).parents('.mgPlayerJSTest_icon-image-prev-button').length ||
		mg$(e.target).hasClass('mgPlayerJSTest_image-step-prev') ||
		mg$(e.target).parents('.mgPlayerJSTest_play-pause-toolbar').length ||
		mg$(e.target).hasClass('mgPlayerJSTest_popup') ||
		mg$(e.target).parents('.mgPlayerJSTest_popup').length ||
		mg$(e.target).hasClass('mgPlayerJSTest_overlay-container')
	) {
		return true;
	} else {
		return false;
	}
};

GmCXt.isClickInSurveyPopup = function(e) {
	if (mg$(e.target).parents('.mgPlayerJSTest_survey-popup-wrapper').length) {
		return true;
	} else {
		return false;
	}
};

GmCXt.getSingleVisibility = function(el) {

	if (mg$(el).css("display") === "none" || mg$(el).css("visibility") === "hidden" || !mg$(el).is(":visible")) {
		return false;
	} else {
		return true;
	}
};

GmCXt.getVisibilityTillParent = function(el) {

	if (!el || !GmCXt.getSingleVisibility(el)) return false;

	var visible = true;
	var all = mg$(el).add(mg$(el).parents());

	for (var i = 0; i < all.length; i++) {
		if (!GmCXt.getSingleVisibility(all[i])) {
			visible = false;
			break;
		}
	}
	return visible;
};

GmCXt.confirmTourClose = function(forceClose) {
	var pi = GmCXt.playerI;
	var ti = GmCXt.tourPlayerI;
	if (pi && ti) {
		if (pi.currentStepId && pi.playStructure &&
			GmCXt.getTail(pi.currentStepId, pi.playStructure) !== null &&
			GmCXt.isExitSurvey() && GmCXt.isPlayer()) {
			GmCXt.showExitSurvey();
		}
		ti.closeGuide(forceClose);
	}
};

GmCXt.requiredWidth = function() {
	if (mg$(window).width() > 550) return true;
	else return false;
};

GmCXt.getPopupHtml = function(msg, ok, cancel) {
	var popupType = 'mgPlayerJSTest_popup-info';
	var html = " <wmgPlayerJSTest_ class='mgPlayerJSTest_overlay-container'></wmgPlayerJSTest_>" +
		"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup " + popupType + "' id='mgPlayerJSTest_popup-reload'>" +
		"   <div class='mgPlayerJSTest_popup-header-wrapper'>" +
		"	   <div class='mgPlayerJSTest_popup-header-icon-wrapper'><div class='mgPlayerJSTest_popup-header-icon'></div></div>" +
		"   </div>" +
		" <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-wrapper'>" + msg + "</wmgPlayerJSTest_>" +
		" <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-btn-wrapper'>" +
		"   <button title='" + ok + "' aria-label='" + ok + "' class='mgPlayerJSTest_popup-ok-btn mgPlayerJSTest_btn-default mgPlayerJSTest_ok-btn mgPlayerJSTest_text-overflow-ellipsis mgPlayerJSTest_inline-block-vt mgPlayerJSTest_lbl-btn'>" + ok + "</button>" +
		"   <button title='" + cancel + "' aria-label='" + cancel + "' class='mgPlayerJSTest_popup-cancel-btn mgPlayerJSTest_btn-default mgPlayerJSTest_text-overflow-ellipsis mgPlayerJSTest_inline-block-vt mgPlayerJSTest_lbl-btn'>" + cancel + "</button>" +
		" </wmgPlayerJSTest_>" +
		"</wmgPlayerJSTest_>";
	return html;
};

GmCXt.getKeyShortPopupHtml = function(tourList) {
	var tourListStr = "";
	if (tourList && tourList.length) {
		for (var i = 0; i < tourList.length; i++) {
			tourListStr = tourListStr + "<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-row-content-wrapper'><wmgPlayerJSTest_ class='mgPlayerJSTest_popup-colmn-content-wrapper mgPlayerJSTest_col-lt' > " + tourList[i].tour_settings.keyboardKeyInput + " : </wmgPlayerJSTest_>" +
				"<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-colmn-content-wrapper mgPlayerJSTest_col-rt' > " + tourList[i].tour_title + " </wmgPlayerJSTest_></wmgPlayerJSTest_>";
		}
	} else {
		tourListStr = "<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-row-content-wrapper'><wmgPlayerJSTest_ class='mgPlayerJSTest_popup-colmn-content-wrapper' > No shortcuts available </wmgPlayerJSTest_> " +
			"</wmgPlayerJSTest_>";
	}


	var html = "<wmgPlayerJSTest_ class='mgPlayerJSTest_popup mgPlayerJSTest_popup-info mgPlayerJSTest_popup-keyshort' id='mgPlayerJSTest_popup-reload'>" +
		"   <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-header-wrapper'>" +
		"	   <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-keyshort-header-title'>Keyboard shortcuts</wmgPlayerJSTest_>" +
		"	   <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-keyshort-close'>" + GmCXt.label.close + "</wmgPlayerJSTest_>" +
		"   </wmgPlayerJSTest_>" +
		" <wmgPlayerJSTest_ class='mgPlayerJSTest_popup-content-wrapper'> " +
		" 	<wmgPlayerJSTest_ class='mgPlayerJSTest_popup-main-content-wrapper'>" +
		tourListStr +
		" 	</wmgPlayerJSTest_>" +
		" </wmgPlayerJSTest_>" +
		"</wmgPlayerJSTest_>";
	return html;
};

GmCXt.stopPropagation = function(e) {
	e.stopImmediatePropagation();
};

GmCXt.addPopupEvents = function(onOK, onCancel, onClose) {

	mg$(".mgPlayerJSTest_popup").on("mousedown", GmCXt.stopPropagation);
	mg$(".mgPlayerJSTest_overlay-container").on("mousedown", GmCXt.stopPropagation);

	mg$(".mgPlayerJSTest_popup-ok-btn").on("click", onOK);
	mg$(".mgPlayerJSTest_popup-cancel-btn").on("click", onCancel);
	mg$(".mgPlayerJSTest_popup-close-button").on("click", onClose);
	mg$(".mgPlayerJSTest_popup-keyshort-close").on("click", onOK);
};

GmCXt.showPushOptions = function(opts) {

	var pub = {};

	pub.show = function() {

		GmCXt.isAutoNotifEnable = true;

		var msg = GmCXt.label.notifSnoozeDonotMsg;
		var ok = GmCXt.label.neverShowAgain;
		var cancel = GmCXt.label.watchLater;

		mg$("html").append(GmCXt.getPopupHtml(msg, ok, cancel));

		mg$(".mgPlayerJSTest_popup-header-icon").html(GmCXt.svgs.popup_info);

		function closeGuide() {
			if (opts.slideshow) {
				GmCXt.sendMessageToApp('mgPlayerJSTest_action:stop_slideshow');
				GmCXt.cleanPlayer();
			} else if (opts.isTour) {
				var pi = GmCXt.playerI;
				if (pi && GmCXt.isExitSurvey() &&
					GmCXt.isPlayer() && !GmCXt.isLastStep(pi.currentStepId, pi.playStructure)) {
					GmCXt.showExitSurvey();
				}

				opts.okClose();
			}
		}

		function onCancel(e) {
			GmCXt.stopPropagation(e);
			GmCXt.setSnoozedTour(opts.tour);
			closeGuide();
			pub.close();
		}

		function onClose(e) {
			GmCXt.stopPropagation(e);
			pub.close();
		}

		function onOK(e) {
			GmCXt.stopPropagation(e);
			GmCXt.setDoNotShowTours(opts.tour);
			closeGuide();
			pub.close();
		}

		GmCXt.addPopupEvents(onOK, onCancel, onClose);
	};

	pub.close = function() {
		GmCXt.unlockScroll();
		GmCXt.closePopup();
	};
	return pub;
};

GmCXt.closePopup = function() {
	mg$(".mgPlayerJSTest_popup").remove();
	mg$(".mgPlayerJSTest_overlay-container").remove();
};

GmCXt.showExitSurvey = function(opts) {

	var pi = GmCXt.playerI;
	GmCXt.unlockScroll();
	mg$(".mgPlayerJSTest_popup").remove();
	GmCXt.getSurveyScreen(pi, true);
};

GmCXt.zoomImage = function(text, popClass) {

	if (text && text.indexOf("<img ") !== -1 && text.indexOf('src=""') === -1) {
		if (window.self === window.top) {
			GmCXt.setPopUpForImage(text, popClass);
		} else {
			GmCXt.setZoomImageFromIframe(text, popClass);
		}
	}
};

GmCXt.redirectLinkToBrowser = function(e) {
	var url = e.target.href;
	var shell = require('electron').shell;
	shell.openExternal(url);
};

GmCXt.setLinkGuidePlay = function(text, popClass) {
	mg$(popClass + ' a').each(function() {
		var t = mg$(this).attr('target');
		if (t === 'gssPlayGuide') {
			mg$(this).on("click", function(e) {
				var url = mg$(this).attr('href');
				url = url.split('?')[1];
				var tourId = GmCXt.getParameterValue('guideMe-tourId', url);
				var automation = GmCXt.getParameterValue('automation', url);

				if (tourId) {
					e.preventDefault();
					e.stopPropagation();
					e.stopImmediatePropagation();
					automation = automation === "true" ? true : false;
					var initiator = 'urlTour';
					if (automation) {
						initiator = 'doitforme';
					}

					if (GmCXt.tourPlayerI) {
						GmCXt.tourPlayerI.stop();
					}
					if (window.self === window.top) {
						GmCXt.getTourAndPlay(tourId, initiator);
					} else {
						var data = {
							tourId: tourId,
							initiator: initiator
						};
						GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:play_guide_from_link', data);
					}
				}
			});
		}
	});
};

GmCXt.saveAppPresence = function(m) {

	m = GmCXt.convertMgdata(m);

	if (!GmCXt.isClientJs()) {
		GmCXt.storage().get(['login_state']).then(function(o) {
			if (o.login_state) {
				saveAndAcknowledge();
			}
		});
	} else {
		saveAndAcknowledge();
	}

	function saveAndAcknowledge() {

		GmCXt.myGuideApps[m.data] = true;

		// Send acknowledgement
		if (m.action === 'MyGuideReporting') {
			var message = {
				action: 'MyGuideReporting:Ack',
				data: GmCXt.getAppName()
			};

			GmCXt.log(63, 'Send acknowledgement of: ' + message.data);

			GmCXt.sendToParentWindow(message);
		}

		GmCXt.log(63, 'MyGuide apps found: ', GmCXt.myGuideApps);
	}
};

GmCXt.isLessThan = function(d, val) {
	if (d === undefined || d === null || d < val)
		return true;
	else
		return false;
};

GmCXt.isGreaterThan = function(d, val) {
	if (d === undefined || d === null || d > val)
		return true;
	else
		return false;
};

GmCXt.setSnoozedTours = function(tour, msg) {

	GmCXt.storage().get(['toursClosed', 'tourIdArray']).then(function(st) {

		GmCXt.showSnoozeMessage(msg, tour);

		var toursClosedByUser = GmCXt.parseJSON(st.toursClosed);

		if (GmCXt.getObjectSize(toursClosedByUser) === 0) toursClosedByUser = {};

		if (mg$.isArray(tour)) {
			tour.forEach(function(tour) {
				toursClosedByUser[tour.tour_id] = new Date().getTime() + ':' + parseInt(tour.version);
			});
		} else {
			toursClosedByUser[tour.tour_id] = new Date().getTime() + ':' + parseInt(tour.version);
		}

		GmCXt.storage()
			.set({
				'toursClosed': JSON.stringify(toursClosedByUser)
			});
		GmCXt.updNotifDataSidePanel(toursClosedByUser, st.tourIdArray);
	});
};

GmCXt.showSnoozeMessage = function(str, tour) {
	var t = GmCXt.getSleepTime(GmCXt.label);

	if (t !== '0 ' + GmCXt.label.hour) {
		var msg = str + t;
		GmCXt.toastMsg(msg).show();
	}
};

GmCXt.updNotifDataSidePanel = function(toursClosed, tourIdArray) {
	var data = {
		toursClosed: toursClosed,
		tourIdArray: ''
	};
	if (GmCXt.isAnonymousUser()) {
		data.tourIdArray = tourIdArray;
	}
	GmCXt.sendMessageToApp("mgPlayerJSTest_action:update_notification_info", data);
};

GmCXt.updateNotification = function(tours) {
	GmCXt.storage().get(['toursClosed']).then(function(st) {
		var userSettings = GmCXt.user.settings || {};
		userSettings.viewed_guide_notifications = tours;

		if (GmCXt.isAnonymousUser()) {
			GmCXt.storage().set({
				'tourIdArray': tours
			});
		} else {
			GmCXt.updateUserProfileSettings(userSettings);
		}

		GmCXt.updNotifDataSidePanel(GmCXt.parseJSON(st.toursClosed), tours);
	});
};

GmCXt.setSnoozedTour = function(tour) {
	var msg = GmCXt.label.pushTourSnoozeMsg + ' ';
	GmCXt.setSnoozedTours(tour, msg);
};

GmCXt.isTourDisplayFrequencyReached = function(tour) {
	var retVal = false;
	var dispFreqGuides = GmCXt.user.settings.display_frequency_guides ? GmCXt.user.settings.display_frequency_guides : {};
	if (!GmCXt.isEmpty(dispFreqGuides)) {
		var countObj = dispFreqGuides[parseInt(tour.tour_id)];
		if (GmCXt.isDefined(countObj)) {
			if (parseInt(countObj.version) === parseInt(tour.version)) {
				if (tour.tour_settings.displayFrequencyTimes - countObj.playedCount <= 0) {
					return true;
				}
			}
		}
	}

	if (tour.tour_settings.displayFrequency && tour.tour_settings.displayFrequencyTimes === 1) {
		return true;
	}

	return retVal;
};

GmCXt.setDoNotShowTours = function(tour) {
	if (GmCXt.isTourDisplayFrequencyReached(tour)) {
		return;
	}
	GmCXt.getDoNotShowTours(false)
		.then(function(t) {
			doNotShowTours = t;
			doNotShowTours[tour.tour_id] = parseInt(tour.version);
			GmCXt.updateNotification(doNotShowTours);
		});
};

GmCXt.setDefaultStepSetting = function(data, prop, val) {
	if (!data.step_settings[prop] || data.step_settings[prop] === 'keepNext') {
		data.step_settings[prop] = val;
	}
};

GmCXt.getHostErrorId = function() {

	var errorIds = {
		'workday.com': ['#errorWidgetMessageCount'],
		'coupahost.com': ['#dynamic_errors', '#errorExplanation']
	};

	for (var host in errorIds) {
		if (errorIds.hasOwnProperty(host)) {
			if (GmCXt.isCurrentHost(host)) {
				return errorIds[host];
			}
		}
	}
	return [];
};

GmCXt.checkHostError = function(id) {
	var ids = GmCXt.getHostErrorId();

	for (var i = 0; i < ids.length; i++) {
		var id = ids[i];
		if (id && mg$(id).length > 0) {
			return true;
		}
	}

	return false;
};

GmCXt.checkForErrorOnScreen = function() {

	var err = false;

	if (GmCXt.checkHostError()) {

		err = true;
		GmCXt.log(33, "Error on screen.");

		var msg = GmCXt.label.hostJsError;
		GmCXt.toastMsgPersistent(msg).show();

	} else {
		GmCXt.toastMsgPersistent().hide();
	}

	return err;
};

GmCXt.isParentElementId = function(elem, id) {

	var el = mg$(elem);
	var all = el.add(el.parents());

	var retVal = all.filter(function() {
		return mg$(this).attr("id") === id;
	}).length > 0;

	return retVal;
};

GmCXt.setZoomImageFromIframe = function(desc, parentClassName) {
	GmCXt.initialiseImagePopUp();
	mg$(parentClassName + ' img').each(function() {
		mg$(parentClassName + ' img').on("click", function(e) {
			GmCXt.stopPropagation(e);
			GmCXt.openModalFromTopWindow(this.src);
		});
	});
};

GmCXt.initialiseImagePopUp = function() {
	GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:initialize_image_iframe_popup', {});
};

GmCXt.openModalFromTopWindow = function(src) {
	var data = {};
	data.imageSrc = src;
	GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:open_image_iframe_popup', data);
};

GmCXt.setImagePopUp = function() {
	mg$('#mgPlayerJSTest_image_popup').remove();
	GmCXt.addImagePopHtml();
	var modal = document.getElementById('mgPlayerJSTest_image_popup');

	if (modal) {
		modal.style.display = "none";
		modal.onclick = function(e) {
			GmCXt.stopPropagation(e);
		};
	}
	var closeBtn = document.getElementsByClassName("mgPlayerJSTest_close-img-popup")[0];
	if (closeBtn) {
		closeBtn.onclick = function(e) {
			GmCXt.stopPropagation(e);
			modal.style.display = "none";
			mg$('.mgPlayerJSTest_preview-step-popup-container').css({
				'z-index': '2147483647'
			});
		};
	}
};

GmCXt.openImagePopup = function(data) {
	var modal = document.getElementById('mgPlayerJSTest_image_popup');
	var modalImg = document.getElementById("mgPlayerJSTest_img_desc");
	modal.style.display = "block";
	modalImg.src = data.imageSrc;
};

GmCXt.addEventOnTooltip = function(req) {

	clearTimeout(GmCXt.tooltipTimeout);

	GmCXt.tooltipTimeout = GmCXt.timeout(function() {
		var el = mg$('#mgPlayerJSTest_smarttip-' + req.step.step_id);

		el.off("click").on('click', function(e) {
			if (!req.isPreview) {
				GmCXt.tooltipAction(e, req.settings.smartTip, req.step);
			}
		});

	}, GmCXt.t.addTooltipEvent);
};

GmCXt.isEventToolTip = function(event, stepId) {
	var targetId = event.target.id;
	var cTargetId = event.currentTarget.id;
	var isSmartipEvent = false;

	switch (targetId) {
		case 'mgPlayerJSTest_smarttip-icon-' + stepId:
			isSmartipEvent = true;
			break;
		case 'mgPlayerJSTest_smarttip-' + stepId:
			isSmartipEvent = true;
			break;
		default:
	}

	switch (cTargetId) {
		case 'mgPlayerJSTest_smarttip-icon-' + stepId:
			isSmartipEvent = true;
			break;
		case 'mgPlayerJSTest_smarttip-' + stepId:
			isSmartipEvent = true;
			break;
		default:
			break;
	}

	if (mg$(event.currentTarget).hasClass("mgPlayerJSTest_smarttip-icon-wrapper-" + stepId)) {
		isSmartipEvent = true;
	} else if (mg$(event.target).hasClass("mgPlayerJSTest_smarttip-icon-wrapper-" + stepId)) {
		isSmartipEvent = true;
	}

	return isSmartipEvent;
};

GmCXt.tooltipAction = function(event, tooltip, step) {
	GmCXt.updateTooltipActionInfo(step.tour_id, step.step_id, tooltip, "click");

	if (!GmCXt.isEventToolTip(event, step.step_id)) {
		return;
	}

	if (tooltip.clickAction === 'openCurrentPage') {
		event.preventDefault();
		event.stopImmediatePropagation();
		if (window.self === window.top) {
			GmCXt.openAppPanel('currentPage');
		} else {
			GmCXt.sendMessageToParentWindow("mgPlayerJSTest_action:open_app_panel");
		}

	} else if (tooltip.clickAction === 'openUrl') {
		event.preventDefault();
		event.stopImmediatePropagation();

		var url = tooltip.openUrlText;

		if (url.indexOf('http') !== 0) {
			url = 'https://' + url;
		}

		window.open(url, '_blank');
	} else if (tooltip.clickAction === 'sentiment') {
		event.preventDefault();
		event.stopImmediatePropagation();
		var data = {
			sentiment_code: tooltip.sentimentCode,
			tourId: step.tour_id,
			stepId: step.step_id
		};
		if (window.self === window.top) {
			GmCXt.sendMessageToApp("mgPlayerJSTest_action:get_survey_detail_tooltip", data);
		} else {
			GmCXt.sendMessageToParentWindow("mgPlayerJSTest_action:get_survey_data_from_sidepanel", data);
		}

	}
};

GmCXt.clearStepReqObj = function() {
	mg$("[gm_visited='true']").removeAttr('gm_visited');
	delete GmCXt.currentHe;
	delete GmCXt.stepReq;
	GmCXt.captureStepCounter = 0;
	GmCXt.storage().remove(['stepReq','captureStepCounter']);
};

GmCXt.isLastStepPlayed = function() {
	var flag = false;

	if (GmCXt.playerI && (GmCXt.playerI.currentStepId === GmCXt.playerI.lastPlayedStepId))
		flag = true;

	return flag;
};

GmCXt.getNextBtnElem = function() {
	var nxtBtn = document.getElementById("mgPlayerJSTest_play_step_next");
	var doneBtn = document.getElementById("mgPlayerJSTest_play_step_next_done");
	var nxtClassic = document.getElementById("mgPlayerJSTest_play_step_next_classic");
	var doneClassic = document.getElementById("mgPlayerJSTest_play_step_next_done_classic");
	var pauseBtn = document.getElementById("mgPlayerJSTest_play_step_pause");
	var pauseClassic = document.getElementById("mgPlayerJSTest_play_step_pause_classic");
	var btn;

	if (mg$(nxtBtn).is(':visible'))
		btn = nxtBtn;
	else if (mg$(doneBtn).is(':visible'))
		btn = doneBtn;
	else if (mg$(nxtClassic).is(':visible'))
		btn = nxtClassic;
	else if (mg$(doneClassic).is(':visible'))
		btn = doneClassic;
	else if (mg$(pauseBtn).is(':visible'))
		btn = nxtBtn;
	else if (mg$(pauseClassic).is(':visible'))
		btn = nxtBtn;

	return btn;
};

GmCXt.triggerClick = function(he, req) {
	if (!he) return;

	var d = {
		bubbles: true,
		cancelable: true
	};

	var clientRect = GmCXt.getBoundingRect(he);
	if (clientRect) {
		d.clientX = clientRect.x;
		d.clientY = clientRect.y;
	}

	he.focus();
	GmCXt.log(33, "Event trigger: mouseup");
	he.dispatchEvent(new MouseEvent('mouseup', d));
	if (req && req.data) {
		var s = req.data.settings;
	}

	he.dispatchEvent(new MouseEvent('mouseover', d));
	he.dispatchEvent(new MouseEvent('mousedown', d));

	var aTags = mg$(he).find('a');
	if (aTags.length > 0) {
		he = aTags[0];
	}

	GmCXt.log(33, "Event trigger: click");

	he.dispatchEvent(new MouseEvent('click', d));
};

GmCXt.markAutoLaunchTourDoNotShow = function(tour) {
	if (!tour.tour_settings.displayFrequency && GmCXt.firstStepAutoLaunch()) {
		GmCXt.setDoNotShowTours(tour);
	}
};

GmCXt.checkProceedToPlay = function(step, tour) {

	return new Promise(function(resolve, reject) {

		var stepSetting = step.step_settings;
		var stepRuleMatched = false,
			stepRuleExist = false;

		var tourSetting = tour.tour_settings;

		var guideRuleExist = (tourSetting.rules && tourSetting.rules.length);
		var checkRules = false;
		var isVariableExistInGuide = guideRuleExist && GmCXt.variableRuleExistInGuide(tourSetting.rules);

		var stepUrlHost = GmCXt.getDomain(step.step_url);
		var windowHost = GmCXt.getPageDomain();

		if (GmCXt.playerI) {
			checkRules = (GmCXt.playerI.initiator !== "beaconTour" && GmCXt.playerI.initiator !== "Current Page");
			GmCXt.log(33, 'Launched From ' + GmCXt.playerI.initiator);
		}

		function validate(step) {
			if (!step && isVariableExistInGuide) {
				GmCXt.timeout(function() {
					validateRules();
				}, GmCXt.t.checkVariable);
			} else {
				validateRules(step);
			}
		}

		if (stepSetting.rules && stepSetting.rules.length) {

			stepRuleExist = true;
			var oldRegEx = false;

			if (stepSetting.version) {
				oldRegEx = GmCXt.legacyWildChar(stepSetting.version);
			} else if (stepSetting.element && stepSetting.element.version) {
				oldRegEx = GmCXt.legacyWildChar(stepSetting.element.version);
			}

			stepRuleMatched = GmCXt.ruleEngine.evaluateRules(stepSetting.rules, oldRegEx);
		}

		if (stepRuleExist) {
			if (stepRuleMatched && stepSetting.hasElRule) {
				validate(true);
			} else {
				if (GmCXt.playerI) {
					GmCXt.playerI.stepRuleMatch = stepRuleMatched;
				}

				if (stepRuleMatched) {
					GmCXt.log(33, 'MATCHED step rules');
					resolve(true);
				} else {
					GmCXt.log(33, 'Step rules did not MATCH');
					if (GmCXt.playerI.testAutomation) {
						GmCXt.auto.fail(step, {
							errorMessage: 'Step Rules Not Matched.'
						});
					} else {
						resolve(false);
					}
				}
			}
		} else if (guideRuleExist && GmCXt.isFirstNonAutomationStep() && checkRules) {
			if (GmCXt.isAutomationRunning() && GmCXt.isAutomationStep(GmCXt.playerI.tour.steps[0])) {
				// During guide automation, guide rules are executed after all the guide level automation steps.
				// So element capturing for rule validation should be done after guide level automation steps.
				// Ignore any elements captured before it."
				GmCXt.domElStore = [];
			}
			validate();
		} else if (!GmCXt.playerI && guideRuleExist) {
			// Always validate rules for workflow tracking
			validate();
		} else if (!GmCXt.isFQDN() &&
			!guideRuleExist &&
			windowHost && windowHost !== stepUrlHost &&
			step.step_type !== 'video' && step.step_type !== 'image' && step.step_type !== 'guide' && step.step_type !== GmCXt.STEP_TYPE_WEB_INLINE) {

			resolve(false);
		} else {
			resolve(true);
		}

		function onResult(result) {
			var status = result.valid ? true : false;

			var log = 'MATCHED? [' + status + '] guide rules on first step ' + GmCXt.stepLog(step.step_id, tour.tour_title);

			GmCXt.log(33, log);
			GmCXt.log(27, log);

			if (GmCXt.playerI) {
				GmCXt.playerI.guideRuleMatch = status;
			}

			if (GmCXt.isAutomationRunning()) {
				if (status === false) {
					GmCXt.auto.fail(step, {
						errorMessage: 'Guide Rules Not Matched.'
					});
				} else {
					resolve(status);
				}
			} else {
				resolve(status);
			}
		}

		function onStepElRuleCheck(result) {
			var status = result.valid ? true : false;

			var log = 'MATCHED? [' + status + '] step rules ' + GmCXt.stepLog(step.step_id, tour.tour_title);

			GmCXt.log(33, log);
			GmCXt.log(27, log);

			if (GmCXt.playerI) {
				GmCXt.playerI.stepRuleMatch = status;
			}

			resolve(status);
		}

		function validateRules(step) {
			var waitTime = tourSetting.ruleDelayTime || 0;
			var timeout = GmCXt.t.ruleTimeOut25ms;
			if (GmCXt.checkTourCreatedBefore(tourSetting, 2021013001)) {
				timeout = GmCXt.t.ruleTimeOut10s;
			}
			var obj = {
				rules: tourSetting.rules,
				tour: tour,
				timeoutVal: timeout,
				timeout: timeout,
				cb: onResult,
				isTour: true,
				initiator: 'tourPlay'
			};

			if (step) {
				waitTime = stepSetting.stepDelayTime || 0;
				obj.rules = stepSetting.rules;
				obj.cb = onStepElRuleCheck;
			}

			GmCXt.timeout(function() {
				GmCXt.ruleEngine.queue(obj);
			}, waitTime);
		}
	});
};

GmCXt.setPanelTopLeft = function(isClose) {
	if (GmCXt.isMicroPlayer() || GmCXt.isWBMicroPlayer()) {
		mg$(".mgPlayerJSTest_panel").css("left", "initial");
		mg$(".mgPlayerJSTest_panel").css("top", "50%");
		if (GmCXt.APP_PANEL_OPEN) {
			mg$(".mgPlayerJSTest_panel").css("right", "50px");
		}
	} else {
		mg$(".mgPlayerJSTest_panel").css("left", "initial");
		mg$(".mgPlayerJSTest_panel").css("top", "0");
		if (GmCXt.APP_PANEL_OPEN) {
			var alignment = GmCXt.getWidgetAlignment();
			mg$(".mgPlayerJSTest_panel").css(alignment, "0");
		}
	}
};

GmCXt.myGuideLogout = function() {
	GmCXt.sendMessageToApp('mgPlayerJSTest_action:logout_user');
};

GmCXt.reloadElectronApp = function() {
	require('electron').remote.getCurrentWindow().reload();
};

GmCXt.getContainerOffSet = function(container) {
	var d;

	if (container.length > 0) {

		d = container.offset();

		if (d !== undefined) {

			if (d.top < 0) d.top = 0;

			if (d.left < 0) d.left = 0;
		}

		d.width = parseInt(container.width());
		d.height = parseInt(container.height());
	} else {
		d = {
			top: 0,
			left: 0,
			width: mg$(document).width(),
			height: mg$(document).height()
		};
	}

	return d;
};

GmCXt.removeScreenOverlay = function() {
	GmCXt.screenOverlayI = undefined;
	mg$('.mgPlayerJSTest_screen-blackout').hide();
	mg$('.mgPlayerJSTest_screen-blackout').html('');
};

GmCXt.getWidgetInstance = function() {
	return mg$('.mgPlayerJSTest_start-button');
};

GmCXt.getChatIconInstance = function() {
	return mg$('#mgPlayerJSTest_btn-chat-button');
};

GmCXt.hideWidgetIcon = function() {
	GmCXt.log(8, "HIDE WIDGET");

	var widget = GmCXt.getWidgetInstance();
	if (widget.length) {
		widget.hide();
	}
};

GmCXt.getTaskListVisibility = function() {
	if (GmCXt.isTrue(GmCXt.APP_PANEL_OPEN) || !GmCXt.checkPrecedence()) {
		return false;
	}

	if (GmCXt.user && GmCXt.isPlayer() && GmCXt.taskListCount > 0) {
		return true;
	}
	return false;
};

GmCXt.imageSizeStyle = function(selector) {
	var len = mg$(selector).length;

	if (len) {
		for (var i = 0; i < len; i++) {
			var imgW = mg$(selector)[i].getAttribute('width');
			var imgH = mg$(selector)[i].getAttribute('height');

			mg$(selector)[i].style.setProperty('width', imgW + 'px', 'important');
			mg$(selector)[i].style.setProperty('height', imgH + 'px', 'important');
		}
	}
};

GmCXt.updateGuideDisplayFrequency = function(tours) {

	GmCXt.user.settings.display_frequency_guides = tours;
	GmCXt.updateUserProfileSettings(GmCXt.user.settings);
};

function markBeaconDisplayFrequency(tour) {

	if (tour) {
		var beaconGuides = {};
		if (GmCXt.isDefined(GmCXt.user.settings.display_frequency_beacons)) {
			beaconGuides = GmCXt.createDeepCopy(GmCXt.user.settings.display_frequency_beacons);
		}

		if (beaconGuides[tour.tour_id] && parseInt(tour.version) === parseInt(beaconGuides[tour.tour_id].version)) {
			beaconGuides[tour.tour_id].playedCount++;
		} else {
			beaconGuides[tour.tour_id] = {};
			beaconGuides[tour.tour_id].version = parseInt(tour.version);
			beaconGuides[tour.tour_id].playedCount = 1;
		}

		GmCXt.user.settings.display_frequency_beacons = beaconGuides;
		GmCXt.updateUserProfileSettings(GmCXt.user.settings);
	}
}

GmCXt.setBeaconsDisplayFrequency = function(tourId) {
	for (var i = 0; i < GmCXt.beaconTours.length; i++) {
		if (parseInt(GmCXt.beaconTours[i].tour_id) === parseInt(tourId)) {
			var beacSett = GmCXt.beaconTours[i].tour_settings.beacon;
			if (beacSett.displayFrequency) {
				markBeaconDisplayFrequency(GmCXt.beaconTours[i]);
			}
			break;
		}
	}
};

GmCXt.updateSurveyCompletedData = function(data) {
	GmCXt.storage().get(['surveyCompleted']).then(function(st) {
		var userSettings = GmCXt.user.settings || {};
		if (GmCXt.isAnonymousUser()) {
			st.surveyCompleted[data.tourId] = parseInt(data.version);
			GmCXt.storage().set({
				'surveyCompleted': st.surveyCompleted
			});
		} else {
			userSettings.surveyCompleted = userSettings.surveyCompleted || {};
			userSettings.surveyCompleted[data.tourId] = parseInt(data.version);
			GmCXt.updateUserProfileSettings(userSettings);
		}
	});
};

GmCXt.resetMplayerPos = function() {
	mg$('.mgPlayerJSTest_panel').removeAttr("style");
	mg$('.mgPlayerJSTest_panel').css({
		'left': 'initial',
		'top': '50%',
		'right': '50px'
	});
};

GmCXt.isMyGuideEl = function(el) {

	if (el.nodeName.toLowerCase() === 'wmgPlayerJSTest_over' ||
		mg$(el).closest('wmgPlayerJSTest_').length > 0 ||
		(el.name && el.name.includes('guideme-iframe')) ||
		(typeof el.className === 'string' && (el.className.indexOf("mgPlayerJSTest_") === 0 || el.className.indexOf(" mgPlayerJSTest_") > 0)) ||
		(el.id && el.id.indexOf("mgPlayerJSTest_beacon-icon-") === 0)
	) {
		return true;
	}
	return false;
};

GmCXt.playerDomainCheck = function() {
	if (GmCXt.isPlayer()) {
		if (GmCXt.isDomainInActiveApp() || GmCXt.user.signedInWithSso) {
			return true;
		} else {
			return false;
		}
	}
	return true;
};

GmCXt.lastUserAction = 0;
GmCXt.iframeCount = 0;
GmCXt.prevEnv = [];
GmCXt.storagePrefix = GmCXt.conf.appName + "_";
GmCXt.ruleOpsUILabels = {};
GmCXt.inPlayer = GmCXt.conf.appName === GmCXt.conf.playerApp;
GmCXt.maxInlineStepCreation = 10;
GmCXt.captureStepCounter = 0;

GmCXt.timeout = function(fn, t) {
	return setTimeout(fn, t);
};

GmCXt.trackerUtil = {
	guidePayload: [],
	trackPI: false,
	enableTracking: false,
	ePayload: {},
	ttPayload: {},
	page_url: "",
	featureTracking: false,
	pageTracking: false
};
GmCXt.guidePlayTracker = {};

GmCXt.STEP_TYPE_INLINE = 'inline';
GmCXt.STEP_TYPE_WEB_INLINE = 'web_inline';
GmCXt.STEP_TYPE_MESSAGE = 'message';
GmCXt.STEP_TYPE_IMAGE = 'image';
GmCXt.STEP_BEACON_TYPE = 'BEACON';
GmCXt.STEP_TYPE_EXTERNAL_AUTOMATION = 'external_automation_step';
GmCXt.CAPTURE_SCREEN_STEP = 'capture-screen-step';
GmCXt.UPLOAD_IMAGE_STEP = 'upload-image-step';
GmCXt.STEP_TYPE_VIDEO = 'video';
GmCXt.STEP_TYPE_SMART_TIP = 'smartTip';
GmCXt.STEP_TYPE_AUTOMATION = 'automation';

GmCXt.STEP_TYPE_GUIDE = 'guide';
GmCXt.STEP_TYPE_BRANCH = 'branch';
GmCXt.STEP_TYPE_SURVEY = 'survey';
GmCXt.STEP_TYPE_TRANSPORT = 'transport';
GmCXt.ANALYTICS_EVENT_CHAIN_ID = '';
GmCXt.INSIGHTS_EVENT_CHAIN_ID = '';
GmCXt.STEP_TEXT_SLIDE_TYPE = 'textSlide';
GmCXt.STEP_TYPE_ERROR_HANDLER = 'errorHandler';

GmCXt.STEP_VIEW_OPERATION = 'view';
GmCXt.STEP_CREATE_OPERATION = 'create';
GmCXt.STEP_EDIT_OPERATION = 'edit';

GmCXt.isLogoutTrackApi = false;


GmCXt.STEP_TYPE_TAG = 'tag';

GmCXt.t_ = {
	hr1: 60 * 60 * 1000,
	hr8: 8 * 60 * 60 * 1000,
	hr24: 24 * 60 * 60 * 1000,
	hr24inSec: 24 * 60 * 60,
	hr12inSec: 12 * 60 * 60,
	min30: 30 * 60 * 1000,
	min15: 15 * 60 * 1000,
	min10_s: 10 * 60,
	min5_s: 5 * 60,
	min3_s: 3 * 60,
	min5: 300000,
	min4: 240000,
	min2_s: 2 * 60,
	min1_s: 60,
	min1: 60000,
	sec30: 30000,
	sec15: 15000,
	sec10: 10000,
	sec5: 5000,
	sec4: 4000,
	sec3: 3000,
	sec2: 2000,
	sec1: 1000,
	ms25: 2500,
	ms15: 1500,
	ms8: 800,
	ms5: 500,
	ms3: 300,
	ms2: 200,
	ms1: 100
};
GmCXt.t = {
	sync24: GmCXt.t_.hr24,
	notifExp24: GmCXt.t_.hr24,
	syncSegment: GmCXt.t_.hr24,
	tracking24hr: GmCXt.t_.hr24inSec,
	tracking12hr: GmCXt.t_.hr12inSec,
	tracking8hr: GmCXt.t_.hr8,

	cdnExp: GmCXt.t_.hr1,
	openSso: GmCXt.t_.hr1,
	openSsoAfterFiveMin: GmCXt.t_.min5,
	snoozeNotif: GmCXt.t_.hr1,
	refreshBrandLogo: GmCXt.t_.hr1,
	refreshWidget: GmCXt.t_.hr1,

	pageTrackWait: GmCXt.t_.min30,

	workflowIdle: GmCXt.t_.min15,
	workflowSync: GmCXt.t_.min15,
	clickSync: GmCXt.t_.min15,

	playerSync: GmCXt.t_.min3_s,

	fileStackExp: GmCXt.t_.min5,
	elLookupTime5m: GmCXt.t_.min5,
	autoRelogin: GmCXt.t_.min5,

	autoWaitTime: GmCXt.t_.min4,
	createStepTimeout: GmCXt.t_.min4,

	trackerSync: GmCXt.t_.min2_s,

	creatorSync: GmCXt.t_.min1_s,
	trackerInt: GmCXt.t_.min1,
	autoEndTime: GmCXt.t_.min1,

	trackerInt2: GmCXt.t_.sec15,
	highlighterDefautWT: GmCXt.t_.sec15,
	tooltipTimeout: GmCXt.t_.sec15,
	elLookupTime15s: GmCXt.t_.sec15,
	elLookupTime10s: GmCXt.t_.sec10,
	stepMTimeout: GmCXt.t_.sec15,
	elLookupTime30s: GmCXt.t_.sec30,

	waitForNotifications: GmCXt.t_.sec10,
	guideAutoWatch: GmCXt.t_.sec10,
	ruleTimeOut10s: GmCXt.t_.sec10,
	stepITimeout: GmCXt.t_.sec10,
	findElTimeout: GmCXt.t_.sec10,
	branchDecision_domRule: GmCXt.t_.sec10,
	branchDecision_domRule_quickBranch: GmCXt.t_.sec4,

	branchDecision: GmCXt.t_.sec2,
	branchDecision_errorHandler: GmCXt.t_.sec1,
	stepComplition: GmCXt.t_.sec4,

	drag: GmCXt.t_.sec2,
	checkVariable: GmCXt.t_.sec2,
	loginEdCast: GmCXt.t_.sec2,

	branchDecisionInterval_domRule: GmCXt.t_.sec1,
	plsWaitMsg: GmCXt.t_.sec1,
	stopRecorder: GmCXt.t_.sec1,

	toastMsg: GmCXt.t_.ms25,
	variableTimeout: GmCXt.t_.ms25,
	ruleTimeOut25ms: GmCXt.t_.ms25,

	eventGuideCompleteAuto: GmCXt.t_.ms15,
	tragetFrameWT: GmCXt.t_.ms15,
	ruleTimeOut15ms: GmCXt.t_.ms15,
	currentPageSpinner: GmCXt.t_.ms15,
	bgmsg: GmCXt.t_.ms15,

	screenrecording: GmCXt.t_.ms8,

	branchDecisionInterval: GmCXt.t_.ms5,
	msgToframes: GmCXt.t_.ms5,
	desktopCapture: GmCXt.t_.ms5,

	appPanel: GmCXt.t_.ms3,
	hiteTooltip: GmCXt.t_.ms2,
	addTooltipEvent: GmCXt.t_.ms1
};

GmCXt._location = function() {
	return window && window.location;
};

GmCXt.isWestpacOneUI = function() {
	if (window &&
		window.location &&
		window.location.href.indexOf('about:blank') !== -1 &&
		parent.window &&
		parent.window.location &&
		parent.window.location.href.indexOf('ui.westpac.com.au') !== -1) {
		return true;
	} else {
		return false;
	}
};

GmCXt.parseJSON__ = function(str) {
	try {
		if (typeof str === 'object') {
			return str;
		} else if (str === '' || str === 'AS' ||
			str === 'na' || str === '[object Object]' ||
			str === undefined || str === 'undefined'
		) {
			return {};
		} else {
			var ob = JSON.parse(str);
			if (typeof ob === 'string') ob = JSON.parse(ob);

			return ob;
		}

	} catch (e) {
		return null;
	}
};

GmCXt.isObject = function(value) {
	return value !== null && typeof value === 'object';
}

GmCXt.isEmpty = function(val) {
	if (typeof val === "boolean" || typeof val === "number") return false; // for 'false' & zero

	if (!val) return true;

	if (typeof val === "object" && val.constructor === Object) return Object.keys(val).length ? false : true;

	if (typeof val === "object" && val.constructor === Array) return val.length ? false : true;

	if (typeof val === 'string' && !val.trim()) return true;

	return false;
};

GmCXt.isDefined = function(val) {
	if (val === undefined || val === "undefined")
		return false;
	else
		return true;
};

GmCXt.updateGlobalUser = function(user) {
	if (!user) {
		return;
	}

	if (!GmCXt.isBackgroundPage) {
		GmCXt.user = GmCXt.validateDataModel(user, GmCXt.model.user);
	} else {
		GmCXt.user = user;
	}
	if (user.organization) {
		GmCXt.updateGlobalOrg(user.organization);
	}
};

GmCXt.checkTimeStampUpdate = function() {
	var apiUrl = GmCXt.conf.publicTimestampUrl + GmCXt.organization.organization_id + ".json?mg_t=" + new Date().getTime();

	fetch(apiUrl).then(function(response) {
		if (response.status === 200) {
			response.json()
				.then(function(r) {
					var lastRefresh = r.last_updated_time;
					if (lastRefresh != GmCXt.refreshTime) {
						GmCXt.playerIntervalValidator();
					}
					GmCXt.lastTimeStampSync = GmCXt.getCurrentTimeInSec();
					GmCXt.msgToApp('mgPlayerJSTest_action:update_timestamp_sync_time', r, senderTabId);

				}).catch(function(error) {
					GmCXt.log(1, "ERROR: Public Timestamp fetch failed", error);
				});

		} else {
			GmCXt.log(1, "ERROR: Public Timestamp fetch failed" + response.status);
		}
	});
};

GmCXt.updateGlobalOrg = function(org) {
	if (!org) {
		return;
	}

	if (!GmCXt.isBackgroundPage) {
		GmCXt.organization = GmCXt.validateDataModel(org, GmCXt.model.organization);
	} else {
		GmCXt.organization = org;
	}
	delete GmCXt.organization.applications;
};

GmCXt.playerIntervalValidator = function() {

	GmCXt.log(70, "GET TIMESTAMP at " + new Date());

	GmCXt.getJsonTimeStamp().then(function(r) {
		var lastRefresh = r.last_updated_time;

		GmCXt.log(70, "LAST REFRESH from server " + lastRefresh);

		if (lastRefresh != GmCXt.refreshTime) {
			GmCXt.log(70, "START PLAYER DATA REFRESH");

			GmCXt.msgToApp('mgPlayerJSTest_action:refresh_player', r, senderTabId);
		} else {
			GmCXt.log(70, "NO UPDATE FOUND " + new Date());
		}

		GmCXt.refreshTime = r.last_updated_time;
	});
};
GmCXt.creatorIntervalValidator = function() {

	GmCXt.log(70, "GET TIMESTAMP at " + new Date());

	GmCXt.getModifiedObjects().then(function(updates) {
		if (updates === 'Renewed Access Token') {
			GmCXt.creatorIntervalValidator();
		} else if (updates.length) {
			GmCXt.msgToApp('mgPlayerJSTest_action:creator_updates', {
				updates: updates,
				refreshTime: GmCXt.creatorRefreshTime
			}, senderTabId);
		}
	}).catch(function(err) {
		GmCXt.log(1, "ERROR: Creator sync failed", err);
	});
};

GmCXt.processLastActionTime = function(boxUrl) {

	var cTime = GmCXt.getCurrentTimeInSec();

	var jsonURL = GmCXt.onPrem() ? boxUrl || GmCXt.getOnPremJsonURL() : '';

	if (GmCXt.inPlayer && (cTime - GmCXt.lastTimeStampSync) > GmCXt.t.playerSync) {
		GmCXt.log(70, "TRIGGER PLAYER UPDATE " + new Date());
		GmCXt.checkTimeStampUpdate();
	}

	if (GmCXt.isEnt() && (cTime - GmCXt.creatorRefreshTime) > GmCXt.t.creatorSync) {
		GmCXt.log(70, "TRIGGER CREATOR UPDATE " + new Date());
		GmCXt.creatorIntervalValidator();
	}

	GmCXt.log(45, "SEND Traker event " + new Date());
	GmCXt.trackerV1.sendEvents();

	GmCXt.log(70, "LAST USER ACTION TIME: " + new Date());
};

GmCXt.startCreatorUpdateInterval = function() {

	var callSync = function() {
		GmCXt.getModifiedObjects().then(function(updates) {
			if (updates === 'Renewed Access Token') {
				GmCXt.startCreatorUpdateInterval();
			} else if (updates.length) {
				GmCXt.msgToApp('mgPlayerJSTest_action:creator_updates', {
					updates: updates,
					refreshTime: GmCXt.creatorRefreshTime
				}, senderTabId);
			}
		}).catch(function(err) {
			GmCXt.log(1, "ERROR: Creator sync failed", err);
		});
	};

	GmCXt.creatorRefreshTime = GmCXt.refreshTime || GmCXt.getCurrentTimeInSec();

	if (GmCXt.creatorInterval) {
		return;
	}

	GmCXt.creatorInterval = setInterval(callSync, GmCXt.t.creatorSync);
};

GmCXt.sendMsgToAudioFrame = function(type, data) {
	data = data || {};
	data.config = GmCXt.conf;
	data.user = GmCXt.user;

	if (GmCXt.playerI || GmCXt.playerI === null) {
		data.playerInstance = GmCXt.playerI;
	}
	var w = mg$(".mgPlayerJSTest_play-step-audio-iframe");
	if (w.length) {
		var message = {
			action: type,
			data: data
		};
		message = GmCXt.formatMsg(message);
		w.get(0).contentWindow.postMessage(message, "*");
	}
};

GmCXt.sendMessageToApp = function(type, data) {
	data = data || {};
	data.config = GmCXt.conf;
	if (GmCXt.playerI) {
		data.playerInstance = GmCXt.playerI;
	}
	if ((GmCXt.initialization && GmCXt.initialization.sidePanel === true) ||
		type.indexOf('receive_lxp_storage') > -1) {

		GmCXt.sendMessageToAppIn(type, data);
	} else {
		GmCXt.timeout(function() {
			GmCXt.sendMessageToApp(type, data);
		}, GmCXt.t_.sec1);
	}
};

GmCXt.sendMessageToAppIn = function(type, data) {
	var appWindow = mg$(".mgPlayerJSTest_app");
	if (appWindow.length) {
		var message = {
			action: type,
			data: data
		};
		message = GmCXt.formatMsg(message);
		appWindow.get(0).contentWindow.postMessage(message, "*");
	}
};

GmCXt.msgToApp = function(action, data, tabId) {
	if (GmCXt.isBackgroundPage === true) {
		GmCXt.sendMessageToPanel(action, data, tabId);

	} else if (GmCXt.isSidePanelApp) {
		var m = {
			action: action,
			data: data
		};
		// Inside sidePanel iframe
		window.postMessage(GmCXt.formatMsg(m), "*");
	} else if (window.top === window.self) {
		GmCXt.sendMessageToApp(action, data);
	}
};

GmCXt.sendMessageToPanel = function(action, data, senderTabId) {

	data = (data === undefined || data === null || !data) ? {} : data;

	var ob = {
		action: action,
		data: data
	};

	chrome.tabs.query({
		active: true,
		highlighted: true
	}, function(tabs) {
		var activeTab = false;
		for (var i = 0; i < tabs.length; i++) {
			var tab = tabs[i];
			if (tab.id === senderTabId) {
				activeTab = true;
			}
		}

		// This below condition to send an message to source tab even it is not highlighted
		// This will solve image loader issue in case of create/update steps
		if (!activeTab && senderTabId) {
			GmCXt.msgToTab(senderTabId, ob);
		}

		if (GmCXt.FT.creatorApp && tabs.length && !activeTab) {
			var tab = tabs[0];
			senderTabId = tab.id;
			GmCXt.updateVideoUploadStatus(senderTabId, {
				data: {
					operation: "get"
				}
			});
		}

		if (GmCXt.FT.isPlayer && tabs.length && !activeTab) {
			var tab = tabs[0];
			senderTabId = tab.id;
		}

		GmCXt.msgToTab(senderTabId, ob);
	});
};

GmCXt.getCdnSignature = function(sendMessage, fromTimeStamp) {

	if (GmCXt.waitForCdnSignature) return true;

	GmCXt.waitForCdnSignature = true;

	if (sendMessage) {

		GmCXt.msgToApp('mgPlayerJSTest_action:get_cdn_signature_from_app');

	} else { //this is used in Background.js for player and cretor sync
		GmCXt.callGetCdnSignature({
			organization_id: GmCXt.organization.organization_id
		}).then(function(response) {

			var r = response.data;
			if (r && r.cdn_signature && r.cdn_signature_expiry) {

				if (GmCXt.user) {
					GmCXt.user.cdn_signature = r.cdn_signature;
					GmCXt.user.cdn_signature_expiry = r.cdn_signature_expiry;
					GmCXt.updateGlobalUser(GmCXt.user);
				}
			}
			if (fromTimeStamp) {
				GmCXt.checkTimeStampUpdate();
			}
		});
	}
};

GmCXt.getCurrentTimeInMilSec = function() {
	return new Date().getTime();
};

GmCXt.getCurrentTimeInSec = function() {
	return Math.floor(new Date().getTime() / 1000);
};

GmCXt.getModifiedObjects = function(boxUrl) {

	return new Promise(function(resolve, reject) {
		var timestamp = GmCXt.creatorRefreshTime;
		var apiUrl = GmCXt.conf.webServiceUrl + 'organization/modified/objects?';
		GmCXt.log(61, "Check for updates. From timestamp: " + timestamp);

		var data = {
			timestamp: timestamp,
			organization_id: GmCXt.organization.organization_id
		};

		var headers = {
			'accesstoken': GmCXt.user.accesstoken,
			'Content-Type': 'application/json'
		};

		GmCXt.creatorRefreshTime = GmCXt.getCurrentTimeInSec();

		fetch(apiUrl + new URLSearchParams(data), {
			headers: headers
		}).then(function(response) {

			if (response.status === 200 || response.status === 401) {

				response.json()
					.then(function(result) {

						if (result.error) {

							GmCXt.creatorRefreshTime = timestamp;

							if (result.code === 1003 || result.code === 2004) {
								GmCXt.msgToApp('mgPlayerJSTest_action:logout_user');
							} else if (result.code === 1007) {
								GmCXt.getAccessToken().then(function(r) {
									GmCXt.saveToken(r);
									resolve('Renewed Access Token');
								});
							}
							reject(result);
						} else if (result.data && result.data.objects) {
							var updates = result.data.objects;
							resolve(updates);
						} else {
							reject();
						}
					}).catch(function(error) {
						reject();
					});

			} else {
				reject();
			}
		}).catch(function(e) {
			GmCXt.log(1, "Creator could not refresh", e);
		});
	});
};

GmCXt.getJsonTimeStamp = function(boxUrl) {

	return new Promise(function(resolve, reject) {

		var apiCall = function(url) {
			fetch(url)
				.then(function(response) {

					if (response.status === 200) {
						response.json()
							.then(function(d) {
								resolve(d);
							}).catch(function(error) {
								GmCXt.log(1, "ERROR: Timestamp fetch failed", error);
							});
					} else {
						GmCXt.log(1, "ERROR: Timestamp fetch failed" + response.status);
						GmCXt.waitForCdnSignature = false;
						GmCXt.getCdnSignature(false, true);
					}
				});
		};


		var awsJSONAPICall = function(jurl) {
			let params = {
				url: "file/presigned/url",
				method: "GET",
				data: {
					organization_id: GmCXt.organization.organization_id,
					url: jurl
				}
			};
			GmCXt.xhr(params).then(function(result){
				apiCall(result.data.url);
			});
		}


		var apiUrl = "";

		if (GmCXt.onPrem() && boxUrl) {
			apiUrl = boxUrl + '/json/timestamp.json';
		} else if (GmCXt.organization && !GmCXt.isEmpty(GmCXt.organization)) {
			apiUrl = GmCXt.conf.cdn + GmCXt.organization.bucket +
				'/json/timestamp.json' + GmCXt.user.cdn_signature + "&" + new Date();
		}

		if(GmCXt.isEmpty(apiUrl)){
			return;
		}
		
		if (GmCXt.isAWS()) {
			apiUrl = GmCXt.conf.jsonStorageUrl + GmCXt.organization.bucket + '/' + 'json/timestamp.json';
			awsJSONAPICall(apiUrl);
		} else  {
			apiCall(apiUrl);
		}

	});
};

GmCXt.encode = function(args) {
	var data = '';
	if (args) {
		var argcount = 0;
		for (var key in args) {
			if (args.hasOwnProperty(key)) {
				if (argcount++) data += '&';
				data += encodeURIComponent(key) + '=' + encodeURIComponent(args[key]);
			}
		}
	}
	return data;
};

GmCXt.getOrgKeyFromJwToken = function(myGuideOrgKey) {
	try {

		var splitMyguideKey = myGuideOrgKey.split('.')[1];
		var jwJson = atob(splitMyguideKey);
		var jwOrgKey = jwJson ? GmCXt.parseJSON(jwJson).org_key : "";
		return jwOrgKey;

	} catch (e) {
		return {};
	}
};

GmCXt.parseJSON = function(str) {
	try {
		if (typeof str === 'object') {
			return str;
		} else if (str === '' || str === 'AS' ||
			str === 'na' || str === '[object Object]' ||
			str === undefined || str === 'undefined'
		) {
			return {};
		} else {
			return JSON.parse(str);
		}

	} catch (e) {
		return {};
	}
};

GmCXt.sendMessageToTabs = function(data) {
	chrome.tabs.query({}, function(tabs) {
		tabs.forEach(function(tab) {
			GmCXt.msgToTab(tab.id, data);
		});
	});
};

GmCXt.msgToTab = function(tabId, m) {
	chrome.tabs.sendMessage(tabId, GmCXt.formatMsg(m));
};

GmCXt.formatMsg = function(message) {

	if ((GmCXt.isWestpac() && message.action.indexOf("MyGuideReporting") !== -1)) {
		return message;
	}

	if (message.data) {
		message.mgdata = message.data;
		delete message.data;
	}
	return JSON.stringify(message);
};

GmCXt.getStepFromSteps = function(stepId, steps) {

	var s = false;
	if (stepId) {
		for (var i = 0; i < steps.length; i++) {
			if (parseInt(steps[i].step_id) === parseInt(stepId)) {
				s = steps[i];
				break;
			}
		}
	}
	return s;
};

GmCXt.getStartpointStepFromSteps = function(stepId, steps) {
	var s = false;
	if (stepId) {
		for (var i = 0; i < steps.length; i++) {
			if (parseInt(steps[i].step_id) === parseInt(stepId) && steps[i].step_settings.startPoint) {
				s = steps[i];
				break;
			}
		}
	}
	return s;
};

GmCXt.removePSStepId = function(stepId, PS, index) {
	for (var i = 0; i < PS.length; i++) {
		if (PS[i].tail === stepId) {
			PS[i].tail = PS[index].tail;
			break;
		}
	}
	PS.splice(index, 1);
	return PS;
};

GmCXt.repairPlayStructure = function(PS, steps) {

	for (var i = 0; i < PS.length; i++) {
		var step = GmCXt.getStepFromSteps(PS[i].id, steps);
		if (step) {
			continue;
		} else {
			PS = GmCXt.removePSStepId(PS[i].id, PS, i);
			PS = GmCXt.repairPlayStructure(PS, steps);
			break;
		}
	}

	return PS;
};

GmCXt.isAutomationRunning = function() {
	return (GmCXt.auto && GmCXt.auto.isAutomationRunning());
};

GmCXt.getAutomatedCurrentTour = function() {
	return (GmCXt.auto && GmCXt.auto.getAutomatedCurrentTour());
};

GmCXt.isAutomationStepRunning = function() {
	if (GmCXt.playerI) {
		var step = GmCXt.getStepFromPlayerI(GmCXt.playerI.currentStepId);
		return GmCXt.isAutomationStep(step);
	}
	return false;
};

GmCXt.callApi = function(data, api) {

	return new Promise(function(resolve, reject) {

		var msgId = Math.floor(Math.random() * 100000);

		function chromeListener(event) {
			var m = GmCXt.parseJSON(event);
			m = GmCXt.convertMgdata(m);

			if (m && m.action === 'mgPlayerJSTest_action:call_api_response') {
				if (m.data && m.data.msgId === msgId) {
					window.removeEventListener('message', chromeListener);
					resolve(m.data.items);
				}
			}
			return true;
		}

		var d = {
			msgId: msgId,
			option: data,
			api: api
		};

		if (GmCXt.isBackgroundPage === true) {
			chrome.runtime.onMessage.addListener(chromeListener);
			GmCXt.sendMessageToPanel('mgPlayerJSTest_action:call_api', d, senderTabId);

		} else if (GmCXt.isSidePanelApp) {
			var mm = {
				action: 'mgPlayerJSTest_action:call_api',
				data: d
			};
			// Inside sidePanel iframe
			window.postMessage(GmCXt.formatMsg(mm), "*");
		} else {
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:call_api', d);
			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		}
	});
};

GmCXt.convertMgdata = function(m) {
	if (m.action && m.action.indexOf("init_sfdc_env") !== -1) {
		return m;
	} else if (GmCXt.isWestpac() && m.action && m.action.indexOf("MyGuideReporting") !== -1) {
		return m;
	}
	m.data = m.mgdata;
	return m;
};

GmCXt.inArray = function(id, array) {
	if (array.indexOf(parseInt(id)) !== -1) return true;
	else return false;
};

GmCXt.inArrayString = function(str, array) {
	if (array.indexOf(str) !== -1) return true;
	else return false;
};

GmCXt.createDeepCopy = function(data) {
	if (GmCXt.isDefined(data) && !GmCXt.isEmpty(data)) {
		return JSON.parse(JSON.stringify(data));
	}
};

GmCXt.getBrowserUrl = function(i) {

	var url = '';

	if (GmCXt.browserApp === 'Safari') {
		url = safari.extension.baseURI + i;
	} else if (GmCXt.browserApp === 'firefox' || GmCXt.isClientJs()) {
		url = chrome.extension.getURL(i);
	} else {
		url = chrome.runtime.getURL(i);
	}

	return url;
};

GmCXt.getCustomerSpecificURL = function(custUrl) {
	if (GmCXt.inPlayer) {
		if (GmCXt.isSumtotal() || GmCXt.isLXP() || GmCXt.isSbx() || GmCXt.isGalaxy()) {
			custUrl = custUrl + "/" + GmCXt.conf.appConfig.customer;
		}
	}
	return custUrl;
};


GmCXt.getAccessToken = function() {
	var params = {
		url: GmCXt.getCustomerSpecificURL("user/token"),
		headers: {
			"Content-Type": "application/json",
			RefreshToken: GmCXt.user.refreshtoken
		},
		data: {
			force_update: true,
			mg_source_name: GmCXt.conf.appConfig.customer
		},
		method: 'GET'
	};
	return GmCXt.xhr(params);
};

GmCXt.saveToken = function(r) {

	if (r && r.accesstoken) {

		GmCXt.user.accesstoken = r.accesstoken;
		GmCXt.user.refreshtoken = r.refreshtoken;

		if (GmCXt.isDefined(r.app_access)) {
			GmCXt.user.app_access = r.app_access;
		}

		if (GmCXt.isDefined(r.profile)) {
			GmCXt.user.profile = r.profile;
		}

		if (!GmCXt.isBackgroundPage) {

			GmCXt.getWidgetIcon().then(function(wUrl) {
				mg$(".mgPlayerJSTest_start-button img").attr('src', wUrl);
			});
		}

		GmCXt.msgToApp('mgPlayerJSTest_action:update_access_token', r, senderTabId);
	}
};

GmCXt.addStoragePrefix = function(key) {
	if (key.indexOf(GmCXt.storagePrefix) === -1) {
		key = GmCXt.storagePrefix + key;
	}
	return key;
};

GmCXt.removeStoragePrefix = function(key) {
	if (key.indexOf(GmCXt.storagePrefix) !== -1) {
		key = key.split(GmCXt.storagePrefix)[1];
	}
	return key;
};

GmCXt.getUUID = function() {
	var date = new Date().getTime();
	var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {
		var randomNumber = (date + Math.random() * 16) % 16 | 0;
		date = Math.floor(date / 16);
		return (c == 'x' ? randomNumber : (randomNumber & 0x3 | 0x8)).toString(16);
	});
	return uuid;
};

GmCXt.categoryLog = function(c) {
	return "APP: " + c.application_id + " : [" + c.category_id + ", " + c.category_title + "] ";
};

GmCXt.tourLog = function(t) {
	return " [" + t.tour_id + ", " + t.tour_title + "] ";
};

GmCXt.stepLog = function(s, t) {
	return " [ step: " + s + ", tour: " + t + "] ";
};
GmCXt.isTrue = function(prop) {
	if (parseInt(prop) === 1 || prop === true) return true;
	else return false;
};

// Returns false if it could not update tour play structure
GmCXt.updateTourPlayStructure = function(data) {

	var stepObj = data.step;
	var prevStepData = data.prevStepData;

	GmCXt.log(54, "GmCXt.updateTourPlayStructure ", data);

	if (prevStepData && prevStepData.tour && prevStepData.tour.tour_settings &&
		prevStepData.tour.tour_settings.play_structure) {

		GmCXt.log(54, "GmCXt.updateTourPlayStructure check 1");

		var oldTail = null;
		var playStructure = prevStepData.tour.tour_settings.play_structure;

		if (playStructure.length > 0) {

			if (prevStepData.step_id) {

				for (var i = 0; i < playStructure.length; i++) {

					// Get the prevStepData.step_id from the plus node
					// Search for the step from that node

					if (playStructure[i].id === prevStepData.step_id) {

						if (GmCXt.checkForBranchVariationSteps(prevStepData)) {

							if (!playStructure[i].branch) {
								playStructure[i].branch = [];
							}

							var branchIndex = prevStepData.branch_index;

							if (playStructure[i].branch[branchIndex].tail && playStructure[i].branch[branchIndex].tail !== -1) {
								oldTail = playStructure[i].branch[branchIndex].tail;
							} else if (playStructure[i].branch[branchIndex].tail === -1) {
								for (var j = 0; j < playStructure[i].branch.length; j++) {
									if (playStructure[i].branch[j].tail === -1) {
										playStructure[i].branch[j].tail = stepObj.step_id;
									}
								}
							}
							playStructure[i].branch[branchIndex].tail = stepObj.step_id;

						} else {
							// Update the tail
							if (playStructure[i].tail) {
								oldTail = playStructure[i].tail;
							}
							playStructure[i].tail = stepObj.step_id;
							break;
						}
					}
				}
			} else {
				oldTail = playStructure[0].id;
			}

		}

		var obj = {
			id: stepObj.step_id,
			tail: oldTail
		};

		var stepSettings = stepObj.step_settings;

		if (stepObj.step_type === GmCXt.STEP_TYPE_BRANCH) {
			obj.branch = [];
			obj.tail = null;
			for (var i = 0; i < stepSettings.branch.length; i++) {
				if (stepSettings.branch[i].tail) {
					obj.branch.push({
						tail: stepSettings.branch[i].tail
					});
				} else {
					obj.branch.push({
						tail: null
					});
				}
			}
		} else if (GmCXt.isTrue(stepObj.step_settings.inlineBranch) || stepObj.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER) {
			obj.branch = [];
			obj.branch.push({
				tail: oldTail
			}, {
				tail: null
			});
			obj.tail = null;
		}

		if (prevStepData.step_id) {
			playStructure.push(obj);
		} else {
			playStructure.splice(0, 0, obj);
		}
		prevStepData.tour.tour_settings.play_structure = playStructure;

		data.prevStepData = prevStepData;

		return data;
	}

	return false;
};

// These labels are always in english
// "wb" prefix are all Worldbank labels
GmCXt.engLbls = {
	px: "px",
	Guide: "Guide",
	wbTitle: "Welcome to the iGuide Content Panel",
	wbDescription: "This panel provides users with an alternate way to view applicable iGuide learning tools such as step-by-step walk-throughs, slide demos, videos, etc",
	wbViewiGuideInfo: "View iGuide info",
	wbiGuideTools: "iGuide Tools",
	wbWalkThrus: "Walk-thrus & demos",
	wbTooltips: "Tooltips",
	wbVideos: "Videos",
	wbPopupNotification: "Pop-up notifications &",
	wbMessages: "messages",
	defaultTestMe: "TestMe",
	defaultShowMe: "ShowMe",
	defaultGuideMe: "GuideMe",
	defaultDoItForMe: "DoItForMe",
	testMe: "TestMe",
	showMe: "ShowMe",
	guideMe: "GuideMe",
	doItForMe: "DoItForMe",
	microPlayer: "Mini Player",
	myGuides: "My Guides",
	powerHTML: "Power HTML",
	defaultNext: "Next",
	defaultBtnPrev: "Prev"
};

GmCXt.getPlayerLabels = function(lang) {
	var lab = GmCXt.playerLbls.en_US;

	if (lang) {
		lang = lang.replace("-", "_");

		if (GmCXt.playerLbls[lang]) {
			lab = GmCXt.playerLbls[lang];
		}
	}

	lab = GmCXt.mergeLabels(lab, GmCXt.engLbls);
	return lab;
};

GmCXt.getCreatorLabels = function(lang) {
	var lab = GmCXt.creatorLbls.en_US;

	if (lang) {
		lang = lang.replace("-", "_");

		if (GmCXt.creatorLbls[lang]) {
			lab = GmCXt.creatorLbls[lang];
		}
	}

	return lab;
};

GmCXt.mergeLabels = function(labels, lbs) {
	for (var attr in lbs) {
		labels[attr] = lbs[attr];
	}

	return labels;
};

GmCXt.setRuleOpsUILabels = function() {
	GmCXt.ruleOpsUILabels[GmCXt.EXISTS] = GmCXt.label.opExists;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_EXISTS] = GmCXt.label.opNotExists;
	GmCXt.ruleOpsUILabels[GmCXt.EQUALS] = GmCXt.label.opEquals;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_EQUAL] = GmCXt.label.opNotEquals;
	GmCXt.ruleOpsUILabels[GmCXt.TXT_EQUALS] = GmCXt.label.opTxEquals;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_TXT] = GmCXt.label.opTxNotEquals;
	GmCXt.ruleOpsUILabels[GmCXt.CONTAINS] = GmCXt.label.opContains;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_CONTAINS] = GmCXt.label.opNotContains;
	GmCXt.ruleOpsUILabels[GmCXt.STARTS_WITH] = GmCXt.label.opStWith;
	GmCXt.ruleOpsUILabels[GmCXt.ENDS_WITH] = GmCXt.label.opEndWith;
	GmCXt.ruleOpsUILabels[GmCXt.GREAT_THAN] = GmCXt.label.opGrThan;
	GmCXt.ruleOpsUILabels[GmCXt.LESS_THAN] = GmCXt.label.opLeThan;
	GmCXt.ruleOpsUILabels[GmCXt.TXT_MATCHES] = GmCXt.label.opTxMatch;
	GmCXt.ruleOpsUILabels[GmCXt.TXT_CONTAINS] = GmCXt.label.opTxContains;
	GmCXt.ruleOpsUILabels[GmCXt.ATTRIBUTES] = GmCXt.label.opAttrs;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_ATTRIBUTES] = GmCXt.label.opNoAttrs;
	GmCXt.ruleOpsUILabels[GmCXt.CLASSES] = GmCXt.label.opClasses;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_CLASSES] = GmCXt.label.opNoClasses;
	GmCXt.ruleOpsUILabels[GmCXt.SELECTED] = GmCXt.label.opSelect;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_SELECTED] = GmCXt.label.opNoSelect;
	GmCXt.ruleOpsUILabels[GmCXt.CHECKED] = GmCXt.label.opChecked;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_CHECKED] = GmCXt.label.opNoChecked;
	GmCXt.ruleOpsUILabels[GmCXt.DISABLED] = GmCXt.label.opDisabled;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_DISABLED] = GmCXt.label.opNoDisable;
	GmCXt.ruleOpsUILabels[GmCXt.DAY_OF_WEEK] = GmCXt.label.opDayOfWeek;
	GmCXt.ruleOpsUILabels[GmCXt.FIX_TIME] = GmCXt.label.opFixTime;
	GmCXt.ruleOpsUILabels[GmCXt.DATE_RANGE] = GmCXt.label.opDateRange;
	GmCXt.ruleOpsUILabels[GmCXt.IS_VALID] = GmCXt.label.opIsValid;
	GmCXt.ruleOpsUILabels[GmCXt.VISIBLE] = GmCXt.label.opVisible;
	GmCXt.ruleOpsUILabels[GmCXt.NOT_VISIBLE] = GmCXt.label.opNotVisible;
};

GmCXt.getAllLabels = function(lang) {
	GmCXt.label = GmCXt.getPlayerLabels(lang);

	if (GmCXt.FT.creatorApp) {
		GmCXt.label = GmCXt.mergeLabels(GmCXt.label, GmCXt.getCreatorLabels(lang));
	}

	// to replace missing lang labels with eng lang labels
	if (lang !== "en_US" && lang !== "en-US") {
		var enLabels = GmCXt.getEngLabels();

		var lbl = Object.assign({}, enLabels, GmCXt.label);
		GmCXt.label = lbl;
	}

	GmCXt.setRuleOpsUILabels();

	return GmCXt.label;
};

GmCXt.getEngLabels = function() {
	var engLabels = GmCXt.getPlayerLabels('en_US');

	if (GmCXt.FT.creatorApp) {
		engLabels = GmCXt.mergeLabels(engLabels, GmCXt.getCreatorLabels('en_US'));
	}

	return engLabels;
};

GmCXt.checkForBranchVariationSteps = function(step) {
	if (step && (step.step_type === GmCXt.STEP_TYPE_BRANCH ||
			step.step_type === GmCXt.STEP_TYPE_ERROR_HANDLER ||
			GmCXt.isTrue(step.step_settings && step.step_settings.inlineBranch))) {
		return true;
	}
	return false;
};

GmCXt.convertWeeksToHours = function(w) {
	var h = parseFloat(w) * 7 * 24;
	return h;
};

GmCXt.getDatafromPanel = function() {

	return new Promise(function(resolve, reject) {

		function sendResponse(m) {
			if (m && m.action === 'mgPlayerJSTest_action:get_data_from_panel_response') {
				removeEventListener('message', chromeListener);
				resolve(m.data);
			}
		}

		function chromeListener(event) {
			var message = GmCXt.parseJSON(event);
			message = GmCXt.convertMgdata(message);

			sendResponse(message);
		}


		if (GmCXt.isBackgroundPage === true) {
			chrome.runtime.onMessage.addListener(chromeListener);
			GmCXt.sendMessageToPanel('mgPlayerJSTest_action:get_data_from_panel');
		} else {
			resolve(false);
		}

	});
};

GmCXt.stopSlideshowPlay = function() {
	GmCXt.msgToApp("mgPlayerJSTest_action:onCloseSlideshowPanel");
};

GmCXt.isEventTimeValid = function(payloadDate) {
	var isValid = true;
	var currentDate = new Date();
	var currentTimestamp = currentDate.getTime();
	var payloadTimestamp = new Date(payloadDate).getTime();

	var expTimestamp = currentTimestamp - (60 * 60 * 24 * 6 * 1000);
	if (payloadTimestamp < expTimestamp) {
		isValid = false;
	}
	return isValid;
}

GmCXt.checkDefaultLangForTour = function(t, l) {
	var retVal = false;
	if (GmCXt.isFalse(l) || l.indexOf('en-') !== -1)
		retVal = true;
	else if (t && t.languages && t.languages.length) {
		var dl = t.languages[t.languages.length - 1];
		if (dl && dl.language === l) {
			retVal = true;
		}
	}

	return retVal;
};

GmCXt.isGuideInDefaultLang = function(tour, activeLang) {
  
  let guideLang = tour.tour_settings?.language_settings || {};

  // If active language is not defined or matches guide language, return true
  if (!activeLang || !guideLang.language || !guideLang.name) {
    return true;
  }

  // If active language doesn't match guide language, check if both are English variants
  if (guideLang.language !== activeLang) {
    return guideLang.language.indexOf("en-") !== -1 && 
           activeLang.substring(0, 3) === guideLang.language.substring(0, 3);
  }

  return true;
  
};
//***************************** page tracking ***************************************//
GmCXt.startPageTracker = function() {

	if (GmCXt.pageVisit) {

		if (GmCXt.pageVisit.url === GmCXt.urlParts.fullUrl) {
			GmCXt.log(2, "Return on same page");
			return;
		} else {
			GmCXt.trackerV1.trackPageVisit();
		}
	}

	GmCXt.pageVisit = {
		url: GmCXt.urlParts.fullUrl,
		timeStarted: new Date().getTime(),
		userKey: GmCXt.user.user_key,
		pageLoadTime: GmCXt.pageLoadTime
	};

	var title = GmCXt.getDocTitle();
	if (title) {
		GmCXt.pageVisit.title = title.trim();
	}
	GmCXt.log(2, "Start new page", GmCXt.pageVisit);
};

//***************************** tooltip tracking ***************************************//
GmCXt.tooltipTrackingList = {};

GmCXt.setTooltipRenderInfo = function(tour, tid, sid, smartTip, url) {
	var stepKey = "step_" + sid;

	var currentTip = {
		tooltip_id: sid,
		tooltip_type: GmCXt.getTooltipName(smartTip.type),
		rendered: true,
		action_type: "",
		tooltip_play_instances: [],
		play_instance_id: GmCXt.getUUID(),
	};

	GmCXt.tooltipTrackingList[stepKey] = {
		track: false,
		tourId: tid,
		url: GmCXt.urlParts.fullUrl,
		ttDetails: currentTip,
		startTime: new Date().getTime(),
		screen_size: GmCXt.trackerV1.getScreenSize(),
		tour: tour
	};
};

GmCXt.updateTooltipActionInfo = function(tid, sid, smartTip, actionName) {

	if (window.self === window.top) {

		var stepKey = "step_" + sid;

		var currentTip = GmCXt.tooltipTrackingList[stepKey].ttDetails;

		var tour = GmCXt.tooltipTrackingList[stepKey].tour;
		//for power form send only 1 action, submit gets precedence over cancel
		if (currentTip.tooltip_type === 'power_html') {

			if (actionName === "cancel" && currentTip.action_type.length === 0) {
				currentTip.action_type = ['cancel'];
				GmCXt.tooltipTrackingList[stepKey].track = true;
			}

			if (actionName === "submit") {
				currentTip.action_type = ['submit'];
				GmCXt.tooltipTrackingList[stepKey].track = true;
			}

		} else if (actionName) {
			currentTip.action_type = [actionName];
			GmCXt.tooltipTrackingList[stepKey].track = true;
		}

		currentTip.tooltip_play_instances = [];
		currentTip.tooltip_play_instances.push({
			event_start_time: GmCXt.getCurrentTimeInMilSec(),
			event_end_time: GmCXt.getCurrentTimeInMilSec()
		});

		if (tour && tour.tour_settings.segment_groups) {
			currentTip.segment_details = GmCXt.getTourSegmentDetail(tour);
		}

		if (actionName === "url_click") {
			currentTip.tooltip_url = smartTip.tooltipURL;
		}

		GmCXt.trackerV1.trackTooltips(currentTip);
	} else {

		var data = {
			tourId: tid,
			stepId: sid,
			smartTip: smartTip,
			actionName: actionName,
			tour: tour
		};
		var msg = "mgPlayerJSTest_action:update_tooltip_action_info";

		if (GmCXt.isSidePanelApp) {

			GmCXt.sendToParentWindow({
				action: msg,
				data: data
			});
		} else {
			GmCXt.sendMessageToTheTopWindow(msg, data);
		}
	}
};

GmCXt.resetTooltipTrackingInfo = function() {
	for (var stepKey in GmCXt.tooltipTrackingList) {
		GmCXt.tooltipTrackingList[stepKey].track = false;
	}
};
//***************************** guide play tracking ***************************************//

GmCXt.trackGuide = function() {

	GmCXt.log(33, 'Track Guide Play');
	GmCXt.trackerV1.trackGuidePlayEvent();
	GmCXt.guidePlayTracker = {};

	GmCXt.storage().set({
		'guide_play_event': {}
	});
};

GmCXt.getSource = function(i) {
	var s;
	switch (i) {
		case 'overlayTourPopup':
			s = 'push_notification';
			break;
		case 'beaconTour':
			s = 'beacon';
			break;
		case 'urlTour':
			s = 'url';
			break;
		case 'task_list':
			s = 'task_list';
			break;
		default:
			s = 'panel';
			break;
	}

	return s;
};

GmCXt.setGuidePlayTracker = function(tid) {
	var playMode = "mi_guide_play";

	if (GmCXt.playerI.automate && GmCXt.playerI.source !== "bot") {
		playMode = "mi_do_it_for_me";
	} else if (GmCXt.playerI.source === "bot") {
		playMode = "mi_bot_play";
	} else if (GmCXt.playerI.mode === "slideshow") {
		playMode = "mi_showme_play";
	}

	var trackerObj = {
		trigger_source: GmCXt.getSource(GmCXt.playerI.origin),
		play_instance_id: GmCXt.getUUID(),
		is_new_user: false,
		event_start_time: new Date().getTime(),
		event_end_time: '',
		url: GmCXt.urlParts.fullUrl,
		steps_details: [],
		mode: playMode
	};

	trackerObj.guide_id = tid;
	trackerObj.guide_complete = 0;
	trackerObj.guide_open = GmCXt.playerI.guideOpened ? 1 : 0;

	if (playMode === "mi_showme_play") {
		trackerObj.audio_muted = GmCXt.stepAudioRunningStatus ? 0 : 1
		trackerObj.type = "guided";
	}

	if (GmCXt.playerI && GmCXt.playerI.taskObj && GmCXt.playerI.taskObj.taskId) {
		trackerObj.task_list_id = GmCXt.playerI.taskObj.taskId;
	}

	if (GmCXt.playerI && GmCXt.playerI.tour.tour_settings.segment_groups) {
		trackerObj.segment_details = GmCXt.getTourSegmentDetail(GmCXt.playerI.tour);
	}

	GmCXt.guidePlayTracker["tour:" + tid] = trackerObj;
};

GmCXt.isStepExists = function(sid, stepList) {

	var stepIndex;

	stepList.forEach(function(s, key) {
		if (parseInt(s.step_id) === parseInt(sid)) {
			stepIndex = key;
		}
	});

	return stepIndex;
};

GmCXt.trackStepEvent = function(step, error) {
	if (!GmCXt.guidePlayTracker["tour:" + step.tour_id]) GmCXt.setGuidePlayTracker(step.tour_id);

	var tourDetails = GmCXt.guidePlayTracker["tour:" + step.tour_id];

	var stepExistIndex = GmCXt.isStepExists(step.step_id, tourDetails.steps_details);

	if (stepExistIndex >= 0) {
		tourDetails.steps_details.splice(stepExistIndex, 1);
	}


	if (tourDetails.steps_details.length) {
		var length = tourDetails.steps_details.length;
		tourDetails.steps_details[length - 1].event_end_time = new Date().getTime();
	}

	var step_details = {
		step_id: step.step_id,
		step_index: parseInt(step.step_order),
		step_title: step.step_title,
		step_type: step.step_type,
		event_start_time: new Date().getTime(),
		event_end_time: new Date().getTime(),
		page_url: GmCXt.urlParts.fullUrl,
		error_type: error || "",
		audio_muted: GmCXt.stepAudioRunningStatus ? 0 : 1
	};

	if (step.step_type === GmCXt.STEP_TYPE_GUIDE) {
		step_details.linked_guide_id = step.step_settings.tour_id;
	}

	if (tourDetails.mode === "mi_do_it_for_me") {
		if (step.step_settings.automation.hasHumanInteraction) {
			step_details.requires_human_intervention = 1;
			step_details.step_skipped = 0;
		} else {
			step_details.requires_human_intervention = 0;
			step_details.step_skipped = 0;
		}
	}

	if (tourDetails.mode === "mi_bot_play" &&
		step.step_settings.automation.enableBot &&
		step.step_settings.automation.botQuestion) {
		step_details.requires_human_intervention = 1;
		step_details.step_skipped = 0;
		if (step_details.defaultData && !GmCXt.isEmpty(step_details.defaultData)) {
			step_details.isAnswered = 1;
		} else {
			step_details.isAnswered = 0;
		}
		step_details.botQuestion = step.step_settings.automation.botQuestion;
	}

	GmCXt.guidePlayTracker["tour:" + step.tour_id].steps_details.push(step_details);
	GmCXt.storage().set({
		'guide_play_event': GmCXt.guidePlayTracker
	});
};

GmCXt.updateAudioStatusForTracking = function() {

	if (GmCXt.isEmpty(GmCXt.playerI)) return;

	var tourSteps = GmCXt.guidePlayTracker["tour:" + GmCXt.playerI.tour.tour_id].steps_details;

	for (var i = 0; i < tourSteps.length; i++) {
		var s = tourSteps[i];

		if (s.step_id === GmCXt.playerI.currentStepId) {
			s.audio_muted = GmCXt.stepAudioRunningStatus ? 0 : 1;
		}
	}
};

GmCXt.checkSkipStepForTracking = function() {

	if (GmCXt.isEmpty(GmCXt.playerI)) return;

	var stepId = GmCXt.playerI.currentStepId;

	var tourId = GmCXt.playerI.tour.tour_id;

	var tourDetails = GmCXt.guidePlayTracker["tour:" + tourId];

	var stepExistIndex = -1;

	if (tourDetails) {
		stepExistIndex = GmCXt.isStepExists(stepId, tourDetails.steps_details);
	}

	if (stepExistIndex >= 0) {
		tourDetails.steps_details[stepExistIndex].step_skipped = 1;
	}
};

GmCXt.getTourSegments = function(tour) {
	//for tours played from side panel
	if (tour.tour_settings.valid_segments) {
		return tour.tour_settings.valid_segments;
	} else {
		var tourSeg = tour.tour_settings.segment_groups;
		var validSegments = tourSeg.filter(function(s) {
			return GmCXt.validatedSegments[s];
		});

		return validSegments;
	}
};

//***************************** workflow tracking ***************************************//

GmCXt.concatLinkGuideStepsForTracking = function(allSteps, stepIndex, currentStepId, newSteps) {

	allSteps = allSteps.filter(function(step, i) {
		return step.step_id !== currentStepId;
	});

	var s = [stepIndex, 0].concat(newSteps);

	return allSteps.splice(s);
};

GmCXt.userActionEvents = function(step) {

	var settings = step.step_settings;

	var flag = false;

	if (settings.clickNext ||
		settings.onRightClickNext ||
		settings.onKeyupNext ||
		settings.onChangeNext
	) {
		flag = true;
	}

	return flag;

	// Tracking onPageClickNext event
	// Say there are 7 steps, 1, 2, 3, 4, 5, 6, 7 and a pause after step 2.
	// On click => write state in localStorage.
	// In new window => check state => add events on all steps after 2
	// In current window, add events on all steps after 2
};

GmCXt.limitStepAttributes = function(steps) {

	for (var i = 0; i < steps.length; i++) {
		steps[i] = {
			step_id: steps[i].step_id,
			step_title: steps[i].step_title,
			step_url: steps[i].step_url,
			step_settings: {
				element: steps[i].step_settings.element,
				highlightedArea: steps[i].step_settings.highlightedArea,
			}
		};
	}

	return steps;
};

GmCXt.filterInlineSteps = function(steps) {
	return steps.filter(function(step) {
		return GmCXt.limitStepAttributes((step.step_type === 'inline') && GmCXt.userActionEvents(step));
	});
};

GmCXt.isSvgTag = function(t) {
	if (t === 'svg' ||
		t === 'use' ||
		t === 'path' ||
		t === 'g') {
		return true;
	} else
		return false;
};

//*****************************for click tracking ***************************************//

GmCXt.clickedElSelector = function(he, obj) {

	var attr = GmCXt.getAttributeValues(he);
	obj.attributes = [];
	if (!GmCXt.isEmpty(attr)) {
		for (var prop in attr) {
			var value = attr[prop];
			switch (prop) {
				case 'text':
					if (obj.isRoot) {
						obj.text = attr.text || he.value.trim();
					}
					break;

				case 'class':
					var value = attr.class.split(" ").filter(Boolean);
					obj.class = value;
					break;

				case 'id':
					obj.id = attr.id;
					break;

				case 'tagName':
					obj.tagName = attr.tagName.toLowerCase();
					break;

				default:
					var attrObj = {};
					attrObj[prop] = attr[prop];
					obj.attributes.push(attrObj);
			}
		}
	}

	obj.index = mg$(he).index();

	return obj;
};

GmCXt.getDOMElementClicked = function(he) {

	if (!he) return {};

	he = GmCXt.skipTags(he);

	if (he) {

		var tempHe = he;
		var btnTags = ['A', 'BUTTON', 'INPUT'];

		while (tempHe.parentElement && tempHe.parentElement.childElementCount === 1) {
			// Go up till the outermost layer of an element (For clicks captured within the actual button/element)
			if (tempHe.tagName === 'BODY' || btnTags.includes(tempHe.tagName)) {
				break;
			}
			if ((tempHe.parentElement && tempHe.parentElement.childElementCount > 1) ||
				!tempHe.parentElement) {
				break;
			}
			tempHe = tempHe.parentElement;
			he = tempHe;
		}

		var obj = {
			isRoot: true,
		};

		var target = GmCXt.clickedElSelector(he, obj);

		var elLabel = target.text;
		target.isUniqueText = GmCXt.isUniqueText(he, elLabel);

		GmCXt.selectorTool = GmCXt.selector({
			cb: null,
			frame: {}
		});

		if (target.index > -1) {

			var clickJson = {
				element_object: target,
				element_label: elLabel,
				element_step_obj: '', // TODO: element
				event_start_time: new Date().getTime(),
				url: GmCXt.urlParts.fullUrl
			};

			return clickJson;
		}
	}
};

GmCXt.isUniqueText = function(he, text) {
	if (!text || text.length > 300)
		return false;

	text = text.replace(/\'/g, "\\'").replace(/\"/g, '\\"');

	try {
		var nodes = mg$(he.tagName + ":contains('" + text + "')");
	} catch (e) {
		return false;
	}

	if (!he.value || !he.value.trim()) {
		nodes = GmCXt.filterParentNodes(nodes, text);
	}

	return nodes.length === 1;
};

GmCXt.isVisibilityMutated = function(mutation) {
	if (mutation.attributeName === 'style' &&
		mutation.oldValue &&
		(
			mutation.oldValue.includes('display: none') ||
			mutation.oldValue.includes('visibility: hidden')
		)
	) {
		return true;
	} else if (mutation.attributeName === 'aria-expanded' &&
		mutation.oldValue && mutation.oldValue.includes('false')
	) {
		return true;
	} else if (mutation.attributeName === 'aria-hidden' &&
		mutation.oldValue && mutation.oldValue.includes('true')

	) {
		return true;
	}
	return false;
};

// TODO: I can see there is always some mutation due to GuideMe classes on the element.
// This fixes the Automation issue but we need more concrete solution for this. [MG-14885]
GmCXt.checkMutation = function(mutationsList, observer) {

	var isMutationInMyGuideEl = function(m) {
		return (GmCXt.hasMyGuideEl(m.removedNodes) || GmCXt.hasMyGuideEl(m.addedNodes));
	};

	var isMutationInMyGuideAttr = function(m) {
		if (m.attributeName.indexOf('gm') === 0) {
			return true;
		}

		if (m.attributeName === 'class') {
			return (GmCXt.checkMyGuideClass(m.target.className) !== GmCXt.checkMyGuideClass(m.oldValue));
		} else if (m.attributeName === 'style') {
			return GmCXt.checkMyGuideClass(m.target.className);
		}

		return false;
	};

	// Use traditional 'for loops' for IE 11
	if (mutationsList.length && !GmCXt.mutationOccured) {
		var len = mutationsList.length;
		for (var i = 0; i < len; i++) {
			var m = mutationsList[i];
			if (m.type === 'attributes' && !isMutationInMyGuideAttr(m)) {
				if (GmCXt.isVisibilityMutated(m)) {
					GmCXt.mutationOccured = true;
				}
				if (m.oldValue !== m.target.getAttribute(m.attributeName)) {
					GmCXt.mutationOccured = true;
				}
			} else if (m.type === 'childList' && !isMutationInMyGuideEl(m)) {
				GmCXt.mutationOccured = true;
			}
		}
	}
};

GmCXt.isInputElement = function(he) {
	var inputs = ['INPUT', 'SELECT', 'TEXTAREA'];
	if (inputs.includes(he.tagName)) {
		return true;
	}
	return false;
};

GmCXt.mutationObserver = function(he) {

	var clickJson = GmCXt.getDOMElementClicked(he);

	GmCXt.mutationOccured = false;

	var targetNode = document.body;
	if (targetNode.nodeType !== 1) {
		return;
	}

	// Options for the observer (which mutations to observe)
	var config = {
		attributes: true,
		characterData: true,
		childList: true,
		subtree: true,
		attributeOldValue: true,
		characterDataOldValue: true
	};

	// Create an observer instance linked to the callback function
	var observer = new MutationObserver(GmCXt.checkMutation);

	// Start observing the target node for configured mutations
	observer.observe(targetNode, config);

	// Later, you can stop observing
	var waitTime = 20;
	if (window.top !== window.self) {
		waitTime = 1000;
	}

	GmCXt.timeout(function() {
		observer.disconnect();

		if ((GmCXt.mutationOccured || GmCXt.isInputElement(he)) && !GmCXt.isGmElement(mg$(he))) {
			// TODO: Track click event
		}

	}, waitTime);
};

//***************************** end click tracking ***************************************//
if (GmCXt === undefined) var GmCXt = {};
if (!GmCXt.l) GmCXt.l = {};

GmCXt.l.resetAll = function() {
	GmCXt.l.logStack = {};
	GmCXt.l.currentStack = [];
	GmCXt.l.primaryInfo = [];
};

GmCXt.l.reset = function() {
	GmCXt.l.currentStack = [];
	GmCXt.l.logStack[GmCXt.id] = GmCXt.l.currentStack;
	GmCXt.l.primaryInfo = [];
};

GmCXt.l.resetAll();

GmCXt.l.addRCA = function(c, meta) {

	var rca = meta.selectorAttributes;
	if (c.precision_type === GmCXt.DOM_CRITERIA_DEFAULT && rca) {

		var attr = [];

		// Concat arrays from all selectors, i.e. js, js1, js2, etc..
		for (var key in rca) {
			attr = attr.concat(rca[key]);
		}

		// Pick unique
		attr = attr.filter(function(value, index, self) {
			return self.indexOf(value) === index;
		}).sort();

		var logStr = "[RCA] HTML structure appears to have changed since element selection. Check for presence and/or values of HTML attributes: " + attr.join(', ');

		if (c.ignoreText) {
			logStr += "\nAlso, could not find text: " + meta.textPropertyValue;
		}
		GmCXt.l.add(logStr, true);

	} else if (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM) {
		GmCXt.l.add("[RCA] Could not find element by the user provided jQuery selector", true);
	}
};

GmCXt.l.start = function(type, identifier, params, isPrimary) {

	obj = {
		'calls': [],
		'identifier': type + '_' + identifier
	};

	if (params) {
		obj.params = params;
	}

	if (GmCXt.l.currentStack.length) {

		GmCXt.l.add('START: ' + type + ' – ' + identifier, isPrimary);

		GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].calls.push(obj);
	}
	GmCXt.l.currentStack.push(obj);
};

GmCXt.l.end = function(returnValue) {

	if (returnValue) {
		GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].returnValue = returnValue;
	}

	if (returnValue === null || (typeof returnValue === 'object' && returnValue.he === null)) {
		GmCXt.l.add('null value returned by: ' + GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].identifier);
	}

	if (GmCXt.l.currentStack.length > 1) {
		GmCXt.l.currentStack.pop();
	}
};

GmCXt.l.return = function(val) {
	GmCXt.l.end(val);
	return val;
};

GmCXt.l.add = function(message, isPrimary) {

	if (!GmCXt.isEmpty(GmCXt.l.currentStack)) {
		if (GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1]) {
			if (!GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log) {
				GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log = [message];
			} else {
				GmCXt.l.currentStack[GmCXt.l.currentStack.length - 1].log.push(message);
			}
		}

		if (isPrimary) {
			GmCXt.l.primaryInfo.push(message);
		}
	}
};

GmCXt.l.getPrimaryLogs = function() {
	return GmCXt.l.primaryInfo;
};

GmCXt.l.getLogStack = function() {

	if (Object.keys(GmCXt.l.logStack).length === 1) {
		return GmCXt.l.currentStack[0];
	}
	return GmCXt.l.logStack;
};

GmCXt.getDebugOptions = function() {
	return {
		1: "Global",
		2: "Page tracking",
		3: "Messages",
		5: "Rules engine",
		6: "Rules engine (Detailed)",
		8: "MyGuide widget",
		10: "Notification",
		12: "Matching algorithm",
		15: "API",
		16: "Features tags",
		17: "Features tags matching",
		21: "Initialisation",
		24: "LXP",
		27: "Workflow Insights",
		28: "Workflow Insights (Detailed)",
		30: "Current Page",
		33: "Workflow guide player",
		36: "Test automation",
		37: "Test automation (Detailed)",
		38: "QA Automator",
		39: "Onboarding guide",
		42: "Tooltips",
		43: "Tooltips (Detailed)",
		45: "Analytics",
		48: "Beacons",
		49: "Beacons (Detailed)",
		51: "Export tasks",
		54: "Step create/edit",
		57: "Click tracking",
		58: "Test Me",
		61: "Creator background sync",
		63: "Precedence",
		67: "Variables",
		68: "Segment Validation",
		70: "Player Background Sync",
		74: "Desktop Creator"
	};
};

GmCXt.getDebugColor = function(m) {
	var colors = {
		1: "",
		2: "#fd5e53",
		3: "#ff0066",
		5: "#21bf73",
		6: "#192965",
		8: "#faafff",
		10: "#d15a7c",
		12: "#af460f",
		15: "#ffb677",
		21: "#40bfc1",
		24: "#0f4c75",
		27: "#3029f2", // Same for 28
		30: "#52de97",
		33: "#07b513",
		36: "#8cba51",
		39: "#fe8761",
		42: "#1c819e", // Same for 43
		45: "#d89cf6",
		48: "#eb8242", // Same for 49
		51: "#9dab86",
		54: "#5f6caf",
		57: "#4681ec",
		58: "#0097a7",
		63: "#ff1a8c",
		67: "#e3564f",
		61: "#ff0066",
		70: "#ff0066",
		74: "#6600cc"
	};

	if (colors[m]) return colors[m];
	else if (colors[m - 1]) return colors[m - 1];
	else return "#010038";
};

GmCXt.debugHelp = function() {
	var str = "Debug logs are feature wise. " +
		"You can enable logs for upto 3 features at a time. Every feature logs come in different colors. " +
		"E.g. Workflow guide logs are colored in blue, while Rules engine logs are colored in yellow. ";

	console.log(str);

	console.log("Call 'GmCXt.debug(op1, op2, op3)' to enable. Where op1, op2, op3 are debug options. E.g. Call 'GmCXt.debug(1)' for global logs. 'GmCXt.debug(33, 27, 54)' for Workflow guide and Rules engine and Matching algo.");
	console.log("Call 'GmCXt.debugStop()' to disable.");	

	console.log("Call 'GmCXt.logElTracker()' – To log matching algo calls counter.");	
	console.log("Call 'GmCXt.resetElTracker()' – To reset counter to zero.");	

	console.log("Filter logs using 'Gm' to see only MyGuide logs.");

	console.log("Debug features list", GmCXt.getDebugOptions());
	
	console.log("ALWAYS remember to disable after use.");
};

GmCXt.getDebugKey = function() {
	return GmCXt.storagePrefix + 'debugMode';
};

GmCXt.initDebugMode = function() {
	GmCXt.debugMode = localStorage.getItem(GmCXt.getDebugKey());
	if (GmCXt.debugMode) {
		GmCXt.debugMode = GmCXt.debugMode.split('"').join('');
	}
	GmCXt.updateDebugMode(GmCXt.debugMode);
};

GmCXt.updateDebugMode = function(mode) {
	GmCXt.debugMode = mode;

	if (!GmCXt.isBackgroundPage) {
		var m = {
			debugMode: GmCXt.debugMode
		};

		if (GmCXt.isDefined(GmCXt.sendMessageToAllWindows)) {
			GmCXt.sendMessageToAllWindows("mgPlayerJSTest_action:update_debug_mode", m);
		}

		if (!GmCXt.isSidePanelApp) {
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:update_debug_mode', m);
		}

		GmCXt.sendMessageToBackgroundService({
			action: 'mgPlayerJSTest_action:update_debug_mode',
			data: m
		});
	}
};

GmCXt.debugStop = function() {

	if (!GmCXt.isBackgroundPage) {
		localStorage.removeItem(GmCXt.storagePrefix + 'debugMode');
	}
	GmCXt.updateDebugMode('');

	return "Logs disabled";
};

GmCXt.debug = function(m1, m2, m3) {

	var modes = GmCXt.getDebugOptions();
	var str = "";
	var mode = "";
	var invalid = "";

	if (m1) {
		if (!modes.hasOwnProperty(m1)) {
			invalid += m1;
		} else {
			mode += m1;
			str += modes[m1];
		}
	}

	if (m2) {
		if (!modes.hasOwnProperty(m2)) {
			invalid += "," + m2;
		} else {
			mode += ":" + m2;
			str += ", " + modes[m2];
		}
	}

	if (m3) {
		if (!modes.hasOwnProperty(m3)) {
			invalid += "," + m3;
		} else {
			mode += ":" + m3;
			str += ", " + modes[m3];
		}
	}

	if (invalid) {
		return 'Invalid debug mode: ' + invalid;

	} else if (mode) {

		if (!GmCXt.isBackgroundPage) {
			localStorage.setItem(GmCXt.storagePrefix + 'debugMode', mode);
		}

		GmCXt.updateDebugMode(mode);

		return "Logs enabled: " + str;
	} else {
		return "Please provide debug mode";
	}
};

GmCXt.showLogs = function(m) {

	if (!GmCXt.debugMode)
		return false;

	if (m === 1)
		return true;

	var modes = (GmCXt.debugMode + "").split(":");
	var m1 = m + 1;

	if (modes.indexOf(m + "") !== -1 || modes.indexOf(m1 + "") !== -1)
		return true;

	return false;
};

GmCXt.updateLogMetadata = function(str) {

	if (GmCXt.id)
		str = str + " [" + GmCXt.id + "]";

	return str + "[" + GmCXt.logtime() + "]";
};

GmCXt.log = function(mode, str, opt) {
	if (GmCXt.showLogs(mode)) {
		if (mode !== 12 && (GmCXt.isSidePanelApp)) {
			GmCXt.sendMessageToPrintLog(mode, str, opt);
		} else {
			GmCXt.printLog(mode, str, opt);
		}
	}
};

GmCXt.sendMessageToPrintLog = function(m, s, o) {
	var message = {
		action: "mgPlayerJSTest_action:print_debug_log",
		data: {
			mode: m,
			str: s,
			opt: o
		}
	};
	GmCXt.sendToParentWindow(message);
};

GmCXt.printLog = function(mode, str, opt) {

	var css = "color:" + GmCXt.getDebugColor(mode) + ";";
	var data = null;

	if (mode === 1 || opt === 1) {
		css += 'font-weight: bold;';
	}
	// opt is either bold or data object to print
	if (opt !== 1) {
		data = opt;
	}

	str = GmCXt.updateLogMetadata(str);
	str = '%c' + str;

	if (data)
		console.log(str, css, GmCXt.createDeepCopy(data));
	else
		console.log(str, css);
};

GmCXt.logArrayProp = function(mode, tours, prop) {
	if (GmCXt.showLogs(mode)) {
		for (var i = 0, len = tours.length; i < len; i++) {
			var str = (i + 1) + ") " + tours[i][prop];
			str = GmCXt.updateLogMetadata(str);
			str = '%c' + str;

			var css = "color:" + GmCXt.getDebugColor(mode) + ";";
			console.log(str, css);
		}
	}
};

GmCXt.logtime = function() {
	return (Date.now() + "").substring(7);
};

GmCXt.printMatchingAlgoLogs = function() {

	GmCXt.log(12, "Detailed logs", GmCXt.l.getLogStack());
	GmCXt.log(12, "Primary debug info", {
		logs: GmCXt.l.getPrimaryLogs()
	});
};

GmCXt.primaryErrorReport = function() {
	var str = GmCXt.l.primaryInfo.join("<br>");
	return str;
};

GmCXt.debugErrorReport = function() {
	//var str = JSON.stringify(GmCXt.l.getLogStack());
	//return str;
};
if (GmCXt === undefined) {
	var GmCXt = {};
}

GmCXt.sendMessageToAllWindows = function(type, data) {
	var data = mg$.extend({}, data || {});
	var iframeIdentifier;

	if (GmCXt.syncPlayerInst(type)) {
		if (GmCXt.playerI || GmCXt.playerI === null) {
			data.playerInstance = GmCXt.playerI;
		}
	}

	if (GmCXt.syncCreateInst(type)) {
		if (GmCXt.stepReq || GmCXt.stepReq === null) {
			data.stepReq = GmCXt.stepReq;
		}
	}

	if (type !== "mgPlayerJSTest_action:clear_rule_jobs" || type !== "mgPlayerJSTest_action:remove_tooltip") {
		data.user = GmCXt.user;
		data.organization = GmCXt.organization;
	}

	var message = {
		action: type,
		data: data
	};

	if (message.data) {
		var f = {};
		message.data.frame = mg$.extend({}, f);
	}

	if (GmCXt.inTopWindow(data.settings)) {

		if (type === "mgPlayerJSTest_action:started;task:select_existing_dom_element") {
			GmCXt.requestHandler.selectExistingDomElement(message.data);
			return;
		}

		if (type === "mgPlayerJSTest_action:started;task:edit_step_select_existing_dom_element") {
			GmCXt.requestHandler.selectDomElementEditStep(message);
			return;
		}

		if (type === "mgPlayerJSTest_action:started;task:edit_tag_select_existing_dom_element") {
			GmCXt.requestHandler.selectDomElementEditTag(message);
			return;
		}

		if (type === "mgPlayerJSTest_action:started;task:select_dom_element_tooltips") {
			GmCXt.requestHandler.selectDomElement(message);
			return;
		}

		if (type === "mgPlayerJSTest_action:started;task:edit_beacon_select_existing_dom_element") {
			GmCXt.selectorTool = null;
			GmCXt.requestHandler.selectDomElementBeaconEdit(message);
			return;
		}

		if (type === "mgPlayerJSTest_action:started;task:search_next_step") {
			GmCXt.requestHandler.searchDomElement(message.data);
			return;
		}

	} else if (GmCXt.inTopWindow(data.beaconSettings)) {
		if (type === "mgPlayerJSTest_action:show_beacon_on_dom_element") {
			GmCXt.highlighter.queueBeacon(message);
			return;
		}
	}

	if (type === "mgPlayerJSTest_action:started;task:select_dom_element_for_rules") {

		if (data.rule && data.rule.element && data.rule.element.meta) {
			var el = data.rule.element;

			if (el.meta.inTopWindow === true) {
				GmCXt.requestHandler.findElementToCheckDomRule(data);
				return;
			} else {
				GmCXt.rulesIframeQueue.push(mg$.extend({}, data));
			}
		}
	}

	if (type === "mgPlayerJSTest_action:started;task:select_dom_element_for_matching_in_rules") {
		if (data.element && data.element.meta) {
			var el = data.element;
			if (el.meta.inTopWindow === true) {
				GmCXt.requestHandler.findElementToCheckMatchingAlgo(data);
				return;
			}
		}
	}

	if (type === "mgPlayerJSTest_action:update_session_info") {
		GmCXt.sessionInfo = data.sessionInfo;
	}

	GmCXt.timeout(function() {
		GmCXt.sendToIframes(message, iframeIdentifier);
	}, GmCXt.t.msgToframes);

	if (!iframeIdentifier) GmCXt.msgToThisWin(message);
};

GmCXt.inTopWindow = function(s) {
	if (s) {
		if (s.element) {
			var el = s.element;
		} else if (s.selectedDOMElement) {
			var el = s.selectedDOMElement;
		}

		if (el) {
			if (el.version && GmCXt.decodeVersion(el.version) >= 10000) {
				if (el.meta.inTopWindow === true)
					return true;
			} else if (el.isTopWindow === true) {
				return true;
			}
		}
	}

	return false;
};

GmCXt.sendToIframes = function(m, targetIframeId) {

	for (let iframeId in GmCXt.iframePorts) {
		if (GmCXt.iframePorts.hasOwnProperty(iframeId)) {

			var frame = GmCXt.iframeEls[iframeId];

			if (m.mgdata && m.mgdata.frame && !GmCXt.isEmpty(m.mgdata.frame)) {
				m.mgdata.frame.iframeTitle = frame.frameElement.getAttribute("title");
				m.mgdata.frame.attributes = GmCXt.getIframeAttributes(mg$(frame));
				m.mgdata.frame.pos = frame.frameElement.getBoundingClientRect();
			}

			// Send to target iframe only, if target iframe ID exists; else send to all iframes
			if (targetIframeId) {
				if (iframeId === targetIframeId) {
					GmCXt.iframePorts[iframeId].postMessage(GmCXt.formatMsg(m));
					break;
				}
			} else {
				GmCXt.iframePorts[iframeId].postMessage(GmCXt.formatMsg(m));
			}
		}
	}
};

GmCXt.sendMessageToolbar = function(type, data) {
	data = data || {};
	data.config = GmCXt.conf;
	data.user = GmCXt.user;

	if (GmCXt.initialization && GmCXt.initialization.toolbar === true) {
		GmCXt.sendMessageToolbarIn(type, data);
	} else {
		GmCXt.timeout(function() {
			GmCXt.sendMessageToolbar(type, data);
		}, GmCXt.t_.sec1);
	}
};

GmCXt.sendMessageToolbarIn = function(type, data) {
	var appWindow = mg$("#mgPlayerJSTest_toolbar-iframe");
	if (appWindow.length) {
		var message = {
			action: type,
			data: data
		};
		message = GmCXt.formatMsg(message);
		appWindow.get(0).contentWindow.postMessage(message, "*");
	}
};
if (GmCXt === undefined) {
	var GmCXt = {};
}

GmCXt.getAppStorage = function(keys) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {

			var items = {};
			for (var i = 0; i < keys.length; i++) {

				var key = GmCXt.addStoragePrefix(keys[i]);
				var data = localStorage.getItem(key);

				if (data && data !== 'undefined') {
					data = GmCXt.parseJSON(data);
					items[keys[i]] = data;
				}
			}
			resolve(items);
		});
	} else {
		return new Promise(function(resolve, reject) {

			var d = {
				keys: keys
			};
			var msgId = Math.floor(Math.random() * 100000);
			d.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:get_local_storage';
			GmCXt.sendMessageToApp(msg, d);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		});
	}
};

GmCXt.setAppStorage = function(data) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {
			mg$.each(data, function(key, value) {
				key = GmCXt.addStoragePrefix(key);
				localStorage.setItem(key, JSON.stringify(value));
			});
			resolve();
		});
	} else {

		return new Promise(function(resolve, reject) {

			var msgId = Math.floor(Math.random() * 100000);
			data.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:set_local_storage';
			GmCXt.sendMessageToApp(msg, data);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		});
	}
};

GmCXt.removeAppStorage = function(keys) {

	if (GmCXt.isBackgroundPage || window.top !== window.self) {

		return new Promise(function(resolve, reject) {
			for (var i = 0; i < keys.length; i++) {
				keys[i] = GmCXt.addStoragePrefix(keys[i]);
				localStorage.removeItem(keys[i]);
			}
			resolve();
		});
	} else {

		return new Promise(function(resolve, reject) {

			var msgId = Math.floor(Math.random() * 100000);
			keys.msgId = msgId;
			var msg = 'mgPlayerJSTest_action:remove_local_storage';
			GmCXt.sendMessageToApp(msg, keys);

			GmCXt.globalMsgData[msgId] = {};
			GmCXt.globalMsgData[msgId].cb = resolve;
		});
	}
};

GmCXt.getLocalStorage = function(keys) {

	return new Promise(function(resolve, reject) {

		var items = {};
		for (var i = 0; i < keys.length; i++) {
			var key = "mgLxp" + keys[i];
			var data = localStorage.getItem(key);

			if (data && data !== 'undefined') {
				data = GmCXt.parseJSON(data);
				items[keys[i]] = data;
			}
		}
		resolve(items);
	});
};

GmCXt.setLocalStorage = function(data) {

	return new Promise(function(resolve, reject) {
		mg$.each(data, function(key, value) {
			key = "mgLxp" + key;
			localStorage.setItem(key, JSON.stringify(value));
		});
		resolve();
	});
};

GmCXt.removeLocalStorage = function(keys) {
	return new Promise(function(resolve, reject) {
		for (var i = 0; i < keys.length; i++) {
			var key = "mgLxp" + keys[i];
			localStorage.removeItem(key);
		}
		resolve();
	});
};

GmCXt.getChromeStorage = function(keys) {
	var promise = new Promise(function(resolve, reject) {
		try {

			for (var i = 0; i < keys.length; i++) {
				keys[i] = GmCXt.addStoragePrefix(keys[i]);
			}

			chrome.storage.local.get(keys, function(items) {

				var d = {};
				for (var i in items) {
					var key = GmCXt.removeStoragePrefix(i);
					d[key] = items[i];
				}

				resolve(d);
			});
		} catch (e) {}
	});
	return promise;
};

GmCXt.setChromeStorage = function(data) {
	var promise = new Promise(function(resolve, reject) {
		if (data) {
			var keys = {};
			for (var d in data) {
				var key = GmCXt.addStoragePrefix(d);
				keys[key] = data[d];
			}

			try {
				chrome.storage.local.set(keys, function() {
					resolve();
				});
			} catch (e) {}
		}
	});
	return promise;
};

GmCXt.removeChromeStorage = function(data) {

	var promise = new Promise(function(resolve, reject) {
		try {
			if (data) {
				for (var i = 0; i < data.length; i++) {
					data[i] = GmCXt.addStoragePrefix(data[i]);
				}
				chrome.storage.local.remove(data, function() {
					resolve();
				});

			}
		} catch (e) {}
	});

	return promise;

};

GmCXt.storage = function(options) {
	options = options || {};
	var pub = {};

	if (GmCXt.conf && GmCXt.isExtension() && GmCXt.browserApp !== 'Safari') {

		pub.get = GmCXt.getChromeStorage;
		pub.set = GmCXt.setChromeStorage;
		pub.remove = GmCXt.removeChromeStorage;

	} else {

		if (GmCXt.isLXP()) {
			pub.get = GmCXt.getLocalStorage;
			pub.set = GmCXt.setLocalStorage;
			pub.remove = GmCXt.removeLocalStorage;
		} else {
			pub.get = GmCXt.getAppStorage;
			pub.set = GmCXt.setAppStorage;
			pub.remove = GmCXt.removeAppStorage;
		}
	}

	return pub;
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.de_DE = {
	currentPage: "Aktuelle Seite",
	myChat: "MyChat",
	import: "Importieren",
	export: "Exportieren",
	redirectLivetour: "Live abspielen",
	guideNotAvailable: "Anleitung unter aktueller URL nicht verf\u00fcgbar. M\u00f6chten Sie zur Guide-URL wechseln?",
	downloadPPT: "PPT herunterladen",
	btnYes: "Ja",
	btnNo: "Nein",
	inApp: "In-App",
	live: "Leben",
	resume: "Fortsetzen",
	tourCloseConfirm: "M\u00f6chten Sie diesen Leitfaden wirklich schlie\u00dfen?",
	notifSnoozeDonotMsg: "Bitte teilen Sie uns mit, ob Sie dies sp\u00e4ter sehen m\u00f6chten oder die Benachrichtigung nie anzeigen m\u00f6chten?",
	surveyThanksMessage: "Vielen Dank f\u00fcr Ihre Antwort",
	testMePassedMessage: "Gl\u00fcckwunsch! Sie haben bestanden",
	testMeFailedMessage: "Hoppla! Sie sind gescheitert",
	testMeGuideEfficiency: "Testeffizienz:",
	testMeGuideEffectiveness: "Testwirksamkeit:",
	testMeTestTime: "Testzeit",
	testMeExpectedTime: "Erwartete Zeit",
	testMeStepsTaken: "Unternommene Schritte",
	testMeExpectedSteps: "Erwartete Schritte",
	testMeRetakeTestBtn: "Wiederholungstest",
	testMeResultTitle: "MyTest Ergebnis",
	ConfirmIfTestMeModeRidirect: "Anleitung unter aktueller URL nicht verf\u00fcgbar. M\u00f6chten Sie zur Guide-URL umleiten?",
	feedCmt: "Ihr Feedback ist wertvoll f\u00fcr uns!<br> Bitte teilen Sie uns Ihre Meinung in 500 Zeichen oder weniger mit",
	doNotShowAgain: "Nicht mehr anzeigen",
	neverShowAgain: "Nie wieder anzeigen",
	skipGuide: "Anleitung \u00fcberspringen",
	surveyErrorMsg: "Bitte beantworten Sie mindestens eine Frage",
	redirect: "Umleiten",
	liveGuide: "Live-Guide",
	question: "Frage",
	exitGuide: "Anleitung zum Beenden",
	continueGuide: "Anleitung fortsetzen",
	stop: "Aufh\u00f6ren",
	characters: "Zeichen:",
	survey: "Vermessung",
	testMeStopMessage: "Sie befinden sich im TestMe-Modus, klicken Sie auf STOP, um den Vorgang zu beenden",
	testMeFailedErrorMessage: "Sie konnten den Zielschritt nicht erreichen.<br>Du hast {CORRECT_STEPS} Schritte korrekt aus {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Geben Sie hier ein! Max. 500 Zeichen",
	pushTourSnoozeMsg: "Diese Auto Launch Tour wird f\u00fcr",
	of: "von",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Ziehen Sie diesen Player per Drag & Drop an eine beliebige Stelle auf der Seite",
	dontShowEdResult: "Ich m\u00f6chte das nicht sehen",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Vorschau schlie\u00dfen",
	elmNotFound: "Es scheint, dass wir das Element f\u00fcr den Schritt nicht finden k\u00f6nnen:",
	elmNotFoundInfo: "Stellen Sie sicher, dass Sie sich auf der richtigen Seite befinden, um diesen Schritt auszuf\u00fchren. \u00dcberpr\u00fcfen Sie auch, ob Sie das ausgew\u00e4hlte Element sehen k\u00f6nnen",
	notExists: "Nicht vorhanden",
	elmNotFoundHeader: "Step-Element nicht gefunden",
	goToStep: "Zum Schritt",
	notFoundStep: "Wir konnten das Element f\u00fcr Schritt nicht finden #",
	pleaseReselect: "Bitte versuchen Sie, das Element erneut auszuw\u00e4hlen.",
	stepRuleMatchErr: "Konfigurationsfehler: Schrittregeln stimmen nicht \u00fcberein",
	guideRuleMatchErr: "Konfigurationsfehler: Leitlinienregeln stimmen nicht \u00fcberein",
	stepNotFoundRedirect: "Schritt auf dieser Seite nicht gefunden. M\u00f6chten Sie umleiten?",
	branchStepMessagePopup: "Bitte w\u00e4hlen Sie eine der folgenden Aufgaben aus, um fortzufahren.",
	btnSkip: "\u00DCberspringen",
	kindlyHoverPopup: "Bitte bewegen Sie den Mauszeiger \u00fcber dieses Element, um das Popup zu \u00f6ffnen",
	stepPlayIsdefinedPopover: "Der Schritt, den Sie spielen werden, wird im Popover definiert",
	elmNotFoundWestpac: "Schritt nicht gefunden \u2013 Dieses Handbuch endet",
	findingElementMessage: "Der Versuch, einen Schritt zu finden. . .",
	badDomain: "Die aktuelle Domain und URL ist nicht berechtigt, MyGuide auszuf\u00fchren. Bitte wenden Sie sich an Ihren Administrator, um Hilfe zu erhalten.",
	hostJsError: "Es scheint einen Fehler auf der Webseite zu geben. MyGuide kann nicht fortgesetzt werden",
	remember: "Erinnern Sie sich an mich",
	forgotPass: "Passwort vergessen?",
	dontHavAcc: "Sie haben noch kein Konto?",
	loginTitle: "Login",
	loginOtpScreenTitle: "OTP zur Anmeldung verifizieren",
	forgetPassTitl: "Passwort zur\u00fccksetzen",
	placeholderEmail: "E-Mail-Adresse",
	placeholderPassword: "Passwort",
	placeholderNewPassword: "Neues Passwort",
	placeholderCurrentPassword: "Aktuelles Passwort",
	placeholderFirstname: "Vorname",
	placeholderLastname: "Nachname",
	placeholderPasswordC: "Passwort best\u00e4tigen",
	btnCancel: "Abbrechen",
	btnPayment: "Upgrade-Plan",
	btnSubmit: "Senden",
	btnLogin: "Login",
	termsOfUse: "Nutzungsbedingungen",
	andLabel: "und",
	policyPrivacy: "Datenschutzrichtlinie",
	passwordError: "Passwort muss 8-stellig sein",
	confirmPasswordError: "Kennwort und Best\u00e4tigungskennwort m\u00fcssen identisch sein",
	firstnameError: "Bitte geben Sie einen g\u00fcltigen Vornamen ein",
	lastnameError: "Bitte geben Sie einen g\u00fcltigen Nachnamen ein",
	emailError: "Bitte geben Sie eine g\u00fcltige E-Mail-ID ein",
	orgError: "Geben Sie eine g\u00fcltige Organisations-URL ein.",
	otpError: "Bitte geben Sie ein g\u00fcltiges OTP ein",
	placeholderOtp: "Geben Sie hier Ihr OTP ein",
	otpSentDesc: "Wenn eine g\u00fcltige E-Mail-Adresse angegeben wurde, wird Ihnen ein Link zum Zur\u00fccksetzen zugesandt.<br>Wenn Sie die E-Mail nicht innerhalb weniger Minuten sehen, \u00fcberpr\u00fcfen Sie bitte Ihren Spam-Ordner auf eine E-Mail von",
	btnOtpVerify: "OTP verifizieren",
	alreadyHavAcc: "Sie haben bereits ein Konto?",
	smartbiteMessageError: "Bitte Nachricht eingeben",
	smartbiteLinkError: "Bitte geben Sie einen g\u00fcltigen Link ein",
	noGuidesOnThisPage: "Keine Anleitungen auf dieser Seite verf\u00fcgbar!",
	clickOn: "Anklicken ",
	contactUs: "Kontaktieren Sie uns",
	search: "Suchen",
	noRecordFound: "Keine Datens\u00e4tze gefunden",
	category: "Ordner",
	subCategory: "Unterordner",
	confirmPasswordRequired: "Passwort best\u00e4tigen erforderlich",
	logInWithSSO: "Anmelden mit SSO",
	inputPlaceHolderSearch: "Suchen Sie nach einem Reisef\u00fchrer",
	noGuideAvailableFor: "Es wurden keine Reisef\u00fchrer gefunden, die Ihrer Suche entsprechen",
	tryModifyingYourSearch: "Versuchen Sie, Ihre Suchkriterien zu \u00e4ndern",
	signInVerifyYourEmail: "Diese E-Mail-ID wurde nicht verifiziert. Bitte \u00fcberpr\u00fcfen Sie Ihre E-Mail f\u00fcr Details",
	signInVerifyYourAccount: "Wir haben Ihnen eine E-Mail mit einem OTP geschickt. Bitte best\u00e4tigen Sie Ihr Konto, um den Anmeldevorgang abzuschlie\u00dfen.",
	maintenanceMessage: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	back: "Zur\u00fcck",
	changePassword: "Passwort \u00e4ndern",
	startTestAuto: "Automatisierungstests starten",
	msgPasswordChangedSuccess: "Ihr Passwort wurde erfolgreich ge\u00e4ndert",
	msgConfirmNewPasswordError: "Kennwort best\u00e4tigen muss mit Neues Kennwort identisch sein",
	enterUrl: "Team-URL eingeben",
	dragPlaceholderDropThis: "Lassen Sie dies fallen ",
	dragPlaceholderHere: " hier",
	termsOfService: "Bedingungen",
	versionText: "Version",
	videoStepSuccessMessage: "Ihr Schritt wurde erfolgreich erstellt",
	importSuccessMessage: "Leitfaden erfolgreich hochgeladen. Gehen Sie zum Aufgabenstatus, um den Importstatus zu \u00fcberpr\u00fcfen",
	worldBankHelpSupport: "Einige Tools, z. B. QuickInfos, k\u00f6nnen nur in der Benutzeroberfl\u00e4che angezeigt werden",
	helpSupport: "Hilfe & Support",
	page: "Seite",
	selectAnApplication: "W\u00e4hlen Sie eine Anwendung",
	refresh: "Auffrischen",
	loginBtn: "Login",
	account: "Konto",
	taskStatus: "Aufgabenstatus ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Erster Schritt",
	lastStep: "Letzter Schritt",
	startTest: "Test starten",
	noInappStepInGuide: "TestMe kann nicht fortfahren, da es in diesem Handbuch keinen Inline-Schritt gibt",
	settingBtn: "Erweiterte Einstellungen",
	orgSetting: "Organisationseinstellungen",
	close: "Schlie\u00dfen",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Dokument",
	downloadBlog: "Blog",
	downloadTxt: "Klartext",
	serviceErrorMessage: "Hoppla! Ein Fehler ist aufgetreten. Bitte versuchen Sie es nach einiger Zeit erneut. Sie k\u00f6nnen uns auch eine E-Mail an support@csod.com senden, um Unterst\u00fctzung zu erhalten",
	guidesTab: "F\u00fchrer",
	noGuideCreatedYet: "Noch kein Guide erstellt!",
	noCategoryCreatedYet: "Noch kein Ordner erstellt!",
	chatbot: "MyChat",
	notAutorised: "Sie haben nicht den erforderlichen Zugang, bitte wenden Sie sich an den Admin",
	ok: "OKAY",
	apiError: "Konfigurationsfehler. Bitte kontaktieren Sie den Admin",
	select: "Ausw\u00e4hlen",
	mute_unmute: "Stummschaltung\/Stummschaltung aufheben",
	privacyPolicy: "Datenschutz & Cookies",
	privacyPolicyText: "MyGuide verwendet Cookies. Wenn Sie fortfahren, stimmen Sie unseren Bedingungen und Datenschutzrichtlinien zu und geben uns die Zustimmung zur Verwendung von Cookies.",
	terms: "Bedingungen",
	westPecErrorMessage: "Sie sind nicht berechtigt, auf diese Anwendung zuzugreifen. Bitte melden Sie sich im Westpac-Netzwerk an",
	noApp: "Keine Anwendungen gefunden",
	role: "Rolle:",
	all: "Alle",
	video: "Video",
	course: "Kurs",
	article: "Artikel",
	image: "Bild",
	pathways: "Wege",
	preview: "Vorschau",
	more: "Mehr",
	history: "Geschichte",
	publish: "Ver\u00f6ffentlichen",
	selectGuideLink: "Bitte w\u00e4hlen Sie Anleitung zum Link",
	selectGuideBeforeSubmit: "Bitte w\u00e4hlen Sie vor dem Absenden einen Leitfaden aus",
	change: "Ver\u00e4nderung",
	checkNow: "Jetzt pr\u00fcfen",
	minutes: "Protokoll",
	clickHere: "Klicken Sie hier",
	youAlmostDone: "Sie sind fast fertig!",
	setOrg: "So richten Sie Ihre Organisation ein",
	apps: "Apps",
	me: "Ich",
	playStep: "Play-Schritt",
	miniPlayerHelp: "Hilfe",
	defaultMiniPlayerHelp: "Hilfe",
	defaultConfirmIfSlideshowOrRedirect: "Schritt ist f\u00fcr die aktuelle URL nicht verf\u00fcgbar.<br>M\u00f6chten Sie zur Schritt-URL gehen oder eine Diashow abspielen?",
	defaultServiceErrorMessage: "Hoppla! Ein Fehler ist aufgetreten. Bitte versuchen Sie es nach einiger Zeit erneut. Sie k\u00f6nnen uns auch eine E-Mail an support@csod.com senden, um Unterst\u00fctzung zu erhalten",
	defaultMaintenanceMessage: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	userNotFollowingGuideMessage: "Es sieht so aus, als w\u00fcrden Sie Schritte ausf\u00fchren, die nicht Teil dieses Handbuchs sind. Wenn Sie dem Guide nicht mehr folgen m\u00f6chten, klicken Sie auf Exit Guide",
	defaultUserNotFollowingGuideMessage: "Es sieht so aus, als w\u00fcrden Sie Schritte ausf\u00fchren, die nicht Teil dieses Handbuchs sind. Wenn Sie dem Guide nicht mehr folgen m\u00f6chten, klicken Sie auf Exit Guide",
	resumeGuide: "Leitfaden zum Lebenslauf",
	defaultResumeGuideMessage: "Leitfaden zum Lebenslauf",
	backToLogin: "Zur\u00fcck zum Login",
	filters: "Filter",
	thisApp: "Diese App",
	thisWebsite: "Diese Website",
	maxFreeTourLimit: "Maximales Limit der erreichten Touren",
	passwordRegexCheck: "Das Kennwort muss mindestens 8 Zeichen enthalten, darunter mindestens einen Gro\u00df-, einen Klein- und einen numerischen Wert.",
	countLimit: "99+",
	microsoftServiceKey: "Geben Sie Ihren Microsoft Cognitive Services Speech-Abonnementschl\u00fcssel ein.",
	numberOfImgFile: "Die Anzahl der Bild- und Textdateien sollte gleich sein",
	availableOn: "Verf\u00fcgbar auf",
	tooltipUnpubWorkflowTitle: "Unver\u00f6ffentlichter Workflow",
	tooltipUnpubParentWorkflowTitle: "Ver\u00f6ffentlichter Workflow, unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentWorkflowTitle: "Ver\u00f6ffentlichter Workflow, Ver\u00f6ffentlichter Ordner",
	tooltipUnpubTooltipTitle: "Unver\u00f6ffentlichte QuickInfo",
	tooltipUnpubParentTooltipTitle: "QuickInfo ver\u00f6ffentlicht, unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentTooltipTitle: "QuickInfo ver\u00f6ffentlicht, Ordner \"Ver\u00f6ffentlicht\"",
	tooltipUnpubTutorialTitle: "Unver\u00f6ffentlichtes Tutorial",
	tooltipUnpubParentTutorialTitle: "Ver\u00f6ffentlichtes Lernprogramm, Unver\u00f6ffentlichte \u00fcbergeordnete Ordner",
	tooltipPubParentTutorialTitle: "Lernprogramm \"Ver\u00f6ffentlicht\", \"Ver\u00f6ffentlichter Ordner\"",
	tooltipUnpubSubFolderTitle: "Unver\u00f6ffentlichter Unterordner",
	tooltipUnpubSubFolderDesc: "Verwenden von Unterordnern zum Organisieren von Hilfslinien",
	tooltipUnpubParentSubFolderTitle: "Ver\u00f6ffentlichter Unterordner, Unver\u00f6ffentlichter \u00fcbergeordneter Ordner",
	tooltipPubParentSubFolderTitle: "Ver\u00f6ffentlichter Unterordner, Ver\u00f6ffentlichter Ordner",
	tooltipPubParentSubFolderDesc: "Organisiert Guides",
	exitSurvey: "Exit-Umfrage",
	disable: "Abschalten",
	instructionExitSurvey: "Exit Survey wird angezeigt, wenn ein Benutzer einen Guide vor Abschluss verl\u00e4sst",
	msgVideoNotFound: "Hochladen Ihres Videos, bitte versuchen Sie es nach einiger Zeit",
	msgGiphyNotFound: "Hochladen Ihres GIF, bitte versuchen Sie es nach einiger Zeit",
	userPref: "Meine Einstellungen",
	manageAccount: "Admin-Portal",
	analyticsPortal: "Insights-Portal",
	errorInvalidUrl: "Keine g\u00fcltige URL",
	wbFooterText: "Technisches Lernen im ITS-Bereich",
	navigationMenu: "Navigationsmen\u00fc",
	clearHistory: "Verlauf l\u00f6schen",
	userDeniedMessage: "Benutzer verweigert Kamera- und Mikrofonzugriffsberechtigungen",
	pushNotification: "Push-Benachrichtigungen",
	viewDetail: "Details anzeigen",
	contactAdmin: "Bitte wenden Sie sich an support@csod.com oder Ihren Administrator, um weitere Unterst\u00fctzung zu erhalten.",
	noAppOnDomain: "Anwendung ist nicht f\u00fcr aktuelle Dom\u00e4ne zugewiesen ",
	noGuidesOnDomain: "Keine Guides gefunden",
	apply: "Anwenden",
	invalidLoginCred: "Ung\u00fcltige Anmeldedaten. Ihr Konto wird nach mehreren erfolglosen Versuchen gesperrt, Sie erhalten eine E-Mail, um Ihr Konto zu entsperren, oder Sie k\u00f6nnen Ihr Passwort zur\u00fccksetzen",
	resendOTP: "OTP erneut senden",
	sendFeedback: "Feedback senden",
	guideNotExist: "Dieses Handbuch ist auf dieser Seite nicht verf\u00fcgbar (Fehler: Dom\u00e4nenkonflikt) ",
	cdnAccess: "<b>Es tut uns leid<\/b> <br><br>Es scheint, dass es ein Problem mit unseren Servern gibt.<br> Wir wurden \u00fcber den Fehler informiert und werden ihn so schnell wie m\u00f6glich beheben",
	tourPlayError: "Guide kann nicht gespielt werden. Fehler beim Abrufen von Guide-Details",
	playerMode: "Spielermodus",
	closePanel: "Bedienfeld schlie\u00dfen",
	switchCreatorMode: "In den Creator-Modus wechseln",
	extensionContextError: "Der Erweiterungskontext wird ung\u00fcltig gemacht. Bitte laden Sie die Seite neu, um fortzufahren",
	otpSent: "OTP wurde erneut an Ihre E-Mail gesendet, bitte \u00fcberpr\u00fcfen Sie Ihren Posteingang",
	startOver: "Neu anfangen",
	yesResume: "Fortsetzen",
	dontShowAgain: "Nicht mehr anzeigen",
	notificationHeader: "Sie haben eine Benachrichtigung!",
	watchLater: "Sp\u00e4ter ansehen",
	pushSnoozeMsg: "Diese Benachrichtigung wird f\u00fcr",
	showAgain: "Erneut anzeigen",
	noGuidesOnThisTab: "Es gibt keine Benachrichtigungen auf dieser Seite",
	iAgree: "Ich stimme zu",
	viewMore: "Mehr anzeigen",
	lostInternetConnection: "Verbindung zum Server unterbrochen. Bitte stellen Sie die Verbindung wieder her und versuchen Sie es erneut.",
	next: "Weiter",
	recent: "Aktuell",
	older: "\u00c4lter",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Klar",
	tooltipDontShowAgain: "Benachrichtigungen werden nicht mehr angezeigt. Um eine Benachrichtigung jetzt zu aktivieren, bewegen Sie den Mauszeiger dar\u00fcber und klicken Sie auf \"Erneut anzeigen\".",
	tooltipWatchLater1: "Benachrichtigungen werden f\u00fcr",
	tooltipWatchLater2: "und wird danach erscheinen. Um eine Benachrichtigung jetzt zu aktivieren, bewegen Sie den Mauszeiger dar\u00fcber und klicken Sie auf \"Erneut anzeigen\".",
	hour: "Stunde",
	hours: "Stunden",
	insightsTracker: "Insights-Tracker",
	slideshow: "Diashow",
	autoplay: "AUTOMATISCHE ABSPIELUNG",
	powerFormOldData: "Vorhandene Daten",
	powerFormNewData: "Verwenden Sie dieses Formular, um neue Daten einzugeben",
	powerFormNewDataMore: "Wenn Ihre vorhandenen Daten nicht sichtbar sind, klicken Sie bitte auf den Pfeil oben links, um Ihre Daten anzuzeigen. Die Daten m\u00fcssen dann in das zul\u00e4ssige Aufz\u00e4hlungsformat kopiert werden.",
	powerFormTitle: "Dateneingabe-Assistent",
	powerFormMandatory: "Dies ist ein Pflichtfeld, maximale Zeichenbegrenzung ",
	belongToOtherApp: "Dieses Handbuch wird auf {TOURURL} erstellt, das zur {APPNAME}-App geh\u00f6rt. Bitte kopieren Sie diese Anleitung in diese App und versuchen Sie es erneut.",
	setDomain: "Wenn Sie sicher sind, dass {TOURURL} in den aktuellen Anwendungsdom\u00e4neneinstellungen hinzugef\u00fcgt werden soll, f\u00fcgen Sie es hinzu und versuchen Sie es erneut.",
	on: "AUF",
	off: "AUS",
	btnPrev: "Zur\u00fcck",
	btnPrevious: "Vorhergehend",
	taskList: "Aufgabenliste",
	unprocessedVideo: "Bitte warten Sie, w\u00e4hrend Ihr Video verarbeitet wird.",
	searchResult: "Suchergebnis",
	pleaseWait: "Bitte warten!",
	mediaDownloadMsg: "W\u00e4hrend wir Ihre Dateien f\u00fcr den Download vorbereiten",
	mediaFileNotFound: "Mediendatei nicht gefunden",
	searchInFolder: "Im Ordner suchen",
	currentPageSearchPlaceholder: "Suchen Sie nach Guide(s), die auf der aktuellen Seite verf\u00fcgbar sind",
	brandLogo: "Markenlogo",
	accessibility: "Zug\u00e4nglichkeit",
	replay: "Wiederholungsspiel",
	defaultGreetingMessage: "Hall\u00f6chen! Willkommen bei MyGuide. Wie kann ich dir helfen? Bitte beachten Sie, dass ich ein Bot bin.",
	defaultErrorMessage: "Es tut mir leid, das habe ich nicht verstanden. K\u00f6nnten Sie etwas konkreter werden? ",
	defaultEndMessage: "Wir sind fertig, vielen Dank!",
	greetingMessage: "Hall\u00f6chen! Willkommen bei MyGuide. Wie kann ich dir helfen? Bitte beachten Sie, dass ich ein Bot bin.",
	errorMessage: "Es tut mir leid, das habe ich nicht verstanden. K\u00f6nnten Sie etwas konkreter werden? ",
	endMessage: "Wir sind fertig, vielen Dank!",
	guideLnkToRedirect: "Verwenden Sie den folgenden Link, um auf die Seite umzuleiten und die Anleitung abzuspielen",
	otpTimer: "Sie k\u00f6nnen es erneut versuchen in ",
	seconds: " Nachschlag",
	limitWarning: "Sie haben die maximale Grenze f\u00fcr erfolglose Versuche erreicht",
	403: "Wir hatten ein Problem mit dieser Anfrage. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	405: "Bei der Bearbeitung dieser Anfrage ist ein Problem aufgetreten. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	429: "Zu viele Anfragen",
	1003: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte melden Sie sich erneut an und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, aktualisieren Sie die Seite, und versuchen Sie es erneut.",
	1007: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	1005: "<b>Es tut uns leid<\/b> <br><br>Es scheint, dass es ein Problem mit der Anfrage oder mit unseren Servern gibt.<br> Wir wurden \u00fcber den Fehler informiert und werden ihn so schnell wie m\u00f6glich beheben",
	1009: "Benutzer-E-Mail-Adresse ist nicht verifiziert",
	1014: "Wartung im Gange. Bitte kontaktieren Sie uns \u00fcber support@csod.com",
	1017: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte melden Sie sich erneut an und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	1018: "Sie haben die maximale Grenze zum Erstellen von Schritten erreicht",
	2000: "Wir hatten ein Problem mit dieser Anfrage. Wir wurden benachrichtigt. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2001: "Ung\u00fcltige Anmeldedaten. Ihr Konto wird nach mehreren erfolglosen Versuchen gesperrt, Sie erhalten eine E-Mail, um Ihr Konto zu entsperren, oder Sie k\u00f6nnen Ihr Passwort zur\u00fccksetzen",
	2002: "Ung\u00fcltiges oder abgelaufenes OTP",
	2003: "Hochgeladene Datei ist kein g\u00fcltiges Bild (JPG- und PNG-Dateien werden unterst\u00fctzt)",
	2004: "Sitzung abgelaufen",
	2005: "Wir konnten diesen Benutzer nicht verfolgen. Bitte aktualisieren Sie und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2006: "Die E-Mail-Adresse ist falsch. Bitte versuchen Sie es erneut.",
	2007: "Benutzerrolle ung\u00fcltig. Bitte versuchen Sie es erneut.",
	2008: "Sie m\u00fcssen einen korrekten Aufgabentyp angeben",
	2009: "Die angegebene Anwendung ist ung\u00fcltig; Es h\u00e4tte gel\u00f6scht werden k\u00f6nnen oder nie existiert",
	2010: "Ung\u00fcltige Eingabeparameter. Bitte aktualisieren Sie und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2011: "Die angegebene Organisation ist ung\u00fcltig; Es h\u00e4tte gel\u00f6scht werden k\u00f6nnen oder nie existiert",
	2012: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2013: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns dies an support@csod.com",
	2014: "Erforderlicher Parameter f\u00fcr Super Admin[organization_id]",
	2015: "Der bereitgestellte Inhalt der Bilddaten ist ung\u00fcltig. Bitte \u00fcberpr\u00fcfen Sie dies erneut und versuchen Sie es erneut. Wenn das Problem weiterhin besteht, melden Sie uns unter support@csod.com",
	2016: "Ung\u00fcltige Dom\u00e4ne",
	2017: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2018: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2019: "Was Sie suchen, existiert nicht oder wurde m\u00f6glicherweise gel\u00f6scht",
	2020: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2021: "Der Authentifizierungsserver hat beim Versuch, diese Anforderung zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2022: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Geben Sie eine g\u00fcltige Team-URL ein.",
	2023: "Der Authentifizierungsserver hat beim Versuch, diese Anforderung zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2024: "Die Dateigr\u00f6\u00dfe sollte weniger als 5 MB betragen",
	2025: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter. Geben Sie eine g\u00fcltige URL ein.",
	2026: "Das Kennwort muss mindestens 8 Zeichen enthalten, darunter mindestens einen Gro\u00df-, einen Klein- und einen numerischen Wert.",
	2027: "Ung\u00fcltiges Passwort",
	2028: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2029: "Die von Ihnen angegebene Stadt wird nicht unterst\u00fctzt",
	2030: "In der Anforderung fehlte ein oder ung\u00fcltiger Parameter",
	2031: "Der Authentifizierungsserver hat beim Versuch, diesen Parameter zu verarbeiten, einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2032: "Ung\u00fcltiger Parameter[file_id]",
	2033: "Ung\u00fcltige URL. Bitte \u00fcberpr\u00fcfen Sie es erneut und versuchen Sie es erneut.",
	2034: "Der Authentifizierungsserver hat beim Verarbeiten dieser Parameter einen unerwarteten Fehler festgestellt. Bitte melden Sie das Problem support@csod.com",
	2035: "Beim Authentifizierungsserver ist bei der Verarbeitung dieses AppKey ein unerwarteter Fehler aufgetreten. Bitte melden Sie das Problem support@csod.com",
	2036: "Der Authentifizierungsserver hat einen unerwarteten Fehler festgestellt. Bitte aktualisieren Sie diese Seite. Wenn das Problem weiterhin besteht, melden Sie das Problem support@csod.com",
	2044: "Wir scheinen die \u00dcbersetzung f\u00fcr diesen Schritt verlegt zu haben. Bitte wechseln Sie zur Standardsprache und \u00fcbersetzen Sie den Schritt erneut, oder kontaktieren Sie unseren Kundendienst f\u00fcr weitere Details.",
	2200: "Wir stie\u00dfen auf ein Problem beim Zugriff auf Audio- \/ Videosteuerelemente. Bitte \u00fcberpr\u00fcfen Sie Ihre Browsereinstellungen und versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, melden Sie uns unter support@csod.com",
	3061: "Sie k\u00f6nnen nur bis zu 5 Guide(s) anheften",
	4000: "Unterkategorie kann nicht in einem Ordner erstellt werden, wenn bereits ein Guide erstellt wurde",
	4001: "Wenn ein Benutzer bereits ein Super-Admin ist, k\u00f6nnen Sie die Benutzerrolle nicht \u00e4ndern.",
	4002: "Diese Aktion ist in einem ver\u00f6ffentlichten Guide nicht zul\u00e4ssig.",
	4003: "Gesperrter Leitfaden kann nicht ver\u00f6ffentlicht werden",
	4004: "Diese Aktion ist f\u00fcr einen ver\u00f6ffentlichten Ordner nicht zul\u00e4ssig. Bitte heben Sie die Ver\u00f6ffentlichung auf",
	4006: "Die Anwendung muss zur jeweiligen Organisation geh\u00f6ren",
	4007: "Sie sind nicht berechtigt, diese Aktion durchzuf\u00fchren",
	4008: "F\u00fcr diese Unterkategorie ist keine Aktion zul\u00e4ssig",
	4009: "Leitfaden muss ver\u00f6ffentlicht werden",
	4010: "Guide kann nicht in einem Ordner mit einer Unterkategorie erstellt werden",
	4011: "Um Schritt(e) zu erstellen, m\u00fcssen Sie dieses Handbuch entsperren",
	4012: "Um Schritt(e) zu bearbeiten, m\u00fcssen Sie dieses Handbuch entsperren",
	4013: "Um Schritt(e) zu l\u00f6schen, m\u00fcssen Sie dieses Handbuch entsperren",
	4014: "Zum Kopieren und Einf\u00fcgen von Schritt(en) m\u00fcssen Sie dieses Handbuch entsperren",
	3001: "Guide wird in K\u00fcrze f\u00fcr den Export verf\u00fcgbar sein. Um den Status zu \u00fcberpr\u00fcfen, gehen Sie zu \"Aufgabenstatus\" im Kontomen\u00fc",
	3002: "Der Upload wurde gestartet. Bitte aktualisieren oder schlie\u00dfen Sie den Browser erst, wenn der Upload abgeschlossen ist. Sie k\u00f6nnen den Importstatus \u00fcberpr\u00fcfen, sobald er abgeschlossen ist",
	3003: "Benutzer existiert bereits",
	3004: "E-Mail-ID ist bereits verifiziert",
	3005: "Diese URL steht in Konflikt mit anderen Anwendungskonfigurationen, bitte versuchen Sie, eine andere URL hinzuzuf\u00fcgen",
	3006: "Der Ordner muss zur gleichen Anwendung geh\u00f6ren",
	3007: "Dom\u00e4ne existiert bereits",
	3008: "Sie haben das maximale Limit an erstellten\/n Guide(s) erreicht",
	3009: "Umfrage ist bereits im gegebenen Leitfaden vorhanden",
	3010: "Der Schritt muss zum selben Guide geh\u00f6ren.",
	3011: "Diese Organisation wird ausgesetzt. Bitte wenden Sie sich an Ihren Administrator",
	3012: "Guide(s) m\u00fcssen zum selben Ordner geh\u00f6ren",
	3013: "Dieses Handbuch ist bereits mit dem angegebenen Objektpaar und Feldnamen vorhanden.",
	3014: "Benutzer gesperrt",
	3015: "Benutzer bereits verifiziert",
	3017: "OTP wurde erfolgreich an Ihre E-Mail-Adresse gesendet",
	3018: "Rolle ist bereits vorhanden",
	3019: "Land existiert bereits",
	3020: "Stadt existiert bereits",
	3023: "Ihre Organisation ist nicht verifiziert. F\u00fcr Hilfe wenden Sie sich bitte an support@csod.com",
	3024: "JSON-Datei ist f\u00fcr diese Organisation nicht verf\u00fcgbar",
	3025: "Bei der Authentifizierung ist ein Problem aufgetreten. Bitte versuchen Sie dies erneut. Wenn das Problem weiterhin besteht, aktualisieren Sie die Seite, und versuchen Sie es erneut.",
	3026: "JSON-Datei ist f\u00fcr dieses Handbuch nicht verf\u00fcgbar",
	3027: "Kein Schritt verf\u00fcgbar. Erstellen Sie mindestens einen Schritt zum Ver\u00f6ffentlichen des Handbuchs",
	3028: "Maximales Limit f\u00fcr Tourver\u00f6ffentlichungen erreicht",
	3047: "Ihr Konto wurde aufgrund \u00fcberm\u00e4\u00dfiger Anmeldefehler vor\u00fcbergehend gesperrt. Wir haben Ihnen eine E-Mail mit Schritten zum Entsperren gesendet. F\u00fcr weitere Unterst\u00fctzung kontaktieren Sie uns bitte unter support@csod.com",
	3033: "Ung\u00fcltige Anmeldeinformationen. Bitte wenden Sie sich an support@csod.com oder Ihren Administrator, um weitere Unterst\u00fctzung zu erhalten.",
	4020: "Ein Entwurf dieses Leitfadens existiert bereits; Mehrfachentw\u00fcrfe eines Leitfadens sind nicht zul\u00e4ssig.",
	4021: "Ung\u00fcltige Werte des Parameters [envs]",
	2054: "Ein altes und neues Passwort k\u00f6nnen nicht gleich sein",
	playNextBotTour: "N\u00E4chste Bot-Tour spielen",
	defaultBotEndingMessage: "Wir sind fertig, vielen Dank! Sonst noch was, bevor ich loslege?",
	loginNext: "Weiter",
	3068: "Ihr altes Passwort ist abgelaufen. Legen Sie ein neues Passwort f\u00FCr die Anmeldung fest.",
	includeScreen: "Screenshot hinzuf\u00FCgen",
	feedbackPlaceholder: "Haben Sie Feedback? Wir w\u00FCrden es gerne h\u00F6ren!",
	feedbackOptBtn: "Klicken Sie, um Informationen hervorzuheben oder auszublenden",
	highlight: "Markieren",
	send: "Schicken",
	done: "Erledigt",
	hide: "Verstecken"
};
/**
 * @file Defines string constants for player
 * @author Nilesh Pachpande
 */

if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};


GmCXt.playerLbls.en_US = {
	currentPage: "Current Page",
	myChat: "MyChat",
	import: "Import",
	export: "Export",
	redirectLivetour: "Play Live",
	guideNotAvailable: "Guide not available on current URL. Do you want to go to the Guide URL?",
	downloadPPT: "Download PPT",
	btnYes: "Yes",
	btnNo: "No",
	inApp: "In-App",
	live: "Live",
	resume: "Resume",
	tourCloseConfirm: "Do you really want to close this Guide?",
	notifSnoozeDonotMsg: "Please tell us if you want to watch this later or never show the notification?",
	surveyThanksMessage: "Thanks for providing your response",
	testMePassedMessage: "Congratulations! You Passed",
	testMeFailedMessage: "Oops! You Failed",
	testMeGuideEfficiency: "Test efficiency:",
	testMeGuideEffectiveness: "Test effectiveness:",
	testMeTestTime: "Test Time",
	testMeExpectedTime: "Expected Time",
	testMeStepsTaken: "Steps Taken",
	testMeExpectedSteps: "Expected Steps",
	testMeRetakeTestBtn: "Retake Test",
	testMeResultTitle: "MyTest Result",
	ConfirmIfTestMeModeRidirect: "Guide not available on current URL. Do you want to redirect to the Guide URL?",
	feedCmt: "Your feedback is valuable to us!<br> Please tell us what you thought in 500 characters or less",
	doNotShowAgain: "Do not show again",
	neverShowAgain: "Never Show Again",
	skipGuide: "Skip Guide",
	surveyErrorMsg: "Please answer at least one question",
	redirect: "Redirect",
	liveGuide: "Live Guide",
	question: "Question",
	exitGuide: "Exit Guide",
	continueGuide: "Continue Guide",
	stop: "Stop",
	characters: "Characters:",
	survey: "Survey",
	testMeStopMessage: "You are in TestMe mode, click STOP to exit",
	testMeFailedErrorMessage: "You could not reach the goal step.<br>You got {CORRECT_STEPS} steps correct out of {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Type here! Max 500 characters",
	pushTourSnoozeMsg: "This Auto Launch Tour will be snoozed for",
	of: "of",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Drag and drop this player anywhere on the page",
	dontShowEdResult: "I don't want to see this",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Close Preview",
	elmNotFound: "It seems we can't find the element for the step:",
	elmNotFoundInfo: "Ensure you're on the correct page to play this step. Also check if you can see the selected element",
	notExists: "Not Exists",
	elmNotFoundHeader: "Step element not found",
	goToStep: "Go to step",
	notFoundStep: "We couldn't find the element for step #",
	pleaseReselect: "Please try to reselect the element.",
	stepRuleMatchErr: "Configuration error: Step rules do not match",
	guideRuleMatchErr: "Configuration error: Guide rules do not match",
	stepNotFoundRedirect: "Step not found on this page. Do you wish to redirect?",
	doitForMeWarning: "DoItForMe is not available for image, video and survey steps.",
	branchStepMessagePopup: "Please select one of the tasks below to proceed",
	btnSkip: "Skip",
	kindlyHoverPopup: "Kindly hover over this element to open the popup",
	stepPlayIsdefinedPopover: "The step you are going to play is defined on the popover",
	elmNotFoundWestpac: "Step not found – This Guide will end",
	findingElementMessage: "Trying to find step. . .",
	badDomain: "Current domain and URL are not authorized to run MyGuide. Please contact your Admin for help.",
	hostJsError: "There seems to be an error on webpage. MyGuide cannot continue",
	remember: "Remember Me",
	forgotPass: "Forgot Password?",
	dontHavAcc: "Do not have an account?",
	loginTitle: "Login",
	loginOtpScreenTitle: "Verify OTP to Sign In",
	forgetPassTitl: "Reset Password",
	placeholderEmail: "Email ID",
	placeholderPassword: "Password",
	placeholderNewPassword: "New Password",
	placeholderCurrentPassword: "Current Password",
	placeholderFirstname: "First name",
	placeholderLastname: "Last name",
	placeholderPasswordC: "Confirm Password",
	btnCancel: "Cancel",
	btnPayment: "Upgrade plan",
	btnSubmit: "Submit",
	btnLogin: "Login",
	termsOfUse: "Terms of Use",
	andLabel: "and",
	policyPrivacy: "Privacy Policy",
	passwordError: "Password must be 8 digit long",
	confirmPasswordError: "Password and confirm password must be same",
	firstnameError: "Please enter a valid first name",
	lastnameError: "Please enter a valid last name",
	emailError: "Please enter a valid Email ID",
	orgError: "Please enter a valid Organization URL",
	otpError: "Please enter valid OTP",
	placeholderOtp: "Enter your OTP here",
	otpSentDesc: "If a valid email address has been provided, a reset link will be sent to you.<br>If you do not see the email in a few minutes, please check your spam folder for an email from",
	btnOtpVerify: "Verify OTP",
	alreadyHavAcc: "Already have an account?",
	smartbiteMessageError: "Please enter message",
	smartbiteLinkError: "Please enter a valid link",
	noGuidesOnThisPage: "No Guides Available on this page!",
	clickOn: "Click on ",
	contactUs: "Contact Us",
	search: "Search",
	noRecordFound: "No records found",
	category: "Folder",
	subCategory: "Sub Folder",
	confirmPasswordRequired: "Confirm Password Required",
	logInWithSSO: "Login with SSO",
	inputPlaceHolderSearch: "Search for any Guide",
	noGuideAvailableFor: "No Guide(s) were found to match your search",
	tryModifyingYourSearch: "Try modifying your search criteria",
	signInVerifyYourEmail: "This Email ID has not been verified. Please check your email for details",
	signInVerifyYourAccount: "We have sent you an email with an OTP. Please verify your account to complete the Sign In process",
	maintenanceMessage: "Maintenance in progress. Please contact us via support@csod.com",
	back: "Back",
	changePassword: "Change password",
	startTestAuto: "Start Automation Testing",
	msgPasswordChangedSuccess: "Your password has been changed successfully. <br><br> Login again to continue.",
	msgConfirmNewPasswordError: "Confirm Password must be the same as New Password",
	enterUrl: 'Enter team URL',
	dragPlaceholderDropThis: "Drop this ",
	dragPlaceholderHere: " here",
	termsOfService: "Terms",
	versionText: "Version",
	videoStepSuccessMessage: "Your step was created successfully",
	importSuccessMessage: "Guide uploaded successfully. Go to Task Status to check import status",
	worldBankHelpSupport: "Some tools, such as Tooltip(s), can only be viewed in the interface",
	helpSupport: "Help & Support",
	page: "page",
	selectAnApplication: "Select an Application",
	refresh: "Refresh",
	loginBtn: "Login",
	account: "Account",
	taskStatus: "Task status ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "First Step",
	lastStep: "Last Step",
	startTest: "Start Test",
	noInappStepInGuide: "TestMe cannot proceed since there is no inline step in this guide",
	settingBtn: "Advanced Settings",
	orgSetting: "Organization settings",
	close: "Close",
	pdf: "PDF",
	downloadPptx: "PPT",
	giphy: "GIF",
	downloadWord: "Document",
	downloadBlog: "Blog",
	downloadTxt: "Plain text",
	serviceErrorMessage: "Oops! An error occurred. Please try again after some time. You can also email us at support@csod.com for any assistance",
	guidesTab: "Guides",
	noGuideCreatedYet: "No Guide created yet!",
	noCategoryCreatedYet: "No Folder created yet!",
	chatbot: "MyChat",
	notAutorised: "You do not have the required access, please contact the Admin",
	ok: "OK",
	apiError: "Configuration error. Please contact the Admin",
	select: "Select",
	mute_unmute: "Mute/Un-Mute",
	privacyPolicy: "Privacy & Cookies",
	privacyPolicyText: "MyGuide uses cookies. If you continue, you are agreeing to our Terms and Privacy Policy and giving us consent to use cookies",
	terms: "Terms",
	westPecErrorMessage: "You are not authorised to access this application. Please sign into Westpac's network",
	noApp: "No Applications found",
	role: "Role:",
	all: "All",
	video: "Video",
	course: "Course",
	article: "Article",
	image: "Image",
	pathways: "Pathways",
	preview: "Preview",
	more: "More",
	history: "History",
	publish: "Publish",
	selectGuideLink: "Please select Guide to link",
	selectGuideBeforeSubmit: "Please select a Guide before submit",
	change: "Change",
	checkNow: "Check Now",
	minutes: "minutes",
	clickHere: "click here",
	youAlmostDone: "You're almost done!",
	setOrg: "to set up your Organization",
	apps: "Apps",
	me: "Me",
	playStep: "Play Step",
	miniPlayerHelp: "Help",
	defaultMiniPlayerHelp: "Help",
	defaultConfirmIfSlideshowOrRedirect: "Step not available on current URL.<br>Do you want to go to the Step URL or play slideshow?",
	defaultServiceErrorMessage: "Oops! An error occurred. Please try again after some time. You can also email us at support@csod.com for any assistance",
	defaultMaintenanceMessage: "Maintenance in progress. Please contact us via support@csod.com",
	userNotFollowingGuideMessage: "It looks like you're performing steps that are not part of this Guide. If you no longer wish to follow the Guide, click on Exit Guide",
	defaultUserNotFollowingGuideMessage: "It looks like you're performing steps that are not part of this Guide. If you no longer wish to follow the Guide, click on Exit Guide",
	resumeGuide: "Resume Guide",
	defaultResumeGuideMessage: "Resume Guide",
	backToLogin: "Back to Login",
	filters: "Filters",
	thisApp: "This App",
	thisWebsite: "This Website",
	maxFreeTourLimit: "Max limit of tours reached",
	passwordRegexCheck: "The password must contain a minimum of 8 characters, including at least one uppercase, one lowercase and one numeric value",
	countLimit: "99+",
	microsoftServiceKey: "Please enter your Microsoft Cognitive Services Speech subscription key",
	numberOfImgFile: "The number of image files and text files should be the same",
	availableOn: "Available on",
	tooltipUnpubWorkflowTitle: "Unpublished Workflow",
	tooltipUnpubParentWorkflowTitle: "Published Workflow, Unpublished Parent Folder(s)",
	tooltipPubParentWorkflowTitle: "Published Workflow, Published Folder",
	tooltipUnpubTooltipTitle: "Unpublished Tooltip",
	tooltipUnpubParentTooltipTitle: "Published Tooltip, Unpublished Parent Folder(s)",
	tooltipPubParentTooltipTitle: "Published Tooltip, Published Folder",
	tooltipUnpubTutorialTitle: "Unpublished Tutorial",
	tooltipUnpubParentTutorialTitle: "Published Tutorial, Unpublished Parent Folder(s)",
	tooltipPubParentTutorialTitle: "Published Tutorial, Published Folder",
	tooltipUnpubSubFolderTitle: "Unpublished Sub-folder",
	tooltipUnpubSubFolderDesc: "Use sub-folders to organize Guides",
	tooltipUnpubParentSubFolderTitle: "Published Sub-folder, Unpublished Parent Folder(s)",
	tooltipPubParentSubFolderTitle: "Published Sub-folder, Published Folder",
	tooltipPubParentSubFolderDesc: "Organizes Guides",
	exitSurvey: 'Exit Survey',
	disable: "Disable",
	instructionExitSurvey: "Exit Survey is shown when a user exits a guide before completion",
	msgVideoNotFound: "Uploading your video, please try after some time",
	msgGiphyNotFound: "Uploading your GIF, please try after some time",
	userPref: "My Preferences",
	manageAccount: "Admin portal",
	analyticsPortal: "Insights portal",
	errorInvalidUrl: "Not a valid URL",
	wbFooterText: "ITS Technical Learning",
	navigationMenu: "Navigation menu",
	clearHistory: "Clear History",
	userDeniedMessage: "User denied Camera and Microphone access permissions",
	pushNotification: "Push Notifications",
	viewDetail: "View Detail",
	contactAdmin: "Please contact support@csod.com or your Admin for further assistance",
	noAppOnDomain: "Application is not assigned for current domain ",
	noGuidesOnDomain: "No Guides found",
	apply: "Apply",
	invalidLoginCred: "Invalid login credentials. Your account will be locked after multiple unsuccessful attempts, you will receive an email to unlock your account, or you may reset your password",
	resendOTP: "Resend OTP",
	sendFeedback: 'Send Feedback',
	guideNotExist: "This Guide is not available on this page (Error: Domain mismatch) ",
	cdnAccess: "<b>We're sorry</b> <br><br>It seems there is problem with our servers.<br> We've been notified of the error and will correct it as soon as possible",
	tourPlayError: "Guide can not be played. Error while retrieving Guide details",
	playerMode: "Player mode",
	closePanel: "Close panel",
	switchCreatorMode: "Switch to Creator Mode",
	extensionContextError: "Extension context is invalidated. Please reload the page to continue",
	otpSent: "OTP has been re-sent to your email, please check your inbox",
	startOver: "Start Again",
	yesResume: "Resume",
	dontShowAgain: "Don't show again",
	notificationHeader: "You've got a notification!",
	watchLater: "Watch later",
	pushSnoozeMsg: "This notification will be snoozed for",
	showAgain: "Show again",
	noGuidesOnThisTab: "There are no notifications on this page",
	iAgree: "I Agree",
	viewMore: "View More",
	lostInternetConnection: "Lost connection to the server. Please reconnect and try again",
	next: "Next",
	recent: "Recent",
	older: "Older",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Clear",
	tooltipDontShowAgain: "Notifications won't appear anymore. To enable a notification now, hover over it and click on 'Show Again'",
	tooltipWatchLater1: "Notifications are snoozed for",
	tooltipWatchLater2: "and will appear after that. To enable a notification now, hover over it and click on 'Show Again'",
	hour: "hour",
	hours: "hours",
	insightsTracker: "Insights Tracker",
	slideshow: "SlideShow",
	autoplay: "AUTOPLAY",
	powerFormOldData: "Existing data",
	powerFormNewData: "Use this form to enter new data",
	powerFormNewDataMore: "If your existing data is not visible, please click on the arrow in the top left to view your data. The data then needs to be copied across into the permitted bulleted format.",
	powerFormTitle: "Data Entry Assistant",
	powerFormMandatory: "This is a mandatory field, max character limit ",
	belongToOtherApp: "This Guide is created on {TOURURL}, which belongs to the {APPNAME} app. Please copy this Guide in that app and try again",
	setDomain: "If you are sure that the {TOURURL} should be added in the current application domain settings, please add and try again",
	on: "ON",
	off: "OFF",
	btnPrev: "Prev",
	btnPrevious: "Previous",
	taskList: "Task List",
	unprocessedVideo: "Please wait while your video is being processed.",
	searchResult: "Search Result",
	pleaseWait: "Please Wait!",
	mediaDownloadMsg: "While we prepare your files for download",
	mediaFileNotFound: "Media file not found",
	searchInFolder: "Search in folder",
	currentPageSearchPlaceholder: "Search for Guide(s) available on current page",
	brandLogo: "Brand Logo",
	accessibility: "Accessibility",
	replay: "Replay",
	defaultGreetingMessage: "Hey! Welcome to MyGuide. How can I help you? Please keep in mind that I am a bot.",
	defaultErrorMessage: "I'm sorry, I did not understand that. Could you be more specific? ",
	greetingMessage: "Hey! Welcome to MyGuide. How can I help you? Please keep in mind that I am a bot.",
	errorMessage: "I'm sorry, I did not understand that. Could you be more specific? ",
	guideLnkToRedirect: "Use the following link to redirect to the page and play the guide",
	otpTimer: "You can try again in ",
	seconds: " seconds",
	limitWarning: "You have reached the maximum limit of unsuccessful attempts",
	403: "We ran into a problem with this request. Please try this again. If the problem persists, report to us at support@csod.com",
	405: "We ran into a problem while processing this request. Please try this again. If the problem persists, report to us at support@csod.com",
	429: "Too many requests",
	1003: "We ran into a problem during authentication. Please re-login and try again. If the problem persists, refresh the page and try again",
	1007: "We ran into a problem during authentication. Please try again. If the problem persists, report to us at support@csod.com",
	1005: "<b>We're sorry</b> <br><br>It seems there is a problem with the request or with our servers.<br> We've been notified of the error and will correct it as soon as possible",
	1009: "User email is not verified",
	1014: "Maintenance in progress. Please contact us via support@csod.com",
	1017: "We ran into a problem during authentication. Please re-login and try again. If the problem persists, report to us at support@csod.com",
	1018: "You have reached the maximum limit to creating steps",
	2000: "We ran into a problem with this request. We have been notified. Please try this again. If the problem persists, report to us at support@csod.com",
	2001: "Invalid login credentials. Your account will be locked after multiple unsuccessful attempts, you will receive an email to unlock your account, or you may reset your password",
	2002: "Invalid or expired OTP",
	2003: "Uploaded file is not a valid image (JPG and PNG files are supported)",
	2004: "Session expired",
	2005: "We could not track this user. Please refresh and try again. If the problem persists, report to us at support@csod.com",
	2006: "Email Address is incorrect. Please try again",
	2007: "User Role invalid. Please try again",
	2008: "You must specify a correct Task type",
	2009: "The given Application is invalid; it could have been deleted or never existed",
	2010: "Invalid input parameters. Please refresh and try again. If the problem persists, report to us at support@csod.com",
	2011: "The given Organization is invalid; it could have been deleted or never existed",
	2012: "There was a missing or invalid parameter in the request. Please re-check and try again. If the problem persists, report to us at support@csod.com",
	2013: "There was a missing or invalid parameter in the request. Please re-check and try again. If the problem persists, report to us at support@csod.com",
	2014: "Parameter required for Super Admin[organization_id]",
	2015: "Image Data content provided is invalid. Please re-check and try again. If the problem persists report to us at support@csod.com",
	2016: "Invalid Domain",
	2017: "There was a missing or invalid parameter in the request",
	2018: "There was a missing or invalid parameter in the request",
	2019: "What you are looking for does not exist or might have been deleted",
	2020: "There was a missing or invalid parameter in the request",
	2021: "The Authentication server encountered an unexpected error while trying to process this request. Please report the problem to support@csod.com",
	2022: "There was a missing or invalid parameter in the request. Please enter a valid Team URL",
	2023: "The Authentication server encountered an unexpected error while trying to process this request. Please report the problem to support@csod.com",
	2024: "File size should be less than 5 MB",
	2025: "There was a missing or invalid parameter in the request. Please enter a valid URL",
	2026: "The password must contain a minimum of 8 characters, including at least one uppercase, one lowercase and one numeric value",
	2027: "Invalid Password",
	2028: "There was a missing or invalid parameter in the request",
	2029: "The City you have provided is not supported",
	2030: "There was a missing or invalid parameter in the request",
	2031: "The Authentication server encountered an unexpected error while trying to process this parameter. Please report the problem to support@csod.com",
	2032: "Invalid parameter[file_id]",
	2033: "Invalid URL. Please re-check and try again",
	2034: "The Authentication server encountered an unexpected error while processing these parameters. Please report the problem to support@csod.com",
	2035: "The Authentication server encountered an unexpected error while processing this AppKey. Please report the problem to support@csod.com",
	2036: "The Authentication server encountered an unexpected error. Please refresh this page. If the problem persists, report the problem to support@csod.com",
	2044: "We seem to have misplaced the translation for this step. Please switch to Default Language and re-translate the step, or contact our customer support for further details.",
	2200: "We ran into a problem while accessing audio/video controls. Please check your browser settings and try this again. If the problem persists report to us at support@csod.com",
	3061: "You can pin up to 5 Guide(s) only",
	4000: "Sub-category cannot be created inside a Folder, if a Guide is already created",
	4001: "If a user is already a Super Admin, you cannot change the User Role",
	4002: "This action is not allowed on a published Guide",
	4003: "Locked Guide cannot be published",
	4004: "This action is not allowed on a published Folder. Please unpublish it",
	4006: "Application must belong to the given organization",
	4007: "You are not authorised to perform this action",
	4008: "Action is not allowed for this sub-category",
	4009: "Guide must be published",
	4010: "Guide cannot be created inside a folder with a sub-category",
	4011: "To create step(s), you need to unlock this Guide",
	4012: "To edit step(s), you need to unlock this Guide",
	4013: "To delete step(s), you need to unlock this Guide",
	4014: "To copy and paste step(s), you need to unlock this Guide",
	3001: "Guide will be available for export soon. To check the status, go to 'Task Status' under account menu",
	3002: "Upload started. Please do not refresh or close the browser until the upload is completed. You can check the import status once it is completed",
	3003: "User already exists",
	3004: "Email ID is already verified",
	3005: "This URL conflicts with other application configuration, please try to add any other URL",
	3006: "Folder must belong to the same application",
	3007: "Domain already exists",
	3008: "You have reached the maximum limit of created Guide(s)",
	3009: "Survey already exists in the given Guide",
	3010: "The Step must belong to the same Guide",
	3011: "This Organization is suspended. Please contact your Admin",
	3012: "Guide(s) must belong to the same folder",
	3013: "This Guide already exists with the given pair of objects and field name",
	3014: "User suspended",
	3015: "User already verified",
	3017: "OTP has been sent successfully to your email address",
	3018: "Role already exists",
	3019: "Country already exists",
	3020: "City already exists",
	3023: "Your organization is not verified. For help, please contact support@csod.com",
	3024: "JSON file is not available for this organization",
	3025: "We ran into a problem during authentication. Please try this again. If the problem persists refresh the page and try again",
	3026: "JSON file is not available for this Guide",
	3027: "No step available. Create at least one step to publish the Guide",
	3028: "Maximum tour publish limit reached",
	3047: "Your account has been temporarily locked due to excessive login failures. We have sent you an email with steps to unlock it. For more assistance, please contact us at support@csod.com",
	3033: "Invalid credentials. Please contact support@csod.com or your Admin for further assistance.",
	4020: "A draft of this Guide already exists; multiple drafts of a Guide are not permitted.",
	4021: "Invalid values of parameter [envs]",
	2054: "An old and new password can not be the same",
	playNextBotTour: "Play next bot tour",
	defaultBotEndingMessage: "We are done, thank you so much! Anything else before I kick it off?",
	startBotLbl: "Start Bot",
	includeScreen: "Include Screenshot",
	feedbackPlaceholder: "Have feedback? We’d love to hear it!",
	feedbackOptBtn: "Click to highlight or hide info",
	highlight: "Highlight",
	send: "Send",
	done: "Done",
	hide: "Hide",
	multiSelectOptionError: "Please select atleast one option",
	loginNext: "Next",
	3068: "Your old password has expired set new password for login.",
	captchaLbl: "Captcha",
	placeholderEnterCaptcha: "Enter Captcha",
	captchaError: "Please enter valid captcha",
	allGuides: "All Guides",
	helpCenter: "Help Center",
	applicationJsonError: "Application JSON file is not available for this application.",
	feedbackRequired: "Please enter your feedback.",
	default: "Default",
	feedbackImgErrorMsg: "The screenshot was unable to attached to your feedback due to a browser related issue. Please reload the page, click and open the Guide Extension from the Chrome action bar and recapture the screenshot for feedback.",
	tranportURlRedirectionConfirm: "Redirect to transport step url",
	guideContinueConfirm: "Continue with guide",
    focus: "Focus",
    autoplay: "Autoplay",
    zoomOut: "You Can not decrease more Zoom Level",
    zoomIn: "You Can not increase more Zoom Level",
    charM: "m",
    charS : "s",
	focusTooltip: "This button is functional only when the image is zoomed in.",
	startYoursmartWalkthrough: "Start adding steps!"
};

if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.es_ES = {
	currentPage: "P\u00e1gina actual",
	myChat: "mychat",
	import: "Importaci\u00f3n",
	export: "Exportar",
	redirectLivetour: "Juega en vivo",
	guideNotAvailable: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfQuieres ir a la URL de la gu\u00eda?",
	downloadPPT: "Descargar PPT",
	btnYes: "S\u00ed",
	btnNo: "No",
	inApp: "En la aplicaci\u00f3n",
	live: "Vivir",
	resume: "Reanudar",
	tourCloseConfirm: "\u00bfRealmente quieres cerrar esta Gu\u00eda?",
	notifSnoozeDonotMsg: "Por favor, d\u00edganos si desea ver esto m\u00e1s tarde o nunca mostrar la notificaci\u00f3n.",
	surveyThanksMessage: "Gracias por dar su respuesta",
	testMePassedMessage: "\u00a1Felicidades! Has pasado",
	testMeFailedMessage: "\u00a1Vaya! Fallaste",
	testMeGuideEfficiency: "Eficiencia de la prueba:",
	testMeGuideEffectiveness: "Eficacia de la prueba:",
	testMeTestTime: "Tiempo de prueba",
	testMeExpectedTime: "Tiempo esperado",
	testMeStepsTaken: "Medidas adoptadas",
	testMeExpectedSteps: "Pasos esperados",
	testMeRetakeTestBtn: "Prueba de repetici\u00f3n",
	testMeResultTitle: "Resultado de MyTest",
	ConfirmIfTestMeModeRidirect: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfDesea redirigir a la URL de la gu\u00eda?",
	feedCmt: "\u00a1Sus comentarios son valiosos para nosotros!<br> Por favor, d\u00edganos lo que piensa en 500 caracteres o menos",
	doNotShowAgain: "No volver a mostrar",
	neverShowAgain: "No volver a mostrar",
	skipGuide: "Omitir gu\u00eda",
	surveyErrorMsg: "Por favor, responda al menos una pregunta",
	redirect: "Redirigir",
	liveGuide: "Gu\u00eda en vivo",
	question: "Pregunta",
	exitGuide: "Gu\u00eda de salida",
	continueGuide: "Continuar gu\u00eda",
	stop: "Parar",
	characters: "Caracteres:",
	survey: "Encuesta",
	testMeStopMessage: "Est\u00e1 en modo TestMe, haga clic en DETENER para salir",
	testMeFailedErrorMessage: "No pudiste alcanzar el paso de la meta.<br>Obtuviste {CORRECT_STEPS} pasos correctos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "\u00a1Escribe aqu\u00ed! M\u00e1x. 500 caracteres",
	pushTourSnoozeMsg: "Este Auto Launch Tour ser\u00e1 pospuesto por",
	of: "de",
	wbMplayerTitle: "Tutoriales",
	wbDragTooltip: "Arrastre y suelte este reproductor en cualquier lugar de la p\u00e1gina",
	dontShowEdResult: "No quiero ver esto",
	mPlayerHeaderTitle: "Micro Player",
	closePreview: "Cerrar vista previa",
	elmNotFound: "Parece que no podemos encontrar el elemento para el paso:",
	elmNotFoundInfo: "Aseg\u00farese de estar en la p\u00e1gina correcta para reproducir este paso. Compruebe tambi\u00e9n si puede ver el elemento seleccionado",
	notExists: "No existe",
	elmNotFoundHeader: "Elemento de paso no encontrado",
	goToStep: "Ir al paso",
	notFoundStep: "No pudimos encontrar el elemento para el paso #",
	pleaseReselect: "Intente volver a seleccionar el elemento.",
	stepRuleMatchErr: "Error de configuraci\u00f3n: las reglas de paso no coinciden",
	guideRuleMatchErr: "Error de configuraci\u00f3n: las reglas de gu\u00eda no coinciden",
	stepNotFoundRedirect: "Paso no encontrado en esta p\u00e1gina. \u00bfDesea redirigir?",
	branchStepMessagePopup: "Seleccione una de las siguientes tareas para continuar",
	btnSkip: "Saltarse",
	kindlyHoverPopup: "Por favor, pase el cursor sobre este elemento para abrir la ventana emergente",
	stepPlayIsdefinedPopover: "El paso que vas a jugar se define en el popover",
	elmNotFoundWestpac: "Paso no encontrado: esta gu\u00eda finalizar\u00e1",
	findingElementMessage: "Tratando de encontrar el paso. . .",
	badDomain: "El dominio actual y la URL no est\u00e1n autorizados para ejecutar MyGuide. Ponte en contacto con tu administrador para obtener ayuda.",
	hostJsError: "Parece que hay un error en la p\u00e1gina web. MyGuide no puede continuar",
	remember: "Recu\u00e9rdame",
	forgotPass: "\u00bfOlvid\u00f3 su contrase\u00f1a?",
	dontHavAcc: "\u00bfNo tienes una cuenta?",
	loginTitle: "Iniciar sesi\u00f3n",
	loginOtpScreenTitle: "Comprobar OTP para iniciar sesi\u00f3n",
	forgetPassTitl: "Restablecer contrase\u00f1a",
	placeholderEmail: "ID de correo electr\u00f3nico",
	placeholderPassword: "Contrase\u00f1a",
	placeholderNewPassword: "Nueva contrase\u00f1a",
	placeholderCurrentPassword: "Contrase\u00f1a actual",
	placeholderFirstname: "Nombre",
	placeholderLastname: "Apellido",
	placeholderPasswordC: "Confirmar contrase\u00f1a",
	btnCancel: "Cancelar",
	btnPayment: "Plan de actualizaci\u00f3n",
	btnSubmit: "Enviar",
	btnLogin: "Iniciar sesi\u00f3n",
	termsOfUse: "T\u00e9rminos de uso",
	andLabel: "y",
	policyPrivacy: "Pol\u00edtica de privacidad",
	passwordError: "La contrase\u00f1a debe tener 8 d\u00edgitos",
	confirmPasswordError: "La contrase\u00f1a y la contrase\u00f1a de confirmaci\u00f3n deben ser las mismas",
	firstnameError: "Introduce un nombre v\u00e1lido",
	lastnameError: "Introduce un apellido v\u00e1lido",
	emailError: "Introduce un ID de correo electr\u00f3nico v\u00e1lido",
	orgError: "Introduce una URL de organizaci\u00f3n v\u00e1lida",
	otpError: "Introduzca OTP v\u00e1lida",
	placeholderOtp: "Ingrese su OTP aqu\u00ed",
	otpSentDesc: "Si se ha proporcionado una direcci\u00f3n de correo electr\u00f3nico v\u00e1lida, se le enviar\u00e1 un enlace de restablecimiento.<br>Si no ve el correo electr\u00f3nico en unos minutos, revise su carpeta de correo no deseado para ver si hay un correo electr\u00f3nico de",
	btnOtpVerify: "Verificar OTP",
	alreadyHavAcc: "\u00bfYa tienes una cuenta?",
	smartbiteMessageError: "Por favor, introduzca el mensaje",
	smartbiteLinkError: "Introduce un enlace v\u00e1lido",
	noGuidesOnThisPage: "\u00a1No hay gu\u00edas disponibles en esta p\u00e1gina!",
	clickOn: "Haga clic en ",
	contactUs: "Cont\u00e1ctenos",
	search: "Buscar",
	noRecordFound: "No se encontraron registros",
	category: "Carpeta",
	subCategory: "Subcarpeta",
	confirmPasswordRequired: "Confirmar contrase\u00f1a requerida",
	logInWithSSO: "Iniciar sesi\u00f3n con SSO",
	inputPlaceHolderSearch: "Busca cualquier Gu\u00eda",
	noGuideAvailableFor: "No se encontraron gu\u00edas que coincidan con su b\u00fasqueda",
	tryModifyingYourSearch: "Prueba a modificar los criterios de b\u00fasqueda",
	signInVerifyYourEmail: "Este ID de correo electr\u00f3nico no se ha verificado. Por favor, revise su correo electr\u00f3nico para m\u00e1s detalles",
	signInVerifyYourAccount: "Le hemos enviado un correo electr\u00f3nico con una OTP. Verifica tu cuenta para completar el proceso de inicio de sesi\u00f3n",
	maintenanceMessage: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	back: "Atr\u00e1s",
	changePassword: "Cambiar contrase\u00f1a",
	startTestAuto: "Iniciar pruebas de automatizaci\u00f3n",
	msgPasswordChangedSuccess: "Su contrase\u00f1a se ha cambiado correctamente",
	msgConfirmNewPasswordError: "Confirmar contrase\u00f1a debe ser el mismo que Nueva contrase\u00f1a",
	enterUrl: "Introducir la URL del equipo",
	dragPlaceholderDropThis: "Suelta esto ",
	dragPlaceholderHere: " aqu\u00ed",
	termsOfService: "Letra chica",
	versionText: "Versi\u00f3n",
	videoStepSuccessMessage: "Su paso se cre\u00f3 correctamente",
	importSuccessMessage: "Gu\u00eda cargada correctamente. Vaya a Estado de la tarea para comprobar el estado de importaci\u00f3n",
	worldBankHelpSupport: "Algunas herramientas, como la informaci\u00f3n sobre herramientas, solo se pueden ver en la interfaz",
	helpSupport: "Ayuda y soporte",
	page: "p\u00e1gina",
	selectAnApplication: "Seleccione una aplicaci\u00f3n",
	refresh: "Actualizar",
	loginBtn: "Iniciar sesi\u00f3n",
	account: "Cuenta",
	taskStatus: "Estado de la tarea ",
	logoutBtn: "Cerrar sesi\u00f3n",
	app: "Aplicaci\u00f3n:",
	firstStep: "Primer paso",
	lastStep: "\u00daltimo paso",
	startTest: "Iniciar prueba",
	noInappStepInGuide: "TestMe no puede continuar ya que no hay ning\u00fan paso en l\u00ednea en esta gu\u00eda",
	settingBtn: "Configuraci\u00f3n avanzada",
	orgSetting: "Configuraci\u00f3n de la organizaci\u00f3n",
	close: "Cerrar",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blog",
	downloadTxt: "Texto sin formato",
	serviceErrorMessage: "\u00a1Vaya! Se ha producido un error. Int\u00e9ntalo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para cualquier ayuda.",
	guidesTab: "Gu\u00edas",
	noGuideCreatedYet: "\u00a1A\u00fan no se ha creado ninguna gu\u00eda!",
	noCategoryCreatedYet: "\u00a1A\u00fan no se ha creado ninguna carpeta!",
	chatbot: "mychat",
	notAutorised: "No tiene el acceso requerido, comun\u00edquese con el administrador",
	ok: "De acuerdo",
	apiError: "Error de configuraci\u00f3n. Por favor, p\u00f3ngase en contacto con el administrador",
	select: "Escoger",
	mute_unmute: "Silenciar\/Dessilenciar",
	privacyPolicy: "Privacidad & cookies",
	privacyPolicyText: "MyGuide utiliza cookies. Si contin\u00faa, acepta nuestros T\u00e9rminos y Pol\u00edtica de privacidad y nos da su consentimiento para usar cookies.",
	terms: "Letra chica",
	westPecErrorMessage: "No est\u00e1 autorizado a acceder a esta aplicaci\u00f3n. Inicie sesi\u00f3n en la red de Westpac",
	noApp: "No se han encontrado aplicaciones",
	role: "Rol:",
	all: "Todo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Art\u00edculo",
	image: "Imagen",
	pathways: "V\u00edas",
	preview: "Vista previa",
	more: "M\u00e1s",
	history: "Historia",
	publish: "Publicar",
	selectGuideLink: "Por favor, seleccione Gu\u00eda para el enlace",
	selectGuideBeforeSubmit: "Por favor, seleccione una Gu\u00eda antes de enviar",
	change: "Cambio",
	checkNow: "Comprobar ahora",
	minutes: "acta",
	clickHere: "haga clic aqu\u00ed",
	youAlmostDone: "\u00a1Ya casi terminaste!",
	setOrg: "para configurar su organizaci\u00f3n",
	apps: "Aplicaciones",
	me: "Me",
	playStep: "Paso de juego",
	miniPlayerHelp: "Ayuda",
	defaultMiniPlayerHelp: "Ayuda",
	defaultConfirmIfSlideshowOrRedirect: "Paso no disponible en la URL actual.<br>\u00bfDesea ir a la URL del paso o reproducir presentaci\u00f3n de diapositivas?",
	defaultServiceErrorMessage: "\u00a1Vaya! Se ha producido un error. Int\u00e9ntalo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para cualquier ayuda.",
	defaultMaintenanceMessage: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	userNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Salir de la Gu\u00eda",
	defaultUserNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Salir de la Gu\u00eda",
	resumeGuide: "Gu\u00eda de curr\u00edculum",
	defaultResumeGuideMessage: "Gu\u00eda de curr\u00edculum",
	backToLogin: "Volver al inicio de sesi\u00f3n",
	filters: "Filtros",
	thisApp: "Esta aplicaci\u00f3n",
	thisWebsite: "Este sitio web",
	maxFreeTourLimit: "L\u00edmite m\u00e1ximo de tours alcanzado",
	passwordRegexCheck: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos una may\u00fascula, una min\u00fascula y un valor num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Escriba su clave de suscripci\u00f3n de voz de Microsoft Cognitive Services",
	numberOfImgFile: "El n\u00famero de archivos de imagen y archivos de texto debe ser el mismo",
	availableOn: "Disponible en",
	tooltipUnpubWorkflowTitle: "Flujo de trabajo no publicado",
	tooltipUnpubParentWorkflowTitle: "Flujo de trabajo publicado, carpetas principales no publicadas",
	tooltipPubParentWorkflowTitle: "Flujo de trabajo publicado, carpeta publicada",
	tooltipUnpubTooltipTitle: "Informaci\u00f3n sobre herramientas no publicada",
	tooltipUnpubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpetas principales no publicadas",
	tooltipPubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpeta publicada",
	tooltipUnpubTutorialTitle: "Tutorial in\u00e9dito",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, carpetas principales no publicadas",
	tooltipPubParentTutorialTitle: "Tutorial publicado, Carpeta publicada",
	tooltipUnpubSubFolderTitle: "Subcarpeta no publicada",
	tooltipUnpubSubFolderDesc: "Usar subcarpetas para organizar las gu\u00edas",
	tooltipUnpubParentSubFolderTitle: "Subcarpeta publicada, carpetas principales no publicadas",
	tooltipPubParentSubFolderTitle: "Subcarpeta publicada, carpeta publicada",
	tooltipPubParentSubFolderDesc: "Organiza Gu\u00edas",
	exitSurvey: "Encuesta de salida",
	disable: "Inutilizar",
	instructionExitSurvey: "La encuesta de salida se muestra cuando un usuario sale de una gu\u00eda antes de completarla.",
	msgVideoNotFound: "Subiendo su video, int\u00e9ntelo despu\u00e9s de un tiempo",
	msgGiphyNotFound: "Subiendo su GIF, int\u00e9ntelo despu\u00e9s de un tiempo",
	userPref: "Mis preferencias",
	manageAccount: "Portal de administraci\u00f3n",
	analyticsPortal: "Portal de estad\u00edsticas",
	errorInvalidUrl: "No es una URL v\u00e1lida",
	wbFooterText: "Aprendizaje t\u00e9cnico de ITS",
	navigationMenu: "Men\u00fa de navegaci\u00f3n",
	clearHistory: "Borrar historial",
	userDeniedMessage: "Permisos de acceso a la c\u00e1mara y al micr\u00f3fono denegados por el usuario",
	pushNotification: "Notificaciones push",
	viewDetail: "Ver detalle",
	contactAdmin: "P\u00f3ngase en contacto con support@csod.com o con su administrador para obtener m\u00e1s ayuda.",
	noAppOnDomain: "La aplicaci\u00f3n no est\u00e1 asignada para el dominio actual ",
	noGuidesOnDomain: "No se han encontrado gu\u00edas",
	apply: "Aplicar",
	invalidLoginCred: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a.",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar comentarios",
	guideNotExist: "Esta gu\u00eda no est\u00e1 disponible en esta p\u00e1gina (Error: no coincide el dominio) ",
	cdnAccess: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	tourPlayError: "Gu\u00eda no se puede jugar. Error al recuperar los detalles de la gu\u00eda",
	playerMode: "Modo de jugador",
	closePanel: "Cerrar panel",
	switchCreatorMode: "Cambiar al modo Creador",
	extensionContextError: "El contexto de extensi\u00f3n est\u00e1 invalidado. Por favor, vuelva a cargar la p\u00e1gina para continuar",
	otpSent: "OTP ha sido reenviado a su correo electr\u00f3nico, por favor revise su bandeja de entrada",
	startOver: "Empezar de nuevo",
	yesResume: "Reanudar",
	dontShowAgain: "No volver a mostrar",
	notificationHeader: "\u00a1Tienes una notificaci\u00f3n!",
	watchLater: "Ver m\u00e1s tarde",
	pushSnoozeMsg: "Esta notificaci\u00f3n se pospondr\u00e1 por",
	showAgain: "Mostrar de nuevo",
	noGuidesOnThisTab: "No hay notificaciones en esta p\u00e1gina",
	iAgree: "De acuerdo",
	viewMore: "Ver m\u00e1s",
	lostInternetConnection: "Se ha perdido la conexi\u00f3n con el servidor. Vuelva a conectarse e int\u00e9ntelo de nuevo",
	next: "Pr\u00f3ximo",
	recent: "Reciente",
	older: "Mayor",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Claro",
	tooltipDontShowAgain: "Las notificaciones ya no aparecer\u00e1n. Para habilitar una notificaci\u00f3n ahora, pase el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	tooltipWatchLater1: "Las notificaciones se posponen para",
	tooltipWatchLater2: "y aparecer\u00e1 despu\u00e9s de eso. Para habilitar una notificaci\u00f3n ahora, pase el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	hour: "hora",
	hours: "horas",
	insightsTracker: "Rastreador de estad\u00edsticas",
	slideshow: "Presentaci\u00f3n de diapositivas",
	autoplay: "REPRODUCCI\u00d3N AUTOM\u00c1TICA",
	powerFormOldData: "Datos existentes",
	powerFormNewData: "Utilice este formulario para introducir nuevos datos",
	powerFormNewDataMore: "Si sus datos existentes no son visibles, haga clic en la flecha en la parte superior izquierda para ver sus datos. A continuaci\u00f3n, los datos deben copiarse en el formato con vi\u00f1etas permitido.",
	powerFormTitle: "Asistente de entrada de datos",
	powerFormMandatory: "Este es un campo obligatorio, l\u00edmite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Esta gu\u00eda se crea en {TOURURL}, que pertenece a la aplicaci\u00f3n {APPNAME}. Copie esta gu\u00eda en esa aplicaci\u00f3n e int\u00e9ntelo de nuevo",
	setDomain: "Si est\u00e1 seguro de que {TOURURL} debe agregarse en la configuraci\u00f3n actual del dominio de la aplicaci\u00f3n, agregue e int\u00e9ntelo de nuevo",
	on: "EN",
	off: "APAGADO",
	btnPrev: "Prev",
	btnPrevious: "Anterior",
	taskList: "Lista de tareas",
	unprocessedVideo: "Espere mientras se procesa su video.",
	searchResult: "Resultado de la b\u00fasqueda",
	pleaseWait: "\u00a1Espera!",
	mediaDownloadMsg: "Mientras preparamos sus archivos para su descarga",
	mediaFileNotFound: "Archivo multimedia no encontrado",
	searchInFolder: "Buscar en carpeta",
	currentPageSearchPlaceholder: "Buscar gu\u00eda(s) disponible(s) en la p\u00e1gina actual",
	brandLogo: "Logotipo de la marca",
	accessibility: "Accesibilidad",
	replay: "Repetir",
	defaultGreetingMessage: "\u00a1Eh! Bienvenido a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, tenga en cuenta que soy un bot.",
	defaultErrorMessage: "Lo siento, no entend\u00ed eso. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	defaultEndMessage: "Hemos terminado, \u00a1muchas gracias!",
	greetingMessage: "\u00a1Eh! Bienvenido a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, tenga en cuenta que soy un bot.",
	errorMessage: "Lo siento, no entend\u00ed eso. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	endMessage: "Hemos terminado, \u00a1muchas gracias!",
	guideLnkToRedirect: "Utilice el siguiente enlace para redirigir a la p\u00e1gina y reproducir la gu\u00eda",
	otpTimer: "Puedes volver a intentarlo en ",
	seconds: " sobras",
	limitWarning: "Has alcanzado el l\u00edmite m\u00e1ximo de intentos fallidos",
	403: "Nos encontramos con un problema con esta solicitud. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	405: "Nos encontramos con un problema al procesar esta solicitud. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	429: "Demasiadas solicitudes",
	1003: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n e int\u00e9ntelo de nuevo. Si el problema persiste, actualice la p\u00e1gina e int\u00e9ntelo de nuevo",
	1007: "Nos encontramos con un problema durante la autenticaci\u00f3n. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	1005: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con la solicitud o con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	1009: "El correo electr\u00f3nico del usuario no est\u00e1 verificado",
	1014: "Mantenimiento en curso. Por favor, p\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	1017: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	1018: "Ha alcanzado el l\u00edmite m\u00e1ximo para crear pasos",
	2000: "Nos encontramos con un problema con esta solicitud. Hemos sido notificados. Int\u00e9ntalo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2001: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a.",
	2002: "OTP no v\u00e1lida o caducada",
	2003: "El archivo cargado no es una imagen v\u00e1lida (se admiten archivos JPG y PNG)",
	2004: "Sesi\u00f3n caducada",
	2005: "No pudimos rastrear a este usuario. Actualice e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2006: "La direcci\u00f3n de correo electr\u00f3nico es incorrecta. Int\u00e9ntalo de nuevo",
	2007: "Rol de usuario no v\u00e1lido. Int\u00e9ntalo de nuevo",
	2008: "Debe especificar un tipo de tarea correcto",
	2009: "La Aplicaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haberse eliminado o nunca existi\u00f3",
	2010: "Par\u00e1metros de entrada no v\u00e1lidos. Actualice e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2011: "La organizaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haberse eliminado o nunca existi\u00f3",
	2012: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2013: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2014: "Par\u00e1metro requerido para Super Admin[organization_id]",
	2015: "El contenido de los datos de imagen proporcionado no es v\u00e1lido. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	2016: "Dominio no v\u00e1lido",
	2017: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2018: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2019: "Lo que est\u00e1 buscando no existe o podr\u00eda haber sido eliminado",
	2020: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2021: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2022: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduce una URL de equipo v\u00e1lida",
	2023: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2024: "El tama\u00f1o del archivo debe ser inferior a 5 MB",
	2025: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduce una URL v\u00e1lida",
	2026: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos una may\u00fascula, una min\u00fascula y un valor num\u00e9rico",
	2027: "Contrase\u00f1a no v\u00e1lida",
	2028: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2029: "La ciudad que ha proporcionado no es compatible",
	2030: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2031: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar este par\u00e1metro. Por favor, informe del problema a support@csod.com",
	2032: "Par\u00e1metro no v\u00e1lido[file_id]",
	2033: "URL no v\u00e1lida. Vuelva a comprobarlo e int\u00e9ntelo de nuevo",
	2034: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar estos par\u00e1metros. Por favor, informe del problema a support@csod.com",
	2035: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar esta AppKey. Por favor, informe del problema a support@csod.com",
	2036: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado. Por favor, actualice esta p\u00e1gina. Si el problema persiste, inf\u00f3rmelo a support@csod.com",
	2044: "Parece que hemos extraviado la traducci\u00f3n para este paso. Cambie al idioma predeterminado y vuelva a traducir el paso, o p\u00f3ngase en contacto con nuestro servicio de atenci\u00f3n al cliente para obtener m\u00e1s detalles.",
	2200: "Nos encontramos con un problema al acceder a los controles de audio \/ video. Compruebe la configuraci\u00f3n de su navegador e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos en support@csod.com",
	3061: "Solo puedes fijar hasta 5 gu\u00eda(s)",
	4000: "La subcategor\u00eda no se puede crear dentro de una carpeta, si ya se ha creado una Gu\u00eda",
	4001: "Si un usuario ya es superadministrador, no puede cambiar el rol de usuario",
	4002: "Esta acci\u00f3n no est\u00e1 permitida en una Gu\u00eda publicada",
	4003: "No se puede publicar la gu\u00eda bloqueada",
	4004: "Esta acci\u00f3n no est\u00e1 permitida en una carpeta publicada. Por favor, anule su publicaci\u00f3n",
	4006: "La solicitud debe pertenecer a la organizaci\u00f3n dada",
	4007: "Usted no est\u00e1 autorizado a realizar esta acci\u00f3n",
	4008: "No se permite la acci\u00f3n para esta subcategor\u00eda",
	4009: "La gu\u00eda debe ser publicada",
	4010: "La gu\u00eda no se puede crear dentro de una carpeta con una subcategor\u00eda",
	4011: "Para crear paso(s), debe desbloquear esta Gu\u00eda",
	4012: "Para editar el paso (s), debe desbloquear esta Gu\u00eda",
	4013: "Para eliminar paso(s), debe desbloquear esta Gu\u00eda",
	4014: "Para copiar y pegar paso(s), debe desbloquear esta Gu\u00eda",
	3001: "La gu\u00eda estar\u00e1 disponible para la exportaci\u00f3n pronto. Para verificar el estado, vaya a 'Estado de la tarea' en el men\u00fa de la cuenta",
	3002: "Carga iniciada. No actualice ni cierre el navegador hasta que se complete la carga. Puede verificar el estado de importaci\u00f3n una vez que se haya completado",
	3003: "El usuario ya existe",
	3004: "El ID de correo electr\u00f3nico ya est\u00e1 verificado",
	3005: "Esta URL entra en conflicto con otra configuraci\u00f3n de la aplicaci\u00f3n, intente agregar cualquier otra URL",
	3006: "La carpeta debe pertenecer a la misma aplicaci\u00f3n",
	3007: "El dominio ya existe",
	3008: "Ha alcanzado el l\u00edmite m\u00e1ximo de gu\u00eda(s) creada(s)",
	3009: "La encuesta ya existe en la Gu\u00eda dada",
	3010: "El paso debe pertenecer a la misma Gu\u00eda",
	3011: "Esta Organizaci\u00f3n queda suspendida. Ponte en contacto con tu administrador",
	3012: "Las gu\u00edas deben pertenecer a la misma carpeta",
	3013: "Esta gu\u00eda ya existe con el par de objetos y el nombre de campo dados",
	3014: "Usuario suspendido",
	3015: "Usuario ya verificado",
	3017: "OTP se ha enviado correctamente a su direcci\u00f3n de correo electr\u00f3nico",
	3018: "El rol ya existe",
	3019: "El pa\u00eds ya existe",
	3020: "La ciudad ya existe",
	3023: "Su organizaci\u00f3n no est\u00e1 verificada. Para obtener ayuda, p\u00f3ngase en contacto con support@csod.com",
	3024: "El archivo JSON no est\u00e1 disponible para esta organizaci\u00f3n",
	3025: "Nos encontramos con un problema durante la autenticaci\u00f3n. Int\u00e9ntalo de nuevo. Si el problema persiste, actualice la p\u00e1gina e int\u00e9ntelo de nuevo",
	3026: "El archivo JSON no est\u00e1 disponible para esta gu\u00eda",
	3027: "No hay ning\u00fan paso disponible. Crear al menos un paso para publicar la Gu\u00eda",
	3028: "Se ha alcanzado el l\u00edmite m\u00e1ximo de publicaci\u00f3n de giras",
	3047: "Su cuenta se ha bloqueado temporalmente debido a errores de inicio de sesi\u00f3n excesivos. Le hemos enviado un correo electr\u00f3nico con los pasos para desbloquearlo. Para obtener m\u00e1s ayuda, p\u00f3ngase en contacto con nosotros en support@csod.com",
	3033: "Credenciales no v\u00e1lidas. P\u00f3ngase en contacto con support@csod.com o con su administrador para obtener m\u00e1s ayuda.",
	4020: "Ya existe un proyecto de esta Gu\u00eda; no se permiten los borradores m\u00faltiples de una gu\u00eda.",
	4021: "Valores no v\u00e1lidos del par\u00e1metro [envs]",
	2054: "Una contrase\u00f1a antigua y nueva no puede ser la misma",
	playNextBotTour: "Reproducir el pr\u00F3ximo tour de bots",
	defaultBotEndingMessage: "Ya hemos terminado, \u00A1muchas gracias! \u00BFAlgo m\u00E1s antes de empezar?",
	loginNext: "Pr\u00f3ximo",
	3068: "Su contrase\u00F1a anterior ha caducado establezca una nueva contrase\u00F1a para iniciar sesi\u00F3n.",
	includeScreen: "Incluir captura de pantalla",
	feedbackPlaceholder: "\u00BFTiene comentarios? \u00A1Nos encantar\u00EDa escucharlo!",
	feedbackOptBtn: "Haz clic para resaltar u ocultar informaci\u00F3n",
	highlight: "Destacar",
	send: "Enviar",
	done: "Hecho",
	hide: "Esconder"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.es_MX = {
	currentPage: "P\u00e1gina actual",
	myChat: "MyChat (en ingl\u00e9s)",
	import: "Importaci\u00f3n",
	export: "Exportar",
	redirectLivetour: "Juega en vivo",
	guideNotAvailable: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfQuieres ir a la URL de la Gu\u00eda?",
	downloadPPT: "Descargar PPT",
	btnYes: "S\u00ed",
	btnNo: "No",
	inApp: "En la aplicaci\u00f3n",
	live: "Vivir",
	resume: "Reanudar",
	tourCloseConfirm: "\u00bfDe verdad quieres cerrar esta Gu\u00eda?",
	notifSnoozeDonotMsg: "Por favor, d\u00edganos si desea ver esto m\u00e1s tarde o nunca mostrar la notificaci\u00f3n.",
	surveyThanksMessage: "Gracias por darnos su respuesta",
	testMePassedMessage: "\u00a1Felicidades! t\u00fa pasaste",
	testMeFailedMessage: "\u00a1Vaya! Has fracasado",
	testMeGuideEfficiency: "Eficacia de la prueba:",
	testMeGuideEffectiveness: "Eficacia de la prueba:",
	testMeTestTime: "Tiempo de prueba",
	testMeExpectedTime: "Tiempo esperado",
	testMeStepsTaken: "Medidas adoptadas",
	testMeExpectedSteps: "Pasos esperados",
	testMeRetakeTestBtn: "Repetir la prueba",
	testMeResultTitle: "Resultado de MyTest",
	ConfirmIfTestMeModeRidirect: "La gu\u00eda no est\u00e1 disponible en la URL actual. \u00bfQuieres redirigir a la URL de la Gu\u00eda?",
	feedCmt: "\u00a1Sus comentarios son valiosos para nosotros!<br> Por favor, d\u00edganos lo que pens\u00f3 en 500 caracteres o menos",
	doNotShowAgain: "No volver a mostrar",
	neverShowAgain: "No volver a mostrar",
	skipGuide: "Saltar gu\u00eda",
	surveyErrorMsg: "Por favor, responda al menos una pregunta",
	redirect: "Redirigir",
	liveGuide: "Gu\u00eda en vivo",
	question: "Pregunta",
	exitGuide: "Gu\u00eda de salida",
	continueGuide: "Continuar Gu\u00eda",
	stop: "Parar",
	characters: "Caracteres:",
	survey: "Encuesta",
	testMeStopMessage: "Est\u00e1 en modo TestMe, haga clic en STOP para salir",
	testMeFailedErrorMessage: "No pod\u00edas llegar al paso de la meta.<br>Tienes {CORRECT_STEPS} pasos correctos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "\u00a1Escribe aqu\u00ed! M\u00e1ximo 500 caracteres",
	pushTourSnoozeMsg: "Este Tour de Lanzamiento Autom\u00e1tico ser\u00e1 dormido por",
	of: "de",
	wbMplayerTitle: "Tutoriales",
	wbDragTooltip: "Arrastra y suelta este reproductor en cualquier parte de la p\u00e1gina",
	dontShowEdResult: "No quiero ver esto",
	mPlayerHeaderTitle: "Micro Reproductor",
	closePreview: "Cerrar vista previa",
	elmNotFound: "Parece que no podemos encontrar el elemento para el paso:",
	elmNotFoundInfo: "Aseg\u00farate de estar en la p\u00e1gina correcta para reproducir este paso. Compruebe tambi\u00e9n si puede ver el elemento seleccionado",
	notExists: "No existe",
	elmNotFoundHeader: "No se encontr\u00f3 el elemento Step",
	goToStep: "Ir al paso",
	notFoundStep: "No pudimos encontrar el elemento para el paso #",
	pleaseReselect: "Intente volver a seleccionar el elemento.",
	stepRuleMatchErr: "Error de configuraci\u00f3n: Las reglas de paso no coinciden",
	guideRuleMatchErr: "Error de configuraci\u00f3n: Las reglas de Guide no coinciden",
	stepNotFoundRedirect: "Paso no encontrado en esta p\u00e1gina. \u00bfDesea redirigir?",
	doitForMeWarning: "DoItForMe no est\u00e1 disponible para pasos de imagen, v\u00eddeo y encuesta.",
	branchStepMessagePopup: "Seleccione una de las siguientes tareas para continuar",
	btnSkip: "Saltarse",
	kindlyHoverPopup: "Por favor, coloque el cursor sobre este elemento para abrir la ventana emergente",
	stepPlayIsdefinedPopover: "El paso que vas a reproducir se define en la ventana emergente",
	elmNotFoundWestpac: "Paso no encontrado: esta gu\u00eda finalizar\u00e1",
	findingElementMessage: "Tratando de encontrar el paso. . .",
	badDomain: "El dominio y la URL actuales no est\u00e1n autorizados para ejecutar MyGuide. Ponte en contacto con tu administrador para obtener ayuda.",
	hostJsError: "Parece que hay un error en la p\u00e1gina web. MyGuide no puede continuar",
	remember: "Recu\u00e9rdame",
	forgotPass: "\u00bfOlvid\u00f3 su contrase\u00f1a?",
	dontHavAcc: "\u00bfNo tienes una cuenta?",
	loginTitle: "Iniciar sesi\u00f3n",
	loginOtpScreenTitle: "Verificaci\u00f3n de OTP para iniciar sesi\u00f3n",
	forgetPassTitl: "Restablecer contrase\u00f1a",
	placeholderEmail: "ID de correo electr\u00f3nico",
	placeholderPassword: "Contrase\u00f1a",
	placeholderNewPassword: "Nueva contrase\u00f1a",
	placeholderCurrentPassword: "Contrase\u00f1a actual",
	placeholderFirstname: "Nombre",
	placeholderLastname: "Apellido",
	placeholderPasswordC: "Confirmar contrase\u00f1a",
	btnCancel: "Cancelar",
	btnPayment: "Plan de actualizaci\u00f3n",
	btnSubmit: "Enviar",
	btnLogin: "Iniciar sesi\u00f3n",
	termsOfUse: "Condiciones de uso",
	andLabel: "y",
	policyPrivacy: "Pol\u00edtica de privacidad",
	passwordError: "La contrase\u00f1a debe tener 8 d\u00edgitos",
	confirmPasswordError: "La contrase\u00f1a y la contrase\u00f1a de confirmaci\u00f3n deben ser las mismas",
	firstnameError: "Por favor, introduzca un nombre de pila v\u00e1lido",
	lastnameError: "Por favor, introduzca un apellido v\u00e1lido",
	emailError: "Ingrese una identificaci\u00f3n de correo electr\u00f3nico v\u00e1lida",
	orgError: "Introduzca una URL de organizaci\u00f3n v\u00e1lida",
	otpError: "Introduzca una OTP v\u00e1lida",
	placeholderOtp: "Ingresa tu OTP aqu\u00ed",
	otpSentDesc: "Si se ha proporcionado una direcci\u00f3n de correo electr\u00f3nico v\u00e1lida, se le enviar\u00e1 un enlace de restablecimiento.<br>Si no ve el correo electr\u00f3nico en unos minutos, revise su carpeta de correo no deseado para ver si hay un correo electr\u00f3nico de",
	btnOtpVerify: "Verificaci\u00f3n de OTP",
	alreadyHavAcc: "\u00bfYa tienes una cuenta?",
	smartbiteMessageError: "Por favor, introduzca el mensaje",
	smartbiteLinkError: "Por favor, introduzca un enlace v\u00e1lido",
	noGuidesOnThisPage: "\u00a1No hay gu\u00edas disponibles en esta p\u00e1gina!",
	clickOn: "Haga clic en ",
	contactUs: "Cont\u00e1ctenos",
	search: "Buscar",
	noRecordFound: "No se han encontrado registros",
	category: "Carpeta",
	subCategory: "Sub Carpeta",
	confirmPasswordRequired: "Confirmar contrase\u00f1a requerida",
	logInWithSSO: "Iniciar sesi\u00f3n con SSO",
	inputPlaceHolderSearch: "Buscar cualquier gu\u00eda",
	noGuideAvailableFor: "No se ha encontrado ninguna gu\u00eda(s) que coincida con su b\u00fasqueda",
	tryModifyingYourSearch: "Intenta modificar tus criterios de b\u00fasqueda",
	signInVerifyYourEmail: "Este ID de correo electr\u00f3nico no ha sido verificado. Por favor, revise su correo electr\u00f3nico para obtener m\u00e1s detalles",
	signInVerifyYourAccount: "Le hemos enviado un correo electr\u00f3nico con una OTP. Verifique su cuenta para completar el proceso de inicio de sesi\u00f3n",
	maintenanceMessage: "Mantenimiento en curso. P\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	back: "Atr\u00e1s",
	changePassword: "Cambiar contrase\u00f1a",
	startTestAuto: "Iniciar pruebas de automatizaci\u00f3n",
	msgPasswordChangedSuccess: "Su contrase\u00f1a se ha cambiado con \u00e9xito. <br><br> Vuelva a iniciar sesi\u00f3n para continuar.",
	msgConfirmNewPasswordError: "Confirmar contrase\u00f1a debe ser la misma que Nueva contrase\u00f1a",
	enterUrl: "Introduzca la URL del equipo",
	dragPlaceholderDropThis: "Suelta esto ",
	dragPlaceholderHere: " aqu\u00ed",
	termsOfService: "Letra chica",
	versionText: "Versi\u00f3n",
	videoStepSuccessMessage: "El paso se ha creado con \u00e9xito",
	importSuccessMessage: "La gu\u00eda se ha cargado correctamente. Vaya a Estado de la tarea para comprobar el estado de la importaci\u00f3n",
	worldBankHelpSupport: "Algunas herramientas, como la informaci\u00f3n sobre herramientas, solo se pueden ver en la interfaz",
	helpSupport: "Ayuda y soporte",
	page: "p\u00e1gina",
	selectAnApplication: "Seleccione una aplicaci\u00f3n",
	refresh: "Actualizar",
	loginBtn: "Iniciar sesi\u00f3n",
	account: "Cuenta",
	taskStatus: "Estado de la tarea ",
	logoutBtn: "Cerrar sesi\u00f3n",
	app: "Aplicaci\u00f3n:",
	firstStep: "Primer paso",
	lastStep: "\u00daltimo paso",
	startTest: "Iniciar prueba",
	noInappStepInGuide: "TestMe no puede continuar ya que no hay ning\u00fan paso en l\u00ednea en esta gu\u00eda",
	settingBtn: "Ajustes avanzados",
	orgSetting: "Configuraci\u00f3n de la organizaci\u00f3n",
	close: "Cerrar",
	pdf: "PDF",
	downloadPptx: "PPT",
	giphy: "GIF",
	downloadWord: "Documento",
	downloadBlog: "Blog",
	downloadTxt: "Texto sin formato",
	serviceErrorMessage: "\u00a1Vaya! Se ha producido un error. Por favor, int\u00e9ntelo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para obtener ayuda",
	guidesTab: "Gu\u00edas",
	noGuideCreatedYet: "\u00a1A\u00fan no se ha creado ninguna gu\u00eda!",
	noCategoryCreatedYet: "\u00a1A\u00fan no se ha creado ninguna carpeta!",
	chatbot: "MyChat (en ingl\u00e9s)",
	notAutorised: "No tiene el acceso necesario, p\u00f3ngase en contacto con el administrador",
	ok: "De acuerdo",
	apiError: "Error de configuraci\u00f3n. P\u00f3ngase en contacto con el administrador",
	select: "Escoger",
	mute_unmute: "Mute\/Un-Mute",
	privacyPolicy: "Privacidad & cookies",
	privacyPolicyText: "MyGuide utiliza cookies. Si contin\u00faas, aceptas nuestros T\u00e9rminos y Pol\u00edtica de Privacidad y nos das tu consentimiento para usar cookies",
	terms: "Letra chica",
	westPecErrorMessage: "Usted no est\u00e1 autorizado a acceder a esta aplicaci\u00f3n. Por favor, reg\u00edstrese en la red de Westpac",
	noApp: "No se han encontrado aplicaciones",
	role: "Rol:",
	all: "Todo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Art\u00edculo",
	image: "Imagen",
	pathways: "V\u00edas",
	preview: "Vista previa",
	more: "M\u00e1s",
	history: "Historia",
	publish: "Publicar",
	selectGuideLink: "Por favor, seleccione Gu\u00eda para el enlace",
	selectGuideBeforeSubmit: "Por favor, seleccione una gu\u00eda antes de enviar",
	change: "Cambio",
	checkNow: "Comprobar ahora",
	minutes: "acta",
	clickHere: "Haga clic aqu\u00ed",
	youAlmostDone: "\u00a1Ya casi has terminado!",
	setOrg: "para configurar su organizaci\u00f3n",
	apps: "Aplicaciones",
	me: "Me",
	playStep: "Paso de reproducci\u00f3n",
	miniPlayerHelp: "Ayuda",
	defaultMiniPlayerHelp: "Ayuda",
	defaultConfirmIfSlideshowOrRedirect: "El paso no est\u00e1 disponible en la URL actual.<br>\u00bfQuieres ir a la URL del paso o reproducir la presentaci\u00f3n de diapositivas?",
	defaultServiceErrorMessage: "\u00a1Vaya! Se ha producido un error. Por favor, int\u00e9ntelo de nuevo despu\u00e9s de un tiempo. Tambi\u00e9n puede enviarnos un correo electr\u00f3nico a support@csod.com para obtener ayuda",
	defaultMaintenanceMessage: "Mantenimiento en curso. P\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	userNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Gu\u00eda de salida",
	defaultUserNotFollowingGuideMessage: "Parece que est\u00e1 realizando pasos que no forman parte de esta gu\u00eda. Si ya no desea seguir la Gu\u00eda, haga clic en Gu\u00eda de salida",
	resumeGuide: "Gu\u00eda de curr\u00edculum vitae",
	defaultResumeGuideMessage: "Gu\u00eda de curr\u00edculum vitae",
	backToLogin: "Volver al inicio de sesi\u00f3n",
	filters: "Filtros",
	thisApp: "Esta aplicaci\u00f3n",
	thisWebsite: "Este sitio web",
	maxFreeTourLimit: "L\u00edmite m\u00e1ximo de recorridos alcanzados",
	passwordRegexCheck: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos un valor en may\u00fasculas, uno en min\u00fasculas y un valor num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Escriba la clave de suscripci\u00f3n de voz de Microsoft Cognitive Services",
	numberOfImgFile: "El n\u00famero de archivos de imagen y de texto debe ser el mismo",
	availableOn: "Disponible en",
	tooltipUnpubWorkflowTitle: "Flujo de trabajo no publicado",
	tooltipUnpubParentWorkflowTitle: "Flujo de trabajo publicado, carpetas principales no publicadas",
	tooltipPubParentWorkflowTitle: "Flujo de trabajo publicado, carpeta publicada",
	tooltipUnpubTooltipTitle: "Informaci\u00f3n sobre herramientas in\u00e9dita",
	tooltipUnpubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpetas principales no publicadas",
	tooltipPubParentTooltipTitle: "Informaci\u00f3n sobre herramientas publicada, carpeta publicada",
	tooltipUnpubTutorialTitle: "Tutorial in\u00e9dito",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, carpeta(s) principal(es) no publicada",
	tooltipPubParentTutorialTitle: "Tutorial publicado, carpeta publicada",
	tooltipUnpubSubFolderTitle: "Subcarpeta no publicada",
	tooltipUnpubSubFolderDesc: "Usar subcarpetas para organizar las gu\u00edas",
	tooltipUnpubParentSubFolderTitle: "Subcarpeta publicada, carpeta(s) principal(es) no publicada",
	tooltipPubParentSubFolderTitle: "Subcarpeta publicada, Carpeta publicada",
	tooltipPubParentSubFolderDesc: "Organiza Gu\u00edas",
	exitSurvey: "Encuesta de salida",
	disable: "Inutilizar",
	instructionExitSurvey: "La encuesta de salida se muestra cuando un usuario sale de una gu\u00eda antes de completarla",
	msgVideoNotFound: "Subiendo tu video, int\u00e9ntalo despu\u00e9s de un tiempo",
	msgGiphyNotFound: "Subiendo tu GIF, int\u00e9ntalo despu\u00e9s de un tiempo",
	userPref: "Mis preferencias",
	manageAccount: "Portal de administraci\u00f3n",
	analyticsPortal: "Portal de informaci\u00f3n",
	errorInvalidUrl: "No es una URL v\u00e1lida",
	wbFooterText: "Aprendizaje t\u00e9cnico ITS",
	navigationMenu: "Men\u00fa de navegaci\u00f3n",
	clearHistory: "Borrar historial",
	userDeniedMessage: "Permisos de acceso a la c\u00e1mara y al micr\u00f3fono denegados por el usuario",
	pushNotification: "Notificaciones Push",
	viewDetail: "Ver Detalle",
	contactAdmin: "Ponte en contacto con support@csod.com o con tu administrador para obtener m\u00e1s ayuda",
	noAppOnDomain: "La aplicaci\u00f3n no est\u00e1 asignada para el dominio actual ",
	noGuidesOnDomain: "No se han encontrado gu\u00edas",
	apply: "Aplicar",
	invalidLoginCred: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar comentarios",
	guideNotExist: "Esta gu\u00eda no est\u00e1 disponible en esta p\u00e1gina (Error: Discrepancia de dominio) ",
	cdnAccess: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	tourPlayError: "La gu\u00eda no se puede jugar. Error al recuperar los detalles de la gu\u00eda",
	playerMode: "Modo de jugador",
	closePanel: "Cerrar panel",
	switchCreatorMode: "Cambiar al modo Creador",
	extensionContextError: "Se invalida el contexto de la extensi\u00f3n. Vuelva a cargar la p\u00e1gina para continuar",
	otpSent: "OTP ha sido reenviado a su correo electr\u00f3nico, por favor revise su bandeja de entrada",
	startOver: "Empezar de nuevo",
	yesResume: "Reanudar",
	dontShowAgain: "No vuelvas a mostrar",
	notificationHeader: "\u00a1Tienes una notificaci\u00f3n!",
	watchLater: "Ver m\u00e1s tarde",
	pushSnoozeMsg: "Esta notificaci\u00f3n se pospondr\u00e1 durante",
	showAgain: "Mostrar de nuevo",
	noGuidesOnThisTab: "No hay notificaciones en esta p\u00e1gina",
	iAgree: "De acuerdo",
	viewMore: "Ver m\u00e1s",
	lostInternetConnection: "Se ha perdido la conexi\u00f3n con el servidor. Vuelva a conectarse e int\u00e9ntelo de nuevo",
	next: "Pr\u00f3ximo",
	recent: "Reciente",
	older: "Mayor",
	atoz: "De la A a la Z",
	ztoa: "Z - A",
	clear: "Claro",
	tooltipDontShowAgain: "Las notificaciones ya no aparecer\u00e1n. Para habilitar una notificaci\u00f3n ahora, coloque el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	tooltipWatchLater1: "Las notificaciones se posponen durante",
	tooltipWatchLater2: "y aparecer\u00e1 despu\u00e9s de eso. Para habilitar una notificaci\u00f3n ahora, coloque el cursor sobre ella y haga clic en 'Mostrar de nuevo'",
	hour: "hora",
	hours: "horas",
	insightsTracker: "Rastreador de informaci\u00f3n",
	slideshow: "Presentaci\u00f3n de diapositivas",
	autoplay: "Reproducci\u00f3n autom\u00e1tica",
	powerFormOldData: "Datos existentes",
	powerFormNewData: "Utilice este formulario para introducir nuevos datos",
	powerFormNewDataMore: "Si sus datos existentes no est\u00e1n visibles, haga clic en la flecha en la parte superior izquierda para ver sus datos. A continuaci\u00f3n, los datos deben copiarse en el formato con vi\u00f1etas permitido.",
	powerFormTitle: "Asistente de entrada de datos",
	powerFormMandatory: "Este es un campo obligatorio, l\u00edmite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Esta gu\u00eda se crea en {TOURURL}, que pertenece a la aplicaci\u00f3n {APPNAME}. Copie esta gu\u00eda en esa aplicaci\u00f3n y vuelva a intentarlo",
	setDomain: "Si est\u00e1 seguro de que {TOURURL} debe agregarse en la configuraci\u00f3n actual del dominio de la aplicaci\u00f3n, agregue y vuelva a intentarlo",
	on: "EN",
	off: "APAGADO",
	btnPrev: "Prev",
	btnPrevious: "Anterior",
	taskList: "Lista de tareas",
	unprocessedVideo: "Espere mientras se procesa su video.",
	searchResult: "Resultado de la b\u00fasqueda",
	pleaseWait: "\u00a1Espera!",
	mediaDownloadMsg: "Mientras preparamos tus archivos para la descarga",
	mediaFileNotFound: "Archivo multimedia no encontrado",
	searchInFolder: "Buscar en carpeta",
	currentPageSearchPlaceholder: "Buscar Gu\u00eda(s) disponible(s) en la p\u00e1gina actual",
	brandLogo: "Logotipo de la marca",
	accessibility: "Accesibilidad",
	replay: "Repetir",
	defaultGreetingMessage: "\u00a1Eh! Bienvenidos a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, ten en cuenta que soy un bot.",
	defaultErrorMessage: "Lo siento, no lo entend\u00ed. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	greetingMessage: "\u00a1Eh! Bienvenidos a MyGuide. \u00bfC\u00f3mo puedo ayudarle? Por favor, ten en cuenta que soy un bot.",
	errorMessage: "Lo siento, no lo entend\u00ed. \u00bfPodr\u00eda ser m\u00e1s espec\u00edfico? ",
	guideLnkToRedirect: "Utilice el siguiente enlace para redirigir a la p\u00e1gina y reproducir la gu\u00eda",
	otpTimer: "Puede volver a intentarlo en ",
	seconds: " sobras",
	limitWarning: "Ha alcanzado el l\u00edmite m\u00e1ximo de intentos fallidos",
	403: "Nos encontramos con un problema con esta solicitud. Por favor, int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	405: "Nos encontramos con un problema al procesar esta solicitud. Por favor, int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	429: "Demasiadas solicitudes",
	1003: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n y vuelva a intentarlo. Si el problema persiste, actualice la p\u00e1gina y vuelva a intentarlo",
	1007: "Nos encontramos con un problema durante la autenticaci\u00f3n. Por favor, int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	1005: "<b>Lo sentimos<\/b> <br><br>Parece que hay un problema con la solicitud o con nuestros servidores.<br> Hemos sido notificados del error y lo corregiremos lo antes posible",
	1009: "El correo electr\u00f3nico del usuario no est\u00e1 verificado",
	1014: "Mantenimiento en curso. P\u00f3ngase en contacto con nosotros a trav\u00e9s de support@csod.com",
	1017: "Nos encontramos con un problema durante la autenticaci\u00f3n. Vuelva a iniciar sesi\u00f3n y vuelva a intentarlo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	1018: "Ha alcanzado el l\u00edmite m\u00e1ximo para crear pasos",
	2000: "Nos encontramos con un problema con esta solicitud. Hemos sido notificados. Por favor, int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2001: "Credenciales de inicio de sesi\u00f3n no v\u00e1lidas. Su cuenta se bloquear\u00e1 despu\u00e9s de varios intentos fallidos, recibir\u00e1 un correo electr\u00f3nico para desbloquear su cuenta o puede restablecer su contrase\u00f1a",
	2002: "OTP no v\u00e1lido o caducado",
	2003: "El archivo cargado no es una imagen v\u00e1lida (se admiten archivos JPG y PNG)",
	2004: "Sesi\u00f3n caducada",
	2005: "No hemos podido rastrear a este usuario. Actualice y vuelva a intentarlo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2006: "La direcci\u00f3n de correo electr\u00f3nico es incorrecta. Por favor, int\u00e9ntelo de nuevo",
	2007: "Rol de usuario no v\u00e1lido. Por favor, int\u00e9ntelo de nuevo",
	2008: "Debe especificar un tipo de tarea correcto",
	2009: "La Aplicaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haber sido eliminado o nunca haber existido",
	2010: "Par\u00e1metros de entrada no v\u00e1lidos. Actualice y vuelva a intentarlo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2011: "La organizaci\u00f3n dada no es v\u00e1lida; Podr\u00eda haber sido eliminado o nunca haber existido",
	2012: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2013: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2014: "Par\u00e1metro requerido para Super Admin[organization_id]",
	2015: "El contenido de los datos de imagen proporcionado no es v\u00e1lido. Vuelva a comprobarlo e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	2016: "Dominio no v\u00e1lido",
	2017: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2018: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2019: "Lo que est\u00e1 buscando no existe o podr\u00eda haberse eliminado",
	2020: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2021: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2022: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduce una URL de equipo v\u00e1lida",
	2023: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar esta solicitud. Por favor, informe del problema a support@csod.com",
	2024: "El tama\u00f1o del archivo debe ser inferior a 5 MB",
	2025: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud. Introduzca una URL v\u00e1lida",
	2026: "La contrase\u00f1a debe contener un m\u00ednimo de 8 caracteres, incluyendo al menos un valor en may\u00fasculas, uno en min\u00fasculas y un valor num\u00e9rico",
	2027: "Contrase\u00f1a no v\u00e1lida",
	2028: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2029: "La ciudad que ha proporcionado no es compatible",
	2030: "Faltaba un par\u00e1metro o no era v\u00e1lido en la solicitud",
	2031: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al intentar procesar este par\u00e1metro. Por favor, informe del problema a support@csod.com",
	2032: "Par\u00e1metro no v\u00e1lido[file_id]",
	2033: "URL no v\u00e1lida. Por favor, vuelva a comprobarlo e int\u00e9ntelo de nuevo",
	2034: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar estos par\u00e1metros. Por favor, informe del problema a support@csod.com",
	2035: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado al procesar esta AppKey. Por favor, informe del problema a support@csod.com",
	2036: "El servidor de autenticaci\u00f3n encontr\u00f3 un error inesperado. Por favor, actualice esta p\u00e1gina. Si el problema persiste, inf\u00f3rmelo a support@csod.com",
	2044: "Parece que hemos extraviado la traducci\u00f3n para este paso. Cambie al idioma predeterminado y vuelva a traducir el paso, o p\u00f3ngase en contacto con nuestro servicio de atenci\u00f3n al cliente para obtener m\u00e1s detalles.",
	2200: "Nos encontramos con un problema al acceder a los controles de audio\/v\u00eddeo. Compruebe la configuraci\u00f3n de su navegador e int\u00e9ntelo de nuevo. Si el problema persiste, inf\u00f3rmenos a support@csod.com",
	3061: "Solo puedes anclar hasta 5 Gu\u00eda(s)",
	4000: "No se puede crear una subcategor\u00eda dentro de una carpeta si ya se ha creado una gu\u00eda",
	4001: "Si un usuario ya es un superadministrador, no puede cambiar el rol de usuario",
	4002: "Esta acci\u00f3n no est\u00e1 permitida en una Gu\u00eda publicada",
	4003: "La gu\u00eda bloqueada no se puede publicar",
	4004: "Esta acci\u00f3n no est\u00e1 permitida en una carpeta publicada. Por favor, anule la publicaci\u00f3n",
	4006: "La solicitud debe pertenecer a la organizaci\u00f3n en cuesti\u00f3n",
	4007: "Usted no est\u00e1 autorizado a realizar esta acci\u00f3n",
	4008: "No se permite ninguna acci\u00f3n para esta subcategor\u00eda",
	4009: "La gu\u00eda debe ser publicada",
	4010: "La gu\u00eda no se puede crear dentro de una carpeta con una subcategor\u00eda",
	4011: "Para crear escal\u00f3n(es), debe desbloquear esta Gu\u00eda",
	4012: "Para editar los pasos, debe desbloquear esta Gu\u00eda",
	4013: "Para eliminar los pasos, debe desbloquear esta Gu\u00eda",
	4014: "Para copiar y pegar los pasos, debe desbloquear esta Gu\u00eda",
	3001: "La gu\u00eda estar\u00e1 disponible para su exportaci\u00f3n pronto. Para verificar el estado, vaya a 'Estado de la tarea' en el men\u00fa de la cuenta",
	3002: "Se ha iniciado la carga. No actualice ni cierre el navegador hasta que se complete la carga. Puede verificar el estado de la importaci\u00f3n una vez que se haya completado",
	3003: "El usuario ya existe",
	3004: "El ID de correo electr\u00f3nico ya est\u00e1 verificado",
	3005: "Esta URL entra en conflicto con otra configuraci\u00f3n de la aplicaci\u00f3n, intente agregar cualquier otra URL",
	3006: "La carpeta debe pertenecer a la misma aplicaci\u00f3n",
	3007: "El dominio ya existe",
	3008: "Ha alcanzado el l\u00edmite m\u00e1ximo de Gu\u00eda(s) creada(s)",
	3009: "La encuesta ya existe en la Gu\u00eda dada",
	3010: "El Paso debe pertenecer a la misma Gu\u00eda",
	3011: "Esta Organizaci\u00f3n est\u00e1 suspendida. P\u00f3ngase en contacto con su administrador",
	3012: "La(s) gu\u00eda(s) debe(n) pertenecer(es) a la misma carpeta",
	3013: "Esta gu\u00eda ya existe con el par de objetos y el nombre de campo especificados",
	3014: "Usuario suspendido",
	3015: "Usuario ya verificado",
	3017: "OTP se ha enviado con \u00e9xito a su direcci\u00f3n de correo electr\u00f3nico",
	3018: "El rol ya existe",
	3019: "El pa\u00eds ya existe",
	3020: "La ciudad ya existe",
	3023: "Su organizaci\u00f3n no est\u00e1 verificada. Para obtener ayuda, p\u00f3ngase en contacto con support@csod.com",
	3024: "El archivo JSON no est\u00e1 disponible para esta organizaci\u00f3n",
	3025: "Nos encontramos con un problema durante la autenticaci\u00f3n. Por favor, int\u00e9ntelo de nuevo. Si el problema persiste, actualice la p\u00e1gina y vuelva a intentarlo",
	3026: "El archivo JSON no est\u00e1 disponible para esta gu\u00eda",
	3027: "No hay escal\u00f3n disponible. Crear al menos un paso para publicar la Gu\u00eda",
	3028: "Se ha alcanzado el l\u00edmite m\u00e1ximo de publicaciones de tours",
	3047: "Su cuenta ha sido bloqueada temporalmente debido a errores de inicio de sesi\u00f3n excesivos. Te hemos enviado un correo electr\u00f3nico con los pasos para desbloquearlo. Para obtener m\u00e1s ayuda, p\u00f3ngase en contacto con nosotros en support@csod.com",
	3033: "Credenciales no v\u00e1lidas. Ponte en contacto con support@csod.com o con tu administrador para obtener m\u00e1s ayuda.",
	4020: "Ya existe un borrador de esta Gu\u00eda; No se permiten varios borradores de una Gu\u00eda.",
	4021: "Valores no v\u00e1lidos del par\u00e1metro [envs]",
	2054: "Una contrase\u00f1a antigua y nueva no pueden ser iguales",
	playNextBotTour: "Jugar el pr\u00f3ximo tour de bots",
	defaultBotEndingMessage: "Hemos terminado, \u00a1muchas gracias! \u00bfAlgo m\u00e1s antes de empezar?",
	startBotLbl: "Iniciar bot",
	includeScreen: "Incluir captura de pantalla",
	feedbackPlaceholder: "\u00bfTienes comentarios? \u00a1Nos encantar\u00eda escucharlo!",
	feedbackOptBtn: "Haz clic para resaltar u ocultar informaci\u00f3n",
	highlight: "Destacar",
	send: "Enviar",
	done: "Hecho",
	hide: "Esconder",
	multiSelectOptionError: "Por favor, seleccione al menos una opci\u00f3n",
	loginNext: "Pr\u00f3ximo",
	3068: "Su contrase\u00f1a anterior ha caducado, establezca una nueva contrase\u00f1a para iniciar sesi\u00f3n.",
	captchaLbl: "Captcha",
	placeholderEnterCaptcha: "Entra Captcha",
	captchaError: "Por favor, introduzca un captcha v\u00e1lido",
	allGuides: "Todas las gu\u00edas",
	helpCenter: "Centro de ayuda",
	applicationJsonError: "El archivo JSON de la aplicaci\u00f3n no est\u00e1 disponible para esta aplicaci\u00f3n.",
	feedbackRequired: "Por favor, escriba sus comentarios.",
	default: "Predeterminado",
	feedbackImgErrorMsg: "La captura de pantalla no se pudo adjuntar a sus comentarios debido a un problema relacionado con el navegador. Vuelva a cargar la p\u00e1gina, haga clic y abra la extensi\u00f3n Guide desde la barra de acciones de Chrome y vuelva a capturar la captura de pantalla para obtener comentarios.",
	tranportURlRedirectionConfirm: "Redirigir a la URL del paso de transporte",
	guideContinueConfirm: "Continuar con la gu\u00eda",
	focus: "Centro de atenci\u00f3n",
	zoomOut: "No se puede disminuir m\u00e1s el nivel de zoom",
	zoomIn: "No se puede aumentar m\u00e1s el nivel de zoom",
	charM: "m",
	charS: "s"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.fr_CA = {
    "403": "Nous avons rencontré un problème avec cette demande. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "405": "Nous avons rencontré un problème lors du traitement de cette demande. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "429": "Trop de demandes",
    "1003": "Un problème est survenu lors de l'authentification. Veuillez vous reconnecter et essayer de nouveau. Si le problème persiste, actualisez la page et essayez de nouveau.",
    "1005": "<b>Nous sommes vraiment désolés</b><br><br>, il semble qu'il y ait un problème avec votre demande ou avec nos serveurs.<br> Nous avons été informés de l'erreur et nous la corrigerons dès que possible",
    "1007": "Un problème est survenu lors de l'authentification. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "1009": "L'e-mail de l'utilisateur n'est pas vérifié",
    "1014": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "1017": "Un problème est survenu lors de l'authentification. Veuillez vous reconnecter et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "1018": "Vous avez atteint la limite maximale pour créer des étapes",
    "2000": "Nous avons rencontré un problème avec cette demande. Nous en avons été informés. Veuillez réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2001": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses Vous recevrez un courriel pour déverrouiller votre compte ou vous pouvez réinitialiser votre mot de passe",
    "2002": "Mot de passe à usage unique invalide ou expiré",
    "2003": "Le fichier téléchargé n'est pas une image valide (seuls les fichiers JPG et PNG sont pris en charge)",
    "2004": "Session expirée",
    "2005": "Nous n'avons pas pu suivre cet utilisateur. Veuillez actualiser et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2006": "L'adresse courriel est incorrecte. Réessayez",
    "2007": "Rôle utilisateur invalide. Réessayez",
    "2008": "Vous devez saisir un type de tâche adapté",
    "2009": "L'application donnée n'est pas valide; elle a pu être supprimée ou n'a peut-être jamais existé.",
    "2010": "Paramètres d'entrée non valides. Veuillez actualiser et essayer de nouveau. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2011": "L'organisation donnée n'est pas valide; elle a pu être supprimée ou n'a peut-être jamais existé.",
    "2012": "La requête comportait un paramètre manquant ou invalide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2013": "La requête comportait un paramètre manquant ou invalide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com.",
    "2014": "Paramètre requis pour super Admin [organization_id]",
    "2015": "Le contenu des données d'image fournies n'est pas valide. Veuillez vérifier à nouveau et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com",
    "2016": "Domaine non valide",
    "2017": "La requête comportait un paramètre manquant ou invalide",
    "2018": "La requête comportait un paramètre manquant ou invalide",
    "2019": "Ce que vous recherchez n'existe pas ou a peut-être été supprimé.",
    "2020": "La requête comportait un paramètre manquant ou invalide",
    "2021": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette demande. Veuillez signaler le problème à l'adresse support@csod.com",
    "2022": "La requête comportait un paramètre manquant ou invalide. Veuillez saisir une URL d'équipe valide",
    "2023": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette demande. Veuillez signaler le problème à l'adresse support@csod.com",
    "2024": "La taille du fichier doit être inférieure à 5 Mo",
    "2025": "La requête comportait un paramètre manquant ou invalide. Saisissez une URL correcte",
    "2026": "Le mot de passe doit contenir un minimum de 8 caractères, dont au moins une majuscule, une minuscule et une valeur numérique",
    "2027": "Mot de passe non valide",
    "2028": "La requête comportait un paramètre manquant ou invalide",
    "2029": "La ville que vous avez fournie n'est pas prise en charge",
    "2030": "La requête comportait un paramètre manquant ou invalide",
    "2031": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de ce paramètre Veuillez signaler le problème à l'adresse support@csod.com",
    "2032": "Paramètre [file_id] non valide",
    "2033": "URL non valide. Veuillez vérifier à nouveau et réessayer",
    "2034": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de ces paramètres. Veuillez signaler le problème à l'adresse support@csod.com",
    "2035": "Le serveur d'authentification a rencontré une erreur inattendue lors du traitement de cette AppKey. Veuillez signaler le problème à l'adresse support@csod.com",
    "2036": "Le serveur d'authentification a rencontré une erreur inattendue. Veuillez rafraîchir cette page. Si le problème persiste, signalez-le à l'adresse support@csod.com.",
    "2044": "Il semble que nous ayons égaré la traduction de cette étape. Veuillez passer à la langue par défaut et traduire à nouveau l'étape, ou communiquer avec notre service clientèle pour plus de détails.",
    "2054": "Un ancien et un nouveau mot de passe ne peuvent pas être identiques",
    "2200": "Nous avons rencontré un problème lors de l'accès aux commandes audio et vidéo. Veuillez vérifier les paramètres de votre navigateur et réessayer. Si le problème persiste, signalez-le nous à l'adresse suivante : support@csod.com",
    "3001": "Le Guide sera bientôt disponible à l'exportation. Pour vérifier l'état, accédez à « État de la tâche » dans le menu du compte.",
    "3002": "Le téléversement a commencé. Veuillez ne pas actualiser ou fermer le navigateur tant que le téléversement n'est pas terminé. Vous pouvez vérifier le statut de l'importation une fois qu'elle est terminée",
    "3003": "L'utilisateur existe déjà",
    "3004": "L'identifiant de messagerie est déjà vérifié",
    "3005": "Cette URL est en conflit avec une autre configuration d'application, veuillez essayer d'ajouter une autre URL.",
    "3006": "Le dossier doit appartenir à la même application",
    "3007": "Le domaine existe déjà",
    "3008": "Vous avez atteint la limite maximale pour créer des Guide(s).",
    "3009": "Survey existe déjà dans le Guide donné.",
    "3010": "L'étape doit appartenir au même Guide",
    "3011": "Cette organisation est suspendue. Veuillez communiquer avec votre Admin",
    "3012": "Les Guide(s) doivent appartenir au même dossier",
    "3013": "Ce Guide existe déjà avec la paire d'objets et le nom du champ donnés",
    "3014": "Utilisateur suspendu",
    "3015": "Utilisateur déjà vérifié",
    "3017": "Le mot de passe à usage unique a été envoyé avec succès à votre adresse e-mail",
    "3018": "Le rôle existe déjà",
    "3019": "Le pays existe déjà",
    "3020": "La ville existe déjà",
    "3023": "Votre organisation n'est pas vérifiée. Pour obtenir de l'aide, veuillez utiliser l'adresse support@csod.com",
    "3024": "Le fichier JSON n'est pas disponible pour cette organisation.",
    "3025": "Un problème est survenu lors de l'authentification. Veuillez réessayer. Si le problème persiste, actualisez la page et essayez de nouveau",
    "3026": "Le fichier JSON n'est pas disponible pour ce Guide",
    "3027": "Aucune étape disponible. Créez au moins une étape pour publier le Guide",
    "3028": "La limite maximale de publication des tours a été atteinte",
    "3033": "Authentifiants non valides Veuillez communiquer avec support@csod.com ou avec votre Admin pour obtenir de l'aide.",
    "3047": "Votre compte a été temporairement verrouillé en raison d'échecs de connexion excessifs. Nous vous avons envoyé un e-mail avec les étapes pour le déverrouiller. Pour plus d'assistance, veuillez nous contacter à l'adresse support@csod.com",
    "3061": "Vous pouvez épingler jusqu’à 5 Guide(s) seulement",
    "3068": "Votre ancien mot de passe a expiré. Définissez un nouveau mot de passe pour vous connecter.",
    "4000": "Une sous-catégorie ne peut pas être créée dans un dossier si un Guide est déjà créé.",
    "4001": "Si un utilisateur est déjà un super Admin, vous ne pouvez pas modifier le rôle d'utilisateur.",
    "4002": "Cette action n'est pas autorisée sur un Guide publié",
    "4003": "Le Guide verrouillé ne peut pas être publié",
    "4004": "Cette action n'est pas autorisée sur un dossier publié. Veuillez annuler sa publication",
    "4006": "L'application doit appartenir à l'organisation donnée",
    "4007": "Vous n’êtes pas autorisé(e) à effectuer cette action",
    "4008": "L'action n'est pas autorisée pour cette sous-catégorie",
    "4009": "Le Guide doit être publié",
    "4010": "Le Guide ne peut pas être créé à l'intérieur d'un dossier comportant une sous-catégorie",
    "4011": "Pour créer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4012": "Pour éditer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4013": "Pour supprimer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4014": "Pour copier et coller une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4020": "Un brouillon de ce Guide existe déjà; la rédaction de plusieurs brouillons d'un Guide n'est pas autorisée.",
    "4021": "Valeurs invalides du paramètre [envs]",
    "currentPage": "Page actuels",
    "myChat": "MyChat",
    "import": "Importer",
    "export": "Exporter au format",
    "redirectLivetour": "Lire en direct",
    "guideNotAvailable": "Le Guide n'est pas disponible sur l'URL actuelle. Voulez-vous aller à l'Guide du URL?",
    "downloadPPT": "Télécharger les PPT",
    "btnYes": "Oui",
    "btnNo": "Non",
    "inApp": "Dans l’application",
    "live": "En direct",
    "resume": "Reprendre",
    "tourCloseConfirm": "Voulez-vous vraiment fermer ce Guide?",
    "notifSnoozeDonotMsg": "Veuillez nous indiquer si vous souhaitez regarder cela plus tard ou ne jamais afficher la notification.",
    "surveyThanksMessage": "Merci de votre réponse",
    "testMePassedMessage": "Félicitations! Vous avez réussi",
    "testMeFailedMessage": "Oups! Vous avez échoué",
    "testMeGuideEfficiency": "Efficacité du test :",
    "testMeGuideEffectiveness": "Efficacité du test :",
    "testMeTestTime": "Durée de l'examen",
    "testMeExpectedTime": "Temps prévu",
    "testMeStepsTaken": "Mesures prises",
    "testMeExpectedSteps": "Étapes prévues",
    "testMeRetakeTestBtn": "Test de reprise",
    "testMeResultTitle": "Résultat MyTest",
    "ConfirmIfTestMeModeRidirect": "Le Guide n'est pas disponible sur l'URL actuelle. Voulez-vous rediriger vers l'URL du Guide?",
    "feedCmt": "Votre avis nous est précieux!<br> Dites-nous ce que vous en avez pensé en 500 caractères maximum",
    "doNotShowAgain": "Ne plus afficher ce message",
    "neverShowAgain": "Ne plus jamais afficher",
    "skipGuide": "Ignorer le Guide",
    "surveyErrorMsg": "Veuillez répondre à au moins une question",
    "redirect": "Redirection",
    "liveGuide": "Guide en direct",
    "question": "Question",
    "exitGuide": "Quitter Guide",
    "continueGuide": "Continuer le Guide",
    "stop": "Arrêter",
    "characters": "Caractères :",
    "survey": "Survey",
    "testMeStopMessage": "Vous êtes en mode TestMe. Cliquez sur STOP pour le quitter",
    "testMeFailedErrorMessage": "Vous n'avez pas pu atteindre l'étape de l'objectif.<br> Vous avez {CORRECT_STEPS} étapes correctes sur {TOTAL_STEPS}.",
    "surveyCommentPlaceholder": "Tapez ici! 500 caractères maximum",
    "pushTourSnoozeMsg": "Ce tour lancé par Auto sera suspendu pour",
    "of": "de",
    "wbMplayerTitle": "Tutoriels",
    "wbDragTooltip": "Faites glisser et déposez ce lecteur n'importe où sur la page",
    "dontShowEdResult": "Je ne souhaite pas voir cela",
    "mPlayerHeaderTitle": "Micro lecteur",
    "closePreview": "Fermer l’aperçu",
    "elmNotFound": "Il semble que nous ne puissions pas trouver l'élément pour l'étape :",
    "elmNotFoundInfo": "Assurez-vous d'être sur la bonne page pour lire cette étape. Vérifiez également que vous pouvez voir l'élément sélectionné",
    "notExists": "N'existe pas",
    "elmNotFoundHeader": "L'élément d'étape n'a pas été trouvé",
    "goToStep": "Aller à l'étape",
    "notFoundStep": "Nous n'avons pas trouvé l'élément pour l'étape n°",
    "pleaseReselect": "Veuillez essayer de resélectionner l'élément.",
    "stepRuleMatchErr": "Erreur de configuration : Les règles d'étape ne correspondent pas",
    "guideRuleMatchErr": "Erreur de configuration : Les règles du Guide ne correspondent pas",
    "stepNotFoundRedirect": "Étape non trouvée sur cette page. Souhaitez-vous rediriger?",
    "branchStepMessagePopup": "Veuillez sélectionner l'une des tâches ci-dessous pour continuer",
    "btnSkip": "Ignorer",
    "kindlyHoverPopup": "Survolez cet élément pour ouvrir la fenêtre contextuelle.",
    "stepPlayIsdefinedPopover": "L'étape que vous allez lire est définie dans la fenêtre « popover »",
    "elmNotFoundWestpac": "Étape non trouvée - Ce Guide va se terminer",
    "findingElementMessage": "Essayer de trouver l'étape. . .",
    "badDomain": "Le domaine actuel et l'URL ne sont pas autorisés à exécuter MyGuide. Veuillez communiquer avec votre Admin pour obtenir de l'aide.",
    "hostJsError": "La page web semble contenir une erreur. MyGuide ne peut pas continuer",
    "remember": "Mémoriser mon profil",
    "forgotPass": "Mot de passe oublié?",
    "dontHavAcc": "Vous n’avez pas de compte?",
    "loginTitle": "Connexion",
    "loginOtpScreenTitle": "Vérifiez le mot de passe à usage unique pour vous connecter",
    "forgetPassTitl": "Réinitialiser le mot de passe",
    "placeholderEmail": "ID de messagerie",
    "placeholderPassword": "Mot de passe",
    "placeholderNewPassword": "Nouveau mot de passe",
    "placeholderCurrentPassword": "Mot de passe actuel",
    "placeholderFirstname": "Prénom",
    "placeholderLastname": "Nom",
    "placeholderPasswordC": "Confirmer le mot de passe",
    "btnCancel": "Annuler",
    "btnPayment": "Mettre à jour le plan",
    "btnSubmit": "Soumettre",
    "btnLogin": "Connexion",
    "termsOfUse": "Modalités d’utilisation",
    "andLabel": "et",
    "policyPrivacy": "Politique de confidentialité",
    "passwordError": "Le mot de passe doit être composé de 8 chiffres",
    "confirmPasswordError": "Le mot de passe et le mot de passe de confirmation doivent être identiques",
    "firstnameError": "Veuillez saisir un prénom valide",
    "lastnameError": "Veuillez saisir un nom de famille valide",
    "emailError": "Veuillez saisir une adresse courriel valide",
    "orgError": "Veuillez saisir une organisation valide URL",
    "otpError": "Veuillez saisir une OTP valide",
    "placeholderOtp": "Entrez votre mot de passe à usage unique ici",
    "otpSentDesc": "Si une adresse courriel valide a été fournie, un lien de réinitialisation vous sera envoyé.<br>Si vous ne voyez pas le courriel dans quelques minutes, veuillez vérifier votre dossier de courrier indésirable à la recherche d'un courriel provenant de",
    "btnOtpVerify": "Vérifier le mot de passe à usage unique",
    "alreadyHavAcc": "Vous avez déjà un compte?",
    "smartbiteMessageError": "Veuillez saisir le message",
    "smartbiteLinkError": "Veuillez saisir un lien valide",
    "noGuidesOnThisPage": "Aucun Guides disponibles sur cette page!",
    "clickOn": "Cliquer sur",
    "contactUs": "Contactez-nous",
    "search": "Rechercher",
    "noRecordFound": "Aucun enregistrement trouvé",
    "category": "Dossier",
    "subCategory": "Sous-dossier",
    "confirmPasswordRequired": "Confirmation du mot de passe requise",
    "logInWithSSO": "Connectez-vous avec la connexion unique",
    "inputPlaceHolderSearch": "Recherchez n'importe quel Guide",
    "noGuideAvailableFor": "Aucun Guide ne correspond à votre recherche.",
    "tryModifyingYourSearch": "Essayez de modifier vos critères de recherche",
    "signInVerifyYourEmail": "Cet identifiant courriel n'a pas été vérifié. Veuillez vérifier votre courriel pour obtenir des détails",
    "signInVerifyYourAccount": "Nous vous avons envoyé un courriel contenant un mot de passe à usage unique. Veuillez vérifier votre compte pour terminer le processus de connexion",
    "maintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "back": "Retour",
    "changePassword": "Changer le mot de passe",
    "startTestAuto": "Commencer le test d'automatisation",
    "msgPasswordChangedSuccess": "Votre mot de passe a été modifié avec succès",
    "msgConfirmNewPasswordError": "Le mot de passe confirmé doit être le même que le nouveau mot de passe",
    "enterUrl": "Saisissez l'équipe URL",
    "dragPlaceholderDropThis": "Déposez ceci",
    "dragPlaceholderHere": "ici",
    "termsOfService": "Conditions",
    "versionText": "Version",
    "videoStepSuccessMessage": "Votre étape a été créée avec succès",
    "importSuccessMessage": "Guide téléchargé avec succès. Allez dans Statut de la tâche pour vérifier le statut de l'importation",
    "worldBankHelpSupport": "Certains outils, tels que les Tooltip(s), ne peuvent être visualisés que dans l'interface",
    "helpSupport": "Aide & Soutien",
    "page": "page",
    "selectAnApplication": "Sélectionnez une application",
    "refresh": "Actualiser",
    "loginBtn": "Connexion",
    "account": "Compte",
    "taskStatus": "Statut de la tâche",
    "logoutBtn": "Déconnexion",
    "app": "Application :",
    "firstStep": "Première étape",
    "lastStep": "Dernière étape",
    "startTest": "Début du test",
    "noInappStepInGuide": "TestMe ne peut pas continuer, car ce guide ne contient pas d'étape inline.",
    "settingBtn": "Paramètres avancés",
    "orgSetting": "Paramètres de l'organisation",
    "close": "Fermer",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "Document",
    "downloadBlog": "Blogue",
    "downloadTxt": "Texte brut",
    "serviceErrorMessage": "Oups! Une erreur s'est produite. Veuillez patienter quelques instants avant de réessayer. Pour obtenir de l'aide, vous pouvez également nous envoyer un courriel à l'adresse suivante : support@csod.com.",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Aucun Guide n'a encore été créé!",
    "noCategoryCreatedYet": "Aucun dossier n'a encore été créé!",
    "chatbot": "MyChat",
    "notAutorised": "Vous n'avez pas l'accès requis. Veuillez communiquer avec l'Admin",
    "ok": "OK",
    "apiError": "Erreur de configuration. Veuillez communiquer avec l'Admin.",
    "select": "Sélectionnez",
    "mute_unmute": "Couper/Activer le son",
    "privacyPolicy": "Confidentialité & témoins",
    "privacyPolicyText": "MyGuide utilise des témoins. Si vous continuez, vous acceptez nos conditions et notre politique de confidentialité et vous nous donnez votre accord pour utiliser des témoins",
    "terms": "Conditions",
    "westPecErrorMessage": "Vous n'êtes pas autorisé à accéder à cette application. Veuillez vous connecter au réseau Westpac",
    "noApp": "Aucune application trouvée",
    "role": "Rôle :",
    "all": "Tout",
    "video": "Vidéo",
    "course": "Cours",
    "article": "Article",
    "image": "Image",
    "pathways": "Pathways",
    "preview": "Prévisualisation",
    "more": "Plus",
    "history": "Historique",
    "publish": "Publier",
    "selectGuideLink": "Veuillez sélectionner le Guide à lier",
    "selectGuideBeforeSubmit": "Veuillez sélectionner un Guide avant de soumettre",
    "change": "Modifier",
    "checkNow": "Vérifier maintenant",
    "minutes": "minutes",
    "clickHere": "cliquez ici",
    "youAlmostDone": "Vous avez presque terminé!",
    "setOrg": "pour créer votre organisation",
    "apps": "Applications",
    "me": "Moi",
    "playStep": "Étape de lecture",
    "miniPlayerHelp": "Aide",
    "defaultMiniPlayerHelp": "Aide",
    "defaultConfirmIfSlideshowOrRedirect": "Étape non disponible sur l'URL actuelle.<br>Voulez-vous aller à l'URL de l'étape ou lire un diaporama?",
    "defaultServiceErrorMessage": "Oups! Une erreur s'est produite. Veuillez patienter quelques instants avant de réessayer. Pour obtenir de l'aide, vous pouvez également nous envoyer un courriel à l'adresse suivante : support@csod.com.",
    "defaultMaintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l'adresse support@csod.com",
    "userNotFollowingGuideMessage": "Il semble que vous réalisiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "defaultUserNotFollowingGuideMessage": "Il semble que vous réalisiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "resumeGuide": "Reprendre le Guide",
    "defaultResumeGuideMessage": "Reprendre le Guide",
    "backToLogin": "Retour à la page de connexion",
    "filters": "Filtres",
    "thisApp": "Cette application",
    "thisWebsite": "Ce site Web",
    "maxFreeTourLimit": "Limite maximale de tours atteinte",
    "passwordRegexCheck": "Le mot de passe doit contenir un minimum de 8 caractères, dont au moins une majuscule, une minuscule et une valeur numérique",
    "countLimit": "99+",
    "microsoftServiceKey": "Veuillez saisir votre clé d'abonnement à Microsoft Cognitive Services Speech.",
    "numberOfImgFile": "Le nombre de fichiers image et de fichiers texte doit être identique",
    "availableOn": "Disponible sur",
    "tooltipUnpubWorkflowTitle": "Workflow non publié",
    "tooltipUnpubParentWorkflowTitle": "Workflow publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentWorkflowTitle": "WorkflowPublié, Dossier publié",
    "tooltipUnpubTooltipTitle": "Tooltip non publié",
    "tooltipUnpubParentTooltipTitle": "Tooltip publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTooltipTitle": "TooltipPublié, Dossier publié",
    "tooltipUnpubTutorialTitle": "Tutorial non publié",
    "tooltipUnpubParentTutorialTitle": "Tutorial publié, Dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTutorialTitle": "TutorialPublié, Dossier publié",
    "tooltipUnpubSubFolderTitle": "Sous-dossier non publié",
    "tooltipUnpubSubFolderDesc": "Utiliser des sous-dossiers pour organiser les Guides",
    "tooltipUnpubParentSubFolderTitle": "Sous-dossier publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentSubFolderTitle": "Sous-dossier publié, dossier publié",
    "tooltipPubParentSubFolderDesc": "Organise les Guides",
    "exitSurvey": "Quitter Survey",
    "disable": "Désactiver",
    "instructionExitSurvey": "Quitter Survey s'affiche lorsqu'un utilisateur quitte un guide avant d'avoir terminé l'enquête",
    "msgVideoNotFound": "Le téléchargement de votre vidéo est en cours. Veuillez patienter quelques instants.",
    "msgGiphyNotFound": "Le téléchargement de votre GIF est en cours. Veuillez patienter quelques instants.",
    "userPref": "Mes préférences",
    "manageAccount": "Portail d'Admin",
    "analyticsPortal": "Portail d'Insights",
    "errorInvalidUrl": "Ce n'est pas une URL valide",
    "wbFooterText": "Apprentissage technique de l'ITS",
    "navigationMenu": "Menu de navigation",
    "clearHistory": "Effacer l’historique",
    "userDeniedMessage": "L'utilisateur a refusé les autorisations d'accès à la caméra et au microphone",
    "pushNotification": "Notifications poussées",
    "viewDetail": "Afficher les détails",
    "contactAdmin": "Veuillez communiquer avec support@csod.com ou avec votre Admin pour obtenir de l'aide.",
    "noAppOnDomain": "L'application n'est pas affectée au domaine actuel",
    "noGuidesOnDomain": "Aucun Guides trouvés",
    "apply": "Appliquer",
    "invalidLoginCred": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses Vous recevrez un courriel pour déverrouiller votre compte ou vous pouvez réinitialiser votre mot de passe",
    "resendOTP": "Renvoi d’un mot de passe à usage unique",
    "sendFeedback": "Envoyer un feed-back",
    "guideNotExist": "Ce Guide n'est pas disponible sur cette page (Erreur : incompatibilité de domaine)",
    "cdnAccess": "<b>Nous sommes désolés.</b><br><br>Il semble que nos serveurs rencontrent un problème.<br> Nous avons été informés de l'erreur et nous la corrigerons dès que possible",
    "tourPlayError": "Le Guide ne peut pas être lu. Une erreur s'est produite lors de la récupération des détails du Guide",
    "playerMode": "Mode de lecture",
    "closePanel": "Fermer le panneau",
    "switchCreatorMode": "Passer en mode Créateur",
    "extensionContextError": "Le contexte de l'extension est invalidé. Veuillez recharger la page pour continuer",
    "otpSent": "Le mot de passe à usage unique a été renvoyé à votre adresse courriel, veuillez consulter votre boîte de réception",
    "startOver": "Recommencer",
    "yesResume": "Reprendre",
    "dontShowAgain": "Ne pas afficher à nouveau",
    "notificationHeader": "Vous avez reçu une notification!",
    "watchLater": "Regarder plus tard",
    "pushSnoozeMsg": "Cette notification sera suspendue",
    "showAgain": "Montrer à nouveau",
    "noGuidesOnThisTab": "Il n'y a pas de notifications sur cette page",
    "iAgree": "Je suis d’accord",
    "viewMore": "Afficher plus",
    "lostInternetConnection": "Connexion perdue avec le serveur. Veuillez vous reconnecter et réessayer",
    "next": "Suivant",
    "recent": "Récent",
    "older": "Plus anciens",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "Effacer",
    "tooltipDontShowAgain": "Les notifications n'apparaissent plus. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher à nouveau »",
    "tooltipWatchLater1": "Les notifications sont suspendues pendant",
    "tooltipWatchLater2": "et apparaîtront ensuite. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher à nouveau »",
    "hour": "heure",
    "hours": "heures",
    "insightsTracker": "Outil de suivi Insights",
    "slideshow": "Diaporama",
    "powerFormOldData": "Données existantes",
    "powerFormNewData": "Utilisez ce formulaire pour saisir de nouvelles données",
    "powerFormNewDataMore": "Si vos données existantes ne sont pas visibles, veuillez cliquer sur la flèche en haut à gauche pour afficher vos données. Les données doivent ensuite être copiées dans le format à puces autorisé.",
    "powerFormTitle": "Assistant à la saisie des données",
    "powerFormMandatory": "Il s'agit d'un champ obligatoire, avec une limite maximale de caractères.",
    "belongToOtherApp": "Ce Guide est créé sur {TOURURL}, qui appartient à l'application {APPNAME}. Veuillez copier ce Guide dans cette application et réessayer.",
    "setDomain": "Si vous êtes sûr que le {TOURURL} doit être ajouté dans les paramètres du domaine de l'application actuelle, veuillez l'ajouter et réessayer.",
    "on": "Activé",
    "off": "Désactivé",
    "btnPrev": "Précédent",
    "btnPrevious": "Précédent",
    "taskList": "Liste de tâches",
    "unprocessedVideo": "Veuillez patienter pendant le traitement de votre vidéo.",
    "searchResult": "Résultat de la recherche",
    "pleaseWait": "Veuillez patienter!",
    "mediaDownloadMsg": "pendant que nous préparons vos fichiers pour le téléchargement",
    "mediaFileNotFound": "Fichier multimédia non trouvé",
    "searchInFolder": "Rechercher dans le dossier",
    "currentPageSearchPlaceholder": "Rechercher le(s) Guide(s) disponible(s) sur la page actuelle",
    "brandLogo": "Logo de la marque",
    "accessibility": "Accessibilité",
    "replay": "Relire",
    "defaultGreetingMessage": "Hé! Bienvenue dans MyGuide. Comment puis-je vous aider? N'oubliez pas que je suis un robot.",
    "defaultErrorMessage": "Je suis désolé, je n'ai pas compris. Pourriez-vous être plus précis?",
    "greetingMessage": "Hé! Bienvenue dans MyGuide. Comment puis-je vous aider? N'oubliez pas que je suis un robot.",
    "errorMessage": "Je suis désolé, je n'ai pas compris. Pourriez-vous être plus précis?",
    "guideLnkToRedirect": "Utilisez le lien suivant pour rediriger vers la page et lire le guide",
    "otpTimer": "Vous pouvez réessayer dans",
    "seconds": "secondes",
    "limitWarning": "Vous avez atteint la limite maximale de tentatives infructueuses",
    "startBotLbl": "Démarrer le robot",
    "doitForMeWarning": "DoItForMe n’est pas disponible pour les étapes d’image, de vidéo et d’enquête.",
    "playNextBotTour": "Jouer le prochain tour de bot",
    "includeScreen": "Inclure une capture d’écran",
    "feedbackPlaceholder": "Avez-vous une rétroaction? Nous serions ravis de l’entendre!",
    "feedbackOptBtn": "Cliquez pour mettre en évidence ou masquer les informations",
    "highlight": "Surligner",
    "send": "Envoyer",
    "done": "Fait",
    "hide": "Masquer",
    "multiSelectOptionError": "Veuillez sélectionner au moins une option",
    "loginNext": "Suivant",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Entrer le Captcha",
    "captchaError": "Veuillez entrer un captcha valide",
    "allGuides": "Tous Guides",
    "helpCenter": "Centre d’aide",
    "feedbackRequired": "Veuillez saisir votre rétroaction.",
    "default": "Valeur par défaut",
    "feedbackImgErrorMsg": "La capture d’écran n’a pas pu être jointe à votre rétroaction en raison d’un problème lié au navigateur. Veuillez recharger la page, puis cliquez sur l’extension Guide pour l’ouvrir dans la barre d’action de Chrome et recapturez la capture d’écran pour nous faire part de votre rétroaction.",
    "tranportURlRedirectionConfirm": "Rediriger vers l’URL de l’étape de transport",
    "guideContinueConfirm": "Continuer avec le guide",
    "autoplay": "Lecture automatique",
    "focus": "Mise au point",
    "zoomOut": "Vous ne pouvez pas diminuer le niveau de zoom",
    "zoomIn": "Vous ne pouvez pas augmenter le niveau de zoom",
    "charM": "m",
    "charS": "s",
    "focusTooltip": "Ce bouton ne fonctionne que lorsque l’image est agrandie."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.fr_FR = {
    "403": "Nous avons rencontré un problème avec cette demande. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "405": "Nous avons rencontré un problème lors du traitement de cette demande. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "429": "Trop de demandes",
    "1003": "Nous avons rencontré un problème lors de l’authentification. Veuillez vous reconnecter et réessayer. Si le problème persiste, actualisez la page et réessayez",
    "1005": "<b>Nous sommes désolés</b> <br><br>il semble qu’il y ait un problème avec la demande ou avec nos serveurs.<br> Nous avons été informés de l’erreur et nous la corrigerons dès que possible",
    "1007": "Nous avons rencontré un problème lors de l’authentification. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "1009": "L’email de l’utilisateur n’est pas vérifié",
    "1014": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "1017": "Nous avons rencontré un problème lors de l’authentification. Veuillez vous reconnecter et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "1018": "Vous avez atteint la limite maximale du nombre d’étapes pouvant être créées",
    "2000": "Nous avons rencontré un problème avec cette demande. Nous avons été prévenus. Veuillez réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2001": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses, vous recevrez un email pour déverrouiller votre compte, ou vous pourrez réinitialiser votre mot de passe",
    "2002": "Mot de passe à usage unique non valide ou expiré",
    "2003": "Le fichier téléversé n’est pas une image valide (les fichiers JPG et PNG sont pris en charge)",
    "2004": "Session expirée",
    "2005": "Nous n’avons pas pu suivre cet utilisateur. Veuillez actualiser et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2006": "L’adresse email est incorrecte. Veuillez réessayer",
    "2007": "Rôle utilisateur non valide. Veuillez réessayer",
    "2008": "Vous devez spécifier un type de tâche correct",
    "2009": "L’application donnée n’est pas valide ; elle a pu être supprimée ou n’a jamais existé",
    "2010": "Paramètres d’entrée non valides. Veuillez actualiser et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2011": "L’organisation donnée n’est pas valide ; elle a pu être supprimée ou n’a jamais existé",
    "2012": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2013": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2014": "Paramètre requis pour super Admin [organization_id]",
    "2015": "Le contenu des données d’image fourni n’est pas valide. Veuillez revérifier et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2016": "Domaine non valide",
    "2017": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2018": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2019": "Ce que vous recherchez n’existe pas ou a peut-être été supprimé",
    "2020": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2021": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de cette demande. Veuillez signaler le problème à support@csod.com",
    "2022": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez entrer une URL d’équipe valide",
    "2023": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de cette demande. Veuillez signaler le problème à support@csod.com",
    "2024": "La taille du fichier ne doit pas dépasser 5 Mo.",
    "2025": "Il y avait un paramètre manquant ou non valide dans la requête. Veuillez saisir une URL correcte.",
    "2026": "Le mot de passe doit contenir 8 caractères au minimum, dont au moins une majuscule, une minuscule et une valeur numérique",
    "2027": "Mot de passe non valide",
    "2028": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2029": "La ville que vous avez indiquée n’est pas prise en charge",
    "2030": "Il y avait un paramètre manquant ou non valide dans la requête",
    "2031": "Le serveur d’authentification a rencontré une erreur inattendue lors de la tentative de traitement de ce paramètre. Veuillez signaler le problème à support@csod.com",
    "2032": "Paramètre non valide [file_id]",
    "2033": "URL non valide. Veuillez revérifier et réessayer",
    "2034": "Le serveur d’authentification a rencontré une erreur inattendue lors du traitement de ces paramètres. Veuillez signaler le problème à support@csod.com",
    "2035": "Le serveur d’authentification a rencontré une erreur inattendue lors du traitement de cette AppKey. Veuillez signaler le problème à support@csod.com",
    "2036": "Le serveur d’authentification a rencontré une erreur inattendue. Veuillez actualiser cette page. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "2044": "Il semble que nous ayons égaré la traduction de cette étape. Veuillez basculer sur la langue par défaut et retraduire l’étape, ou contactez notre assistance clientèle pour plus de détails.",
    "2054": "Un ancien et un nouveau mot de passe ne peuvent pas être identiques",
    "2200": "Nous avons rencontré un problème lors de l’accès aux commandes audio/vidéo. Veuillez vérifier les paramètres de votre navigateur et réessayer. Si le problème persiste, écrivez-nous à l’adresse support@csod.com pour nous le signaler",
    "3001": "Le Guide sera bientôt disponible à l’exportation. Pour vérifier l’état, accédez à « État de la tâche » dans le menu du compte.",
    "3002": "Le téléversement a commencé. Veuillez ne pas actualiser ou fermer le navigateur tant que le téléversement n’est pas terminé. Vous pouvez vérifier l’état de l’importation une fois celle-ci terminée",
    "3003": "L’utilisateur existe déjà",
    "3004": "L’identifiant de messagerie est déjà vérifié",
    "3005": "Cette URL est en conflit avec une autre configuration d’application, veuillez essayer d’ajouter une autre URL.",
    "3006": "Le dossier doit appartenir à la même application",
    "3007": "Le domaine existe déjà",
    "3008": "Vous avez atteint la limite maximale du nombre de Guide(s) pouvant être créé(s)",
    "3009": "Un Survey existe déjà dans le Guide concerné",
    "3010": "L’étape doit appartenir au même Guide",
    "3011": "Cette organisation est suspendue. Veuillez contacter votre Admin",
    "3012": "Le ou les Guide(s) doi(ven)t appartenir au même dossier",
    "3013": "Ce Guide existe déjà avec la paire donnée de nom d’objets et de champ",
    "3014": "Utilisateur suspendu",
    "3015": "Utilisateur déjà vérifié",
    "3017": "Le mot de passe à usage unique a été envoyé avec succès à votre adresse email",
    "3018": "Le rôle existe déjà",
    "3019": "Le pays existe déjà",
    "3020": "La ville existe déjà",
    "3023": "Votre organisation n’est pas vérifiée. Pour obtenir de l’aide, veuillez utiliser l’adresse support@csod.com",
    "3024": "Le fichier JSON n’est pas disponible pour cette organisation",
    "3025": "Nous avons rencontré un problème lors de l’authentification. Veuillez réessayer. Si le problème persiste, actualisez la page et réessayez",
    "3026": "Le fichier JSON n’est pas disponible pour ce Guide",
    "3027": "Aucune étape disponible. Créez au moins une étape pour publier le Guide",
    "3028": "Limite maximale atteinte du nombre de présentations de visite",
    "3033": "Identifiants non valides. Veuillez nous contacter à l’adresse support@csod.com ou votre Admin pour obtenir plus d’assistance.",
    "3047": "Votre compte a été temporairement verrouillé en raison d’un trop grand nombre d’échecs de connexion. Nous vous avons envoyé un email indiquant les étapes requises pour le déverrouiller. Pour plus d’assistance, veuillez nous contacter à l’adresse support@csod.com",
    "3061": "Vous pouvez épingler jusqu’à 5 Guide(s) seulement",
    "3068": "Votre ancien mot de passe a expiré. Définissez un nouveau mot de passe pour vous connecter.",
    "4000": "La sous-catégorie ne peut pas être créée dans un dossier si un Guide est déjà créé",
    "4001": "Si un utilisateur est déjà un super Admin, vous ne pouvez pas modifier le rôle d’utilisateur",
    "4002": "Cette action n’est pas autorisée sur un Guide publié",
    "4003": "Le Guide verrouillé ne peut pas être publié",
    "4004": "Cette action n’est pas autorisée sur un dossier publié. Veuillez annuler sa publication",
    "4006": "L’application doit appartenir à l’organisation donnée",
    "4007": "Vous n’êtes pas autorisé(e) à effectuer cette action",
    "4008": "L’action n’est pas autorisée pour cette sous-catégorie",
    "4009": "Le Guide doit être publié",
    "4010": "Le Guide ne peut pas être créé dans un dossier disposant d’une sous-catégorie",
    "4011": "Pour créer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4012": "Pour modifier une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4013": "Pour supprimer une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4014": "Pour copier et coller une ou plusieurs étape(s), vous devez déverrouiller ce Guide",
    "4020": "Un brouillon de ce Guide existe déjà ; plusieurs brouillons d’un Guide ne sont pas autorisés.",
    "4021": "Valeurs non valides du paramètre [envs]",
    "currentPage": "Page actuelle",
    "myChat": "MyChat",
    "import": "Importer",
    "export": "Exporter",
    "redirectLivetour": "Consulter en direct",
    "guideNotAvailable": "Guide non disponible sur l’URL actuelle. Voulez-vous accéder à l’URL du Guide ?",
    "downloadPPT": "Télécharger au format PPT",
    "btnYes": "Oui",
    "btnNo": "Non",
    "inApp": "Dans l’application",
    "live": "En direct",
    "resume": "Reprendre",
    "tourCloseConfirm": "Voulez-vous vraiment fermer ce Guide ?",
    "notifSnoozeDonotMsg": "Veuillez nous dire si vous souhaitez regarder cela plus tard ou ne jamais afficher la notification ?",
    "surveyThanksMessage": "Merci d’avoir fourni votre réponse",
    "testMePassedMessage": "Félicitations ! Vous avez réussi",
    "testMeFailedMessage": "Oups ! Vous avez échoué",
    "testMeGuideEfficiency": "Efficacité du test :",
    "testMeGuideEffectiveness": "Efficacité du test :",
    "testMeTestTime": "Durée du test",
    "testMeExpectedTime": "Durée prévue",
    "testMeStepsTaken": "Mesures prises",
    "testMeExpectedSteps": "Étapes attendues",
    "testMeRetakeTestBtn": "Reprendre le test",
    "testMeResultTitle": "Résultat de MyTest",
    "ConfirmIfTestMeModeRidirect": "Guide non disponible sur l’URL actuelle. Voulez-vous vous rediriger la navigation vers l’URL du Guide ?",
    "feedCmt": "Nous accordons beaucoup d’importance à votre feed-back !<br> Veuillez nous dire ce que vous en pensez en 500 caractères ou moins",
    "doNotShowAgain": "Ne plus afficher",
    "neverShowAgain": "Ne plus jamais afficher",
    "skipGuide": "Ignorer le Guide",
    "surveyErrorMsg": "Veuillez répondre à au moins une question",
    "redirect": "Rediriger",
    "liveGuide": "Guide en direct",
    "question": "Question",
    "exitGuide": "Quitter le Guide",
    "continueGuide": "Poursuivre avec le Guide",
    "stop": "Stop",
    "characters": "Caractères :",
    "survey": "Survey",
    "testMeStopMessage": "Vous êtes en mode TestMe, cliquez sur STOP pour quitter",
    "testMeFailedErrorMessage": "Vous n’avez pas pu atteindre l’étape de l’objectif.<br>Vous avez {CORRECT_STEPS} étapes correctes sur {TOTAL_STEPS}.",
    "surveyCommentPlaceholder": "Effectuez votre saisie ici ! 500 caractères maximum",
    "pushTourSnoozeMsg": "Cette tournée de lancement auto sera mise en attente pendant",
    "of": "sur",
    "wbMplayerTitle": "Didacticiels",
    "wbDragTooltip": "Positionnez ce lecteur n’importe où sur la page par glisser-déposer",
    "dontShowEdResult": "Je ne veux pas voir cela",
    "mPlayerHeaderTitle": "Micro-lecteur",
    "closePreview": "Fermer la prévisualisation",
    "elmNotFound": "Il semble que nous ne puissions pas trouver l’élément pour l’étape :",
    "elmNotFoundInfo": "assurez-vous que vous êtes sur la bonne page pour exécuter cette étape. Vérifiez également si vous pouvez voir l’élément sélectionné",
    "notExists": "N’existe pas",
    "elmNotFoundHeader": "Élément d’étape introuvable",
    "goToStep": "Aller à l’étape",
    "notFoundStep": "Impossible de trouver l’élément pour l’étape #",
    "pleaseReselect": "Veuillez essayer de resélectionner l’élément.",
    "stepRuleMatchErr": "Erreur de configuration : les règles d’étape ne correspondent pas",
    "guideRuleMatchErr": "Erreur de configuration : les règles de Guide ne correspondent pas",
    "stepNotFoundRedirect": "Étape introuvable sur cette page. Souhaitez-vous rediriger la navigation ?",
    "branchStepMessagePopup": "Veuillez sélectionner l’une des tâches ci-dessous pour continuer",
    "btnSkip": "Ignorer",
    "kindlyHoverPopup": "Veuillez survoler cet élément pour ouvrir la fenêtre contextuelle",
    "stepPlayIsdefinedPopover": "L’étape que vous allez exécuter est définie dans la fenêtre « popover »",
    "elmNotFoundWestpac": "Étape introuvable - Ce Guide va prendre fin",
    "findingElementMessage": "Étape en cours de recherche. . .",
    "badDomain": "Le domaine actuel et l’URL ne sont pas autorisés à exécuter MyGuide. Contactez votre Admin pour obtenir de l’aide.",
    "hostJsError": "Il semble y avoir une erreur sur la page Web. MyGuide ne peut pas continuer",
    "remember": "Mémoriser mon profil",
    "forgotPass": "Mot de passe oublié ?",
    "dontHavAcc": "Vous n’avez pas de compte ?",
    "loginTitle": "Connexion",
    "loginOtpScreenTitle": "Vérifiez le mot de passe à usage unique pour vous connecter",
    "forgetPassTitl": "Réinitialiser le mot de passe",
    "placeholderEmail": "ID de messagerie",
    "placeholderPassword": "Mot de passe",
    "placeholderNewPassword": "Nouveau mot de passe",
    "placeholderCurrentPassword": "Mot de passe actuel",
    "placeholderFirstname": "Prénom",
    "placeholderLastname": "Nom",
    "placeholderPasswordC": "Confirmation du mot de passe",
    "btnCancel": "Annuler",
    "btnPayment": "Plan de mise à niveau",
    "btnSubmit": "Envoyer",
    "btnLogin": "Connexion",
    "termsOfUse": "Conditions d’utilisation",
    "andLabel": "et",
    "policyPrivacy": "la politique de confidentialité d’EdCast",
    "passwordError": "Le mot de passe doit comporter 8 chiffres",
    "confirmPasswordError": "Le mot de passe et la confirmation du mot de passe doivent être identiques",
    "firstnameError": "Veuillez saisir un prénom valide",
    "lastnameError": "Veuillez saisir un nom valide",
    "emailError": "Veuillez entrer un identifiant de messagerie valide",
    "orgError": "Veuillez entrer une URL d’organisation valide",
    "otpError": "Veuillez entrer un mot de passe à usage unique valide",
    "placeholderOtp": "Entrez votre mot de passe à usage unique ici",
    "otpSentDesc": "Si vous avez fourni une adresse email valide, un lien de réinitialisation vous sera envoyé.<br>Si vous ne recevez pas l’email dans un délai de quelques minutes, veuillez vérifier dans votre dossier spam si vous avez reçu un email de",
    "btnOtpVerify": "Vérifier le mot de passe à usage unique",
    "alreadyHavAcc": "Vous avez déjà un compte ?",
    "smartbiteMessageError": "Veuillez entrer un message",
    "smartbiteLinkError": "Veuillez entrer un lien valide",
    "noGuidesOnThisPage": "Aucun Guides n’est disponible sur cette page !",
    "clickOn": "Cliquer sur",
    "contactUs": "Contactez-nous",
    "search": "Rechercher",
    "noRecordFound": "Aucun enregistrement trouvé",
    "category": "Dossier",
    "subCategory": "Sous-dossier",
    "confirmPasswordRequired": "Confirmation du mot de passe requise",
    "logInWithSSO": "Connectez-vous à l’aide d’une authentification SSO",
    "inputPlaceHolderSearch": "Rechercher n’importe quel Guide",
    "noGuideAvailableFor": "Aucun Guide ne correspond à votre recherche",
    "tryModifyingYourSearch": "Essayez de modifier vos critères de recherche",
    "signInVerifyYourEmail": "Cet identifiant de messagerie n’a pas été vérifié. Consultez votre email pour plus de détails",
    "signInVerifyYourAccount": "Nous vous avons envoyé un email contenant un mot de passe à usage unique. Veuillez vérifier votre compte pour terminer le processus d’inscription",
    "maintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "back": "Retour",
    "changePassword": "Modifier le mot de passe",
    "startTestAuto": "Démarrer les tests d’automatisation",
    "msgPasswordChangedSuccess": "Votre mot de passe a été modifié avec succès",
    "msgConfirmNewPasswordError": "Le mot de passe de confirmation et le nouveau mot de passe doivent être identiques",
    "enterUrl": "Entrez l’URL de l’équipe",
    "dragPlaceholderDropThis": "Déposez ceci",
    "dragPlaceholderHere": "ici",
    "termsOfService": "Conditions",
    "versionText": "Version",
    "videoStepSuccessMessage": "Votre étape a été créée avec succès",
    "importSuccessMessage": "Le Guide a été téléchargé avec succès. Accédez à l’état de la tâche pour vérifier l’état de l’importation",
    "worldBankHelpSupport": "Certains outils, tels que les Tooltips, ne peuvent être visualisés que dans l’interface",
    "helpSupport": "Aide & assistance",
    "page": "page",
    "selectAnApplication": "Sélectionner une application",
    "refresh": "Actualiser",
    "loginBtn": "Connexion",
    "account": "Compte",
    "taskStatus": "État de la tâche",
    "logoutBtn": "Déconnexion",
    "app": "Application :",
    "firstStep": "Première étape",
    "lastStep": "Dernière étape",
    "startTest": "Démarrer le test",
    "noInappStepInGuide": "TestMe ne peut pas poursuivre, car il n’y a pas d’étape en ligne dans ce guide",
    "settingBtn": "Paramètres avancés",
    "orgSetting": "Paramètres de l’organisation",
    "close": "Fermer",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "Document",
    "downloadBlog": "Blog",
    "downloadTxt": "Texte brut",
    "serviceErrorMessage": "Oups ! Une erreur s’est produite. Réessayez ultérieurement. Vous pouvez également nous envoyer un email à l’adresse support@csod.com pour obtenir une assistance",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Aucun Guide n’est encore créé !",
    "noCategoryCreatedYet": "Aucun dossier n’est encore créé !",
    "chatbot": "MyChat",
    "notAutorised": "Vous ne disposez pas de l’accès requis, veuillez contacter l’Admin",
    "ok": "OK",
    "apiError": "Erreur de configuration. Veuillez contacter l’Admin",
    "select": "Sélectionner",
    "mute_unmute": "Couper/Activer le son",
    "privacyPolicy": "Confidentialité & cookies",
    "privacyPolicyText": "MyGuide utilise des cookies. En poursuivant, vous acceptez nos conditions d’utilisation et notre politique de confidentialité et vous nous autorisez à utiliser des cookies",
    "terms": "Conditions",
    "westPecErrorMessage": "Vous n’êtes pas autorisé(e) à accéder à cette application. Veuillez vous connecter au réseau de Westpac",
    "noApp": "Aucune application trouvée",
    "role": "Rôle :",
    "all": "Tout",
    "video": "Vidéo",
    "course": "Cours",
    "article": "Article",
    "image": "Image",
    "pathways": "Parcours",
    "preview": "Prévisualisation",
    "more": "Plus",
    "history": "Historique",
    "publish": "Publier",
    "selectGuideLink": "Veuillez sélectionner un Guide à lier",
    "selectGuideBeforeSubmit": "Veuillez sélectionner un Guide avant envoi",
    "change": "Modifier",
    "checkNow": "Vérifier maintenant",
    "minutes": "minutes",
    "clickHere": "cliquez ici",
    "youAlmostDone": "Vous avez presque fini !",
    "setOrg": "pour configurer votre organisation",
    "apps": "Applications",
    "me": "Moi",
    "playStep": "Exécuter l’étape",
    "miniPlayerHelp": "Aide",
    "defaultMiniPlayerHelp": "Aide",
    "defaultConfirmIfSlideshowOrRedirect": "Étape non disponible sur l’URL actuelle.<br>Voulez-vous passer à l’étape URL ou consulter le diaporama ?",
    "defaultServiceErrorMessage": "Oups ! Une erreur s’est produite. Réessayez ultérieurement. Vous pouvez également nous envoyer un email à l’adresse support@csod.com pour obtenir une assistance",
    "defaultMaintenanceMessage": "Maintenance en cours. Veuillez nous contacter via l’adresse support@csod.com",
    "userNotFollowingGuideMessage": "Il semble que vous exécutiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "defaultUserNotFollowingGuideMessage": "Il semble que vous exécutiez des étapes qui ne font pas partie de ce Guide. Si vous ne souhaitez plus suivre le Guide, cliquez sur Quitter le Guide",
    "resumeGuide": "Reprendre avec le Guide",
    "defaultResumeGuideMessage": "Reprendre avec le Guide",
    "backToLogin": "Revenir à la connexion",
    "filters": "Filtres",
    "thisApp": "Cette application",
    "thisWebsite": "Ce site Web",
    "maxFreeTourLimit": "Limite maximale de présentations atteinte",
    "passwordRegexCheck": "Le mot de passe doit contenir 8 caractères au minimum, dont au moins une majuscule, une minuscule et une valeur numérique",
    "countLimit": "99+",
    "microsoftServiceKey": "Veuillez entrer votre clé d’abonnement Microsoft Cognitive Services Speech",
    "numberOfImgFile": "Le nombre de fichiers image et de fichiers texte doit être le même",
    "availableOn": "Disponible sur",
    "tooltipUnpubWorkflowTitle": "Workflow non publié",
    "tooltipUnpubParentWorkflowTitle": "Workflow publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentWorkflowTitle": "Workflow publié, dossier publié",
    "tooltipUnpubTooltipTitle": "Tooltip non publiée",
    "tooltipUnpubParentTooltipTitle": "Tooltip publiée, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTooltipTitle": "Tooltip publiée, dossier publié",
    "tooltipUnpubTutorialTitle": "Tutorial non publié",
    "tooltipUnpubParentTutorialTitle": "Tutorial publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentTutorialTitle": "Tutorial publié, dossier publié",
    "tooltipUnpubSubFolderTitle": "Sous-dossier non publié",
    "tooltipUnpubSubFolderDesc": "Utilisez des sous-dossiers pour organiser les Guides",
    "tooltipUnpubParentSubFolderTitle": "Sous-dossier publié, dossier(s) parent(s) non publié(s)",
    "tooltipPubParentSubFolderTitle": "Sous-dossier publié, dossier publié",
    "tooltipPubParentSubFolderDesc": "Organise les Guides",
    "exitSurvey": "Quitter le Survey",
    "disable": "Désactiver",
    "instructionExitSurvey": "Quitter le Survey s’affiche lorsqu’un utilisateur quitte précocement un guide",
    "msgVideoNotFound": "Votre vidéo est en cours de téléversement, veuillez essayer ultérieurement",
    "msgGiphyNotFound": "Votre GIF est en cours de téléversement, veuillez essayer ultérieurement",
    "userPref": "Mes préférences",
    "manageAccount": "Portail de l’Admin",
    "analyticsPortal": "Portail des Insights",
    "errorInvalidUrl": "URL non valide",
    "wbFooterText": "Apprentissage technique ITS",
    "navigationMenu": "Menu de navigation",
    "clearHistory": "Effacer l’historique",
    "userDeniedMessage": "L’utilisateur a refusé les autorisations d’accès à la caméra et au microphone",
    "pushNotification": "Notifications Push",
    "viewDetail": "Afficher les détails",
    "contactAdmin": "Veuillez nous contacter à l’adresse support@csod.com ou votre Admin pour obtenir plus d’assistance",
    "noAppOnDomain": "L’application n’est pas attribuée au domaine actuel",
    "noGuidesOnDomain": "Guides introuvables",
    "apply": "Appliquer",
    "invalidLoginCred": "Identifiants de connexion non valides. Votre compte sera verrouillé après plusieurs tentatives infructueuses, vous recevrez un email pour déverrouiller votre compte, ou vous pourrez réinitialiser votre mot de passe",
    "resendOTP": "Renvoyer le mot de passe à usage unique",
    "sendFeedback": "Envoyer un feed-back",
    "guideNotExist": "Ce Guide n’est pas disponible sur cette page (erreur : incompatibilité de domaine)",
    "cdnAccess": "<b>Nous sommes désolés</b> <br><br>Il semble qu’il y ait un problème avec nos serveurs.<br> Nous avons été informés de l’erreur et nous la corrigerons dès que possible",
    "tourPlayError": "Le Guide ne peut pas être consulté. Erreur lors de la récupération des détails du Guide",
    "playerMode": "Mode lecteur",
    "closePanel": "Fermer le panneau",
    "switchCreatorMode": "Passer en mode Auteur",
    "extensionContextError": "Le contexte d’extension est invalidé. Veuillez recharger la page pour continuer",
    "otpSent": "Le mot de passe à usage unique a été renvoyé à votre adresse email, veuillez vérifier votre boîte de réception",
    "startOver": "Recommencer",
    "yesResume": "Reprendre",
    "dontShowAgain": "Ne plus afficher",
    "notificationHeader": "Vous avez reçu une notification !",
    "watchLater": "Regarder plus tard",
    "pushSnoozeMsg": "Cette notification sera mise en attente pendant",
    "showAgain": "Afficher de nouveau",
    "noGuidesOnThisTab": "Il n’y a pas de notifications sur cette page",
    "iAgree": "Je suis d’accord",
    "viewMore": "Afficher plus",
    "lostInternetConnection": "Perte de la connexion au serveur. Veuillez vous reconnecter et réessayer",
    "next": "Suivant",
    "recent": "Récent",
    "older": "Plus ancien",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "Effacer",
    "tooltipDontShowAgain": "Les notifications n’apparaîtront plus. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher de nouveau »",
    "tooltipWatchLater1": "Les notifications sont mises en attente pendant",
    "tooltipWatchLater2": "et apparaîtra ensuite. Pour activer une notification maintenant, survolez-la et cliquez sur « Afficher de nouveau »",
    "hour": "heure",
    "hours": "heures",
    "insightsTracker": "Suivi des Insights",
    "slideshow": "Diaporama",
    "powerFormOldData": "Données existantes",
    "powerFormNewData": "Utilisez ce formulaire pour saisir de nouvelles données",
    "powerFormNewDataMore": "Si vos données existantes ne sont pas visibles, veuillez cliquer sur la flèche en haut à gauche pour afficher vos données. Les données doivent ensuite être copiées dans le format à puces autorisé.",
    "powerFormTitle": "Assistant de saisie de données",
    "powerFormMandatory": "Ceci est un champ obligatoire, limite maximale de caractères",
    "belongToOtherApp": "Ce Guide est créé sur {TOURURL}, qui appartient à l’application {APPNAME}. Veuillez copier ce Guide dans cette application et réessayez.",
    "setDomain": "Si vous êtes certain(e) que {TOURURL} doit être ajouté aux paramètres actuels du domaine d’application, veuillez l’ajouter et réessayer",
    "on": "ACTIVÉ",
    "off": "DÉSACTIVÉ",
    "btnPrev": "Préc",
    "btnPrevious": "Précédent",
    "taskList": "Liste de tâches",
    "unprocessedVideo": "Veuillez patienter pendant le traitement de votre vidéo.",
    "searchResult": "Résultat de la recherche",
    "pleaseWait": "Veuillez patienter !",
    "mediaDownloadMsg": "Pendant que nous préparons vos fichiers pour le téléchargement",
    "mediaFileNotFound": "Fichier multimédia introuvable",
    "searchInFolder": "Rechercher dans le dossier",
    "currentPageSearchPlaceholder": "Rechercher un ou plusieurs Guide(s) disponible(s) sur la page en cours",
    "brandLogo": "Logo de la marque",
    "accessibility": "Accessibilité",
    "replay": "Relecture",
    "defaultGreetingMessage": "Hé ! Bienvenue dans MyGuide. Comment puis-je t’aider ? N’oubliez pas que je suis un bot.",
    "defaultErrorMessage": "Je suis désolé, je n’ai pas compris. Pourriez-vous être plus précis ?",
    "greetingMessage": "Hé ! Bienvenue dans MyGuide. Comment puis-je t’aider ? N’oubliez pas que je suis un bot.",
    "errorMessage": "Je suis désolé, je n’ai pas compris. Pourriez-vous être plus précis ?",
    "guideLnkToRedirect": "Utilisez le lien suivant pour rediriger la navigation vers la page et activer le guide",
    "otpTimer": "Vous pouvez réessayer dans",
    "seconds": "secondes",
    "limitWarning": "Vous avez atteint la limite maximale du nombre de tentatives ayant échoué",
    "startBotLbl": "Démarrer le robot",
    "doitForMeWarning": "DoItForMe n'est pas disponible pour les étapes image, vidéo et sondage.",
    "playNextBotTour": "Jouer le prochain tour de bot",
    "includeScreen": "Inclure une capture d'écran",
    "feedbackPlaceholder": "Avez-vous un feed-back ? Nous serions ravis de l'entendre !",
    "feedbackOptBtn": "Cliquez pour mettre en évidence ou masquer les informations",
    "highlight": "Surligner",
    "send": "Envoyer",
    "done": "Terminé",
    "hide": "Masquer",
    "multiSelectOptionError": "Veuillez sélectionner au moins une option",
    "loginNext": "Suivant",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Entrer le Captcha",
    "captchaError": "Veuillez entrer un captcha valide",
    "allGuides": "Tous Guides",
    "helpCenter": "Centre d’aide",
    "feedbackRequired": "Veuillez entrer votre feed-back.",
    "default": "Valeur par défaut",
    "feedbackImgErrorMsg": "La capture d'écran n'a pas pu être jointe à vos commentaires en raison d'un problème lié au navigateur. Veuillez recharger la page, puis cliquez sur l'extension Guide et ouvrez-la à partir de la barre d'action Chrome, puis reprenez la capture d'écran pour le feed-back.",
    "tranportURlRedirectionConfirm": "Redirection vers l'URL de l'étape de transport",
    "guideContinueConfirm": "Continuer avec le guide",
    "autoplay": "Lecture automatique",
    "focus": "Premier plan",
    "zoomOut": "Vous ne pouvez pas diminuer le niveau de zoom",
    "zoomIn": "Vous ne pouvez pas augmenter le niveau de zoom",
    "charM": "m",
    "charS": "s",
    "focusTooltip": "Ce bouton ne fonctionne que lorsque l'image est zoomée."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.hi_IN = {
	currentPage: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0943\u0937\u094d\u0920",
	myChat: "mychat",
	import: "\u0906\u092f\u093e\u0924",
	export: "\u0928\u093f\u0930\u094d\u092f\u093e\u0924",
	redirectLivetour: "\u0932\u093e\u0907\u0935 \u0916\u0947\u0932\u0947\u0902",
	guideNotAvailable: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u094d\u092f\u093e \u0906\u092a \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e URL \u092a\u0930 \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	downloadPPT: "PPT \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0930\u0947\u0902",
	btnYes: "\u0939\u093e\u0901",
	btnNo: "\u0928\u0939\u0940\u0902",
	inApp: "\u0907\u0928-\u0910\u092a",
	live: "\u0930\u0939\u0928\u093e",
	resume: "\u0938\u093e\u0930",
	tourCloseConfirm: "\u0915\u094d\u092f\u093e \u0906\u092a \u0935\u093e\u0938\u094d\u0924\u0935 \u092e\u0947\u0902 \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u094b \u092c\u0902\u0926 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	notifSnoozeDonotMsg: "\u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0947\u0902 \u092c\u0924\u093e\u090f\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u092a \u0907\u0938\u0947 \u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u0947\u0916\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0915\u092d\u0940 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0928\u0939\u0940\u0902 \u0926\u093f\u0916\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	surveyThanksMessage: "\u0905\u092a\u0928\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0927\u0928\u094d\u092f\u0935\u093e\u0926",
	testMePassedMessage: "\u092c\u0927\u093e\u0907\u092f\u093e\u0901! \u0906\u092a \u092a\u093e\u0938 \u0939\u094b \u0917\u090f",
	testMeFailedMessage: "\u0909\u092b\u093c! \u0906\u092a \u0905\u0938\u092b\u0932 \u0930\u0939\u0947",
	testMeGuideEfficiency: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u0926\u0915\u094d\u0937\u0924\u093e:",
	testMeGuideEffectiveness: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u092d\u093e\u0935\u0936\u0940\u0932\u0924\u093e:",
	testMeTestTime: "\u092a\u0930\u0940\u0915\u094d\u0937\u093e \u0915\u093e \u0938\u092e\u092f",
	testMeExpectedTime: "\u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0938\u092e\u092f",
	testMeStepsTaken: "\u0909\u0920\u093e\u090f \u0917\u090f \u0915\u0926\u092e",
	testMeExpectedSteps: "\u0905\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0915\u0926\u092e",
	testMeRetakeTestBtn: "\u0930\u0940\u091f\u0947\u0915 \u091f\u0947\u0938\u094d\u091f",
	testMeResultTitle: "\u092e\u0947\u0930\u093e \u092a\u0930\u0940\u0915\u094d\u0937\u093e \u092a\u0930\u093f\u0923\u093e\u092e",
	ConfirmIfTestMeModeRidirect: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u094d\u092f\u093e \u0906\u092a \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e URL \u092a\u0930 \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	feedCmt: "\u0906\u092a\u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0915\u094d\u0930\u093f\u092f\u093e \u0939\u092e\u093e\u0930\u0947 \u0932\u093f\u090f \u092e\u0942\u0932\u094d\u092f\u0935\u093e\u0928 \u0939\u0948!<br> \u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0947\u0902 \u092c\u0924\u093e\u090f\u0902 \u0915\u093f \u0906\u092a\u0928\u0947 500 \u0935\u0930\u094d\u0923\u094b\u0902 \u092f\u093e \u0909\u0938\u0938\u0947 \u0915\u092e \u092e\u0947\u0902 \u0915\u094d\u092f\u093e \u0938\u094b\u091a\u093e",
	doNotShowAgain: "\u092b\u093f\u0930 \u0938\u0947 \u0928 \u0926\u093f\u0916\u093e\u090f\u0901",
	neverShowAgain: "\u092b\u093f\u0930 \u0915\u092d\u0940 \u0928 \u0926\u093f\u0916\u093e\u090f\u0902",
	skipGuide: "\u0917\u093e\u0907\u0921 \u091b\u094b\u0921\u093c\u0947\u0902",
	surveyErrorMsg: "\u0915\u0943\u092a\u092f\u093e \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u092a\u094d\u0930\u0936\u094d\u0928 \u0915\u093e \u0909\u0924\u094d\u0924\u0930 \u0926\u0947\u0902",
	redirect: "\u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f",
	liveGuide: "\u0932\u093e\u0907\u0935 \u0917\u093e\u0907\u0921",
	question: "\u092a\u094d\u0930\u0936\u094d\u0928",
	exitGuide: "\u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e",
	continueGuide: "\u0917\u093e\u0907\u0921 \u091c\u093e\u0930\u0940 \u0930\u0916\u0947\u0902",
	stop: "\u0930\u0941\u0915\u094b",
	characters: "\u0935\u0930\u094d\u0923:",
	survey: "\u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923",
	testMeStopMessage: "\u0906\u092a TestMe \u092e\u094b\u0921 \u092e\u0947\u0902 \u0939\u0948\u0902, \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f STOP \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	testMeFailedErrorMessage: "\u0906\u092a \u0932\u0915\u094d\u0937\u094d\u092f \u091a\u0930\u0923 \u0924\u0915 \u0928\u0939\u0940\u0902 \u092a\u0939\u0941\u0901\u091a \u0938\u0915\u0947.<br>\u0906\u092a\u0915\u094b {TOTAL_STEPS} \u0938\u0947 {CORRECT_STEPS} \u091a\u0930\u0923 \u0938\u0939\u0940 \u092e\u093f\u0932\u0947.",
	surveyCommentPlaceholder: "\u092f\u0939\u093e\u0901 \u091f\u093e\u0907\u092a \u0915\u0930\u0947\u0902! \u0905\u0927\u093f\u0915\u0924\u092e 500 \u0935\u0930\u094d\u0923",
	pushTourSnoozeMsg: "\u0907\u0938 \u0911\u091f\u094b \u0932\u0949\u0928\u094d\u091a \u091f\u0942\u0930 \u0915\u0947 \u0932\u093f\u090f \u0924\u0948\u092f\u093e\u0930 \u0915\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	of: "\u0915\u093e",
	wbMplayerTitle: "\u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932",
	wbDragTooltip: "\u0907\u0938 \u092a\u094d\u0932\u0947\u092f\u0930 \u0915\u094b \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u0939\u0940\u0902 \u092d\u0940 \u0916\u0940\u0902\u091a\u0947\u0902 \u0914\u0930 \u091b\u094b\u0921\u093c \u0926\u0947\u0902",
	dontShowEdResult: "\u092e\u0948\u0902 \u092f\u0939 \u0928\u0939\u0940\u0902 \u0926\u0947\u0916\u0928\u093e \u091a\u093e\u0939\u0924\u093e",
	mPlayerHeaderTitle: "\u092e\u093e\u0907\u0915\u094d\u0930\u094b \u092a\u094d\u0932\u0947\u092f\u0930",
	closePreview: "\u092a\u0942\u0930\u094d\u0935\u093e\u0935\u0932\u094b\u0915\u0928 \u092c\u0902\u0926 \u0915\u0930\u0947\u0902",
	elmNotFound: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e \u091a\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u092a\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902:",
	elmNotFoundInfo: "\u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0915\u0930\u0947\u0902 \u0915\u093f \u0906\u092a \u0907\u0938 \u091a\u0930\u0923 \u0915\u094b \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u0940 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0939\u0948\u0902\u0964 \u092f\u0939 \u092d\u0940 \u091c\u093e\u0902\u091a\u0947\u0902 \u0915\u093f \u0915\u094d\u092f\u093e \u0906\u092a \u091a\u092f\u0928\u093f\u0924 \u0924\u0924\u094d\u0935 \u0926\u0947\u0916 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	notExists: "\u092e\u094c\u091c\u0942\u0926 \u0928\u0939\u0940\u0902 \u0939\u0948",
	elmNotFoundHeader: "\u091a\u0930\u0923 \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	goToStep: "\u0915\u0926\u092e \u092a\u0930 \u091c\u093e\u090f\u0902",
	notFoundStep: "\u0939\u092e \u091a\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0924\u0924\u094d\u0935 \u0928\u0939\u0940\u0902 \u0922\u0942\u0902\u0922 \u0938\u0915\u0947 #",
	pleaseReselect: "\u0915\u0943\u092a\u092f\u093e \u0924\u0924\u094d\u0935 \u0915\u093e \u092a\u0941\u0928: \u091a\u092f\u0928 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902.",
	stepRuleMatchErr: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f: \u091a\u0930\u0923 \u0928\u093f\u092f\u092e \u092e\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093e\u0924\u0947",
	guideRuleMatchErr: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f: \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0928\u093f\u092f\u092e \u092e\u0947\u0932 \u0928\u0939\u0940\u0902 \u0916\u093e\u0924\u0947",
	stepNotFoundRedirect: "\u091a\u0930\u0923 \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e. \u0915\u094d\u092f\u093e \u0906\u092a \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	branchStepMessagePopup: "\u0906\u0917\u0947 \u092c\u0922\u093c\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0928\u0940\u091a\u0947 \u0926\u093f\u090f \u0917\u090f \u0915\u093e\u0930\u094d\u092f\u094b\u0902 \u092e\u0947\u0902 \u0938\u0947 \u090f\u0915 \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	btnSkip: "\u0915\u0942\u0926",
	kindlyHoverPopup: "\u092a\u0949\u092a\u0905\u092a \u0916\u094b\u0932\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0907\u0938 \u0924\u0924\u094d\u0935 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902",
	stepPlayIsdefinedPopover: "\u0906\u092a \u091c\u094b \u0915\u0926\u092e \u0916\u0947\u0932\u0928\u0947 \u091c\u093e \u0930\u0939\u0947 \u0939\u0948\u0902 \u0935\u0939 \u092a\u0949\u092a\u0913\u0935\u0930 \u092a\u0930 \u092a\u0930\u093f\u092d\u093e\u0937\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948",
	elmNotFoundWestpac: "\u091a\u0930\u0923 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e - \u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u091c\u093e\u090f\u0917\u0940",
	findingElementMessage: "\u0915\u0926\u092e \u0916\u094b\u091c\u0928\u0947 \u0915\u0940 \u0915\u094b\u0936\u093f\u0936 \u0915\u0930 \u0930\u0939\u093e \u0939\u0942\u0902\u0964 \u0964 \u0964",
	badDomain: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0921\u094b\u092e\u0947\u0928 \u0914\u0930 URL MyGuide \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902. \u0915\u0943\u092a\u092f\u093e \u092e\u0926\u0926 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902.",
	hostJsError: "\u0935\u0947\u092c\u092a\u0947\u091c \u092a\u0930 \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u092a\u094d\u0930\u0924\u0940\u0924 \u0939\u094b\u0924\u0940 \u0939\u0948. MyGuide \u091c\u093e\u0930\u0940 \u0928\u0939\u0940\u0902 \u0930\u0916 \u0938\u0915\u0924\u093e",
	remember: "\u092e\u0941\u091d\u0947 \u092f\u093e\u0926 \u0915\u0930\u094b",
	forgotPass: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092d\u0942\u0932 \u0917\u090f?",
	dontHavAcc: "\u0915\u094b\u0908 \u0916\u093e\u0924\u093e \u0928\u0939\u0940\u0902 \u0939\u0948?",
	loginTitle: "\u0932\u0949\u0917\u093f\u0928",
	loginOtpScreenTitle: "\u0938\u093e\u0907\u0928 \u0907\u0928 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0913\u091f\u0940\u092a\u0940 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	forgetPassTitl: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930\u0947\u0902",
	placeholderEmail: "\u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940",
	placeholderPassword: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderNewPassword: "\u0928\u092f\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderCurrentPassword: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	placeholderFirstname: "\u092a\u094d\u0930\u0925\u092e \u0928\u093e\u092e",
	placeholderLastname: "\u0915\u0941\u0932\u0928\u093e\u092e",
	placeholderPasswordC: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902",
	btnCancel: "\u0930\u0926\u094d\u0926 \u0915\u0930\u0928\u093e",
	btnPayment: "\u0905\u092a\u0917\u094d\u0930\u0947\u0921 \u092a\u094d\u0932\u093e\u0928",
	btnSubmit: "\u091c\u092e\u093e \u0915\u0930\u0947\u0902",
	btnLogin: "\u0932\u0949\u0917\u093f\u0928",
	termsOfUse: "\u0909\u092a\u092f\u094b\u0917 \u0915\u0940 \u0936\u0930\u094d\u0924\u0947\u0902",
	andLabel: "\u0914\u0930",
	policyPrivacy: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0928\u0940\u0924\u093f",
	passwordError: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 8 \u0905\u0902\u0915\u094b\u0902 \u0915\u093e \u0932\u0902\u092c\u093e \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	confirmPasswordError: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0914\u0930 \u092a\u0941\u0937\u094d\u091f\u093f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	firstnameError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u092a\u094d\u0930\u0925\u092e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	lastnameError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0905\u0902\u0924\u093f\u092e \u0928\u093e\u092e \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	emailError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0908\u092e\u0947\u0932 ID \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	orgError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0938\u0902\u0917\u0920\u0928 URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	otpError: "\u0915\u0943\u092a\u092f\u093e \u092e\u093e\u0928\u094d\u092f OTP \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	placeholderOtp: "\u092f\u0939\u093e\u0902 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902 \u0905\u092a\u0928\u093e \u0913\u091f\u0940\u092a\u0940",
	otpSentDesc: "\u092f\u0926\u093f \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0908\u092e\u0947\u0932 \u092a\u0924\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948, \u0924\u094b \u0906\u092a\u0915\u094b \u090f\u0915 \u0930\u0940\u0938\u0947\u091f \u0932\u093f\u0902\u0915 \u092d\u0947\u091c\u093e \u091c\u093e\u090f\u0917\u093e\u0964<br>\u092f\u0926\u093f \u0906\u092a\u0915\u094b \u0915\u0941\u091b \u092e\u093f\u0928\u091f\u094b\u0902 \u092e\u0947\u0902 \u0908\u092e\u0947\u0932 \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947\u0924\u093e \u0939\u0948, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u0908\u092e\u0947\u0932 \u0915\u0947 \u0932\u093f\u090f \u0905\u092a\u0928\u0947 \u0938\u094d\u092a\u0948\u092e \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902",
	btnOtpVerify: "\u0913\u091f\u0940\u092a\u0940 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	alreadyHavAcc: "\u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u090f\u0915 \u0916\u093e\u0924\u093e \u0939\u0948?",
	smartbiteMessageError: "\u0915\u0943\u092a\u092f\u093e \u0938\u0902\u0926\u0947\u0936 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	smartbiteLinkError: "\u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u0932\u093f\u0902\u0915 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	noGuidesOnThisPage: "\u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u094b\u0908 \u0917\u093e\u0907\u0921 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948!",
	clickOn: "\u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902 ",
	contactUs: "\u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	search: "\u0922\u0942\u0901\u0922",
	noRecordFound: "\u0915\u094b\u0908 \u0930\u093f\u0915\u0949\u0930\u094d\u0921 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	category: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	subCategory: "\u0909\u092a \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	confirmPasswordRequired: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0915\u0940 \u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902",
	logInWithSSO: "\u090f\u0938\u090f\u0938\u0913 \u0915\u0947 \u0938\u093e\u0925 \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902",
	inputPlaceHolderSearch: "\u0915\u093f\u0938\u0940 \u092d\u0940 \u0917\u093e\u0907\u0921 \u0915\u0947 \u0932\u093f\u090f \u0916\u094b\u091c\u0947\u0902",
	noGuideAvailableFor: "\u0906\u092a\u0915\u0940 \u0916\u094b\u091c \u0938\u0947 \u092e\u0947\u0932 \u0916\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940",
	tryModifyingYourSearch: "\u0905\u092a\u0928\u0947 \u0916\u094b\u091c \u092e\u093e\u092a\u0926\u0902\u0921 \u0915\u094b \u0938\u0902\u0936\u094b\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	signInVerifyYourEmail: "\u0907\u0938 \u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940 \u0915\u094b \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0935\u093f\u0935\u0930\u0923 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0908\u092e\u0947\u0932 \u0926\u0947\u0916\u0947\u0902",
	signInVerifyYourAccount: "\u0939\u092e\u0928\u0947 \u0906\u092a\u0915\u094b \u090f\u0915 \u0913\u091f\u0940\u092a\u0940 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u093e \u0939\u0948\u0964 \u0938\u093e\u0907\u0928 \u0907\u0928 \u092a\u094d\u0930\u0915\u094d\u0930\u093f\u092f\u093e \u0915\u094b \u092a\u0942\u0930\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0915\u0930\u0947\u0902",
	maintenanceMessage: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	back: "\u092a\u0940\u0920",
	changePassword: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092c\u0926\u0932\u0947\u0902",
	startTestAuto: "\u0938\u094d\u0935\u091a\u093e\u0932\u0928 \u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	msgPasswordChangedSuccess: "\u0906\u092a\u0915\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0926\u0932 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948",
	msgConfirmNewPasswordError: "\u092a\u0941\u0937\u094d\u091f\u093f \u0915\u0930\u0947\u0902 \u0915\u093f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0928\u090f \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0915\u0947 \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	enterUrl: "\u091f\u0940\u092e URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	dragPlaceholderDropThis: "\u0907\u0938\u0947 \u091b\u094b\u0921\u093c \u0926\u0947\u0902 ",
	dragPlaceholderHere: " \u092f\u0939\u093e\u0901",
	termsOfService: "\u0932\u093f\u0939\u093e\u091c",
	versionText: "\u0938\u0902\u0938\u094d\u0915\u0930\u0923",
	videoStepSuccessMessage: "\u0906\u092a\u0915\u093e \u0915\u0926\u092e \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0925\u093e",
	importSuccessMessage: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u0905\u092a\u0932\u094b\u0921 \u0915\u0940 \u0917\u0908. \u0906\u092f\u093e\u0924 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0940 \u091c\u093e\u0901\u091a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f \u092a\u0930 \u091c\u093e\u090f\u0901",
	worldBankHelpSupport: "\u0915\u0941\u091b \u0909\u092a\u0915\u0930\u0923, \u091c\u0948\u0938\u0947 \u091f\u0942\u0932\u091f\u093f\u092a (\u0913\u0902), \u0915\u0947\u0935\u0932 \u0907\u0902\u091f\u0930\u092b\u093c\u0947\u0938 \u092e\u0947\u0902 \u0926\u0947\u0916\u0947 \u091c\u093e \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	helpSupport: "\u0938\u0939\u093e\u092f\u0924\u093e \u0914\u0930 \u0938\u092e\u0930\u094d\u0925\u0928",
	page: "\u092a\u0943\u0937\u094d\u0920",
	selectAnApplication: "\u0915\u093f\u0938\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	refresh: "\u0906\u0930\u093e\u092e \u0926\u0947\u0928\u093e",
	loginBtn: "\u0932\u0949\u0917\u093f\u0928",
	account: "\u0916\u093e\u0924\u093e",
	taskStatus: "\u0915\u093e\u0930\u094d\u092f \u0938\u094d\u0925\u093f\u0924\u093f ",
	logoutBtn: "\u0932\u0949\u0917\u0906\u0909\u091f",
	app: "\u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917:",
	firstStep: "\u092a\u0939\u0932\u093e \u0915\u0926\u092e",
	lastStep: "\u0905\u0902\u0924\u093f\u092e \u0915\u0926\u092e",
	startTest: "\u092a\u0930\u0940\u0915\u094d\u0937\u0923 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	noInappStepInGuide: "TestMe \u0906\u0917\u0947 \u0928\u0939\u0940\u0902 \u092c\u0922\u093c \u0938\u0915\u0924\u093e \u0915\u094d\u092f\u094b\u0902\u0915\u093f \u0907\u0938 \u0917\u093e\u0907\u0921 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0907\u0928\u0932\u093e\u0907\u0928 \u091a\u0930\u0923 \u0928\u0939\u0940\u0902 \u0939\u0948",
	settingBtn: "\u0909\u0928\u094d\u0928\u0924 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938",
	orgSetting: "\u0938\u0902\u0917\u0920\u0928 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938",
	close: "\u092c\u0902\u0926 \u0915\u0930\u0928\u093e",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u0926\u0938\u094d\u0924\u093e\u0935\u0947\u091c",
	downloadBlog: "\u092c\u094d\u0932\u0949\u0917",
	downloadTxt: "\u0938\u093e\u0926\u093e \u092a\u093e\u0920",
	serviceErrorMessage: "\u0909\u092b\u093c! \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u0941\u0908. \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0908\u092e\u0947\u0932 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	guidesTab: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901",
	noGuideCreatedYet: "\u0905\u092d\u0940 \u0924\u0915 \u0915\u094b\u0908 \u0917\u093e\u0907\u0921 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948!",
	noCategoryCreatedYet: "\u0905\u092d\u0940 \u0924\u0915 \u0915\u094b\u0908 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u092f\u093e \u0917\u092f\u093e \u0939\u0948!",
	chatbot: "mychat",
	notAutorised: "\u0906\u092a\u0915\u0947 \u092a\u093e\u0938 \u0906\u0935\u0936\u094d\u092f\u0915 \u092a\u0939\u0941\u0901\u091a \u0928\u0939\u0940\u0902 \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	ok: "\u0920\u0940\u0915 \u0939\u0948",
	apiError: "\u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0924\u094d\u0930\u0941\u091f\u093f. \u0915\u0943\u092a\u092f\u093e \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	select: "\u091a\u0941\u0928\u0928\u093e",
	mute_unmute: "\u092e\u094d\u092f\u0942\u091f\/\u0905\u0928-\u092e\u094d\u092f\u0942\u091f",
	privacyPolicy: "\u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0914\u0930 \u0915\u0941\u0915\u0940\u091c\u093c",
	privacyPolicyText: "MyGuide \u0915\u0941\u0915\u0940\u091c\u093c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0924\u093e \u0939\u0948\u0964 \u092f\u0926\u093f \u0906\u092a \u091c\u093e\u0930\u0940 \u0930\u0916\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0906\u092a \u0939\u092e\u093e\u0930\u0940 \u0936\u0930\u094d\u0924\u094b\u0902 \u0914\u0930 \u0917\u094b\u092a\u0928\u0940\u092f\u0924\u093e \u0928\u0940\u0924\u093f \u0938\u0947 \u0938\u0939\u092e\u0924 \u0939\u0948\u0902 \u0914\u0930 \u0939\u092e\u0947\u0902 \u0915\u0941\u0915\u0940\u091c\u093c \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0938\u0939\u092e\u0924\u093f \u0926\u0947 \u0930\u0939\u0947 \u0939\u0948\u0902",
	terms: "\u0932\u093f\u0939\u093e\u091c",
	westPecErrorMessage: "\u0906\u092a \u0907\u0938 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u0915\u0943\u092a\u092f\u093e Westpac \u0915\u0947 \u0928\u0947\u091f\u0935\u0930\u094d\u0915 \u092e\u0947\u0902 \u0938\u093e\u0907\u0928 \u0907\u0928 \u0915\u0930\u0947\u0902",
	noApp: "\u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u093e",
	role: "\u092d\u0942\u092e\u093f\u0915\u093e:",
	all: "\u0938\u092c",
	video: "\u0935\u0940\u0921\u093f\u092f\u094b",
	course: "\u0917\u092e\u0928",
	article: "\u0932\u0947\u0916",
	image: "\u092a\u094d\u0930\u0924\u093f\u092c\u093f\u0902\u092c",
	pathways: "\u0930\u093e\u0938\u094d\u0924\u0947",
	preview: "\u092a\u0942\u0930\u094d\u0935\u0926\u0930\u094d\u0936\u0928",
	more: "\u0905\u0927\u093f\u0915",
	history: "\u0907\u0924\u093f\u0939\u093e\u0938",
	publish: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0928\u093e",
	selectGuideLink: "\u0932\u093f\u0902\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	selectGuideBeforeSubmit: "\u0938\u092c\u092e\u093f\u091f \u0915\u0930\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u0915\u0943\u092a\u092f\u093e \u0915\u093f\u0938\u0940 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093e \u091a\u092f\u0928 \u0915\u0930\u0947\u0902",
	change: "\u092a\u0930\u093f\u0935\u0930\u094d\u0924\u0928",
	checkNow: "\u0905\u092d\u0940 \u091c\u093e\u0902\u091a\u0947\u0902",
	minutes: "\u092e\u093f\u0928\u091f",
	clickHere: "\u092f\u0939\u093e\u0901 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	youAlmostDone: "\u0906\u092a \u0932\u0917\u092d\u0917 \u092a\u0942\u0930\u093e \u0939\u094b \u091a\u0941\u0915\u0947 \u0939\u0948\u0902!",
	setOrg: "\u0905\u092a\u0928\u093e \u0938\u0902\u0917\u0920\u0928 \u0938\u0947\u091f \u0905\u092a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f",
	apps: "\u0910\u092a\u094d\u0938",
	me: "\u092e\u0941\u091d\u0915\u094b",
	playStep: "\u091a\u0930\u0923 \u091a\u0932\u093e\u090f\u0901",
	miniPlayerHelp: "\u092e\u0926\u0926",
	defaultMiniPlayerHelp: "\u092e\u0926\u0926",
	defaultConfirmIfSlideshowOrRedirect: "\u091a\u0930\u0923 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 URL \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948.<br>\u0915\u094d\u092f\u093e \u0906\u092a \u091a\u0930\u0923 URL \u092a\u0930 \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902 \u092f\u093e \u0938\u094d\u0932\u093e\u0907\u0921 \u0936\u094b \u091a\u0932\u093e\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902?",
	defaultServiceErrorMessage: "\u0909\u092b\u093c! \u0915\u094b\u0908 \u0924\u094d\u0930\u0941\u091f\u093f \u0909\u0924\u094d\u092a\u0928\u094d\u0928 \u0939\u0941\u0908. \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u0906\u092a \u0915\u093f\u0938\u0940 \u092d\u0940 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0908\u092e\u0947\u0932 \u092d\u0940 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	defaultMaintenanceMessage: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	userNotFollowingGuideMessage: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a \u0909\u0928 \u091a\u0930\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a \u0905\u092c \u0917\u093e\u0907\u0921 \u0915\u093e \u092a\u093e\u0932\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	defaultUserNotFollowingGuideMessage: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0906\u092a \u0909\u0928 \u091a\u0930\u0923\u094b\u0902 \u0915\u093e \u092a\u094d\u0930\u0926\u0930\u094d\u0936\u0928 \u0915\u0930 \u0930\u0939\u0947 \u0939\u0948\u0902 \u091c\u094b \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u0939\u093f\u0938\u094d\u0938\u093e \u0928\u0939\u0940\u0902 \u0939\u0948\u0902\u0964 \u092f\u0926\u093f \u0906\u092a \u0905\u092c \u0917\u093e\u0907\u0921 \u0915\u093e \u092a\u093e\u0932\u0928 \u0928\u0939\u0940\u0902 \u0915\u0930\u0928\u093e \u091a\u093e\u0939\u0924\u0947 \u0939\u0948\u0902, \u0924\u094b \u0928\u093f\u0915\u093e\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	resumeGuide: "\u0930\u093f\u091c\u094d\u092f\u0942\u092e \u0917\u093e\u0907\u0921",
	defaultResumeGuideMessage: "\u0930\u093f\u091c\u094d\u092f\u0942\u092e \u0917\u093e\u0907\u0921",
	backToLogin: "\u0932\u0949\u0917\u093f\u0928 \u092a\u0930 \u0935\u093e\u092a\u0938 \u091c\u093e\u090f\u0902",
	filters: "\u092b\u093c\u093f\u0932\u094d\u091f\u0930",
	thisApp: "\u0907\u0938 \u090f\u092a\u094d\u0932\u093f\u0915\u0947\u0936\u0928",
	thisWebsite: "\u0907\u0938 \u0935\u0947\u092c\u0938\u093e\u0907\u091f",
	maxFreeTourLimit: "\u092a\u0930\u094d\u092f\u091f\u0928 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u092f\u093e",
	passwordRegexCheck: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e 8 \u0935\u0930\u094d\u0923 \u0939\u094b\u0928\u0947 \u091a\u093e\u0939\u093f\u090f, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0905\u092a\u0930\u0915\u0947\u0938, \u090f\u0915 \u0932\u094b\u0905\u0930\u0915\u0947\u0938 \u0914\u0930 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u092e\u093e\u0928 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948",
	countLimit: "99+",
	microsoftServiceKey: "\u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0940 Microsoft Cognitive Services Speech \u0938\u0926\u0938\u094d\u092f\u0924\u093e \u0915\u0941\u0902\u091c\u0940 \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	numberOfImgFile: "\u091b\u0935\u093f \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0914\u0930 \u092a\u093e\u0920 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u0940 \u0938\u0902\u0916\u094d\u092f\u093e \u0938\u092e\u093e\u0928 \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	availableOn: "\u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u0948",
	tooltipUnpubWorkflowTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b",
	tooltipUnpubParentWorkflowTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentWorkflowTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0935\u0930\u094d\u0915\u092b\u093c\u094d\u0932\u094b, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubTooltipTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a",
	tooltipUnpubParentTooltipTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentTooltipTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u0942\u0932\u091f\u093f\u092a, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubTutorialTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932",
	tooltipUnpubParentTutorialTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentTutorialTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u091f\u094d\u092f\u0942\u091f\u094b\u0930\u093f\u092f\u0932, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubSubFolderTitle: "\u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipUnpubSubFolderDesc: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930\u094d\u0938 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	tooltipUnpubParentSubFolderTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930, \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092a\u0947\u0930\u0947\u0902\u091f \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentSubFolderTitle: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0909\u092a-\u092b\u093c\u094b\u0932\u094d\u0921\u0930, \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930",
	tooltipPubParentSubFolderDesc: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902 \u0915\u093e \u0906\u092f\u094b\u091c\u0928 \u0915\u0930\u0924\u093e \u0939\u0948",
	exitSurvey: "\u0928\u093f\u0915\u093e\u0938 \u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923",
	disable: "\u0905\u0915\u094d\u0937\u092e",
	instructionExitSurvey: "\u0928\u093f\u0915\u093e\u0938 \u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923 \u0924\u092c \u0926\u093f\u0916\u093e\u092f\u093e \u091c\u093e\u0924\u093e \u0939\u0948 \u091c\u092c \u0915\u094b\u0908 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0942\u0930\u093e \u0939\u094b\u0928\u0947 \u0938\u0947 \u092a\u0939\u0932\u0947 \u090f\u0915 \u0917\u093e\u0907\u0921 \u0938\u0947 \u092c\u093e\u0939\u0930 \u0928\u093f\u0915\u0932\u0924\u093e \u0939\u0948",
	msgVideoNotFound: "\u0905\u092a\u0928\u093e \u0935\u0940\u0921\u093f\u092f\u094b \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0924\u0947 \u0939\u0941\u090f, \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	msgGiphyNotFound: "\u0905\u092a\u0928\u093e GIF \u0905\u092a\u0932\u094b\u0921 \u0915\u0930\u0928\u093e, \u0915\u0943\u092a\u092f\u093e \u0915\u0941\u091b \u0938\u092e\u092f \u092c\u093e\u0926 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	userPref: "\u092e\u0947\u0930\u0940 \u092a\u094d\u0930\u093e\u0925\u092e\u093f\u0915\u0924\u093e\u090f\u0902",
	manageAccount: "\u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u092a\u094b\u0930\u094d\u091f\u0932",
	analyticsPortal: "Insights portal",
	errorInvalidUrl: "\u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f URL \u0928\u0939\u0940\u0902",
	wbFooterText: "\u0907\u0938\u0915\u0940 \u0924\u0915\u0928\u0940\u0915\u0940 \u0936\u093f\u0915\u094d\u0937\u093e",
	navigationMenu: "\u0928\u0947\u0935\u093f\u0917\u0947\u0936\u0928 \u092e\u0947\u0928\u0942",
	clearHistory: "\u0938\u094d\u092a\u0937\u094d\u091f \u0907\u0924\u093f\u0939\u093e\u0938",
	userDeniedMessage: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u0947 \u0915\u0948\u092e\u0930\u093e \u0914\u0930 \u092e\u093e\u0907\u0915\u094d\u0930\u094b\u092b\u093c\u094b\u0928 \u090f\u0915\u094d\u0938\u0947\u0938 \u0905\u0928\u0941\u092e\u0924\u093f\u092f\u094b\u0902 \u0938\u0947 \u0907\u0928\u0915\u093e\u0930 \u0915\u093f\u092f\u093e",
	pushNotification: "\u0938\u0942\u091a\u0928\u093e\u0913\u0902 \u0915\u094b \u092a\u0941\u0936 \u0915\u0930\u0947\u0902",
	viewDetail: "\u0935\u093f\u0938\u094d\u0924\u093e\u0930 \u0938\u0947 \u0926\u0947\u0916\u0947\u0902",
	contactAdmin: "\u0915\u0943\u092a\u092f\u093e \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f support@csod.com \u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	noAppOnDomain: "\u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0921\u094b\u092e\u0947\u0928 \u0915\u0947 \u0932\u093f\u090f \u0905\u0938\u093e\u0907\u0928 \u0928\u0939\u0940\u0902 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 ",
	noGuidesOnDomain: "\u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940\u0902",
	apply: "\u0932\u093e\u0917\u0942 \u0915\u0930\u0928\u093e",
	invalidLoginCred: "\u0905\u092e\u093e\u0928\u094d\u092f \u0932\u0949\u0917\u093f\u0928 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932. \u0915\u0908 \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0932\u0949\u0915 \u0939\u094b \u091c\u093e\u090f\u0917\u093e, \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0908\u092e\u0947\u0932 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0917\u093e, \u092f\u093e \u0906\u092a \u0905\u092a\u0928\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	resendOTP: "\u0913\u091f\u0940\u092a\u0940 \u0915\u094b \u092b\u093f\u0930 \u0938\u0947 \u092d\u0947\u091c\u0947\u0902",
	sendFeedback: "\u092b\u093c\u0940\u0921\u092c\u0948\u0915 \u092d\u0947\u091c\u0947\u0902",
	guideNotExist: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948 (\u0924\u094d\u0930\u0941\u091f\u093f: \u0921\u094b\u092e\u0947\u0928 \u092c\u0947\u092e\u0947\u0932) ",
	cdnAccess: "<b>\u0939\u092e\u0947\u0902 \u0916\u0947\u0926 \u0939\u0948<\/b> <br><br>\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e\u093e\u0930\u0947 \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u0948\u0964<br> \u0939\u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u091c\u0932\u094d\u0926 \u0938\u0947 \u091c\u0932\u094d\u0926 \u0920\u0940\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	tourPlayError: "\u0917\u093e\u0907\u0921 \u0928\u0939\u0940\u0902 \u0916\u0947\u0932\u093e \u091c\u093e \u0938\u0915\u0924\u093e. \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0935\u093f\u0935\u0930\u0923 \u092a\u0941\u0928\u0930\u094d\u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0924\u094d\u0930\u0941\u091f\u093f",
	playerMode: "\u092a\u094d\u0932\u0947\u092f\u0930 \u092e\u094b\u0921",
	closePanel: "\u0915\u094d\u0932\u094b\u091c \u092a\u0948\u0928\u0932",
	switchCreatorMode: "\u0915\u094d\u0930\u093f\u090f\u091f\u0930 \u092e\u094b\u0921 \u092a\u0930 \u0938\u094d\u0935\u093f\u091a \u0915\u0930\u0947\u0902",
	extensionContextError: "\u090f\u0915\u094d\u0938\u091f\u0947\u0902\u0936\u0928 \u0938\u0902\u0926\u0930\u094d\u092d \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948. \u091c\u093e\u0930\u0940 \u0930\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u0943\u092a\u092f\u093e \u092a\u0943\u0937\u094d\u0920 \u0915\u094b \u092a\u0941\u0928\u0903 \u0932\u094b\u0921 \u0915\u0930\u0947\u0902",
	otpSent: "\u0913\u091f\u0940\u092a\u0940 \u0906\u092a\u0915\u0947 \u0908\u092e\u0947\u0932 \u092a\u0930 \u092b\u093f\u0930 \u0938\u0947 \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0947 \u0907\u0928\u092c\u0949\u0915\u094d\u0938 \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0947\u0902",
	startOver: "\u092b\u093f\u0930 \u0938\u0947 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u0930\u0947\u0902",
	yesResume: "\u0938\u093e\u0930",
	dontShowAgain: "\u092b\u093f\u0930 \u0938\u0947 \u092e\u0924 \u0926\u093f\u0916\u093e\u0913",
	notificationHeader: "\u0906\u092a\u0915\u094b \u090f\u0915 \u0938\u0942\u091a\u0928\u093e \u092e\u093f\u0932\u0940 \u0939\u0948!",
	watchLater: "\u092c\u093e\u0926 \u092e\u0947\u0902 \u0926\u0947\u0916\u0947\u0902",
	pushSnoozeMsg: "\u0907\u0938 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0915\u0947 \u0932\u093f\u090f \u0938\u094d\u092a\u0937\u094d\u091f\u0940\u0915\u0930\u0923 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	showAgain: "\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0901",
	noGuidesOnThisTab: "\u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0915\u094b\u0908 \u0938\u0942\u091a\u0928\u093e \u0928\u0939\u0940\u0902 \u0939\u0948",
	iAgree: "\u092e\u0948\u0902 \u0938\u0939\u092e\u0924 \u0939\u0942\u0901",
	viewMore: "\u0905\u0927\u093f\u0915 \u0926\u0947\u0916\u0947\u0902",
	lostInternetConnection: "\u0938\u0930\u094d\u0935\u0930 \u0938\u0947 \u0915\u0928\u0947\u0915\u094d\u0936\u0928 \u0916\u094b \u0917\u092f\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0915\u0928\u0947\u0915\u094d\u091f \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	next: "\u0905\u0917\u0932\u093e",
	recent: "\u0939\u093e\u0932 \u092e\u0947\u0902",
	older: "\u092a\u0941\u0930\u093e\u0928\u093e",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "\u0938\u094d\u092a\u0937\u094d\u091f",
	tooltipDontShowAgain: "\u0938\u0942\u091a\u0928\u093e\u090f\u0902 \u0905\u092c \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947\u0902\u0917\u0940\u0964 \u0905\u092c \u090f\u0915 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0909\u0938 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902 \u0914\u0930 '\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0902' \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	tooltipWatchLater1: "\u0938\u0942\u091a\u0928\u093e\u090f\u0902 \u0915\u093f\u0938\u0915\u0947 \u0932\u093f\u090f \u092d\u0947\u091c\u0940 \u091c\u093e\u0924\u0940 \u0939\u0948\u0902?",
	tooltipWatchLater2: "\u0914\u0930 \u0909\u0938\u0915\u0947 \u092c\u093e\u0926 \u0926\u093f\u0916\u093e\u0908 \u0926\u0947\u0917\u093e\u0964 \u0905\u092c \u090f\u0915 \u0905\u0927\u093f\u0938\u0942\u091a\u0928\u093e \u0938\u0915\u094d\u0937\u092e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0909\u0938 \u092a\u0930 \u092e\u0902\u0921\u0930\u093e\u090f\u0902 \u0914\u0930 '\u092b\u093f\u0930 \u0938\u0947 \u0926\u093f\u0916\u093e\u090f\u0902' \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902",
	hour: "\u0918\u0902\u091f\u093e",
	hours: "\u0918\u0902\u091f\u0947",
	insightsTracker: "Insights Tracker",
	slideshow: "\u0938\u094d\u0932\u093e\u0907\u0921 \u0936\u094b",
	autoplay: "\u0911\u091f\u094b\u092a\u094d\u0932\u0947",
	powerFormOldData: "\u092e\u094c\u091c\u0942\u0926\u093e \u0921\u0947\u091f\u093e",
	powerFormNewData: "\u0928\u092f\u093e \u0921\u0947\u091f\u093e \u0926\u0930\u094d\u091c \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0907\u0938 \u092a\u094d\u0930\u092a\u0924\u094d\u0930 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	powerFormNewDataMore: "\u092f\u0926\u093f \u0906\u092a\u0915\u093e \u092e\u094c\u091c\u0942\u0926\u093e \u0921\u0947\u091f\u093e \u0926\u093f\u0916\u093e\u0908 \u0928\u0939\u0940\u0902 \u0926\u0947 \u0930\u0939\u093e \u0939\u0948, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u093e \u0921\u0947\u091f\u093e \u0926\u0947\u0916\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090a\u092a\u0930 \u092c\u093e\u0908\u0902 \u0913\u0930 \u0924\u0940\u0930 \u092a\u0930 \u0915\u094d\u0932\u093f\u0915 \u0915\u0930\u0947\u0902\u0964 \u0921\u0947\u091f\u093e \u0915\u094b \u0924\u092c \u0905\u0928\u0941\u092e\u0924 \u092c\u0941\u0932\u0947\u091f\u0947\u0921 \u092a\u094d\u0930\u093e\u0930\u0942\u092a \u092e\u0947\u0902 \u0915\u0949\u092a\u0940 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u094b\u0924\u0940 \u0939\u0948\u0964",
	powerFormTitle: "\u0921\u0947\u091f\u093e \u090f\u0902\u091f\u094d\u0930\u0940 \u0905\u0938\u093f\u0938\u094d\u091f\u0947\u0902\u091f",
	powerFormMandatory: "\u092f\u0939 \u090f\u0915 \u0905\u0928\u093f\u0935\u093e\u0930\u094d\u092f \u092b\u093c\u0940\u0932\u094d\u0921, \u0905\u0927\u093f\u0915\u0924\u092e \u0935\u0930\u094d\u0923 \u0938\u0940\u092e\u093e \u0939\u0948 ",
	belongToOtherApp: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e {TOURURL} \u092a\u0930 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948, \u091c\u094b {APPNAME} \u0910\u092a \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u0909\u0938 \u0910\u092a \u092e\u0947\u0902 \u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0932\u093f\u092a\u093f \u092c\u0928\u093e\u090f\u0901 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	setDomain: "\u092f\u0926\u093f \u0906\u092a \u0938\u0941\u0928\u093f\u0936\u094d\u091a\u093f\u0924 \u0939\u0948\u0902 \u0915\u093f {TOURURL} \u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0921\u094b\u092e\u0947\u0928 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u092e\u0947\u0902 \u091c\u094b\u0921\u093c\u093e \u091c\u093e\u0928\u093e \u091a\u093e\u0939\u093f\u090f, \u0924\u094b \u0915\u0943\u092a\u092f\u093e \u091c\u094b\u0921\u093c\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	on: "\u092a\u0930",
	off: "\u092c\u0902\u0926",
	btnPrev: "\u092a\u0940\u091b\u0947",
	btnPrevious: "\u092a\u093f\u091b\u0932\u093e",
	taskList: "\u0915\u093e\u0930\u094d\u092f \u0938\u0942\u091a\u0940",
	unprocessedVideo: "\u0915\u0943\u092a\u092f\u093e \u0924\u092c \u0924\u0915 \u092a\u094d\u0930\u0924\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u0947\u0902 \u091c\u092c \u0924\u0915 \u0906\u092a\u0915\u093e \u0935\u0940\u0921\u093f\u092f\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0928 \u0939\u094b.",
	searchResult: "\u0916\u094b\u091c \u092a\u0930\u093f\u0923\u093e\u092e",
	pleaseWait: "\u0915\u0943\u092a\u092f\u093e \u092a\u094d\u0930\u0924\u0940\u0915\u094d\u0937\u093e \u0915\u0930\u094b!",
	mediaDownloadMsg: "\u091c\u092c\u0915\u093f \u0939\u092e \u0921\u093e\u0909\u0928\u0932\u094b\u0921 \u0915\u0947 \u0932\u093f\u090f \u0906\u092a\u0915\u0940 \u092b\u093c\u093e\u0907\u0932\u094b\u0902 \u0915\u094b \u0924\u0948\u092f\u093e\u0930 \u0915\u0930\u0924\u0947 \u0939\u0948\u0902",
	mediaFileNotFound: "\u092e\u0940\u0921\u093f\u092f\u093e \u092b\u093c\u093e\u0907\u0932 \u0928\u0939\u0940\u0902 \u092e\u093f\u0932\u0940",
	searchInFolder: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092e\u0947\u0902 \u0916\u094b\u091c\u0947\u0902",
	currentPageSearchPlaceholder: "\u0935\u0930\u094d\u0924\u092e\u093e\u0928 \u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0909\u092a\u0932\u092c\u094d\u0927 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e (\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902) \u0915\u0940 \u0916\u094b\u091c \u0915\u0930\u0947\u0902",
	brandLogo: "\u092c\u094d\u0930\u093e\u0902\u0921 \u0932\u094b\u0917\u094b",
	accessibility: "\u0938\u0941\u0932\u092d\u0924\u093e",
	replay: "\u092a\u0941\u0928\u0930\u093e\u0935\u0943\u0924\u094d\u0924\u093f",
	defaultGreetingMessage: "\u0938\u0941\u0928\u094b! MyGuide \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948\u0964 \u092e\u0948\u0902 \u0906\u092a\u0915\u0940 \u0915\u094d\u092f\u093e \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0942\u0901? \u0915\u0943\u092a\u092f\u093e \u0927\u094d\u092f\u093e\u0928 \u0930\u0916\u0947\u0902 \u0915\u093f \u092e\u0948\u0902 \u090f\u0915 \u092c\u0949\u091f \u0939\u0942\u0902\u0964",
	defaultErrorMessage: "\u0915\u094d\u0937\u092e\u093e \u0915\u0930\u0947\u0902, \u092e\u0941\u091d\u0947 \u092f\u0939 \u0938\u092e\u091d \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0906\u092f\u093e\u0964 \u0915\u094d\u092f\u093e \u0906\u092a \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902? ",
	defaultEndMessage: "\u0939\u092e\u0928\u0947 \u0915\u093f\u092f\u093e \u0939\u0948, \u092c\u0939\u0941\u0924 \u092c\u0939\u0941\u0924 \u0927\u0928\u094d\u092f\u0935\u093e\u0926!",
	greetingMessage: "\u0938\u0941\u0928\u094b! MyGuide \u092e\u0947\u0902 \u0906\u092a\u0915\u093e \u0938\u094d\u0935\u093e\u0917\u0924 \u0939\u0948\u0964 \u092e\u0948\u0902 \u0906\u092a\u0915\u0940 \u0915\u094d\u092f\u093e \u092e\u0926\u0926 \u0915\u0930 \u0938\u0915\u0924\u093e \u0939\u0942\u0901? \u0915\u0943\u092a\u092f\u093e \u0927\u094d\u092f\u093e\u0928 \u0930\u0916\u0947\u0902 \u0915\u093f \u092e\u0948\u0902 \u090f\u0915 \u092c\u0949\u091f \u0939\u0942\u0902\u0964",
	errorMessage: "\u0915\u094d\u0937\u092e\u093e \u0915\u0930\u0947\u0902, \u092e\u0941\u091d\u0947 \u092f\u0939 \u0938\u092e\u091d \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0906\u092f\u093e\u0964 \u0915\u094d\u092f\u093e \u0906\u092a \u0905\u0927\u093f\u0915 \u0935\u093f\u0936\u093f\u0937\u094d\u091f \u0939\u094b \u0938\u0915\u0924\u0947 \u0939\u0948\u0902? ",
	endMessage: "\u0939\u092e\u0928\u0947 \u0915\u093f\u092f\u093e \u0939\u0948, \u092c\u0939\u0941\u0924 \u092c\u0939\u0941\u0924 \u0927\u0928\u094d\u092f\u0935\u093e\u0926!",
	guideLnkToRedirect: "\u092a\u0943\u0937\u094d\u0920 \u092a\u0930 \u0930\u0940\u0921\u093e\u092f\u0930\u0947\u0915\u094d\u091f \u0915\u0930\u0928\u0947 \u0914\u0930 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u091a\u0932\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0928\u093f\u092e\u094d\u0928 \u0932\u093f\u0902\u0915 \u0915\u093e \u0909\u092a\u092f\u094b\u0917 \u0915\u0930\u0947\u0902",
	otpTimer: "\u0906\u092a \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902 ",
	seconds: " \u0938\u0947\u0915\u0902\u0921",
	limitWarning: "\u0906\u092a \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	403: "\u0939\u092e \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u092e\u0947\u0902 \u092d\u093e\u0917 \u0917\u090f\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	405: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	429: "\u092c\u0939\u0941\u0924 \u0938\u093e\u0930\u0947 \u0905\u0928\u0941\u0930\u094b\u0927",
	1003: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u092a\u0943\u0937\u094d\u0920 \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	1007: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	1005: "<b>\u0939\u092e\u0947\u0902 \u0916\u0947\u0926 \u0939\u0948<\/b> <br><br>\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u092f\u093e \u0939\u092e\u093e\u0930\u0947 \u0938\u0930\u094d\u0935\u0930 \u0915\u0947 \u0938\u093e\u0925 \u0915\u094b\u0908 \u0938\u092e\u0938\u094d\u092f\u093e \u0939\u0948\u0964<br> \u0939\u092e\u0947\u0902 \u0924\u094d\u0930\u0941\u091f\u093f \u0915\u0947 \u092c\u093e\u0930\u0947 \u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948 \u0914\u0930 \u0907\u0938\u0947 \u091c\u0932\u094d\u0926 \u0938\u0947 \u091c\u0932\u094d\u0926 \u0920\u0940\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u091c\u093e\u090f\u0917\u093e",
	1009: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0908\u092e\u0947\u0932 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948",
	1014: "\u0930\u0916\u0930\u0916\u093e\u0935 \u092a\u094d\u0930\u0917\u0924\u093f \u092a\u0930 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e support@csod.com \u0915\u0947 \u092e\u093e\u0927\u094d\u092f\u092e \u0938\u0947 \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	1017: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u0932\u0949\u0917\u093f\u0928 \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	1018: "\u0906\u092a \u091a\u0930\u0923 \u092c\u0928\u093e\u0928\u0947 \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	2000: "\u0939\u092e \u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u092e\u0947\u0902 \u092d\u093e\u0917 \u0917\u090f\u0964 \u0939\u092e\u0947\u0902 \u0938\u0942\u091a\u093f\u0924 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2001: "\u0905\u092e\u093e\u0928\u094d\u092f \u0932\u0949\u0917\u093f\u0928 \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932. \u0915\u0908 \u0905\u0938\u092b\u0932 \u092a\u094d\u0930\u092f\u093e\u0938\u094b\u0902 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0932\u0949\u0915 \u0939\u094b \u091c\u093e\u090f\u0917\u093e, \u0906\u092a\u0915\u094b \u0905\u092a\u0928\u093e \u0916\u093e\u0924\u093e \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u090f\u0915 \u0908\u092e\u0947\u0932 \u092a\u094d\u0930\u093e\u092a\u094d\u0924 \u0939\u094b\u0917\u093e, \u092f\u093e \u0906\u092a \u0905\u092a\u0928\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0930\u0940\u0938\u0947\u091f \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	2002: "\u0905\u092e\u093e\u0928\u094d\u092f \u092f\u093e \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u091a\u0941\u0915\u093e \u0913\u091f\u0940\u092a\u0940",
	2003: "\u0905\u092a\u0932\u094b\u0921 \u0915\u0940 \u0917\u0908 \u092b\u093c\u093e\u0907\u0932 \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u091b\u0935\u093f \u0928\u0939\u0940\u0902 \u0939\u0948 (JPG \u0914\u0930 PNG \u092b\u093c\u093e\u0907\u0932\u0947\u0902 \u0938\u092e\u0930\u094d\u0925\u093f\u0924 \u0939\u0948\u0902)",
	2004: "\u0938\u0924\u094d\u0930 \u0915\u0940 \u0938\u092e\u092f \u0938\u0940\u092e\u093e \u0938\u092e\u093e\u092a\u094d\u0924 \u0939\u094b \u0917\u0908",
	2005: "\u0939\u092e \u0907\u0938 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0915\u094b \u091f\u094d\u0930\u0948\u0915 \u0928\u0939\u0940\u0902 \u0915\u0930 \u0938\u0915\u0947. \u0915\u0943\u092a\u092f\u093e \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2006: "\u0908\u092e\u0947\u0932 \u092a\u0924\u093e \u0917\u0932\u0924 \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2007: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u092e\u093f\u0915\u093e \u0905\u092e\u093e\u0928\u094d\u092f. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928\u0903 \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2008: "\u0906\u092a\u0915\u094b \u0915\u094b\u0908 \u0938\u0939\u0940 \u0915\u093e\u0930\u094d\u092f \u092a\u094d\u0930\u0915\u093e\u0930 \u0928\u093f\u0930\u094d\u0926\u093f\u0937\u094d\u091f \u0915\u0930\u0928\u093e \u0906\u0935\u0936\u094d\u092f\u0915 \u0939\u0948",
	2009: "\u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0906\u0935\u0947\u0926\u0928 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948; \u0907\u0938\u0947 \u0939\u091f\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0925\u093e \u092f\u093e \u0915\u092d\u0940 \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0925\u093e",
	2010: "\u0905\u092e\u093e\u0928\u094d\u092f \u0907\u0928\u092a\u0941\u091f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930. \u0915\u0943\u092a\u092f\u093e \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2011: "\u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0938\u0902\u0917\u0920\u0928 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948; \u0907\u0938\u0947 \u0939\u091f\u093e\u092f\u093e \u091c\u093e \u0938\u0915\u0924\u093e \u0925\u093e \u092f\u093e \u0915\u092d\u0940 \u0905\u0938\u094d\u0924\u093f\u0924\u094d\u0935 \u092e\u0947\u0902 \u0928\u0939\u0940\u0902 \u0925\u093e",
	2012: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2013: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com \u092a\u0930 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2014: "\u0938\u0941\u092a\u0930 \u090f\u0921\u092e\u093f\u0928 \u0915\u0947 \u0932\u093f\u090f \u0906\u0935\u0936\u094d\u092f\u0915 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930[organization_id]",
	2015: "\u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u0940 \u0917\u0908 \u091b\u0935\u093f \u0921\u0947\u091f\u093e \u0938\u093e\u092e\u0917\u094d\u0930\u0940 \u0905\u092e\u093e\u0928\u094d\u092f \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948 \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com",
	2016: "\u0905\u092e\u093e\u0928\u094d\u092f \u0921\u094b\u092e\u0947\u0928",
	2017: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2018: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2019: "\u0906\u092a \u091c\u094b \u0916\u094b\u091c \u0930\u0939\u0947 \u0939\u0948\u0902 \u0935\u0939 \u092e\u094c\u091c\u0942\u0926 \u0928\u0939\u0940\u0902 \u0939\u0948 \u092f\u093e \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u091f\u093e \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u094b",
	2020: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2021: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2022: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f \u091f\u0940\u092e URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	2023: "\u0907\u0938 \u0905\u0928\u0941\u0930\u094b\u0927 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2024: "\u092b\u093c\u093e\u0907\u0932 \u0915\u093e \u0906\u0915\u093e\u0930 5 MB \u0938\u0947 \u0915\u092e \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	2025: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e. \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u092e\u093e\u0928\u094d\u092f URL \u0926\u0930\u094d\u091c \u0915\u0930\u0947\u0902",
	2026: "\u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e 8 \u0935\u0930\u094d\u0923 \u0939\u094b\u0928\u0947 \u091a\u093e\u0939\u093f\u090f, \u091c\u093f\u0938\u092e\u0947\u0902 \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u0905\u092a\u0930\u0915\u0947\u0938, \u090f\u0915 \u0932\u094b\u0905\u0930\u0915\u0947\u0938 \u0914\u0930 \u090f\u0915 \u0938\u0902\u0916\u094d\u092f\u093e\u0924\u094d\u092e\u0915 \u092e\u093e\u0928 \u0936\u093e\u092e\u093f\u0932 \u0939\u0948",
	2027: "\u0905\u092e\u093e\u0928\u094d\u092f \u092a\u093e\u0938\u0935\u0930\u094d\u0921",
	2028: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2029: "\u0906\u092a\u0915\u0947 \u0926\u094d\u0935\u093e\u0930\u093e \u092a\u094d\u0930\u0926\u093e\u0928 \u0915\u093f\u092f\u093e \u0917\u092f\u093e \u0936\u0939\u0930 \u0938\u092e\u0930\u094d\u0925\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948",
	2030: "\u0905\u0928\u0941\u0930\u094b\u0927 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u0941\u092a\u0932\u092c\u094d\u0927 \u092f\u093e \u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0925\u093e",
	2031: "\u0907\u0938 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2032: "\u0905\u092e\u093e\u0928\u094d\u092f \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930[file_id]",
	2033: "\u0905\u092e\u093e\u0928\u094d\u092f URL. \u0915\u0943\u092a\u092f\u093e \u092a\u0941\u0928: \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	2034: "\u0907\u0928 \u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930\u094d\u0938 \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2035: "\u0907\u0938 AppKey \u0915\u094b \u0938\u0902\u0938\u093e\u0927\u093f\u0924 \u0915\u0930\u0924\u0947 \u0938\u092e\u092f \u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f support@csod.com",
	2036: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0938\u0930\u094d\u0935\u0930 \u092e\u0947\u0902 \u0915\u094b\u0908 \u0905\u0928\u092a\u0947\u0915\u094d\u0937\u093f\u0924 \u0924\u094d\u0930\u0941\u091f\u093f \u0906\u0908. \u0915\u0943\u092a\u092f\u093e \u0907\u0938 \u092a\u0943\u0937\u094d\u0920 \u0915\u094b \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b support@csod.com \u0915\u094b \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u0940 \u0930\u093f\u092a\u094b\u0930\u094d\u091f \u0915\u0930\u0947\u0902",
	2044: "\u0910\u0938\u093e \u0932\u0917\u0924\u093e \u0939\u0948 \u0915\u093f \u0939\u092e\u0928\u0947 \u0907\u0938 \u0915\u0926\u092e \u0915\u0947 \u0932\u093f\u090f \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u094b \u0917\u0932\u0924 \u0938\u092e\u091d\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u0921\u093f\u092b\u093c\u0949\u0932\u094d\u091f \u092d\u093e\u0937\u093e \u092a\u0930 \u0938\u094d\u0935\u093f\u091a \u0915\u0930\u0947\u0902 \u0914\u0930 \u091a\u0930\u0923 \u0915\u093e \u092a\u0941\u0928: \u0905\u0928\u0941\u0935\u093e\u0926 \u0915\u0930\u0947\u0902, \u092f\u093e \u0905\u0927\u093f\u0915 \u091c\u093e\u0928\u0915\u093e\u0930\u0940 \u0915\u0947 \u0932\u093f\u090f \u0939\u092e\u093e\u0930\u0947 \u0917\u094d\u0930\u093e\u0939\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902\u0964",
	2200: "\u0911\u0921\u093f\u092f\u094b \/\u0935\u0940\u0921\u093f\u092f\u094b \u0928\u093f\u092f\u0902\u0924\u094d\u0930\u0923 \u0924\u0915 \u092a\u0939\u0941\u0902\u091a\u0928\u0947 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0940 \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0938\u0947\u091f\u093f\u0902\u0917\u094d\u0938 \u091c\u093e\u0901\u091a\u0947\u0902 \u0914\u0930 \u0907\u0938\u0947 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948 \u0924\u094b \u0939\u092e\u0947\u0902 support@csod.com",
	3061: "\u0906\u092a \u0915\u0947\u0935\u0932 5 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u0913\u0902 \u0915\u094b \u092a\u093f\u0928 \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	4000: "\u092f\u0926\u093f \u0915\u094b\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092c\u0928\u093e\u0908 \u0917\u0908 \u0939\u0948, \u0924\u094b \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u091c\u093e \u0938\u0915\u0924\u0940",
	4001: "\u092f\u0926\u093f \u0915\u094b\u0908 \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u090f\u0915 \u0938\u0941\u092a\u0930 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0939\u0948, \u0924\u094b \u0906\u092a \u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092d\u0942\u092e\u093f\u0915\u093e \u0928\u0939\u0940\u0902 \u092c\u0926\u0932 \u0938\u0915\u0924\u0947",
	4002: "\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u0930 \u0907\u0938 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948",
	4003: "\u0932\u0949\u0915 \u0915\u0940 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0928\u0939\u0940\u0902 \u0915\u0940 \u091c\u093e \u0938\u0915\u0924\u0940",
	4004: "\u0915\u093f\u0938\u0940 \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u092a\u0930 \u0907\u0938 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948. \u0915\u0943\u092a\u092f\u093e \u0907\u0938\u0947 \u0905\u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0947\u0902",
	4006: "\u0906\u0935\u0947\u0926\u0928 \u0926\u093f\u090f \u0917\u090f \u0938\u0902\u0917\u0920\u0928 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	4007: "\u0906\u092a \u092f\u0939 \u0915\u094d\u0930\u093f\u092f\u093e \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0905\u0927\u093f\u0915\u0943\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948\u0902",
	4008: "\u0907\u0938 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0915\u0947 \u0932\u093f\u090f \u0915\u093e\u0930\u094d\u0930\u0935\u093e\u0908 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948",
	4009: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0940 \u091c\u093e\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	4010: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u093f\u0938\u0940 \u0909\u092a-\u0936\u094d\u0930\u0947\u0923\u0940 \u0935\u093e\u0932\u0947 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0915\u0947 \u0905\u0902\u0926\u0930 \u0928\u0939\u0940\u0902 \u092c\u0928\u093e\u0908 \u091c\u093e \u0938\u0915\u0924\u0940",
	4011: "\u091a\u0930\u0923 (\u0913\u0902) \u092c\u0928\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0940 \u0906\u0935\u0936\u094d\u092f\u0915\u0924\u093e \u0939\u0948",
	4012: "\u091a\u0930\u0923\u094b\u0902 \u0915\u094b \u0938\u0902\u092a\u093e\u0926\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	4013: "\u091a\u0930\u0923\u094b\u0902 \u0915\u094b \u0939\u091f\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	4014: "\u091a\u0930\u0923\u094b\u0902 \u0915\u0940 \u092a\u094d\u0930\u0924\u093f\u0932\u093f\u092a\u093f \u092c\u0928\u093e\u0928\u0947 \u0914\u0930 \u091a\u093f\u092a\u0915\u093e\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0906\u092a\u0915\u094b \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u094b \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u093e \u0939\u094b\u0917\u093e",
	3001: "\u0917\u093e\u0907\u0921 \u091c\u0932\u094d\u0926 \u0939\u0940 \u0928\u093f\u0930\u094d\u092f\u093e\u0924 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0939\u094b\u0917\u093e\u0964 \u0938\u094d\u0925\u093f\u0924\u093f \u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f, \u0916\u093e\u0924\u093e \u092e\u0947\u0928\u0942 \u0915\u0947 \u0924\u0939\u0924 '\u091f\u093e\u0938\u094d\u0915 \u0938\u094d\u091f\u0947\u091f\u0938' \u092a\u0930 \u091c\u093e\u090f\u0902",
	3002: "\u0905\u092a\u0932\u094b\u0921 \u092a\u094d\u0930\u093e\u0930\u0902\u092d \u0915\u093f\u092f\u093e. \u0905\u092a\u0932\u094b\u0921 \u092a\u0942\u0930\u093e \u0939\u094b\u0928\u0947 \u0924\u0915 \u0915\u0943\u092a\u092f\u093e \u092c\u094d\u0930\u093e\u0909\u091c\u093c\u0930 \u0915\u094b \u0924\u093e\u091c\u093c\u093e \u092f\u093e \u092c\u0902\u0926 \u0928 \u0915\u0930\u0947\u0902. \u0906\u092f\u093e\u0924 \u0938\u094d\u0925\u093f\u0924\u093f \u092a\u0942\u0930\u0940 \u0939\u094b\u0928\u0947 \u0915\u0947 \u092c\u093e\u0926 \u0906\u092a \u0907\u0938\u0915\u0940 \u091c\u093e\u0902\u091a \u0915\u0930 \u0938\u0915\u0924\u0947 \u0939\u0948\u0902",
	3003: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3004: "\u0908\u092e\u0947\u0932 \u0906\u0908\u0921\u0940 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0939\u0948",
	3005: "\u092f\u0939 URL \u0905\u0928\u094d\u092f \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0915\u0949\u0928\u094d\u092b\u093c\u093f\u0917\u0930\u0947\u0936\u0928 \u0915\u0947 \u0938\u093e\u0925 \u0935\u093f\u0930\u094b\u0927 \u0915\u0930\u0924\u093e \u0939\u0948, \u0915\u0943\u092a\u092f\u093e \u0915\u094b\u0908 \u0905\u0928\u094d\u092f URL \u091c\u094b\u0921\u093c\u0928\u0947 \u0915\u093e \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	3006: "\u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u090f\u0915 \u0939\u0940 \u0905\u0928\u0941\u092a\u094d\u0930\u092f\u094b\u0917 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	3007: "\u0921\u094b\u092e\u0947\u0928 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3008: "\u0906\u092a \u092c\u0928\u093e\u0908 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u0940 \u0905\u0927\u093f\u0915\u0924\u092e \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u090f \u0939\u0948\u0902",
	3009: "\u0938\u0930\u094d\u0935\u0947\u0915\u094d\u0937\u0923 \u092a\u0939\u0932\u0947 \u0938\u0947 \u0939\u0940 \u0926\u0940 \u0917\u0908 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092e\u0947\u0902 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3010: "\u091a\u0930\u0923 \u090f\u0915 \u0939\u0940 \u0917\u093e\u0907\u0921 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u093e \u091a\u093e\u0939\u093f\u090f",
	3011: "\u0907\u0938 \u0938\u0902\u0917\u0920\u0928 \u0915\u094b \u0928\u093f\u0932\u0902\u092c\u093f\u0924 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0915\u0943\u092a\u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	3012: "\u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e\u090f\u0901 \u090f\u0915 \u0939\u0940 \u092b\u093c\u094b\u0932\u094d\u0921\u0930 \u0938\u0947 \u0938\u0902\u092c\u0902\u0927\u093f\u0924 \u0939\u094b\u0928\u0940 \u091a\u093e\u0939\u093f\u090f",
	3013: "\u092f\u0939 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0911\u092c\u094d\u091c\u0947\u0915\u094d\u091f\u094d\u0938 \u0914\u0930 \u092b\u093c\u0940\u0932\u094d\u0921 \u0928\u093e\u092e \u0915\u0940 \u0926\u0940 \u0917\u0908 \u091c\u094b\u0921\u093c\u0940 \u0915\u0947 \u0938\u093e\u0925 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3014: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u0928\u093f\u0932\u0902\u092c\u093f\u0924",
	3015: "\u0909\u092a\u092f\u094b\u0917\u0915\u0930\u094d\u0924\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924",
	3017: "\u0906\u092a\u0915\u0947 \u0908\u092e\u0947\u0932 \u092a\u0924\u0947 \u092a\u0930 \u0938\u092b\u0932\u0924\u093e\u092a\u0942\u0930\u094d\u0935\u0915 \u0913\u091f\u0940\u092a\u0940 \u092d\u0947\u091c\u093e \u0917\u092f\u093e \u0939\u0948",
	3018: "\u092d\u0942\u092e\u093f\u0915\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3019: "\u0926\u0947\u0936 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3020: "\u0936\u0939\u0930 \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948",
	3023: "\u0906\u092a\u0915\u093e \u0938\u0902\u0917\u0920\u0928 \u0938\u0924\u094d\u092f\u093e\u092a\u093f\u0924 \u0928\u0939\u0940\u0902 \u0939\u0948. \u092e\u0926\u0926 \u0915\u0947 \u0932\u093f\u090f, \u0915\u0943\u092a\u092f\u093e support@csod.com \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902",
	3024: "JSON \u092b\u093c\u093e\u0907\u0932 \u0907\u0938 \u0938\u0902\u0917\u0920\u0928 \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948",
	3025: "\u092a\u094d\u0930\u092e\u093e\u0923\u0940\u0915\u0930\u0923 \u0915\u0947 \u0926\u094c\u0930\u093e\u0928 \u0939\u092e\u0947\u0902 \u090f\u0915 \u0938\u092e\u0938\u094d\u092f\u093e \u0915\u093e \u0938\u093e\u092e\u0928\u093e \u0915\u0930\u0928\u093e \u092a\u0921\u093c\u093e\u0964 \u0915\u0943\u092a\u092f\u093e \u092f\u0939 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902. \u092f\u0926\u093f \u0938\u092e\u0938\u094d\u092f\u093e \u092c\u0928\u0940 \u0930\u0939\u0924\u0940 \u0939\u0948, \u0924\u094b \u092a\u0943\u0937\u094d\u0920 \u0924\u093e\u091c\u093c\u093e \u0915\u0930\u0947\u0902 \u0914\u0930 \u092a\u0941\u0928: \u092a\u094d\u0930\u092f\u093e\u0938 \u0915\u0930\u0947\u0902",
	3026: "JSON \u092b\u093c\u093e\u0907\u0932 \u0907\u0938 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u0915\u0947 \u0932\u093f\u090f \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948",
	3027: "\u0915\u094b\u0908 \u0915\u0926\u092e \u0909\u092a\u0932\u092c\u094d\u0927 \u0928\u0939\u0940\u0902 \u0939\u0948\u0964 \u092e\u093e\u0930\u094d\u0917\u0926\u0930\u094d\u0936\u093f\u0915\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u093f\u0924 \u0915\u0930\u0928\u0947 \u0915\u0947 \u0932\u093f\u090f \u0915\u092e \u0938\u0947 \u0915\u092e \u090f\u0915 \u091a\u0930\u0923 \u092c\u0928\u093e\u090f\u0901",
	3028: "\u0905\u0927\u093f\u0915\u0924\u092e \u092f\u093e\u0924\u094d\u0930\u093e \u092a\u094d\u0930\u0915\u093e\u0936\u0928 \u0938\u0940\u092e\u093e \u0924\u0915 \u092a\u0939\u0941\u0901\u091a \u0917\u092f\u093e",
	3047: "\u0905\u0924\u094d\u092f\u0927\u093f\u0915 \u0932\u0949\u0917\u093f\u0928 \u0935\u093f\u092b\u0932\u0924\u093e\u0913\u0902 \u0915\u0947 \u0915\u093e\u0930\u0923 \u0906\u092a\u0915\u093e \u0916\u093e\u0924\u093e \u0905\u0938\u094d\u0925\u093e\u092f\u0940 \u0930\u0942\u092a \u0938\u0947 \u0932\u0949\u0915 \u0915\u0930 \u0926\u093f\u092f\u093e \u0917\u092f\u093e \u0939\u0948\u0964 \u0939\u092e\u0928\u0947 \u0906\u092a\u0915\u094b \u0907\u0938\u0947 \u0905\u0928\u0932\u0949\u0915 \u0915\u0930\u0928\u0947 \u0915\u0947 \u091a\u0930\u0923\u094b\u0902 \u0915\u0947 \u0938\u093e\u0925 \u090f\u0915 \u0908\u092e\u0947\u0932 \u092d\u0947\u091c\u093e \u0939\u0948\u0964 \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e \u0915\u0947 \u0932\u093f\u090f, \u0915\u0943\u092a\u092f\u093e \u0939\u092e\u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 support@csod.com",
	3033: "\u0905\u092e\u093e\u0928\u094d\u092f \u0915\u094d\u0930\u0947\u0921\u0947\u0902\u0936\u093f\u092f\u0932\u094d\u0938. \u0915\u0943\u092a\u092f\u093e \u0905\u0927\u093f\u0915 \u0938\u0939\u093e\u092f\u0924\u093e support@csod.com \u092f\u093e \u0905\u092a\u0928\u0947 \u0935\u094d\u092f\u0935\u0938\u094d\u0925\u093e\u092a\u0915 \u0938\u0947 \u0938\u0902\u092a\u0930\u094d\u0915 \u0915\u0930\u0947\u0902.",
	4020: "\u0907\u0938 \u0917\u093e\u0907\u0921 \u0915\u093e \u090f\u0915 \u092e\u0938\u094c\u0926\u093e \u092a\u0939\u0932\u0947 \u0938\u0947 \u092e\u094c\u091c\u0942\u0926 \u0939\u0948; \u090f\u0915 \u0917\u093e\u0907\u0921 \u0915\u0947 \u0915\u0908 \u092e\u0938\u094c\u0926\u094b\u0902 \u0915\u0940 \u0905\u0928\u0941\u092e\u0924\u093f \u0928\u0939\u0940\u0902 \u0939\u0948\u0964",
	4021: "\u092a\u0948\u0930\u093e\u092e\u0940\u091f\u0930 \u0915\u0947 \u0905\u092e\u093e\u0928\u094d\u092f \u092e\u093e\u0928 [envs]",
	2054: "\u090f\u0915 \u092a\u0941\u0930\u093e\u0928\u093e \u0914\u0930 \u0928\u092f\u093e \u092a\u093e\u0938\u0935\u0930\u094d\u0921 \u0938\u092e\u093e\u0928 \u0928\u0939\u0940\u0902 \u0939\u094b \u0938\u0915\u0924\u093e \u0939\u0948",
	playNextBotTour: "\u0905\u0917\u0932\u093E \u092C\u0949\u091F \u091F\u0942\u0930 \u0916\u0947\u0932\u0947\u0902",
	defaultBotEndingMessage: "\u0939\u092E \u0938\u092E\u093E\u092A\u094D\u0924 \u0915\u0930 \u091A\u0941\u0915\u0947 \u0939\u0948\u0902, \u092C\u0939\u0941\u0924 \u092C\u0939\u0941\u0924 \u0927\u0928\u094D\u092F\u0935\u093E\u0926! \u0907\u0938\u0938\u0947 \u092A\u0939\u0932\u0947 \u0915\u093F \u092E\u0948\u0902 \u0907\u0938\u0947 \u0938\u092E\u093E\u092A\u094D\u0924 \u0915\u0930\u0942\u0902, \u0915\u0941\u091B \u0914\u0930?",
	loginNext: "\u0905\u0917\u0932\u093e",
	3068: "\u0906\u092A\u0915\u093E \u092A\u0941\u0930\u093E\u0928\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0938\u092E\u093E\u092A\u094D\u0924 \u0939\u094B \u0917\u092F\u093E \u0939\u0948, \u0932\u0949\u0917\u093F\u0928 \u0915\u0947 \u0932\u093F\u090F \u0928\u092F\u093E \u092A\u093E\u0938\u0935\u0930\u094D\u0921 \u0938\u0947\u091F \u0915\u0930\u0947\u0902\u0964",
	includeScreen: "\u0938\u094D\u0915\u094D\u0930\u0940\u0928\u0936\u0949\u091F \u0936\u093E\u092E\u093F\u0932 \u0915\u0930\u0947\u0902",
	feedbackPlaceholder: "\u092A\u094D\u0930\u0924\u093F\u0915\u094D\u0930\u093F\u092F\u093E \u0939\u0948? \u0939\u092E\u0947\u0902 \u0907\u0938\u0947 \u0938\u0941\u0928\u0928\u093E \u0905\u091A\u094D\u091B\u093E \u0932\u0917\u0947\u0917\u093E!",
	feedbackOptBtn: "\u091C\u093E\u0928\u0915\u093E\u0930\u0940 \u0915\u094B \u0939\u093E\u0907\u0932\u093E\u0907\u091F \u0915\u0930\u0928\u0947 \u092F\u093E \u091B\u093F\u092A\u093E\u0928\u0947 \u0915\u0947 \u0932\u093F\u090F \u0915\u094D\u0932\u093F\u0915 \u0915\u0930\u0947\u0902",
	highlight: "\u092A\u094D\u0930\u092E\u0941\u0916\u0924\u093E \u0938\u0947 \u0926\u093F\u0916\u093E\u0928\u093E",
	send: "\u092D\u0947\u091C\u0928\u093E",
	done: "\u092A\u0942\u0930\u094D\u0923",
	hide: "\u091B\u093F\u092A\u093E\u0928\u093E"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.it_IT = {
	currentPage: "Pagina corrente",
	myChat: "mychat",
	import: "Importazione",
	export: "Esportazione",
	redirectLivetour: "Gioca dal vivo",
	guideNotAvailable: "Guida non disponibile sull'URL corrente. Vuoi andare all'URL della guida?",
	downloadPPT: "Scarica PPT",
	btnYes: "S\u00ec",
	btnNo: "No",
	inApp: "In-App",
	live: "Vivere",
	resume: "Riassumere",
	tourCloseConfirm: "Vuoi davvero chiudere questa Guida?",
	notifSnoozeDonotMsg: "Per favore, dicci se vuoi guardarlo pi\u00f9 tardi o non mostrare mai la notifica?",
	surveyThanksMessage: "Grazie per aver fornito la tua risposta",
	testMePassedMessage: "Felicitazioni! Hai superato",
	testMeFailedMessage: "Oops! Hai fallito",
	testMeGuideEfficiency: "Efficienza del test:",
	testMeGuideEffectiveness: "Efficacia del test:",
	testMeTestTime: "Tempo di test",
	testMeExpectedTime: "Tempo previsto",
	testMeStepsTaken: "Misure adottate",
	testMeExpectedSteps: "Passi previsti",
	testMeRetakeTestBtn: "Ripetizione test",
	testMeResultTitle: "Risultato MyTest",
	ConfirmIfTestMeModeRidirect: "Guida non disponibile sull'URL corrente. Vuoi reindirizzare all'URL della Guida TV?",
	feedCmt: "Il tuo feedback \u00e8 prezioso per noi!<br> Dicci cosa ne pensi in 500 caratteri o meno",
	doNotShowAgain: "Non mostrare pi\u00f9",
	neverShowAgain: "Non mostrare mai pi\u00f9",
	skipGuide: "Salta la guida",
	surveyErrorMsg: "Si prega di rispondere ad almeno una domanda",
	redirect: "Reindirizzare",
	liveGuide: "Guida dal vivo",
	question: "Domanda",
	exitGuide: "Guida all'uscita",
	continueGuide: "Guida continua",
	stop: "Fermarsi",
	characters: "Personaggi:",
	survey: "Sondaggio",
	testMeStopMessage: "Sei in modalit\u00e0 TestMe, fai clic su STOP per uscire",
	testMeFailedErrorMessage: "Non \u00e8 stato possibile raggiungere il passo obiettivo.<br>Hai {CORRECT_STEPS} passaggi corretti da {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Digita qui! Max 500 caratteri",
	pushTourSnoozeMsg: "Questo tour di lancio automatico verr\u00e0 posticipato per",
	of: "di",
	wbMplayerTitle: "Tutorial",
	wbDragTooltip: "Trascina e rilascia questo lettore in qualsiasi punto della pagina",
	dontShowEdResult: "Non voglio vedere questo",
	mPlayerHeaderTitle: "Micro Lettore",
	closePreview: "Chiudi anteprima",
	elmNotFound: "Sembra che non riusciamo a trovare l'elemento per il passaggio:",
	elmNotFoundInfo: "Assicurati di essere sulla pagina corretta per eseguire questo passaggio. Controlla anche se riesci a vedere l'elemento selezionato",
	notExists: "Non esiste",
	elmNotFoundHeader: "Elemento Step non trovato",
	goToStep: "Vai al passaggio",
	notFoundStep: "Non siamo riusciti a trovare l'elemento per il passo #",
	pleaseReselect: "Prova a selezionare nuovamente l'elemento.",
	stepRuleMatchErr: "Errore di configurazione: le regole dei passaggi non corrispondono",
	guideRuleMatchErr: "Errore di configurazione: le regole della guida non corrispondono",
	stepNotFoundRedirect: "Passaggio non trovato in questa pagina. Vuoi reindirizzare?",
	branchStepMessagePopup: "Seleziona una delle attivit\u00e0 seguenti per procedere",
	btnSkip: "Saltare",
	kindlyHoverPopup: "Passa gentilmente il mouse su questo elemento per aprire il popup",
	stepPlayIsdefinedPopover: "Il passo che stai per riprodurre \u00e8 definito sul popover",
	elmNotFoundWestpac: "Passaggio non trovato: questa guida terminer\u00e0",
	findingElementMessage: "Cercando di trovare un passo. . .",
	badDomain: "Il dominio e l'URL correnti non sono autorizzati a eseguire MyGuide. Contatta l'amministratore per assistenza.",
	hostJsError: "Sembra che ci sia un errore sulla pagina web. MyGuide non pu\u00f2 continuare",
	remember: "Ricordati di me",
	forgotPass: "Hai dimenticato la password?",
	dontHavAcc: "Non hai un account?",
	loginTitle: "Accesso",
	loginOtpScreenTitle: "Verifica OTP per accedere",
	forgetPassTitl: "Reimposta password",
	placeholderEmail: "ID e-mail",
	placeholderPassword: "Parola d\u2019ordine",
	placeholderNewPassword: "Nuova password",
	placeholderCurrentPassword: "Password corrente",
	placeholderFirstname: "Nome di battesimo",
	placeholderLastname: "Cognome",
	placeholderPasswordC: "Conferma password",
	btnCancel: "Annulla",
	btnPayment: "Piano di aggiornamento",
	btnSubmit: "Invia",
	btnLogin: "Accesso",
	termsOfUse: "Condizioni d'uso",
	andLabel: "e",
	policyPrivacy: "Informativa sulla privacy",
	passwordError: "La password deve essere lunga 8 cifre",
	confirmPasswordError: "La password e la password di conferma devono essere uguali",
	firstnameError: "Inserisci un nome valido",
	lastnameError: "Inserisci un cognome valido",
	emailError: "Inserisci un ID e-mail valido",
	orgError: "Inserisci un URL dell'organizzazione valido",
	otpError: "Inserisci OTP valido",
	placeholderOtp: "Inserisci qui la tua OTP",
	otpSentDesc: "Se \u00e8 stato fornito un indirizzo e-mail valido, ti verr\u00e0 inviato un link di ripristino.<br>Se non vedi l'e-mail in pochi minuti, controlla la tua cartella spam per un'e-mail da",
	btnOtpVerify: "Verifica OTP",
	alreadyHavAcc: "Hai gi\u00e0 un account?",
	smartbiteMessageError: "Si prega di inserire il messaggio",
	smartbiteLinkError: "Inserisci un link valido",
	noGuidesOnThisPage: "Nessuna guida disponibile in questa pagina!",
	clickOn: "Clicca su ",
	contactUs: "Contattaci",
	search: "Ricerca",
	noRecordFound: "Nessun record trovato",
	category: "Cartella",
	subCategory: "Sottocartella",
	confirmPasswordRequired: "Conferma password richiesta",
	logInWithSSO: "Accedi con SSO",
	inputPlaceHolderSearch: "Cerca qualsiasi guida",
	noGuideAvailableFor: "Nessuna guida trovata corrisponde alla tua ricerca",
	tryModifyingYourSearch: "Prova a modificare i criteri di ricerca",
	signInVerifyYourEmail: "Questo ID e-mail non \u00e8 stato verificato. Controlla la tua email per i dettagli",
	signInVerifyYourAccount: "Ti abbiamo inviato un'email con una OTP. Verifica il tuo account per completare la procedura di accesso",
	maintenanceMessage: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	back: "Indietro",
	changePassword: "Cambia password",
	startTestAuto: "Inizia i test di automazione",
	msgPasswordChangedSuccess: "La tua password \u00e8 stata modificata correttamente",
	msgConfirmNewPasswordError: "Conferma password deve essere uguale a Nuova password",
	enterUrl: "Inserisci l'URL del team",
	dragPlaceholderDropThis: "Elimina questo ",
	dragPlaceholderHere: " qui",
	termsOfService: "Termini",
	versionText: "Versione",
	videoStepSuccessMessage: "Il tuo passaggio \u00e8 stato creato correttamente",
	importSuccessMessage: "Guida caricata correttamente. Vai a Stato attivit\u00e0 per controllare lo stato di importazione",
	worldBankHelpSupport: "Alcuni strumenti, come i tooltip, possono essere visualizzati solo nell'interfaccia",
	helpSupport: "Aiuto & Supporto",
	page: "pagina",
	selectAnApplication: "Seleziona un'applicazione",
	refresh: "Aggiornare",
	loginBtn: "Accesso",
	account: "Conto",
	taskStatus: "Stato dell'attivit\u00e0 ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Primo passo",
	lastStep: "Ultimo passo",
	startTest: "Inizia il test",
	noInappStepInGuide: "TestMe non pu\u00f2 procedere poich\u00e9 non esiste un passaggio in linea in questa guida",
	settingBtn: "Impostazioni avanzate",
	orgSetting: "Impostazioni dell'organizzazione",
	close: "Chiudere",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blog",
	downloadTxt: "Testo normale",
	serviceErrorMessage: "Oops! Si \u00e8 verificato un errore. Riprova dopo qualche tempo. Puoi anche inviarci un'e-mail all'indirizzo support@csod.com per qualsiasi assistenza",
	guidesTab: "Guide",
	noGuideCreatedYet: "Nessuna guida ancora creata!",
	noCategoryCreatedYet: "Nessuna cartella creata ancora!",
	chatbot: "mychat",
	notAutorised: "Non hai l'accesso richiesto, contatta l'amministratore",
	ok: "OK",
	apiError: "Errore di configurazione. Si prega di contattare l'amministratore",
	select: "Selezionare",
	mute_unmute: "Disattiva\/Riattiva audio",
	privacyPolicy: "Privacy & cookie",
	privacyPolicyText: "MyGuide utilizza i cookie. Se continui, accetti i nostri Termini e l'Informativa sulla privacy e ci dai il consenso all'utilizzo dei cookie",
	terms: "Termini",
	westPecErrorMessage: "Non sei autorizzato ad accedere a questa applicazione. Accedi alla rete Westpac",
	noApp: "Nessuna applicazione trovata",
	role: "Ruolo:",
	all: "Tutto",
	video: "Video",
	course: "Corso",
	article: "Articolo",
	image: "Immagine",
	pathways: "Vie",
	preview: "Anteprima",
	more: "Pi\u00f9",
	history: "Storia",
	publish: "Pubblicare",
	selectGuideLink: "Si prega di selezionare Guida al link",
	selectGuideBeforeSubmit: "Si prega di selezionare una guida prima di inviare",
	change: "Cambiare",
	checkNow: "Controlla ora",
	minutes: "verbale",
	clickHere: "clicca qui",
	youAlmostDone: "Hai quasi finito!",
	setOrg: "per configurare la tua organizzazione",
	apps: "Applicazioni",
	me: "Me",
	playStep: "Gioca Passo",
	miniPlayerHelp: "Guida",
	defaultMiniPlayerHelp: "Guida",
	defaultConfirmIfSlideshowOrRedirect: "Passaggio non disponibile sull'URL corrente.<br>Vuoi andare all'URL del passaggio o riprodurre la presentazione?",
	defaultServiceErrorMessage: "Oops! Si \u00e8 verificato un errore. Riprova dopo qualche tempo. Puoi anche inviarci un'e-mail all'indirizzo support@csod.com per qualsiasi assistenza",
	defaultMaintenanceMessage: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	userNotFollowingGuideMessage: "Sembra che tu stia eseguendo passaggi che non fanno parte di questa guida. Se non desideri pi\u00f9 seguire la Guida, fai clic su Guida all'uscita",
	defaultUserNotFollowingGuideMessage: "Sembra che tu stia eseguendo passaggi che non fanno parte di questa guida. Se non desideri pi\u00f9 seguire la Guida, fai clic su Guida all'uscita",
	resumeGuide: "Guida al curriculum",
	defaultResumeGuideMessage: "Guida al curriculum",
	backToLogin: "Torna al Login",
	filters: "Filtri",
	thisApp: "Questa applicazione",
	thisWebsite: "Questo sito web",
	maxFreeTourLimit: "Limite massimo di tour raggiunto",
	passwordRegexCheck: "La password deve contenere un minimo di 8 caratteri, di cui almeno un valore maiuscolo, uno minuscolo e uno numerico",
	countLimit: "99+",
	microsoftServiceKey: "Immettere la chiave di sottoscrizione di Servizi cognitivi Microsoft Speech",
	numberOfImgFile: "Il numero di file di immagine e file di testo deve essere lo stesso",
	availableOn: "Disponibile su",
	tooltipUnpubWorkflowTitle: "Flusso di lavoro non pubblicato",
	tooltipUnpubParentWorkflowTitle: "Flusso di lavoro pubblicato, cartelle padre non pubblicate",
	tooltipPubParentWorkflowTitle: "Flusso di lavoro pubblicato, cartella pubblicata",
	tooltipUnpubTooltipTitle: "Tooltip non pubblicato",
	tooltipUnpubParentTooltipTitle: "Descrizione comando pubblicata, cartelle padre non pubblicate",
	tooltipPubParentTooltipTitle: "Descrizione comando pubblicata, cartella pubblicata",
	tooltipUnpubTutorialTitle: "Tutorial inedito",
	tooltipUnpubParentTutorialTitle: "Esercitazione pubblicata, cartelle padre non pubblicate",
	tooltipPubParentTutorialTitle: "Esercitazione pubblicata, cartella pubblicata",
	tooltipUnpubSubFolderTitle: "Sottocartella non pubblicata",
	tooltipUnpubSubFolderDesc: "Utilizzare le sottocartelle per organizzare le guide",
	tooltipUnpubParentSubFolderTitle: "Sottocartella pubblicata, cartelle padre non pubblicate",
	tooltipPubParentSubFolderTitle: "Sottocartella pubblicata, Cartella pubblicata",
	tooltipPubParentSubFolderDesc: "Organizza le guide",
	exitSurvey: "Exit Survey",
	disable: "Disabilitare",
	instructionExitSurvey: "Exit Survey viene mostrato quando un utente esce da una guida prima del completamento",
	msgVideoNotFound: "Caricamento del video, prova dopo un po 'di tempo",
	msgGiphyNotFound: "Carica la tua GIF, prova dopo un po 'di tempo",
	userPref: "Le mie preferenze",
	manageAccount: "Portale di amministrazione",
	analyticsPortal: "Portale di approfondimenti",
	errorInvalidUrl: "URL non valido",
	wbFooterText: "Apprendimento tecnico ITS",
	navigationMenu: "Menu di navigazione",
	clearHistory: "Cancella cronologia",
	userDeniedMessage: "Autorizzazioni di accesso a videocamera e microfono negate all'utente",
	pushNotification: "Notifiche push",
	viewDetail: "Visualizza dettaglio",
	contactAdmin: "Contatta support@csod.com o il tuo amministratore per ulteriore assistenza",
	noAppOnDomain: "L'applicazione non \u00e8 assegnata per il dominio corrente ",
	noGuidesOnDomain: "Nessuna guida trovata",
	apply: "Applicare",
	invalidLoginCred: "Credenziali di accesso non valide. Il tuo account verr\u00e0 bloccato dopo pi\u00f9 tentativi non riusciti, riceverai un'email per sbloccare il tuo account oppure potrai reimpostare la password",
	resendOTP: "Invia di nuovo OTP",
	sendFeedback: "Invia feedback",
	guideNotExist: "Questa guida non \u00e8 disponibile in questa pagina (Errore: mancata corrispondenza del dominio) ",
	cdnAccess: "<b>Siamo spiacenti<\/b> <br><br>Sembra che ci sia un problema con i nostri server.<br> Siamo stati informati dell'errore e lo correggeremo il prima possibile",
	tourPlayError: "La guida non pu\u00f2 essere riprodotta. Errore durante il recupero dei dettagli della Guida TV",
	playerMode: "Modalit\u00e0 giocatore",
	closePanel: "Chiudi pannello",
	switchCreatorMode: "Passa alla modalit\u00e0 Creator",
	extensionContextError: "Il contesto dell'estensione \u00e8 invalidato. Si prega di ricaricare la pagina per continuare",
	otpSent: "OTP \u00e8 stato inviato nuovamente alla tua email, controlla la tua casella di posta",
	startOver: "Ricomincia",
	yesResume: "Riassumere",
	dontShowAgain: "Non mostrare pi\u00f9",
	notificationHeader: "Hai ricevuto una notifica!",
	watchLater: "Guarda pi\u00f9 tardi",
	pushSnoozeMsg: "Questa notifica verr\u00e0 posticipata per",
	showAgain: "Mostra di nuovo",
	noGuidesOnThisTab: "Non ci sono notifiche in questa pagina",
	iAgree: "Sono d'accordo",
	viewMore: "Scopri di pi\u00f9",
	lostInternetConnection: "Connessione persa al server. Riconnettiti e riprova",
	next: "Prossimo",
	recent: "Recente",
	older: "Pi\u00f9 vecchio",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Chiaro",
	tooltipDontShowAgain: "Le notifiche non verranno pi\u00f9 visualizzate. Per abilitare una notifica ora, passa il mouse su di essa e fai clic su \"Mostra di nuovo\"",
	tooltipWatchLater1: "Le notifiche vengono posticipate per",
	tooltipWatchLater2: "e apparir\u00e0 dopo. Per abilitare una notifica ora, passa il mouse su di essa e fai clic su \"Mostra di nuovo\"",
	hour: "ora",
	hours: "orario",
	insightsTracker: "Tracker di approfondimenti",
	slideshow: "Presentazione",
	autoplay: "RIPRODUZIONE AUTOMATICA",
	powerFormOldData: "Dati esistenti",
	powerFormNewData: "Utilizza questo modulo per inserire nuovi dati",
	powerFormNewDataMore: "Se i tuoi dati esistenti non sono visibili, fai clic sulla freccia in alto a sinistra per visualizzare i tuoi dati. I dati devono quindi essere copiati nel formato puntato consentito.",
	powerFormTitle: "Assistente inserimento dati",
	powerFormMandatory: "Questo \u00e8 un campo obbligatorio, limite massimo di caratteri ",
	belongToOtherApp: "Questa guida viene creata su {TOURURL}, che appartiene all'app {APPNAME}. Copia questa guida in quell'app e riprova",
	setDomain: "Se sei sicuro che {TOURURL} debba essere aggiunto nelle impostazioni correnti del dominio dell'applicazione, aggiungi e riprova",
	on: "SU",
	off: "SPENTO",
	btnPrev: "Prev",
	btnPrevious: "Precedente",
	taskList: "Elenco attivit\u00e0",
	unprocessedVideo: "Attendi mentre il video \u00e8 in fase di elaborazione.",
	searchResult: "Risultato della ricerca",
	pleaseWait: "Attendere prego!",
	mediaDownloadMsg: "Mentre prepariamo i tuoi file per il download",
	mediaFileNotFound: "File multimediale non trovato",
	searchInFolder: "Cerca nella cartella",
	currentPageSearchPlaceholder: "Cerca le guide disponibili nella pagina corrente",
	brandLogo: "Logo del marchio",
	accessibility: "Accessibilit\u00e0",
	replay: "Replay",
	defaultGreetingMessage: "Ehi! Benvenuti in MyGuide. Come posso aiutarti? Tieni presente che sono un bot.",
	defaultErrorMessage: "Mi dispiace, non l'ho capito. Potrebbe essere pi\u00f9 specifico? ",
	defaultEndMessage: "Abbiamo finito, grazie mille!",
	greetingMessage: "Ehi! Benvenuti in MyGuide. Come posso aiutarti? Tieni presente che sono un bot.",
	errorMessage: "Mi dispiace, non l'ho capito. Potrebbe essere pi\u00f9 specifico? ",
	endMessage: "Abbiamo finito, grazie mille!",
	guideLnkToRedirect: "Utilizzare il seguente link per reindirizzare alla pagina e riprodurre la guida",
	otpTimer: "Puoi riprovare in ",
	seconds: " Secondi",
	limitWarning: "Hai raggiunto il limite massimo di tentativi non riusciti",
	403: "Abbiamo riscontrato un problema con questa richiesta. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	405: "Si \u00e8 verificato un problema durante l'elaborazione di questa richiesta. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	429: "Troppe richieste",
	1003: "Si \u00e8 verificato un problema durante l'autenticazione. Effettua nuovamente il login e riprova. Se il problema persiste, aggiornare la pagina e riprovare",
	1007: "Si \u00e8 verificato un problema durante l'autenticazione. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	1005: "<b>Siamo spiacenti<\/b> <br><br>Sembra che ci sia un problema con la richiesta o con i nostri server.<br> Siamo stati informati dell'errore e lo correggeremo il prima possibile",
	1009: "L'email dell'utente non \u00e8 verificata",
	1014: "Manutenzione in corso. Vi preghiamo di contattarci tramite support@csod.com",
	1017: "Si \u00e8 verificato un problema durante l'autenticazione. Effettua nuovamente il login e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	1018: "\u00c8 stato raggiunto il limite massimo per la creazione di passaggi",
	2000: "Abbiamo riscontrato un problema con questa richiesta. Siamo stati avvisati. Riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2001: "Credenziali di accesso non valide. Il tuo account verr\u00e0 bloccato dopo pi\u00f9 tentativi non riusciti, riceverai un'email per sbloccare il tuo account oppure potrai reimpostare la password",
	2002: "OTP non valido o scaduto",
	2003: "Il file caricato non \u00e8 un'immagine valida (sono supportati i file JPG e PNG)",
	2004: "Sessione scaduta",
	2005: "Non siamo riusciti a rintracciare questo utente. Aggiorna e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2006: "L'indirizzo e-mail non \u00e8 corretto. Riprova",
	2007: "Ruolo utente non valido. Riprova",
	2008: "\u00c8 necessario specificare un tipo di attivit\u00e0 corretto",
	2009: "L'Applicazione fornita non \u00e8 valida; potrebbe essere stato cancellato o non \u00e8 mai esistito",
	2010: "Parametri di input non validi. Aggiorna e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2011: "L'organizzazione specificata non \u00e8 valida; potrebbe essere stato cancellato o non \u00e8 mai esistito",
	2012: "Nella richiesta era presente un parametro mancante o non valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2013: "Nella richiesta era presente un parametro mancante o non valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2014: "Parametro obbligatorio per Super Admin[organization_id]",
	2015: "Il contenuto dei Dati immagine fornito non \u00e8 valido. Ricontrolla e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	2016: "Dominio non valido",
	2017: "Nella richiesta era presente un parametro mancante o non valido",
	2018: "Nella richiesta era presente un parametro mancante o non valido",
	2019: "Quello che stai cercando non esiste o potrebbe essere stato eliminato",
	2020: "Nella richiesta era presente un parametro mancante o non valido",
	2021: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questa richiesta. Segnala il problema a support@csod.com",
	2022: "Nella richiesta era presente un parametro mancante o non valido. Inserisci un URL del team valido",
	2023: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questa richiesta. Segnala il problema a support@csod.com",
	2024: "La dimensione del file deve essere inferiore a 5 MB",
	2025: "Nella richiesta era presente un parametro mancante o non valido. Inserisci un URL valido",
	2026: "La password deve contenere un minimo di 8 caratteri, di cui almeno un valore maiuscolo, uno minuscolo e uno numerico",
	2027: "Password non valida",
	2028: "Nella richiesta era presente un parametro mancante o non valido",
	2029: "La citt\u00e0 che hai fornito non \u00e8 supportata",
	2030: "Nella richiesta era presente un parametro mancante o non valido",
	2031: "Il server di autenticazione ha rilevato un errore imprevisto durante il tentativo di elaborare questo parametro. Segnala il problema a support@csod.com",
	2032: "Parametro non valido[file_id]",
	2033: "URL non valido. Ricontrolla e riprova",
	2034: "Il server di autenticazione ha rilevato un errore imprevisto durante l'elaborazione di questi parametri. Segnala il problema a support@csod.com",
	2035: "Il server di autenticazione ha rilevato un errore imprevisto durante l'elaborazione di questa AppKey. Segnala il problema a support@csod.com",
	2036: "Il server di autenticazione ha rilevato un errore imprevisto. Si prega di aggiornare questa pagina. Se il problema persiste, segnalarlo a support@csod.com",
	2044: "Sembra che abbiamo smarrito la traduzione per questo passaggio. Si prega di passare alla lingua predefinita e ritradurre il passaggio, oppure contattare il nostro servizio clienti per ulteriori dettagli.",
	2200: "Abbiamo riscontrato un problema durante l'accesso ai controlli audio \/ video. Controlla le impostazioni del browser e riprova. Se il problema persiste, segnalaci all'support@csod.com",
	3061: "Puoi aggiungere fino a 5 guide",
	4000: "Non \u00e8 possibile creare sottocategorie all'interno di una cartella, se \u00e8 gi\u00e0 stata creata una Guida",
	4001: "Se un utente \u00e8 gi\u00e0 un super amministratore, non \u00e8 possibile modificare il ruolo utente",
	4002: "Questa azione non \u00e8 consentita su una Guida pubblicata",
	4003: "Impossibile pubblicare la guida bloccata",
	4004: "Questa azione non \u00e8 consentita in una cartella pubblicata. Si prega di annullare la pubblicazione",
	4006: "L'applicazione deve appartenere all'organizzazione specificata",
	4007: "Non sei autorizzato a eseguire questa azione",
	4008: "L'azione non \u00e8 consentita per questa sottocategoria",
	4009: "La guida deve essere pubblicata",
	4010: "Impossibile creare la guida all'interno di una cartella con una sottocategoria",
	4011: "Per creare i passaggi, \u00e8 necessario sbloccare questa guida",
	4012: "Per modificare i passaggi, \u00e8 necessario sbloccare questa guida",
	4013: "Per eliminare i passaggi, \u00e8 necessario sbloccare questa guida",
	4014: "Per copiare e incollare i passaggi, \u00e8 necessario sbloccare questa guida",
	3001: "La guida sar\u00e0 presto disponibile per l'esportazione. Per controllare lo stato, vai su \"Stato attivit\u00e0\" nel menu dell'account",
	3002: "Caricamento avviato. Si prega di non aggiornare o chiudere il browser fino al completamento del caricamento. \u00c8 possibile controllare lo stato dell'importazione una volta completato",
	3003: "L'utente esiste gi\u00e0",
	3004: "L'ID e-mail \u00e8 gi\u00e0 verificato",
	3005: "Questo URL \u00e8 in conflitto con altre configurazioni dell'applicazione, prova ad aggiungere qualsiasi altro URL",
	3006: "La cartella deve appartenere alla stessa applicazione",
	3007: "Il dominio esiste gi\u00e0",
	3008: "Hai raggiunto il limite massimo di Guide create",
	3009: "L'indagine esiste gi\u00e0 nella guida fornita",
	3010: "Il Passo deve appartenere alla stessa Guida",
	3011: "Questa organizzazione \u00e8 sospesa. Contatta il tuo amministratore",
	3012: "Le guide devono appartenere alla stessa cartella",
	3013: "Questa guida esiste gi\u00e0 con la coppia di oggetti e il nome del campo specificati",
	3014: "Utente sospeso",
	3015: "Utente gi\u00e0 verificato",
	3017: "OTP \u00e8 stato inviato con successo al tuo indirizzo email",
	3018: "Il ruolo esiste gi\u00e0",
	3019: "Il paese esiste gi\u00e0",
	3020: "La citt\u00e0 esiste gi\u00e0",
	3023: "La tua organizzazione non \u00e8 verificata. Per assistenza, si prega di contattare support@csod.com",
	3024: "Il file JSON non \u00e8 disponibile per questa organizzazione",
	3025: "Si \u00e8 verificato un problema durante l'autenticazione. Riprova. Se il problema persiste, aggiornare la pagina e riprovare",
	3026: "Il file JSON non \u00e8 disponibile per questa guida",
	3027: "Nessun passaggio disponibile. Creare almeno un passaggio per pubblicare la Guida TV",
	3028: "Raggiunto il limite massimo di pubblicazione del tour",
	3047: "Il tuo account \u00e8 stato temporaneamente bloccato a causa di eccessivi errori di accesso. Ti abbiamo inviato un'e-mail con i passaggi per sbloccarlo. Per ulteriore assistenza, contattaci all'indirizzo support@csod.com",
	3033: "Credenziali non valide. Contatta support@csod.com o il tuo amministratore per ulteriore assistenza.",
	4020: "Esiste gi\u00e0 una bozza di questa guida; non sono ammesse pi\u00f9 bozze di una guida.",
	4021: "Valori non validi del parametro [envs]",
	2054: "Una vecchia e una nuova password non possono essere uguali",
	playNextBotTour: "Riproduci il prossimo tour del bot",
	defaultBotEndingMessage: "Abbiamo finito, grazie mille! Nient'altro prima di dare il via?",
	loginNext: "Prossimo",
	3068: "La tua vecchia password \u00E8 scaduta imposta una nuova password per il login.",
	includeScreen: "Includi screenshot",
	feedbackPlaceholder: "Hai un feedback? Ci piacerebbe sentirlo!",
	feedbackOptBtn: "Fare clic per evidenziare o nascondere le informazioni",
	highlight: "Evidenziare",
	send: "Inviare",
	done: "Fatto",
	hide: "Nascondere"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ja_JP = {
    "403": "このリクエストで問題が発生しました。リクエストを再試行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "405": "このリクエストの処理中に問題が発生しました。リクエストを再試行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "429": "リクエストが多すぎます",
    "1003": "認証時に問題が発生しました。再ログインしてもう一度実行してください。問題が解決しない場合は、ページを更新し、再試行してください",
    "1005": "<b></b><br><br>リクエストに問題があるか、サーバーに問題があるようです。<br> エラーを検知しました。できるだけ早く修正します",
    "1007": "認証時に問題が発生しました。再試行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "1009": "ユーザーメールが検証されていません",
    "1014": "メンテナンス処理中。support@csod.com経由でお問い合わせください",
    "1017": "認証時に問題が発生しました。再ログインしてもう一度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "1018": "ステップ作成の上限に達しました",
    "2000": "このリクエストで問題が発生しました。検知しました。リクエストを再試行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2001": "ログイン資格情報が無効です。複数回失敗するとアカウントがロックされ、ロックを解除するためのメールが届きます。パスワードをリセットすることもできます",
    "2002": "無効または失効済みのワンタイムパスワード",
    "2003": "アップロードされたファイルは有効な画像ではありません（JPGおよびPNGファイルがサポートされています）",
    "2004": "セッションが期限切れです",
    "2005": "このユーザーをトラッキングできませんでした。更新して再度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2006": "メールアドレスが正しくありません。再試行してください",
    "2007": "ユーザーの役割が無効です。再試行してください",
    "2008": "正しいタスクタイプを指定する必要があります",
    "2009": "指定されたアプリケーションは無効です。削除されたか、存在しない可能性があります",
    "2010": "入力パラメータが無効です。更新して再度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2011": "指定された組織は無効です。削除されたか、存在しない可能性があります",
    "2012": "リクエストに無効または不完全なパラメータがありました。再チェックしてもう一度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2013": "リクエストに無効または不完全なパラメータがありました。再チェックしてもう一度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2014": "スーパー管理者[organization_id]に必要なパラメータ",
    "2015": "指定された画像データコンテンツが無効です。再チェックしてもう一度実行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "2016": "ドメインが無効です",
    "2017": "リクエストに無効または不完全なパラメータがありました。",
    "2018": "リクエストに無効または不完全なパラメータがありました。",
    "2019": "探しているものが存在しないか、削除された可能性があります",
    "2020": "リクエストに無効または不完全なパラメータがありました。",
    "2021": "リクエストの処理中に認証サーバーに予期しないエラーが発生しました。問題をsupport@csod.comに報告してください",
    "2022": "リクエストに無効または不完全なパラメータがありました。有効なチームURLを入力してください",
    "2023": "リクエストの処理中に認証サーバーに予期しないエラーが発生しました。問題をsupport@csod.comに報告してください",
    "2024": "ファイルサイズは5MB未満である必要があります",
    "2025": "リクエストに無効または不完全なパラメータがありました。有効なURLを入力してください。",
    "2026": "パスワードは8文字以上とし、少なくとも大文字と小文字を1つずつと数字を1つ含める必要があります。",
    "2027": "無効なパスワード",
    "2028": "リクエストに無効または不完全なパラメータがありました。",
    "2029": "指定した市区町村はサポートされていません",
    "2030": "リクエストに無効または不完全なパラメータがありました。",
    "2031": "このパラメータの処理中に認証サーバーに予期しないエラーが発生しました。問題をsupport@csod.comに報告してください",
    "2032": "パラメータ[file_id]が無効です",
    "2033": "URLは無効です。再チェックしてもう一度実行してください",
    "2034": "パラメータの処理中に認証サーバーに予期しないエラーが発生しました。問題をsupport@csod.comに報告してください",
    "2035": "アプリキーの処理中に認証サーバーに予期しないエラーが発生しました。問題をsupport@csod.comに報告してください",
    "2036": "認証サーバーに予期しないエラーが発生しました。このページを更新してください。問題が解決しない場合は、support@csod.comに問題を報告してください",
    "2044": "このステップについては、変換が間違っているようです。デフォルト言語に切り替えて、ステップを再変換するか、または詳細についてカスタマーサポートにお問い合わせください。",
    "2054": "新旧のパスワードを同じにすることはできません",
    "2200": "オーディオ/動画コントロールにアクセス中に問題が発生しました。ブラウザ設定を確認し、再試行してください。問題が解決しない場合は、support@csod.comに報告してください",
    "3001": "ガイドはすぐにエクスポートできるようになります。ステータスをチェックするには、[アカウント]メニューの[タスクステータス]に移動します",
    "3002": "アップロードが開始されました。アップロードが完了するまで、ブラウザを更新または閉じないでください。完了後にインポートステータスを確認できます",
    "3003": "ユーザーは既に存在します",
    "3004": "メールアドレスが既に検証されています",
    "3005": "このURLは他のアプリケーション設定と重複しています。それ以外のURLを追加してください",
    "3006": "フォルダは同じアプリケーションに属する必要があります",
    "3007": "ドメインは既に存在します",
    "3008": "作成済みガイドの上限に達しました。",
    "3009": "アンケートは指定されたガイドに既に存在します",
    "3010": "ステップは同じガイドに属する必要があります",
    "3011": "この組織は停止済みです。管理者に連絡してください",
    "3012": "ガイドは同じフォルダに属する必要があります",
    "3013": "このガイドは、指定されたオブジェクトのペアとフィールド名で既に存在しています",
    "3014": "ユーザー停止済み",
    "3015": "ユーザーは既に検証済み",
    "3017": "ワンタイムパスワードがご登録のメールアドレスに正常に送信されました",
    "3018": "役割が既に存在します",
    "3019": "国が既に存在します",
    "3020": "市町村が既に存在します",
    "3023": "組織が検証されていません。ヘルプについては、support@csod.comにお問い合わせください",
    "3024": "この組織にはJSONファイルを使用できません",
    "3025": "認証時に問題が発生しました。リクエストを再試行してください。問題が解決しない場合は、ページを更新し、再試行してください",
    "3026": "JSONファイルはこのガイドを利用できません",
    "3027": "使用可能なステップがありません。ガイドを公開するには、少なくとも1つのステップを作成してください",
    "3028": "ツアー公開上限に達しました",
    "3033": "無効な資格情報です。詳細については、support@csod.comまたは管理者にお問い合わせください。",
    "3047": "ログインが複数回失敗したため、アカウントが一時的にロックされています。メールを送信して、ロックを解除する手順を実行しました。詳細については、support@csod.comにお問い合わせください。",
    "3061": "最大5個のガイドのみピン留めできます",
    "3068": "古いパスワードの有効期限が切れていますので、ログイン用に新しいパスワードを設定してください。",
    "4000": "ガイドが既に作成されている場合、サブカテゴリをフォルダ内に作成することはできません",
    "4001": "ユーザーが既にスーパー管理者になっている場合、ユーザーの役割を変更することはできません",
    "4002": "このアクションは公開済みガイドでは許可されていません",
    "4003": "ロック済みガイドは公開できません",
    "4004": "このアクションは公開済みフォルダでは許可されていません。公開を取り消してください",
    "4006": "アプリケーションが指定された組織に属している必要があります",
    "4007": "このアクションを実行する権限がありません。",
    "4008": "このサブカテゴリにアクションは許可されていません",
    "4009": "ガイドは公開する必要があります",
    "4010": "ガイドはサブカテゴリを持つフォルダ内に作成することはできません",
    "4011": "ステップを作成するには、このガイドのロックを解除する必要があります",
    "4012": "ステップを編集するには、このガイドのロックを解除する必要があります",
    "4013": "ステップを削除するには、このガイドのロックを解除する必要があります",
    "4014": "ステップをコピーして貼り付けるには、このガイドのロックを解除する必要があります",
    "4020": "このガイドのドラフトは既に存在します。ガイドは複数のドラフトを作成できません。",
    "4021": "パラメータ[envs]の値が無効です",
    "currentPage": "現在のページ",
    "myChat": "マイチャット",
    "import": "インポート",
    "export": "エクスポート",
    "redirectLivetour": "ライブ再生",
    "guideNotAvailable": "ガイドは現在のURLで使用できません。ガイドURLへ移動しますか?",
    "downloadPPT": "PPTをダウンロード",
    "btnYes": "はい",
    "btnNo": "いいえ",
    "inApp": "アプリ内",
    "live": "ライブ",
    "resume": "再開",
    "tourCloseConfirm": "本当にこのガイドを終了しますか?",
    "notifSnoozeDonotMsg": "後でこれを視聴するか、今後は通知を表示しないかをお聞かせください。",
    "surveyThanksMessage": "ご回答ありがとうございます",
    "testMePassedMessage": "おめでとうございます。合格です",
    "testMeFailedMessage": "残念。不合格です",
    "testMeGuideEfficiency": "テスト効率:",
    "testMeGuideEffectiveness": "テストの有効性:",
    "testMeTestTime": "テスト時間",
    "testMeExpectedTime": "予定時刻",
    "testMeStepsTaken": "取得したステップ",
    "testMeExpectedSteps": "予想されるステップ",
    "testMeRetakeTestBtn": "テストの再受験",
    "testMeResultTitle": "MyTest結果",
    "ConfirmIfTestMeModeRidirect": "ガイドは現在のURLで使用できません。ガイドURLへリダイレクトしますか?",
    "feedCmt": "皆様のご意見をお待ちしております。<br>250文字以下でご感想をお聞かせください。",
    "doNotShowAgain": "再度表示しない",
    "neverShowAgain": "二度と表示しない",
    "skipGuide": "ガイドをスキップ",
    "surveyErrorMsg": "少なくとも1つの質問に回答してください",
    "redirect": "リダイレクト",
    "liveGuide": "ライブガイド",
    "question": "質問",
    "exitGuide": "ガイドを終了",
    "continueGuide": "ガイドを続行",
    "stop": "中止",
    "characters": "文字数:",
    "survey": "アンケート",
    "testMeStopMessage": "TestMeモードで表示しています。[停止]をクリックして終了してください",
    "testMeFailedErrorMessage": "目標ステップに到達できませんでした。<br>{TOTAL_STEPS}のうち正しいステップは{CORRECT_STEPS}でした。",
    "surveyCommentPlaceholder": "こちらに入力してください（最大250文字）",
    "pushTourSnoozeMsg": "この自動開始ツアーはスヌーズになります",
    "of": ":",
    "wbMplayerTitle": "チュートリアル",
    "wbDragTooltip": "ページ上の任意の場所にこのプレイヤーをドラッグ＆ドロップします",
    "dontShowEdResult": "これは表示しない",
    "mPlayerHeaderTitle": "マイクロプレイヤー",
    "closePreview": "プレビューを閉じる",
    "elmNotFound": "このステップの要素を見つけることができないようです:",
    "elmNotFoundInfo": "このステップを実行するには、正しいページを使用していることを確認してください。選択した要素を表示できるかどうかも確認してください",
    "notExists": "存在しません",
    "elmNotFoundHeader": "ステップ要素が見つかりません",
    "goToStep": "ステップへ移動",
    "notFoundStep": "次のステップの要素が見つかりませんでした: ",
    "pleaseReselect": "要素を再度選択してください。",
    "stepRuleMatchErr": "設定エラー: ステップルールが一致しません",
    "guideRuleMatchErr": "設定エラー: ガイドルールが一致しません",
    "stepNotFoundRedirect": "このページにステップが見つかりません。何をリダイレクトしますか?",
    "branchStepMessagePopup": "続行するには、以下のいずれかのタスクを選択してください",
    "btnSkip": "スキップ",
    "kindlyHoverPopup": "ポップアップを開くには、この要素の上にマウスポインターを移動してください",
    "stepPlayIsdefinedPopover": "再生しようとしているステップがポップオーバーに定義されています",
    "elmNotFoundWestpac": "ステップが見つかりません – このガイドは終了します",
    "findingElementMessage": "ステップを検索しようとしています。 . .",
    "badDomain": "現在のドメインおよびURLをMyGuideで実行する権限がありません。ヘルプについては管理者管理者に連絡してください。",
    "hostJsError": "ウェブページにエラーがあるようです。MyGuideは続行できません",
    "remember": "ログイン情報を記録する",
    "forgotPass": "パスワードをお忘れですか?",
    "dontHavAcc": "アカウントをお持ちでない場合。",
    "loginTitle": "ログイン",
    "loginOtpScreenTitle": "ワンタイムパスワードを検証してサインイン",
    "forgetPassTitl": "パスワードのリセット",
    "placeholderEmail": "メールアドレス",
    "placeholderPassword": "パスワード",
    "placeholderNewPassword": "新しいパスワード",
    "placeholderCurrentPassword": "現在のパスワード",
    "placeholderFirstname": "名",
    "placeholderLastname": "姓",
    "placeholderPasswordC": "パスワードの確認",
    "btnCancel": "キャンセル",
    "btnPayment": "計画のアップグレード",
    "btnSubmit": "送信",
    "btnLogin": "ログイン",
    "termsOfUse": "利用規約",
    "andLabel": "および",
    "policyPrivacy": "プライバシーポリシーに同意します",
    "passwordError": "パスワードには8桁の長さを指定してください",
    "confirmPasswordError": "パスワードと確認パスワードは一致する必要があります",
    "firstnameError": "有効な名を入力してください",
    "lastnameError": "有効な姓を入力してください",
    "emailError": "有効なメールアドレスを入力してください",
    "orgError": "有効な組織URLを入力してください",
    "otpError": "有効なワンタイムパスワードを入力してください",
    "placeholderOtp": "ここにワンタイムパスワードを入力してください",
    "otpSentDesc": "有効なメールアドレスが指定されている場合、リセットリンクが送信されます。<br>数分後にメールが表示されない場合は、迷惑メールフォルダを確認してください。",
    "btnOtpVerify": "ワンタイムパスワードを確認",
    "alreadyHavAcc": "既にアカウントをお持ちの場合",
    "smartbiteMessageError": "メッセージを入力してください",
    "smartbiteLinkError": "有効なリンクを入力してください",
    "noGuidesOnThisPage": "このページには使用できるガイドがありません",
    "clickOn": "クリックしてください:",
    "contactUs": "お問い合わせ",
    "search": "検索",
    "noRecordFound": "レコードが見つかりません",
    "category": "フォルダ",
    "subCategory": "サブフォルダ",
    "confirmPasswordRequired": "パスワードの確認入力は必須です",
    "logInWithSSO": "SSOでログインする",
    "inputPlaceHolderSearch": "任意のガイドを検索",
    "noGuideAvailableFor": "検索に一致するガイドが見つかりません",
    "tryModifyingYourSearch": "検索条件を変更してください",
    "signInVerifyYourEmail": "このメールアドレスは検証されていません。詳細はメールを確認してください",
    "signInVerifyYourAccount": "ワンタイムパスワードが記載されたメールを送信しました。サインインプロセスを完了するには、アカウントを確認してください",
    "maintenanceMessage": "メンテナンス処理中。support@csod.com経由でお問い合わせください",
    "back": "戻る",
    "changePassword": "パスワードの変更",
    "startTestAuto": "自動化テストの開始",
    "msgPasswordChangedSuccess": "パスワードが正常に変更されました",
    "msgConfirmNewPasswordError": "パスワードの確認は新しいパスワードと一致する必要があります",
    "enterUrl": "チームURLを入力",
    "dragPlaceholderDropThis": "これを",
    "dragPlaceholderHere": "ここにドロップ",
    "termsOfService": "条件",
    "versionText": "バージョン",
    "videoStepSuccessMessage": "ステップが正常に作成されました",
    "importSuccessMessage": "ガイドのアップロードに成功しました。タスクステータスに移動してインポートステータスを確認してください",
    "worldBankHelpSupport": "ツールチップなどの一部のツールは、インターフェイスでのみ表示できます",
    "helpSupport": "ヘルプ& サポート",
    "page": "ページ",
    "selectAnApplication": "アプリケーションの選択",
    "refresh": "更新",
    "loginBtn": "ログイン",
    "account": "アカウント",
    "taskStatus": "タスクステータス",
    "logoutBtn": "ログアウト",
    "app": "アプリ:",
    "firstStep": "最初のステップ",
    "lastStep": "最後のステップ",
    "startTest": "テストの開始",
    "noInappStepInGuide": "このガイドにはインラインステップがないためTestMeを続行できません",
    "settingBtn": "詳細設定",
    "orgSetting": "組織の設定",
    "close": "終了",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "WORD",
    "downloadBlog": "ウェブページ",
    "downloadTxt": "テキスト",
    "serviceErrorMessage": "このファイルのエラーが発生しました。しばらくしてから再度試してください。また、support@csod.comにメールでお問い合わせください",
    "guidesTab": "ガイド",
    "noGuideCreatedYet": "ガイドはまだ作成されていません",
    "noCategoryCreatedYet": "フォルダはまだ作成されていません",
    "chatbot": "マイチャット",
    "notAutorised": "必要なアクセス権がありません。管理者にお問い合わせください",
    "ok": "OK",
    "apiError": "設定エラー: 管理者に連絡してください",
    "select": "選択",
    "mute_unmute": "ミュート/ミュート解除",
    "privacyPolicy": "プライバシー&クッキー",
    "privacyPolicyText": "MyGuideはクッキーを使用します。続行すると、お客様が使用許諾契約書とプライバシーポリシーに同意し、クッキーの利用に同意されたものとします。",
    "terms": "条件",
    "westPecErrorMessage": "このアプリケーションにアクセスする権限がありません。ウェストパックのネットワークにログインしてください",
    "noApp": "アプリケーションが見つかりません",
    "role": "役割:",
    "all": "すべて",
    "video": "動画",
    "course": "コース",
    "article": "記事",
    "image": "画像",
    "pathways": "パスウェイ",
    "preview": "プレビュー",
    "more": "もっと見る",
    "history": "履歴",
    "publish": "公開",
    "selectGuideLink": "リンクするガイドを選択してください",
    "selectGuideBeforeSubmit": "送信する前にガイドを選択してください",
    "change": "変更",
    "checkNow": "今すぐ確認",
    "minutes": "分",
    "clickHere": "ここをクリックしてください",
    "youAlmostDone": "まもなく完了します",
    "setOrg": "組織を設定するには",
    "apps": "アプリケーション",
    "me": "自分",
    "playStep": "ステップの再生",
    "miniPlayerHelp": "ヘルプ",
    "defaultMiniPlayerHelp": "ヘルプ",
    "defaultConfirmIfSlideshowOrRedirect": "現在URLのステップは使用できません。<br>ステップURLに移動するか、またはスライドショーを再生しますか?",
    "defaultServiceErrorMessage": "このファイルのエラーが発生しました。しばらくしてから再度試してください。また、support@csod.comにメールでお問い合わせください",
    "defaultMaintenanceMessage": "メンテナンス処理中。support@csod.com経由でお問い合わせください",
    "userNotFollowingGuideMessage": "このガイドに含まれていないステップを実行しているようです。ガイドをフォローする必要がなくなった場合は、[ガイドを終了]をクリックしてください。",
    "defaultUserNotFollowingGuideMessage": "このガイドに含まれていないステップを実行しているように見えます。ガイドをフォローする必要がなくなった場合は、[ガイドを終了]をクリックしてください。",
    "resumeGuide": "ガイドを再開",
    "defaultResumeGuideMessage": "ガイドを再開",
    "backToLogin": "ログインに戻る",
    "filters": "フィルタ",
    "thisApp": "このアプリ",
    "thisWebsite": "このウェブサイト",
    "maxFreeTourLimit": "ツアーの上限数に達しました",
    "passwordRegexCheck": "パスワードは8文字以上とし、少なくとも大文字と小文字を1つずつと数字を1つ含める必要があります。",
    "countLimit": "99+",
    "microsoftServiceKey": "Microsoft Cognitive Services Speechのサブスクリプションキーを入力してください",
    "numberOfImgFile": "画像ファイルとテキストファイルの数を同じにする必要があります",
    "availableOn": "利用可能",
    "tooltipUnpubWorkflowTitle": "未公開ワークフロー",
    "tooltipUnpubParentWorkflowTitle": "公開済みワークフロー、未公開上位フォルダ",
    "tooltipPubParentWorkflowTitle": "公開済みワークフロー、公開済みフォルダ",
    "tooltipUnpubTooltipTitle": "未公開ツールチップ",
    "tooltipUnpubParentTooltipTitle": "公開済みツールチップ、未公開上位フォルダ",
    "tooltipPubParentTooltipTitle": "公開済みツールチップ、公開済みフォルダ",
    "tooltipUnpubTutorialTitle": "未公開チュートリアル",
    "tooltipUnpubParentTutorialTitle": "公開済みチュートリアル、未公開上位フォルダ",
    "tooltipPubParentTutorialTitle": "公開済みチュートリアル、公開済みフォルダ",
    "tooltipUnpubSubFolderTitle": "未公開サブフォルダ",
    "tooltipUnpubSubFolderDesc": "サブフォルダを使用してガイドを整理する",
    "tooltipUnpubParentSubFolderTitle": "公開済みサブフォルダ、未公開上位フォルダ",
    "tooltipPubParentSubFolderTitle": "公開済みサブフォルダ、公開済みフォルダ",
    "tooltipPubParentSubFolderDesc": "ガイドを主催する",
    "exitSurvey": "終了アンケート",
    "disable": "無効化",
    "instructionExitSurvey": "完了前にユーザーがガイドを終了すると、終了アンケートが表示されます",
    "msgVideoNotFound": "動画をアップロードしています。しばらくしてから試してください",
    "msgGiphyNotFound": "GIFをアップロードしています。しばらくしてから試してください",
    "userPref": "マイ設定",
    "manageAccount": "管理者ポータル",
    "analyticsPortal": "インサイトポータル",
    "errorInvalidUrl": "有効なURLではありません",
    "wbFooterText": "ITS技術ラーニング",
    "navigationMenu": "ナビゲーションメニュー",
    "clearHistory": "履歴をクリア",
    "userDeniedMessage": "カメラとマイクのアクセス許可が拒否されました",
    "pushNotification": "プッシュ通知",
    "viewDetail": "詳細の表示",
    "contactAdmin": "詳細については、support@csod.comまたは管理者にお問い合わせください。",
    "noAppOnDomain": "現在のドメインにはアプリケーションが割り当てられていません",
    "noGuidesOnDomain": "ガイドが見つかりません",
    "apply": "適用",
    "invalidLoginCred": "ログイン資格情報が無効です。複数回失敗するとアカウントがロックされ、ロックを解除するためのメールが届きます。パスワードをリセットすることもできます",
    "resendOTP": "ワンタイムパスワードを再送信",
    "sendFeedback": "フィードバックを送る",
    "guideNotExist": "このガイドはこのページでは使用できません（エラー: ドメインが一致しません）",
    "cdnAccess": "<b></b><br><br>サーバーに問題があるようです。<br>エラーを検知しました。できるだけ早く修正します",
    "tourPlayError": "ガイドを再生できません。ガイドの詳細の取得中にエラーが発生しました",
    "playerMode": "プレイヤーモード",
    "closePanel": "パネルを閉じる",
    "switchCreatorMode": "作成者モードに切り替え",
    "extensionContextError": "拡張コンテキストが無効になりました。続行するにはページをリロードしてください",
    "otpSent": "ワンタイムパスワードがメールで再送信されました。受信ボックスを確認してください",
    "startOver": "再起動",
    "yesResume": "再開",
    "dontShowAgain": "このメッセージを今後表示しない",
    "notificationHeader": "通知があります",
    "watchLater": "後で見る",
    "pushSnoozeMsg": "この通知はスヌーズになります",
    "showAgain": "再度表示",
    "noGuidesOnThisTab": "このページには通知はありません",
    "iAgree": "同意する",
    "viewMore": "詳細の表示",
    "lostInternetConnection": "サーバーに接続できません",
    "next": "次へ",
    "recent": "最近",
    "older": "古い",
    "atoz": "テキスト（昇順）",
    "ztoa": "テキスト（降り順）",
    "clear": "クリア",
    "tooltipDontShowAgain": "通知が今後表示されることはありません。すぐに通知を有効にするには、その上にマウスポインタを置いて[再度表示]をクリックしてください",
    "tooltipWatchLater1": "通知はスヌーズになっています",
    "tooltipWatchLater2": "その後に表示されます。すぐに通知を有効にするには、その上にマウスポインタを置いて[再度表示]をクリックしてください",
    "hour": "時間",
    "hours": "時間",
    "insightsTracker": "インサイトトラッカー",
    "slideshow": "スライドショー",
    "powerFormOldData": "既存のデータ",
    "powerFormNewData": "このフォームを使用して新しいデータを入力してください",
    "powerFormNewDataMore": "既存のデータが表示されていない場合は、左上の矢印をクリックしてデータを表示してください。データは、許可されている箇条書き形式にコピーする必要があります。",
    "powerFormTitle": "データ入力アシスタント",
    "powerFormMandatory": "これは必須フィールドです。文字数上限",
    "belongToOtherApp": "このガイドは、{APPNAME}に属する{TOURURL}上で作成されています。そのアプリでこのガイドをコピーし、再試行してください",
    "setDomain": "{TOURURL}を現在のアプリケーションドメイン設定に追加する必要があることを確認済みの場合は、追加して再試行してください。",
    "on": "オン",
    "off": "オフ",
    "btnPrev": "前へ",
    "btnPrevious": "前へ",
    "taskList": "タスクリスト",
    "unprocessedVideo": "動画が処理されている間お待ちください。",
    "searchResult": "検索結果",
    "pleaseWait": "お待ちください",
    "mediaDownloadMsg": "ダウンロードするファイルの準備中",
    "mediaFileNotFound": "メディアファイルが見つかりません",
    "searchInFolder": "フォルダ内で検索",
    "currentPageSearchPlaceholder": "現在のページで使用可能なガイドを検索",
    "brandLogo": "ブランドロゴ",
    "accessibility": "アクセシビリティ",
    "replay": "リプレイ",
    "defaultGreetingMessage": "[MyGuide]へようこそ。ご用件は何ですか?（私はボットです）",
    "defaultErrorMessage": "すみません。理解できませんでした。具体的に説明してください。",
    "greetingMessage": "[MyGuide]へようこそ。ご用件は何ですか?（私はボットです）",
    "errorMessage": "すみません。理解できませんでした。具体的に説明してください。",
    "guideLnkToRedirect": "ページにリダイレクトしてガイドを再生するには、次のリンクを使用します",
    "otpTimer": "こちらで再試行できます",
    "seconds": "秒",
    "limitWarning": "失敗した試行回数の上限に達しました。",
    "startBotLbl": "チャットボットの開始",
    "doitForMeWarning": "DoItForMeは、画像、動画、調査の各ステップには使用できません。",
    "playNextBotTour": "次のボットツアーを再生する",
    "includeScreen": "スクリーンショットを含める",
    "feedbackPlaceholder": "フィードバックがありますか?ぜひお聞かせください。",
    "feedbackOptBtn": "クリックして情報をハイライトまたは非表示",
    "highlight": "ハイライト",
    "send": "送信",
    "done": "完了",
    "hide": "非表示",
    "multiSelectOptionError": "オプションを少なくとも1つ選択してください",
    "loginNext": "次へ",
    "captchaLbl": "CAPTCHA",
    "placeholderEnterCaptcha": "CAPTCHAを入力してください",
    "captchaError": "有効なCAPTCHAを入力してください",
    "allGuides": "すべてのガイド",
    "helpCenter": "ヘルプセンター",
    "feedbackRequired": "フィードバックを入力してください。",
    "default": "デフォルト",
    "feedbackImgErrorMsg": "ブラウザ関連の問題により、スクリーンショットをフィードバックに添付できませんでした。ページをリロードし、Chromeアクションバーからガイドアクション機能をクリックして開いてください。フィードバックのためのスクリーンショットを再キャプチャしてください。",
    "tranportURlRedirectionConfirm": "トランスポート ステップのURLへリダイレクトしてください",
    "guideContinueConfirm": "Guide を続けてください",
    "autoplay": "自動再生",
    "focus": "フォーカス",
    "zoomOut": "ズームレベルをこれよりも下げることはできません",
    "zoomIn": "ズームレベルをこれよりも上げることはできません",
    "charM": "分",
    "charS": "秒",
    "focusTooltip": "このボタンは、画像がズームインされている場合にのみ機能します。"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ko_KR = {
    "403": "이 요청에 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "405": "이 요청을 처리하는 동안 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "429": "너무 많은 요청",
    "1003": "인증 중 문제가 발생했습니다. 다시 로그인한 후 다시 시도하십시오. 문제가 지속되는 경우 페이지를 새로 고친 후 다시 시도하십시오.",
    "1005": "<b>죄송합니다.</b> <br><br>요청 또는 서버에 문제가 있는 것 같습니다.<br> 오류에 대한 알림을 받았습니다. 최대한 빨리 해결하겠습니다.",
    "1007": "인증 중 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "1009": "사용자 전자 메일이 확인되지 않았습니다.",
    "1014": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "1017": "인증 중 문제가 발생했습니다. 다시 로그인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "1018": "단계를 만들기 위한 최대 한도에 도달했습니다.",
    "2000": "이 요청에 문제가 발생했습니다. 통보를 받았습니다. 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2001": "잘못된 로그인 자격 증명입니다. 여러 번 실패한 후 계정이 잠기거나, 계정 잠금을 해제하라는 전자 메일을 받거나, 암호를 재설정할 수 있습니다",
    "2002": "잘못되었거나 만료된 OTP",
    "2003": "업로드된 파일은 유효한 이미지가 아닙니다(JPG 및 PNG 파일은 지원됨).",
    "2004": "세션 만료됨",
    "2005": "이 사용자를 추적할 수 없습니다. 새로 고친 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2006": "전자 메일 주소가 잘못되었습니다. 다시 시도하십시오.",
    "2007": "사용자 역할이 잘못되었습니다. 다시 시도하십시오.",
    "2008": "올바른 과제 유형을 지정해야 합니다.",
    "2009": "지정한 응용 프로그램이 잘못되었습니다. 삭제되었거나 존재하지 않았을 수 있습니다.",
    "2010": "잘못된 입력 매개 변수입니다. 새로 고친 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2011": "지정한 조직이 잘못되었습니다. 삭제되었거나 존재하지 않았을 수 있습니다.",
    "2012": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2013": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2014": "수퍼 Admin [organization_id]에 필요한 매개 변수",
    "2015": "제공된 이미지 데이터 콘텐츠가 잘못되었습니다. 다시 확인한 후 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "2016": "잘못된 도메인",
    "2017": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2018": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2019": "찾고 있는 항목이 없거나 삭제되었을 수 있습니다",
    "2020": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2021": "인증 서버에서 이 요청을 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2022": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 올바른 팀 URL을 입력하십시오.",
    "2023": "인증 서버에서 이 요청을 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2024": "파일 크기는 5MB 미만이어야 함",
    "2025": "요청에 매개 변수가 누락되었거나 잘못되었습니다. 올바른 URL을 입력하십시오.",
    "2026": "암호는 최소 하나의 대문자, 하나의 소문자 및 하나의 숫자 값을 포함하여 최소 8자 이상이어야 합니다.",
    "2027": "잘못된 암호",
    "2028": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2029": "제공한 구/군/시가 지원되지 않습니다.",
    "2030": "요청에 매개 변수가 누락되었거나 잘못되었습니다.",
    "2031": "인증 서버에서 이 매개 변수를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2032": "잘못된 매개 변수[file_id]",
    "2033": "잘못된 URL. 다시 확인한 후 다시 시도하십시오.",
    "2034": "인증 서버에서 이러한 매개 변수를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2035": "인증 서버에서 이 AppKey를 처리하는 동안 예기치 않은 오류가 발생했습니다. support@csod.com에 문제를 보고하십시오.",
    "2036": "인증 서버에서 예기치 않은 오류가 발생했습니다. 이 페이지를 새로 고치십시오. 문제가 지속되는 경우 이 문제를 support@csod.com으로 알려주십시오.",
    "2044": "이 단계에 대한 번역의 위치가 잘못된 것 같습니다. 기본 언어로 전환하고 단계를 다시 번역하거나 고객 지원에 자세한 정보를 문의하십시오.",
    "2054": "기존 암호와 새 암호가 같을 수 없습니다.",
    "2200": "오디오/비디오 컨트롤에 액세스하는 중 문제가 발생했습니다. 브라우저 설정을 확인하고 다시 시도하십시오. 문제가 지속되는 경우 support@csod.com으로 알려주십시오.",
    "3001": "Guide는 곧 내보낼 수 있습니다. 상태를 확인하려면 계정 메뉴에서 '과제 상태'로 이동하십시오.",
    "3002": "업로드가 시작되었습니다. 업로드가 완료될 때까지 브라우저를 새로 고치거나 닫지 마십시오. 완료되면 가져오기 상태를 확인할 수 있습니다.",
    "3003": "사용자가 이미 있습니다.",
    "3004": "전자 메일 ID가 이미 확인됨",
    "3005": "이 URL이 다른 응용 프로그램 구성과 충돌합니다. 다른 URL을 추가하십시오.",
    "3006": "폴더는 동일한 응용 프로그램에 속해야 합니다.",
    "3007": "도메인이 이미 있습니다.",
    "3008": "생성된 Guide의 최대 한도에 도달했습니다.",
    "3009": "Survey가 지정된 Guide에 이미 있습니다.",
    "3010": "이 단계는 동일한 Guide에 속해야 합니다.",
    "3011": "이 조직은 일시 중단되었습니다. Admin에게 문의하십시오.",
    "3012": "Guide는 동일한 폴더에 속해야 합니다.",
    "3013": "이 Guide에 지정한 개체와 폴더 이름 쌍이 이미 있습니다.",
    "3014": "사용자 일시 중단됨",
    "3015": "사용자가 이미 확인됨",
    "3017": "전자 메일 주소로 OTP가 성공적으로 전송되었습니다.",
    "3018": "역할이 이미 있음",
    "3019": "국가가 이미 있음",
    "3020": "구/군/시가 이미 있음",
    "3023": "조직이 확인되지 않았습니다. 도움이 필요한 경우 support@csod.com에 문의하십시오.",
    "3024": "이 조직에서 JSON 파일을 사용할 수 없습니다.",
    "3025": "인증 중 문제가 발생했습니다. 다시 시도하십시오. 문제가 지속되는 경우 페이지를 새로 고친 후 다시 시도하십시오.",
    "3026": "이 Guide에서 JSON 파일을 사용할 수 없습니다.",
    "3027": "사용 가능한 단계가 없습니다. Guide를 게시할 단계를 하나 이상 만드십시오.",
    "3028": "최대 투어 게시 한도에 도달했습니다.",
    "3033": "잘못된 자격 증명. support@csod.com에 문의하거나 Admin에게 추가 지원을 요청하십시오.",
    "3047": "과도한 로그인 실패로 인해 계정이 일시적으로 잠겼습니다. 잠금을 해제하는 단계가 포함된 전자 메일을 전송했습니다. 도움이 필요한 경우 support@csod.com에 문의하십시오.",
    "3061": "Guide를 최대 5개까지 고정할 수 있습니다.",
    "3068": "이전 암호가 만료되었습니다. 로그인을 위한 새 암호를 설정하십시오.",
    "4000": "Guide가 이미 생성된 경우 폴더 내에 하위 범주를 만들 수 없습니다.",
    "4001": "이미 수퍼 Admin 사용자인 경우 사용자 역할을 변경할 수 없습니다.",
    "4002": "이 작업은 게시된 Guide에서 허용되지 않습니다.",
    "4003": "잠긴 Guide는 게시할 수 없습니다.",
    "4004": "이 작업은 게시된 폴더에서 허용되지 않습니다. 게시를 취소하십시오.",
    "4006": "응용 프로그램은 지정된 조직에 속해야 합니다.",
    "4007": "이 작업을 수행할 권한이 없습니다.",
    "4008": "이 하위 범주에 대한 작업은 허용되지 않습니다.",
    "4009": "Guide를 게시해야 합니다.",
    "4010": "Guide를 하위 범주가 있는 폴더 안에 만들 수 없습니다.",
    "4011": "단계를 만들려면 이 Guide의 잠금을 해제해야 합니다.",
    "4012": "단계를 편집하려면 이 Guide의 잠금을 해제해야 합니다.",
    "4013": "단계를 삭제하려면 이 Guide의 잠금을 해제해야 합니다.",
    "4014": "단계를 복사 및 붙여 넣으려면 이 Guide의 잠금을 해제해야 합니다.",
    "4020": "이 Guide가 이미 있습니다. Guide의 여러 초안은 허용되지 않습니다.",
    "4021": "매개 변수 [envs]의 값이 잘못되었습니다.",
    "currentPage": "현재 Page",
    "myChat": "내채팅",
    "import": "가져오기",
    "export": "내보내기",
    "redirectLivetour": "라이브 재생",
    "guideNotAvailable": "Guide는 현재 URL에서 사용할 수 없습니다. Guide URL을 제거하시겠습니까?",
    "downloadPPT": "PPT 다운로드",
    "btnYes": "예",
    "btnNo": "아니요",
    "inApp": "앱 내",
    "live": "라이브",
    "resume": "다시 시작",
    "tourCloseConfirm": "이 Guide를 끝내시겠습니까?",
    "notifSnoozeDonotMsg": "나중에 이를 관찰하거나 알림을 표시하지 않으시겠습니까?",
    "surveyThanksMessage": "응답을 제공해 주셔서 감사합니다.",
    "testMePassedMessage": "축하합니다. 합격했습니다.",
    "testMeFailedMessage": "죄송합니다. 불합격했습니다.",
    "testMeGuideEfficiency": "테스트 효율성:",
    "testMeGuideEffectiveness": "테스트 효율성:",
    "testMeTestTime": "테스트 시간",
    "testMeExpectedTime": "예상 시간",
    "testMeStepsTaken": "수행한 단계",
    "testMeExpectedSteps": "예상 단계",
    "testMeRetakeTestBtn": "테스트 재실행",
    "testMeResultTitle": "내테스트 결과",
    "ConfirmIfTestMeModeRidirect": "Guide는 현재 URL에서 사용할 수 없습니다. Guide URL을 리디렉션하시겠습니까?",
    "feedCmt": "귀하의 피드백은 소중합니다!<br> 500자 이내로 귀하의 생각을 알려 주십시오.",
    "doNotShowAgain": "다시 표시하지 않음",
    "neverShowAgain": "다시 표시 안 함",
    "skipGuide": "Guide 건너뛰기",
    "surveyErrorMsg": "질문을 하나 이상 답변하십시오.",
    "redirect": "리디렉션",
    "liveGuide": "라이브 Guide",
    "question": "질문",
    "exitGuide": "Guide 끝내기",
    "continueGuide": "Guide 계속",
    "stop": "중지",
    "characters": "문자 수:",
    "survey": "Survey",
    "testMeStopMessage": "TestMe 모드를 종료하려면 중지를 클릭하십시오.",
    "testMeFailedErrorMessage": "목표 단계에 연결할 수 없습니다. <br>{TOTAL_STEPS}개 중 {CORRECT_STEPS}개의 단계가 정답입니다.",
    "surveyCommentPlaceholder": "여기에 입력하십시오! 최대 500자",
    "pushTourSnoozeMsg": "이 자동 시작 투어는 다음 시간 동안 스누즈됩니다.",
    "of": "/",
    "wbMplayerTitle": "자습서",
    "wbDragTooltip": "페이지의 아무 곳이나 끌어서 놓으십시오.",
    "dontShowEdResult": "이 항목을 표시하지 않겠습니다.",
    "mPlayerHeaderTitle": "마이크로 플레이어",
    "closePreview": "미리 보기 닫기",
    "elmNotFound": "단계에 대한 요소를 찾을 수 없습니다.",
    "elmNotFoundInfo": "이 단계를 재생하려면 올바른 페이지에 있는지 확인하십시오. 선택한 요소가 표시되는지도 확인하십시오.",
    "notExists": "없음",
    "elmNotFoundHeader": "단계 요소가 없습니다.",
    "goToStep": "단계로 가기",
    "notFoundStep": "#단계에 대한 요소를 찾을 수 없습니다.",
    "pleaseReselect": "요소를 다시 선택하십시오.",
    "stepRuleMatchErr": "설정 오류: 단계 규칙이 일치하지 않습니다.",
    "guideRuleMatchErr": "설정 오류: Guide 규칙이 일치하지 않습니다.",
    "stepNotFoundRedirect": "이 페이지에서 단계를 찾을 수 없습니다. 리디렉션하시겠습니까?",
    "branchStepMessagePopup": "계속하려면 아래 과제 중 하나를 선택하십시오.",
    "btnSkip": "건너뛰기",
    "kindlyHoverPopup": "팝업을 열려면 이 요소 위에 마우스 커서를 놓으십시오.",
    "stepPlayIsdefinedPopover": "재생할 단계가 팝오버에 정의되어 있습니다.",
    "elmNotFoundWestpac": "단계를 찾을 수 없습니다. 이 Guide는 종료됩니다.",
    "findingElementMessage": "단계 찾기 시도 중. . .",
    "badDomain": "현재 도메인이며 URL이 MyGuide를 실행할 권한이 없습니다. Admin 관리자에게 도움을 문의하십시오.",
    "hostJsError": "웹 페이지에 오류가 있는 것 같습니다. MyGuide를 계속할 수 없습니다.",
    "remember": "로그인 정보 저장",
    "forgotPass": "암호를 잊으셨습니까?",
    "dontHavAcc": "계정이 없으십니까?",
    "loginTitle": "로그인",
    "loginOtpScreenTitle": "로그인을 위해 OTP 확인",
    "forgetPassTitl": "암호 재설정",
    "placeholderEmail": "전자 메일 ID",
    "placeholderPassword": "암호",
    "placeholderNewPassword": "새 암호",
    "placeholderCurrentPassword": "현재 암호",
    "placeholderFirstname": "이름",
    "placeholderLastname": "성",
    "placeholderPasswordC": "암호 확인",
    "btnCancel": "취소",
    "btnPayment": "업그레이드 계획",
    "btnSubmit": "전송",
    "btnLogin": "로그인",
    "termsOfUse": "이용 약관",
    "andLabel": "및",
    "policyPrivacy": "개인 정보 보호 정책",
    "passwordError": "암호는 8자리 길이여야 합니다.",
    "confirmPasswordError": "암호와 암호 확인은 동일해야 합니다.",
    "firstnameError": "올바른 이름을 입력하십시오.",
    "lastnameError": "올바른 성을 입력하십시오.",
    "emailError": "유효한 전자 메일 ID를 입력하십시오.",
    "orgError": "올바른 조직 URL을 입력하십시오.",
    "otpError": "올바른 OTP를 입력하십시오.",
    "placeholderOtp": "여기에 OTP를 입력하십시오.",
    "otpSentDesc": "유효한 전자 메일 주소가 제공된 경우 재설정 링크가 전송됩니다. <br>몇 분 후에 전자 메일을 볼 수 없는 경우 스팸 폴더에서 전자 메일을 확인하십시오.",
    "btnOtpVerify": "OTP 확인",
    "alreadyHavAcc": "이미 계정이 있습니까?",
    "smartbiteMessageError": "메시지를 입력하십시오.",
    "smartbiteLinkError": "올바른 링크를 입력하십시오.",
    "noGuidesOnThisPage": "이 페이지에는 Guides를 사용할 수 없습니다.",
    "clickOn": "클릭",
    "contactUs": "문의처",
    "search": "검색",
    "noRecordFound": "레코드를 찾을 수 없음",
    "category": "폴더",
    "subCategory": "하위 폴더",
    "confirmPasswordRequired": "암호 확인 필수",
    "logInWithSSO": "SSO로 로그인",
    "inputPlaceHolderSearch": "Guide 검색",
    "noGuideAvailableFor": "검색 조건과 일치하는 Guide를 찾을 수 없습니다.",
    "tryModifyingYourSearch": "검색 기준을 수정하십시오.",
    "signInVerifyYourEmail": "이 전자 메일 ID가 확인되지 않았습니다. 자세한 내용은 전자 메일을 확인하십시오.",
    "signInVerifyYourAccount": "OTP로 전자 메일을 전송했습니다. 로그인 과정을 완료하려면 계정을 확인하십시오.",
    "maintenanceMessage": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "back": "뒤로",
    "changePassword": "암호 변경",
    "startTestAuto": "자동화 테스트 시작",
    "msgPasswordChangedSuccess": "암호가 변경되었습니다.",
    "msgConfirmNewPasswordError": "암호 확인은 새 암호와 동일해야 합니다.",
    "enterUrl": "팀 URL 입력",
    "dragPlaceholderDropThis": "삭제",
    "dragPlaceholderHere": "여기",
    "termsOfService": "조건",
    "versionText": "버전",
    "videoStepSuccessMessage": "단계가 성공적으로 만들어졌습니다.",
    "importSuccessMessage": "Guide가 업로드되었습니다. 가져오기 상태를 확인하려면 과제 상태로 이동",
    "worldBankHelpSupport": "Tooltip과 같은 일부 도구는 인터페이스에서만 볼 수 있습니다.",
    "helpSupport": "도움말 및 지원",
    "page": "페이지",
    "selectAnApplication": "응용 프로그램 선택",
    "refresh": "새로 고침",
    "loginBtn": "로그인",
    "account": "계정",
    "taskStatus": "과제 상태",
    "logoutBtn": "로그아웃",
    "app": "앱:",
    "firstStep": "첫 번째 단계",
    "lastStep": "마지막 단계",
    "startTest": "테스트 시작",
    "noInappStepInGuide": "이 안내서에는 인라인 단계가 없으므로 TestMe를 계속할 수 없습니다.",
    "settingBtn": "고급 설정",
    "orgSetting": "조직 설정",
    "close": "닫기",
    "pdf": "PDF",
    "downloadPptx": "PPT",
    "giphy": "GIF",
    "downloadWord": "문서",
    "downloadBlog": "블로그",
    "downloadTxt": "일반 텍스트",
    "serviceErrorMessage": "죄송합니다. 오류가 발생했습니다. 잠시 후 다시 시도하십시오. 지원이 필요한 경우 support@csod.com으로 전자 메일로 보낼 수도 있습니다.",
    "guidesTab": "Guides",
    "noGuideCreatedYet": "Guide가 아직 생성되지 않았습니다.",
    "noCategoryCreatedYet": "폴더가 아직 생성되지 않았습니다.",
    "chatbot": "내채팅",
    "notAutorised": "필요한 액세스 권한이 없습니다. Admin에게 문의하십시오.",
    "ok": "확인",
    "apiError": "설정 오류. Admin에게 문의하십시오.",
    "select": "선택",
    "mute_unmute": "음소거/음소거 해제",
    "privacyPolicy": "개인 정보 및 쿠키",
    "privacyPolicyText": "MyGuide는 쿠키를 사용합니다. 계속하면 약관 및 개인 정보 보호 정책에 동의하는 것이며 쿠키 사용 동의를 제공하는 것입니다.",
    "terms": "조건",
    "westPecErrorMessage": "이 응용 프로그램에 액세스할 권한이 없습니다. Westpac의 네트워크에 로그인하십시오.",
    "noApp": "응용 프로그램을 찾을 수 없음",
    "role": "역할:",
    "all": "모두",
    "video": "비디오",
    "course": "과정",
    "article": "기사",
    "image": "이미지",
    "pathways": "Pathways",
    "preview": "미리 보기",
    "more": "초과",
    "history": "기록",
    "publish": "게시",
    "selectGuideLink": "링크하려면 Guide를 선택하십시오.",
    "selectGuideBeforeSubmit": "전송 전에 Guide를 선택하십시오.",
    "change": "변경",
    "checkNow": "지금 확인",
    "minutes": "분",
    "clickHere": "여기 클릭",
    "youAlmostDone": "거의 완료되었습니다.",
    "setOrg": "조직을 설정하려면",
    "apps": "앱",
    "me": "내 정보",
    "playStep": "단계 재생",
    "miniPlayerHelp": "도움말",
    "defaultMiniPlayerHelp": "도움말",
    "defaultConfirmIfSlideshowOrRedirect": "현재 URL에 사용할 수 있는 단계가 없습니다.<br>단계 URL로 이동하거나 슬라이드쇼를 재생하시겠습니까?",
    "defaultServiceErrorMessage": "죄송합니다. 오류가 발생했습니다. 잠시 후 다시 시도하십시오. 지원이 필요한 경우 support@csod.com으로 전자 메일로 보낼 수도 있습니다.",
    "defaultMaintenanceMessage": "유지 관리가 진행 중입니다. support@csod.com을 통해 문의하십시오.",
    "userNotFollowingGuideMessage": "이 Guide에 속하지 않는 단계를 수행하는 것 같습니다. Guide를 더 이상 수행하지 않으려는 경우 Guide 끝내기를 클릭하십시오.",
    "defaultUserNotFollowingGuideMessage": "이 Guide에 속하지 않는 단계를 수행하는 것 같습니다. Guide를 더 이상 수행하지 않으려는 경우 Guide 끝내기를 클릭하십시오.",
    "resumeGuide": "Guide 다시 시작",
    "defaultResumeGuideMessage": "Guide 다시 시작",
    "backToLogin": "로그인으로 돌아가기",
    "filters": "필터",
    "thisApp": "이 앱",
    "thisWebsite": "이 웹 사이트",
    "maxFreeTourLimit": "투어 최대 한도에 도달했음",
    "passwordRegexCheck": "암호는 최소 하나의 대문자, 하나의 소문자 및 하나의 숫자 값을 포함하여 최소 8자 이상이어야 합니다.",
    "countLimit": "99+",
    "microsoftServiceKey": "Microsoft Cognitive Services Speech 구독 키를 입력하십시오.",
    "numberOfImgFile": "이미지 파일 수와 텍스트 파일이 동일해야 합니다.",
    "availableOn": "사용 가능 날짜",
    "tooltipUnpubWorkflowTitle": "Workflow 게시 취소됨",
    "tooltipUnpubParentWorkflowTitle": "게시된 Workflow, 게시 취소된 상위 폴더",
    "tooltipPubParentWorkflowTitle": "게시된 Workflow, 게시된 폴더",
    "tooltipUnpubTooltipTitle": "Tooltip 게시 취소됨",
    "tooltipUnpubParentTooltipTitle": "게시된 Tooltip, 게시 취소된 상위 폴더",
    "tooltipPubParentTooltipTitle": "게시된 Tooltip, 게시된 폴더",
    "tooltipUnpubTutorialTitle": "Tutorial 게시 취소됨",
    "tooltipUnpubParentTutorialTitle": "게시된 Tutorial, 게시 취소된 상위 폴더",
    "tooltipPubParentTutorialTitle": "게시된 Tutorial, 게시된 폴더",
    "tooltipUnpubSubFolderTitle": "게시 취소된 하위 폴더",
    "tooltipUnpubSubFolderDesc": "하위 폴더를 사용하여 Guides 정리",
    "tooltipUnpubParentSubFolderTitle": "게시된 하위 폴더, 게시 취소된 상위 폴더",
    "tooltipPubParentSubFolderTitle": "게시된 하위 폴더, 게시된 폴더",
    "tooltipPubParentSubFolderDesc": "Guides 구성",
    "exitSurvey": "Survey 끝내기",
    "disable": "사용 안 함",
    "instructionExitSurvey": "완료하기 전에 사용자가 안내서를 끝내면 Survey 끝내기가 표시됩니다.",
    "msgVideoNotFound": "비디오를 업로드하는 중입니다. 잠시 후 다시 시도하십시오.",
    "msgGiphyNotFound": "GIF를 업로드하는 중입니다. 잠시 후 다시 시도하십시오.",
    "userPref": "내 기본 설정",
    "manageAccount": "Admin 포털",
    "analyticsPortal": "Insights 포털",
    "errorInvalidUrl": "올바른 URL이 아닙니다.",
    "wbFooterText": "ITS 기술 학습",
    "navigationMenu": "탐색 메뉴",
    "clearHistory": "기록 지우기",
    "userDeniedMessage": "사용자가 카메라 및 마이크 액세스 권한을 거부했습니다.",
    "pushNotification": "푸시 알림",
    "viewDetail": "세부 정보 보기",
    "contactAdmin": "support@csod.com에 문의하거나 Admin에게 추가 지원을 요청하십시오.",
    "noAppOnDomain": "현재 도메인에 대해 응용 프로그램이 지정되지 않았습니다.",
    "noGuidesOnDomain": "Guides를 찾을 수 없습니다.",
    "apply": "신청",
    "invalidLoginCred": "잘못된 로그인 자격 증명입니다. 여러 번 실패한 후 계정이 잠기거나, 계정 잠금을 해제하라는 전자 메일을 받거나, 암호를 재설정할 수 있습니다",
    "resendOTP": "OTP 다시 보내기",
    "sendFeedback": "피드백 보내기",
    "guideNotExist": "이 Guide는 이 페이지에서 사용할 수 없습니다(오류: 도메인 불일치)",
    "cdnAccess": "<b>죄송합니다.</b><br><br>서버에 문제가 있는 것 같습니다.<br> 오류에 대한 알림을 받았습니다. 최대한 빨리 해결하겠습니다.",
    "tourPlayError": "Guide를 재생할 수 없습니다. Guide 세부 정보를 검색하는 중 오류 발생",
    "playerMode": "플레이어 모드",
    "closePanel": "패널 닫기",
    "switchCreatorMode": "생성자 모드로 전환",
    "extensionContextError": "확장 컨텍스트가 무효화되었습니다. 계속하려면 페이지를 다시 로드하십시오.",
    "otpSent": "OTP가 전자 메일로 다시 전송되었습니다. 받은 편지함을 확인하십시오.",
    "startOver": "다시 시작",
    "yesResume": "다시 시작",
    "dontShowAgain": "다시 표시 안 함",
    "notificationHeader": "알림을 받았습니다!",
    "watchLater": "나중에 관찰",
    "pushSnoozeMsg": "이 알림은 다음 시간 동안 스누즈됩니다.",
    "showAgain": "다시 표시",
    "noGuidesOnThisTab": "이 페이지에 대한 알림이 없습니다.",
    "iAgree": "동의함",
    "viewMore": "추가 보기",
    "lostInternetConnection": "서버에 대한 연결이 끊겼습니다. 다시 연결한 후 다시 시도하십시오.",
    "next": "다음",
    "recent": "최근",
    "older": "이전",
    "atoz": "A - Z",
    "ztoa": "Z - A",
    "clear": "지우기",
    "tooltipDontShowAgain": "알림이 더 이상 표시되지 않습니다. 지금 알림을 활성화하려면 알림 위에 마우스 커서를 놓은 다음 '다시 표시'를 클릭하십시오.",
    "tooltipWatchLater1": "다음에 대한 알림이 스누즈됩니다.",
    "tooltipWatchLater2": "그 후에 표시됩니다. 지금 알림을 활성화하려면 알림 위에 마우스 커서를 놓은 다음 '다시 표시'를 클릭하십시오.",
    "hour": "시간",
    "hours": "시간",
    "insightsTracker": "Insights 추적기",
    "slideshow": "슬라이드 쇼",
    "powerFormOldData": "기존 데이터",
    "powerFormNewData": "이 양식을 사용하여 새 데이터 입력",
    "powerFormNewDataMore": "기존 데이터가 표시되지 않는 경우 왼쪽 상단의 화살표를 클릭하여 데이터를 표시하십시오. 허용되는 글머리 기호 형식으로 데이터를 복사해야 합니다.",
    "powerFormTitle": "데이터 입력 도우미",
    "powerFormMandatory": "필수 필드이며, 최대 문자 제한이 있습니다.",
    "belongToOtherApp": "이 Guide가 {APPNAME} 앱에 속하는 {TOURURL}에 생성되었습니다. 해당 앱에서 이 Guide를 복사하고 다시 시도하십시오.",
    "setDomain": "{TOURURL})을 현재 응용 프로그램 도메인 설정에 추가해야 하는 경우 추가하고 다시 시도하십시오.",
    "on": "사용",
    "off": "해제",
    "btnPrev": "이전",
    "btnPrevious": "이전",
    "taskList": "과제 목록",
    "unprocessedVideo": "비디오를 처리하는 동안 잠시 기다려 주십시오.",
    "searchResult": "검색 결과",
    "pleaseWait": "잠시 기다려 주십시오!",
    "mediaDownloadMsg": "다운로드할 파일을 준비하는 중입니다.",
    "mediaFileNotFound": "미디어 파일이 없습니다.",
    "searchInFolder": "폴더 검색",
    "currentPageSearchPlaceholder": "현재 페이지에서 사용 가능한 Guide 검색",
    "brandLogo": "브랜드 로고",
    "accessibility": "접근성",
    "replay": "재생",
    "defaultGreetingMessage": "안녕하세요! MyGuide를 시작합니다. 무엇을 도와 드릴까요? 저는 봇입니다.",
    "defaultErrorMessage": "죄송합니다. 이해하지 못했어요. 더 구체적으로 지정해 주시겠어요?",
    "greetingMessage": "안녕하세요! MyGuide를 시작합니다. 무엇을 도와 드릴까요? 저는 봇입니다.",
    "errorMessage": "죄송합니다. 이해하지 못했어요. 더 구체적으로 지정해 주시겠어요?",
    "guideLnkToRedirect": "다음 링크를 사용하여 페이지로 리디렉션하고 가이드를 실행하십시오.",
    "otpTimer": "다음 시간 후에 다시 시도할 수 있습니다.",
    "seconds": "초",
    "limitWarning": "시도 실패의 최대 한도에 도달했습니다.",
    "startBotLbl": "봇 시작",
    "doitForMeWarning": "DoItForMe는 이미지, 비디오 및 설문 조사 단계에 사용할 수 없습니다.",
    "playNextBotTour": "다음 봇 투어 재생",
    "includeScreen": "스크린샷 포함",
    "feedbackPlaceholder": "피드백이 있으신가요? 귀하의 피드백을 환영합니다!",
    "feedbackOptBtn": "클릭하여 정보 강조 표시 또는 숨기기",
    "highlight": "강조",
    "send": "보내기",
    "done": "완료",
    "hide": "숨김",
    "multiSelectOptionError": "하나 이상의 옵션을 선택하십시오.",
    "loginNext": "다음",
    "captchaLbl": "Captcha",
    "placeholderEnterCaptcha": "Captcha 입력",
    "captchaError": "올바른 captcha를 입력하십시오.",
    "allGuides": "모든 Guides",
    "helpCenter": "도움말 센터",
    "feedbackRequired": "피드백을 입력해 주세요.",
    "default": "기본값",
    "feedbackImgErrorMsg": "브라우저 관련 문제로 인해 스크린샷을 피드백에 첨부할 수 없습니다. 페이지를 새로 고치고 Chrome 작업 표시줄에서  Guide 확장 프로그램을 클릭하여 열고 피드백용 스크린샷을 다시 캡처하세요.",
    "tranportURlRedirectionConfirm": "전송 단계 URL로 리디렉션",
    "guideContinueConfirm": "안내서 계속",
    "autoplay": "자동 재생",
    "focus": "포커스",
    "zoomOut": "확대/축소 수준을 더 이상 낮출 수 없습니다.",
    "zoomIn": "확대/축소 수준을 더 이상 늘릴 수 없습니다.",
    "charM": "m",
    "charS": "s",
    "focusTooltip": "이 버튼은 이미지를 확대한 경우에만 작동합니다."
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.nl_NL = {
	currentPage: "Huidige pagina",
	myChat: "Mychat",
	import: "Importeren",
	export: "Exporteren",
	redirectLivetour: "Live spelen",
	guideNotAvailable: "Gids niet beschikbaar op de huidige URL. Wilt u naar de URL van de gids gaan?",
	downloadPPT: "PPT downloaden",
	btnYes: "Ja",
	btnNo: "Nee",
	inApp: "In-app",
	live: "Wonen",
	resume: "Hervatten",
	tourCloseConfirm: "Wil je deze gids echt afsluiten?",
	notifSnoozeDonotMsg: "Laat het ons weten als je dit later wilt bekijken of de melding nooit wilt laten zien?",
	surveyThanksMessage: "Bedankt voor het geven van uw antwoord",
	testMePassedMessage: "Gefeliciteerd! Je bent geslaagd",
	testMeFailedMessage: "Oeps! Je hebt gefaald",
	testMeGuideEfficiency: "Testeffici\u00ebntie:",
	testMeGuideEffectiveness: "Effectiviteit van de test:",
	testMeTestTime: "Testtijd",
	testMeExpectedTime: "Verwachte tijd",
	testMeStepsTaken: "Genomen stappen",
	testMeExpectedSteps: "Verwachte stappen",
	testMeRetakeTestBtn: "Herkansingstest",
	testMeResultTitle: "MyTest Resultaat",
	ConfirmIfTestMeModeRidirect: "Gids niet beschikbaar op de huidige URL. Wilt u omleiden naar de URL van de gids?",
	feedCmt: "Uw feedback is waardevol voor ons!<br> Vertel ons wat je ervan vond in 500 tekens of minder",
	doNotShowAgain: "Niet meer weergeven",
	neverShowAgain: "Nooit meer weergeven",
	skipGuide: "Gids overslaan",
	surveyErrorMsg: "Beantwoord ten minste \u00e9\u00e9n vraag",
	redirect: "Doorsturen",
	liveGuide: "Live gids",
	question: "Vraag",
	exitGuide: "Afsluitgids",
	continueGuide: "Gids doorgaan",
	stop: "Stoppen",
	characters: "Karakters:",
	survey: "Enqu\u00eate",
	testMeStopMessage: "U bevindt zich in de TestMe-modus, klik op STOPPEN om af te sluiten",
	testMeFailedErrorMessage: "Je kon de doelstap niet bereiken.<br>U hebt {CORRECT_STEPS} stappen correct uit {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Typ hier! Max 500 tekens",
	pushTourSnoozeMsg: "Deze Auto Launch Tour wordt gesnoozed voor",
	of: "van",
	wbMplayerTitle: "Tutorials",
	wbDragTooltip: "Sleep deze speler overal op de pagina",
	dontShowEdResult: "Ik wil dit niet zien",
	mPlayerHeaderTitle: "Microspeler",
	closePreview: "Voorbeeld sluiten",
	elmNotFound: "Het lijkt erop dat we het element voor de stap niet kunnen vinden:",
	elmNotFoundInfo: "Zorg ervoor dat u op de juiste pagina bent om deze stap af te spelen. Controleer ook of u het geselecteerde element kunt zien",
	notExists: "Bestaat niet",
	elmNotFoundHeader: "Stapelement niet gevonden",
	goToStep: "Ga naar stap",
	notFoundStep: "We konden het element voor stap niet vinden #",
	pleaseReselect: "Probeer het element opnieuw te selecteren.",
	stepRuleMatchErr: "Configuratiefout: stapregels komen niet overeen",
	guideRuleMatchErr: "Configuratiefout: gidsregels komen niet overeen",
	stepNotFoundRedirect: "Stap niet gevonden op deze pagina. Wilt u omleiden?",
	branchStepMessagePopup: "Selecteer een van de onderstaande taken om door te gaan",
	btnSkip: "Overslaan",
	kindlyHoverPopup: "Plaats de muisaanwijzer op dit element om de pop-up te openen",
	stepPlayIsdefinedPopover: "De stap die je gaat spelen is gedefinieerd op de popover",
	elmNotFoundWestpac: "Stap niet gevonden \u2013 Deze handleiding eindigt",
	findingElementMessage: "Proberen om stap te vinden. . .",
	badDomain: "Huidig domein en URL zijn niet geautoriseerd om MyGuide uit te voeren. Neem contact op met uw beheerder voor hulp.",
	hostJsError: "Er lijkt een fout op de webpagina te staan. MyGuide kan niet doorgaan",
	remember: "Onthoud mij",
	forgotPass: "Wachtwoord vergeten?",
	dontHavAcc: "Heb je nog geen account?",
	loginTitle: "Inloggen",
	loginOtpScreenTitle: "Otp verifi\u00ebren om in te loggen",
	forgetPassTitl: "Wachtwoord opnieuw instellen",
	placeholderEmail: "E-mail-ID",
	placeholderPassword: "Wachtwoord",
	placeholderNewPassword: "Nieuw wachtwoord",
	placeholderCurrentPassword: "Huidig wachtwoord",
	placeholderFirstname: "Voornaam",
	placeholderLastname: "Achternaam",
	placeholderPasswordC: "Bevestig wachtwoord",
	btnCancel: "Annuleren",
	btnPayment: "Upgradeplan",
	btnSubmit: "Opslaan",
	btnLogin: "Inloggen",
	termsOfUse: "Gebruiksvoorwaarden",
	andLabel: "en",
	policyPrivacy: "Privacybeleid",
	passwordError: "Wachtwoord moet 8 cijfers lang zijn",
	confirmPasswordError: "Wachtwoord en wachtwoord bevestigen moeten hetzelfde zijn",
	firstnameError: "Voer een geldige voornaam in",
	lastnameError: "Voer een geldige achternaam in",
	emailError: "Voer een geldig e-mailadres in",
	orgError: "Voer een geldige organisatie-URL in",
	otpError: "Voer een geldige OTP in",
	placeholderOtp: "Voer hier uw OTP in",
	otpSentDesc: "Als er een geldig e-mailadres is opgegeven, wordt er een resetlink naar u verzonden.<br>Als u de e-mail binnen een paar minuten niet ziet, controleer dan uw spammap op een e-mail van",
	btnOtpVerify: "OTP verifi\u00ebren",
	alreadyHavAcc: "Heb je al een account?",
	smartbiteMessageError: "Voer bericht in",
	smartbiteLinkError: "Voer een geldige link in",
	noGuidesOnThisPage: "Geen gidsen beschikbaar op deze pagina!",
	clickOn: "Klik op ",
	contactUs: "Neem contact met ons op",
	search: "Zoeken",
	noRecordFound: "Geen records gevonden",
	category: "Map",
	subCategory: "Submap",
	confirmPasswordRequired: "Wachtwoord bevestigen vereist",
	logInWithSSO: "Inloggen met SSO",
	inputPlaceHolderSearch: "Zoek naar een gids",
	noGuideAvailableFor: "Er zijn geen gids(en) gevonden die overeenkomen met uw zoekopdracht",
	tryModifyingYourSearch: "Probeer uw zoekcriteria aan te passen",
	signInVerifyYourEmail: "Deze e-mail-ID is niet geverifieerd. Controleer uw e-mail voor meer informatie",
	signInVerifyYourAccount: "We hebben je een e-mail gestuurd met een OTP. Verifieer uw account om het aanmeldingsproces te voltooien",
	maintenanceMessage: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	back: "Terug",
	changePassword: "Wachtwoord wijzigen",
	startTestAuto: "Start met het testen van automatisering",
	msgPasswordChangedSuccess: "Uw wachtwoord is gewijzigd",
	msgConfirmNewPasswordError: "Wachtwoord bevestigen moet hetzelfde zijn als Nieuw wachtwoord",
	enterUrl: "Voer de team-URL in",
	dragPlaceholderDropThis: "Laat dit vallen ",
	dragPlaceholderHere: " hier",
	termsOfService: "Voorwaarde",
	versionText: "Versie",
	videoStepSuccessMessage: "Uw stap is met succes gemaakt",
	importSuccessMessage: "Gids succesvol ge\u00fcpload. Ga naar Taakstatus om de importstatus te controleren",
	worldBankHelpSupport: "Sommige tools, zoals Tooltip(s), kunnen alleen in de interface worden bekeken",
	helpSupport: "Hulp & Ondersteuning",
	page: "bladzijde",
	selectAnApplication: "Selecteer een toepassing",
	refresh: "Opfrissen",
	loginBtn: "Inloggen",
	account: "Rekening",
	taskStatus: "Taakstatus ",
	logoutBtn: "Logout",
	app: "App:",
	firstStep: "Eerste stap",
	lastStep: "Laatste stap",
	startTest: "Test starten",
	noInappStepInGuide: "TestMe kan niet doorgaan omdat er geen inline stap in deze handleiding is",
	settingBtn: "Geavanceerde instellingen",
	orgSetting: "Organisatie-instellingen",
	close: "Sluiten",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Document",
	downloadBlog: "Blog",
	downloadTxt: "Platte tekst",
	serviceErrorMessage: "Oeps! Er is een fout opgetreden. Probeer het na enige tijd opnieuw. U kunt ons ook e-mailen op support@csod.com voor hulp",
	guidesTab: "Hulplijnen",
	noGuideCreatedYet: "Nog geen gids gemaakt!",
	noCategoryCreatedYet: "Nog geen map gemaakt!",
	chatbot: "Mychat",
	notAutorised: "U hebt niet de vereiste toegang, neem contact op met de beheerder",
	ok: "OK",
	apiError: "Configuratiefout. Neem contact op met de beheerder",
	select: "Selecteren",
	mute_unmute: "Dempen\/dempen",
	privacyPolicy: "Privacy & Cookies",
	privacyPolicyText: "MyGuide maakt gebruik van cookies. Als u doorgaat, gaat u akkoord met onze Voorwaarden en Ons Privacybeleid en geeft u ons toestemming om cookies te gebruiken",
	terms: "Voorwaarde",
	westPecErrorMessage: "U bent niet gemachtigd om toegang te krijgen tot deze applicatie. Meld u aan bij het netwerk van Westpac",
	noApp: "Geen toepassingen gevonden",
	role: "Rol:",
	all: "Alle",
	video: "Video",
	course: "Cursus",
	article: "Artikel",
	image: "Beeld",
	pathways: "Trajecten",
	preview: "Voorbeeld",
	more: "Meer",
	history: "Geschiedenis",
	publish: "Uitgeven",
	selectGuideLink: "Selecteer Gids om te linken",
	selectGuideBeforeSubmit: "Selecteer een gids voordat u deze verzendt",
	change: "Veranderen",
	checkNow: "Nu controleren",
	minutes: "notulen",
	clickHere: "klik hier",
	youAlmostDone: "Je bent bijna klaar!",
	setOrg: "om uw organisatie in te stellen",
	apps: "Apps",
	me: "Mij",
	playStep: "Stap afspelen",
	miniPlayerHelp: "Help",
	defaultMiniPlayerHelp: "Help",
	defaultConfirmIfSlideshowOrRedirect: "Stap niet beschikbaar op de huidige URL.<br>Wilt u naar de stap-URL gaan of diavoorstelling afspelen?",
	defaultServiceErrorMessage: "Oeps! Er is een fout opgetreden. Probeer het na enige tijd opnieuw. U kunt ons ook e-mailen op support@csod.com voor hulp",
	defaultMaintenanceMessage: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	userNotFollowingGuideMessage: "Het lijkt erop dat u stappen uitvoert die geen deel uitmaken van deze handleiding. Als u de gids niet langer wilt volgen, klikt u op Gids afsluiten",
	defaultUserNotFollowingGuideMessage: "Het lijkt erop dat u stappen uitvoert die geen deel uitmaken van deze handleiding. Als u de gids niet langer wilt volgen, klikt u op Gids afsluiten",
	resumeGuide: "Cv-gids",
	defaultResumeGuideMessage: "Cv-gids",
	backToLogin: "Terug naar Login",
	filters: "Filters",
	thisApp: "Deze app",
	thisWebsite: "Deze website",
	maxFreeTourLimit: "Maximale limiet van tours bereikt",
	passwordRegexCheck: "Het wachtwoord moet minimaal 8 tekens bevatten, waaronder ten minste \u00e9\u00e9n hoofdletter, \u00e9\u00e9n kleine letter en \u00e9\u00e9n numerieke waarde",
	countLimit: "99+",
	microsoftServiceKey: "Voer uw Microsoft Cognitive Services Speech-abonnementssleutel in",
	numberOfImgFile: "Het aantal afbeeldings- en tekstbestanden moet hetzelfde zijn",
	availableOn: "Beschikbaar op",
	tooltipUnpubWorkflowTitle: "Niet-gepubliceerde workflow",
	tooltipUnpubParentWorkflowTitle: "Gepubliceerde workflow, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentWorkflowTitle: "Gepubliceerde workflow, gepubliceerde map",
	tooltipUnpubTooltipTitle: "Niet-gepubliceerde knopinfo",
	tooltipUnpubParentTooltipTitle: "Gepubliceerde knopinfo, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentTooltipTitle: "Gepubliceerde knopinfo, gepubliceerde map",
	tooltipUnpubTutorialTitle: "Ongepubliceerde tutorial",
	tooltipUnpubParentTutorialTitle: "Gepubliceerde zelfstudie, Niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentTutorialTitle: "Gepubliceerde zelfstudie, gepubliceerde map",
	tooltipUnpubSubFolderTitle: "Niet-gepubliceerde submap",
	tooltipUnpubSubFolderDesc: "Submappen gebruiken om hulplijnen te ordenen",
	tooltipUnpubParentSubFolderTitle: "Gepubliceerde submap, niet-gepubliceerde bovenliggende map(en)",
	tooltipPubParentSubFolderTitle: "Gepubliceerde submap, Gepubliceerde map",
	tooltipPubParentSubFolderDesc: "Organiseert gidsen",
	exitSurvey: "Exit Enqu\u00eate",
	disable: "Uitschakelen",
	instructionExitSurvey: "Exit Survey wordt weergegeven wanneer een gebruiker een gids afsluit voordat deze is voltooid",
	msgVideoNotFound: "Upload je video, probeer het na enige tijd",
	msgGiphyNotFound: "Uploaden van uw GIF, probeer het na enige tijd",
	userPref: "Mijn voorkeuren",
	manageAccount: "Beheerportaal",
	analyticsPortal: "Portal voor inzichten",
	errorInvalidUrl: "Geen geldige URL",
	wbFooterText: "ITS Technisch leren",
	navigationMenu: "Navigatiemenu",
	clearHistory: "Geschiedenis wissen",
	userDeniedMessage: "Gebruiker heeft camera- en microfoontoegangsrechten geweigerd",
	pushNotification: "Push notificaties",
	viewDetail: "Bekijk detail",
	contactAdmin: "Neem contact op met support@csod.com of uw beheerder voor verdere hulp",
	noAppOnDomain: "Toepassing is niet toegewezen voor huidig domein ",
	noGuidesOnDomain: "Geen gidsen gevonden",
	apply: "Toepassen",
	invalidLoginCred: "Ongeldige inloggegevens. Uw account wordt vergrendeld na meerdere mislukte pogingen, u ontvangt een e-mail om uw account te ontgrendelen of u kunt uw wachtwoord opnieuw instellen",
	resendOTP: "OTP opnieuw verzenden",
	sendFeedback: "Feedback verzenden",
	guideNotExist: "Deze handleiding is niet beschikbaar op deze pagina (Fout: Domein komt niet overeen) ",
	cdnAccess: "<b>Het spijt ons<\/b> <br><br>Het lijkt erop dat er een probleem is met onze servers.<br> We zijn op de hoogte gebracht van de fout en zullen deze zo snel mogelijk corrigeren",
	tourPlayError: "Gids kan niet worden gespeeld. Fout bij het ophalen van gidsdetails",
	playerMode: "Speler-modus",
	closePanel: "Paneel sluiten",
	switchCreatorMode: "Overschakelen naar de Creator-modus",
	extensionContextError: "De context van de extensie is ongeldig gemaakt. Laad de pagina opnieuw om door te gaan",
	otpSent: "OTP is opnieuw verzonden naar uw e-mail, controleer uw inbox",
	startOver: "Opnieuw beginnen",
	yesResume: "Hervatten",
	dontShowAgain: "Niet meer weergeven",
	notificationHeader: "Je hebt een melding!",
	watchLater: "Later bekijken",
	pushSnoozeMsg: "Deze melding wordt gesnoozed voor",
	showAgain: "Opnieuw weergeven",
	noGuidesOnThisTab: "Er zijn geen meldingen op deze pagina",
	iAgree: "Ik ben het ermee eens",
	viewMore: "Meer weergeven",
	lostInternetConnection: "Verbinding met de server is verbroken. Maak opnieuw verbinding en probeer het opnieuw",
	next: "Volgend",
	recent: "Recent",
	older: "Ouder",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Duidelijk",
	tooltipDontShowAgain: "Meldingen worden niet meer weergegeven. Om nu een melding in te schakelen, plaatst u de muisaanwijzer erop en klikt u op 'Opnieuw weergeven'",
	tooltipWatchLater1: "Meldingen worden gesnoozed voor",
	tooltipWatchLater2: "en zal daarna verschijnen. Om nu een melding in te schakelen, plaatst u de muisaanwijzer erop en klikt u op 'Opnieuw weergeven'",
	hour: "uur",
	hours: "uren",
	insightsTracker: "Insights Tracker",
	slideshow: "Diavoorstelling",
	autoplay: "AUTOMATISCH AFSPELEN",
	powerFormOldData: "Bestaande gegevens",
	powerFormNewData: "Gebruik dit formulier om nieuwe gegevens in te voeren",
	powerFormNewDataMore: "Als uw bestaande gegevens niet zichtbaar zijn, klikt u op de pijl linksboven om uw gegevens te bekijken. De gegevens moeten vervolgens worden gekopieerd naar het toegestane indeling met opsommingstekens.",
	powerFormTitle: "Assistent voor gegevensinvoer",
	powerFormMandatory: "Dit is een verplicht veld, maximale tekenlimiet ",
	belongToOtherApp: "Deze gids is gemaakt op {TOURURL}, die behoort tot de {APPNAME}-app. Kopieer deze handleiding in die app en probeer het opnieuw",
	setDomain: "Als u zeker weet dat de {TOURURL} moet worden toegevoegd in de huidige domeininstellingen van de toepassing, voegt u deze toe en probeert u het opnieuw",
	on: "OP",
	off: "AF",
	btnPrev: "Vorige",
	btnPrevious: "Vorig",
	taskList: "Takenlijst",
	unprocessedVideo: "Wacht even terwijl je video wordt verwerkt.",
	searchResult: "Zoekresultaat",
	pleaseWait: "Een ogenblik geduld!",
	mediaDownloadMsg: "Terwijl we uw bestanden voorbereiden om te downloaden",
	mediaFileNotFound: "Mediabestand niet gevonden",
	searchInFolder: "Zoeken in map",
	currentPageSearchPlaceholder: "Zoeken naar gids(en) die beschikbaar zijn op de huidige pagina",
	brandLogo: "Brand Logo",
	accessibility: "Toegankelijkheid",
	replay: "Overspelen",
	defaultGreetingMessage: "Hallo! Welkom bij MyGuide. Hoe kan ik je helpen?? Houd er rekening mee dat ik een bot ben.",
	defaultErrorMessage: "Het spijt me, ik heb dat niet begrepen. Kunt u specifieker zijn? ",
	defaultEndMessage: "We zijn klaar, heel erg bedankt!",
	greetingMessage: "Hallo! Welkom bij MyGuide. Hoe kan ik je helpen?? Houd er rekening mee dat ik een bot ben.",
	errorMessage: "Het spijt me, ik heb dat niet begrepen. Kunt u specifieker zijn? ",
	endMessage: "We zijn klaar, heel erg bedankt!",
	guideLnkToRedirect: "Gebruik de volgende link om om te leiden naar de pagina en speel de gids af",
	otpTimer: "U kunt het opnieuw proberen in ",
	seconds: " Seconden",
	limitWarning: "U hebt de maximumlimiet van mislukte pogingen bereikt",
	403: "We liepen tegen een probleem aan met dit verzoek. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	405: "We liepen tegen een probleem aan tijdens het verwerken van dit verzoek. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	429: "Te veel verzoeken",
	1003: "We liepen tegen een probleem aan tijdens de authenticatie. Log opnieuw in en probeer het opnieuw. Als het probleem zich blijft voordoen, vernieuwt u de pagina en probeert u het opnieuw",
	1007: "We liepen tegen een probleem aan tijdens de authenticatie. Probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	1005: "<b>Het spijt ons<\/b> <br><br>Het lijkt erop dat er een probleem is met het verzoek of met onze servers.<br> We zijn op de hoogte gebracht van de fout en zullen deze zo snel mogelijk corrigeren",
	1009: "E-mailadres van gebruiker is niet geverifieerd",
	1014: "Onderhoud in uitvoering. Neem dan contact met ons op via support@csod.com",
	1017: "We liepen tegen een probleem aan tijdens de authenticatie. Log opnieuw in en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	1018: "U hebt de maximale limiet voor het maken van stappen bereikt",
	2000: "We liepen tegen een probleem aan met dit verzoek. We zijn op de hoogte gebracht. Probeer dit opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2001: "Ongeldige inloggegevens. Uw account wordt vergrendeld na meerdere mislukte pogingen, u ontvangt een e-mail om uw account te ontgrendelen of u kunt uw wachtwoord opnieuw instellen",
	2002: "Ongeldige of verlopen OTP",
	2003: "Ge\u00fcpload bestand is geen geldige afbeelding (JPG- en PNG-bestanden worden ondersteund)",
	2004: "Sessie verlopen",
	2005: "We konden deze gebruiker niet volgen. Vernieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2006: "E-mailadres is onjuist. Probeer het opnieuw",
	2007: "Gebruikersrol ongeldig. Probeer het opnieuw",
	2008: "U moet een correct taaktype opgeven",
	2009: "De gegeven Applicatie is ongeldig; het had kunnen worden verwijderd of nooit bestaan",
	2010: "Ongeldige invoerparameters. Vernieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2011: "De gegeven organisatie is ongeldig; het had kunnen worden verwijderd of nooit bestaan",
	2012: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Controleer dit opnieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2013: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Controleer dit opnieuw en probeer het opnieuw. Als het probleem zich blijft voordoen, meldt u dit aan ons op support@csod.com",
	2014: "Parameter vereist voor Hoofdbeheerder[organization_id]",
	2015: "De verstrekte inhoud van afbeeldingsgegevens is ongeldig. Controleer dit opnieuw en probeer het opnieuw. Als het probleem aanhoudt, meld het ons dan op support@csod.com",
	2016: "Ongeldig domein",
	2017: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2018: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2019: "Wat u zoekt, bestaat niet of is mogelijk verwijderd",
	2020: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2021: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze aanvraag. Meld het probleem aan support@csod.com",
	2022: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Voer een geldige team-URL in",
	2023: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze aanvraag. Meld het probleem aan support@csod.com",
	2024: "De bestandsgrootte moet kleiner zijn dan 5 MB",
	2025: "Er was een ontbrekende of ongeldige parameter in de aanvraag. Voer een geldige URL in",
	2026: "Het wachtwoord moet minimaal 8 tekens bevatten, waaronder ten minste \u00e9\u00e9n hoofdletter, \u00e9\u00e9n kleine letter en \u00e9\u00e9n numerieke waarde",
	2027: "Ongeldig wachtwoord",
	2028: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2029: "De stad die u hebt opgegeven, wordt niet ondersteund",
	2030: "Er was een ontbrekende of ongeldige parameter in de aanvraag",
	2031: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze parameter. Meld het probleem aan support@csod.com",
	2032: "Ongeldige parameter[file_id]",
	2033: "Ongeldige URL. Controleer opnieuw en probeer het opnieuw",
	2034: "Er is een onverwachte fout opgetreden op de verificatieserver tijdens het verwerken van deze parameters. Meld het probleem aan support@csod.com",
	2035: "De verificatieserver heeft een onverwachte fout aangetroffen tijdens het verwerken van deze AppKey. Meld het probleem aan support@csod.com",
	2036: "Er is een onverwachte fout opgetreden op de verificatieserver. Vernieuw deze pagina. Als het probleem zich blijft voordoen, meldt u het probleem aan support@csod.com",
	2044: "We lijken de vertaling voor deze stap verkeerd te hebben geplaatst. Schakel over naar Standaardtaal en vertaal de stap opnieuw, of neem contact op met onze klantenservice voor meer informatie.",
	2200: "We liepen tegen een probleem aan tijdens het openen van audio \/ video-bedieningselementen. Controleer uw browserinstellingen en probeer dit opnieuw. Als het probleem aanhoudt, meld het ons dan op support@csod.com",
	3061: "U kunt maximaal 5 gids(en) vastmaken",
	4000: "Subcategorie kan niet in een map worden gemaakt als er al een gids is gemaakt",
	4001: "Als een gebruiker al hoofdbeheerder is, kunt u de gebruikersrol niet wijzigen",
	4002: "Deze actie is niet toegestaan in een gepubliceerde gids",
	4003: "Vergrendelde gids kan niet worden gepubliceerd",
	4004: "Deze actie is niet toegestaan in een gepubliceerde map. Maak de publicatie ongedaan",
	4006: "Aanvraag moet behoren tot de gegeven organisatie",
	4007: "U bent niet bevoegd om deze actie uit te voeren",
	4008: "Actie is niet toegestaan voor deze subcategorie",
	4009: "Gids moet worden gepubliceerd",
	4010: "Gids kan niet worden gemaakt in een map met een subcategorie",
	4011: "Om stap(en) te maken, moet u deze handleiding ontgrendelen",
	4012: "Als u stap(en) wilt bewerken, moet u deze handleiding ontgrendelen",
	4013: "Als u stap(en) wilt verwijderen, moet u deze handleiding ontgrendelen",
	4014: "Om stap(en) te kopi\u00ebren en plakken, moet u deze handleiding ontgrendelen",
	3001: "Gids zal binnenkort beschikbaar zijn voor export. Om de status te controleren, gaat u naar 'Taakstatus' onder het accountmenu",
	3002: "Uploaden gestart. Vernieuw of sluit de browser niet totdat het uploaden is voltooid. U kunt de importstatus controleren zodra deze is voltooid",
	3003: "Gebruiker bestaat al",
	3004: "E-mail-ID is al geverifieerd",
	3005: "Deze URL conflicteert met andere toepassingsconfiguraties, probeer een andere URL toe te voegen",
	3006: "Map moet bij dezelfde toepassing horen",
	3007: "Domein bestaat al",
	3008: "Je hebt de maximale limiet van gemaakte gids(en) bereikt",
	3009: "Enqu\u00eate bestaat al in de gegeven gids",
	3010: "De stap moet tot dezelfde gids behoren",
	3011: "Deze organisatie is opgeschort. Neem contact op met uw beheerder",
	3012: "Gids(en) moeten tot dezelfde map behoren",
	3013: "Deze handleiding bestaat al met het gegeven paar objecten en veldnaam",
	3014: "Gebruiker geschorst",
	3015: "Gebruiker al geverifieerd",
	3017: "OTP is succesvol verzonden naar uw e-mailadres",
	3018: "Rol bestaat al",
	3019: "Land bestaat al",
	3020: "Stad bestaat al",
	3023: "Uw organisatie is niet geverifieerd. Neem voor hulp contact op met support@csod.com",
	3024: "JSON-bestand is niet beschikbaar voor deze organisatie",
	3025: "We liepen tegen een probleem aan tijdens de authenticatie. Probeer dit opnieuw. Als het probleem zich blijft voordoen, vernieuwt u de pagina en probeert u het opnieuw",
	3026: "JSON-bestand is niet beschikbaar voor deze handleiding",
	3027: "Geen stap beschikbaar. Ten minste \u00e9\u00e9n stap maken om de gids te publiceren",
	3028: "Maximale publicatielimiet voor tour bereikt",
	3047: "Uw account is tijdelijk vergrendeld vanwege overmatige aanmeldingsfouten. We hebben u een e-mail gestuurd met stappen om het te ontgrendelen. Neem voor meer hulp contact met ons op via support@csod.com",
	3033: "Ongeldige referenties. Neem contact op met support@csod.com of uw beheerder voor verdere hulp.",
	4020: "Er bestaat reeds een concept van deze gids; meerdere concepten van een gids zijn niet toegestaan.",
	4021: "Ongeldige waarden van parameter [envs]",
	2054: "Een oud en nieuw wachtwoord kunnen niet hetzelfde zijn",
	playNextBotTour: "Speel de volgende bottour",
	defaultBotEndingMessage: "We zijn klaar, heel erg bedankt! Nog iets voordat ik begin?",
	loginNext: "Volgend",
	3068: "Uw oude wachtwoord is verlopen stel een nieuw wachtwoord in om in te loggen.",
	includeScreen: "Inclusief screenshot",
	feedbackPlaceholder: "Heeft u feedback? We horen het graag!",
	feedbackOptBtn: "Klik om informatie te markeren of te verbergen",
	highlight: "Markeer",
	send: "Versturen",
	done: "Klaar",
	hide: "Verbergen"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.pl_PL = {
	currentPage: "Bie\u017c\u0105ca strona",
	myChat: "mychat",
	import: "Import",
	export: "Eksport",
	redirectLivetour: "Graj na \u017cywo",
	guideNotAvailable: "Przewodnik niedost\u0119pny pod bie\u017c\u0105cym adresem URL. Czy chcesz przej\u015b\u0107 do adresu URL przewodnika?",
	downloadPPT: "Pobierz PPT",
	btnYes: "Tak",
	btnNo: "Nie",
	inApp: "W aplikacji",
	live: "Mieszka\u0107",
	resume: "Wznawia\u0107",
	tourCloseConfirm: "Czy naprawd\u0119 chcesz zamkn\u0105\u0107 ten przewodnik?",
	notifSnoozeDonotMsg: "Powiedz nam, czy chcesz obejrze\u0107 to p\u00f3\u017aniej, czy nigdy nie wy\u015bwietla\u0107 powiadomienia?",
	surveyThanksMessage: "Dzi\u0119kujemy za udzielenie odpowiedzi",
	testMePassedMessage: "Gratulacje! Zda\u0142e\u015b",
	testMeFailedMessage: "Oops! Nie uda\u0142o Ci si\u0119",
	testMeGuideEfficiency: "Skuteczno\u015b\u0107 testu:",
	testMeGuideEffectiveness: "Skuteczno\u015b\u0107 testu:",
	testMeTestTime: "Czas testu",
	testMeExpectedTime: "Przewidywany czas",
	testMeStepsTaken: "Podj\u0119te kroki",
	testMeExpectedSteps: "Oczekiwane kroki",
	testMeRetakeTestBtn: "Test poprawkowy",
	testMeResultTitle: "Wynik MyTest",
	ConfirmIfTestMeModeRidirect: "Przewodnik niedost\u0119pny pod bie\u017c\u0105cym adresem URL. Czy chcesz przekierowa\u0107 do adresu URL przewodnika?",
	feedCmt: "Twoja opinia jest dla nas cenna!<br> Powiedz nam, co my\u015blisz w 500 znakach lub mniej",
	doNotShowAgain: "Nie pokazuj ponownie",
	neverShowAgain: "Nigdy wi\u0119cej nie pokazuj",
	skipGuide: "Pomi\u0144 przewodnik",
	surveyErrorMsg: "Prosz\u0119 odpowiedzie\u0107 na co najmniej jedno pytanie",
	redirect: "Przekierowanie",
	liveGuide: "Przewodnik na \u017cywo",
	question: "Pytanie",
	exitGuide: "Przewodnik po wyj\u015bciach",
	continueGuide: "Kontynuuj przewodnik",
	stop: "Zatrzyma\u0107",
	characters: "Znak\u00f3w:",
	survey: "Sonda\u017c",
	testMeStopMessage: "Jeste\u015b w trybie TestMe, kliknij STOP, aby wyj\u015b\u0107",
	testMeFailedErrorMessage: "Nie mo\u017cna osi\u0105gn\u0105\u0107 kroku celu.<br>Kroki {CORRECT_STEPS} zosta\u0142y poprawione z {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Wpisz tutaj! Maksymalnie 500 znak\u00f3w",
	pushTourSnoozeMsg: "Ta wycieczka z automatycznym uruchomieniem zostanie od\u0142o\u017cona na p\u00f3\u017aniejsz\u0105",
	of: "z",
	wbMplayerTitle: "Samouczki",
	wbDragTooltip: "Przeci\u0105gnij i upu\u015b\u0107 ten odtwarzacz w dowolnym miejscu na stronie",
	dontShowEdResult: "Nie chc\u0119 tego widzie\u0107",
	mPlayerHeaderTitle: "Odtwarzacz Micro",
	closePreview: "Zamknij podgl\u0105d",
	elmNotFound: "Wygl\u0105da na to, \u017ce nie mo\u017cemy znale\u017a\u0107 elementu dla kroku:",
	elmNotFoundInfo: "Upewnij si\u0119, \u017ce jeste\u015b na w\u0142a\u015bciwej stronie, aby odtworzy\u0107 ten krok. Sprawd\u017a r\u00f3wnie\u017c, czy widzisz wybrany element",
	notExists: "Nie istnieje",
	elmNotFoundHeader: "Nie znaleziono elementu Step",
	goToStep: "Przejd\u017a do kroku",
	notFoundStep: "Nie mogli\u015bmy znale\u017a\u0107 elementu dla kroku #",
	pleaseReselect: "Spr\u00f3buj ponownie zaznaczy\u0107 element.",
	stepRuleMatchErr: "B\u0142\u0105d konfiguracji: regu\u0142y krok\u00f3w nie s\u0105 zgodne",
	guideRuleMatchErr: "B\u0142\u0105d konfiguracji: regu\u0142y przewodnika nie s\u0105 zgodne",
	stepNotFoundRedirect: "Krok nie zosta\u0142 znaleziony na tej stronie. Czy chcesz przekierowa\u0107?",
	branchStepMessagePopup: "Wybierz jedno z poni\u017cszych zada\u0144, aby kontynuowa\u0107",
	btnSkip: "Pomin\u0105\u0107",
	kindlyHoverPopup: "Prosimy o najechanie kursorem na ten element, aby otworzy\u0107 wyskakuj\u0105ce okienko",
	stepPlayIsdefinedPopover: "Krok, kt\u00f3ry zamierzasz odtworzy\u0107, jest zdefiniowany w wyskakuj\u0105cym okienku",
	elmNotFoundWestpac: "Nie znaleziono kroku \u2014 ten przewodnik si\u0119 zako\u0144czy",
	findingElementMessage: "Pr\u00f3ba znalezienia kroku. . .",
	badDomain: "Bie\u017c\u0105ca domena i adres URL nie s\u0105 autoryzowane do uruchamiania aplikacji MyGuide. Skontaktuj si\u0119 z administratorem, aby uzyska\u0107 pomoc.",
	hostJsError: "Wygl\u0105da na to, \u017ce na stronie internetowej wyst\u0105pi\u0142 b\u0142\u0105d. Aplikacja MyGuide nie mo\u017ce kontynuowa\u0107",
	remember: "Zapami\u0119taj mnie",
	forgotPass: "Zapomnia\u0142e\u015b has\u0142a?",
	dontHavAcc: "Nie masz konta?",
	loginTitle: "Login",
	loginOtpScreenTitle: "Weryfikowanie has\u0142a jednorazowego w celu zalogowania si\u0119",
	forgetPassTitl: "Zresetuj has\u0142o",
	placeholderEmail: "Identyfikator e-mail",
	placeholderPassword: "Has\u0142o",
	placeholderNewPassword: "Nowe has\u0142o",
	placeholderCurrentPassword: "Aktualne has\u0142o",
	placeholderFirstname: "Imi\u0119",
	placeholderLastname: "Nazwisko",
	placeholderPasswordC: "Potwierd\u017a has\u0142o",
	btnCancel: "Anuluj",
	btnPayment: "Plan uaktualnie\u0144",
	btnSubmit: "Prze\u015blij",
	btnLogin: "Login",
	termsOfUse: "Warunki korzystania z serwisu",
	andLabel: "i",
	policyPrivacy: "Polityka prywatno\u015bci",
	passwordError: "Has\u0142o musi sk\u0142ada\u0107 si\u0119 z 8 cyfr",
	confirmPasswordError: "Has\u0142o i potwierd\u017a has\u0142o musz\u0105 by\u0107 takie same",
	firstnameError: "Podaj prawid\u0142owe imi\u0119",
	lastnameError: "Podaj poprawne nazwisko",
	emailError: "Podaj prawid\u0142owy identyfikator e-mail",
	orgError: "Podaj prawid\u0142owy adres URL organizacji",
	otpError: "Podaj prawid\u0142owy kod jednorazowy",
	placeholderOtp: "Wpisz tutaj sw\u00f3j OTP",
	otpSentDesc: "Je\u015bli podano prawid\u0142owy adres e-mail, zostanie wys\u0142any link resetowania.<br>Je\u015bli nie zobaczysz wiadomo\u015bci e-mail w ci\u0105gu kilku minut, sprawd\u017a, czy w folderze spamu nie ma wiadomo\u015bci e-mail od",
	btnOtpVerify: "Weryfikacja OTP",
	alreadyHavAcc: "Masz ju\u017c konto?",
	smartbiteMessageError: "Wpisz wiadomo\u015b\u0107",
	smartbiteLinkError: "Podaj prawid\u0142owy link",
	noGuidesOnThisPage: "Brak dost\u0119pnych przewodnik\u00f3w na tej stronie!",
	clickOn: "Kliknij na ",
	contactUs: "Skontaktuj si\u0119 z nami",
	search: "Szuka\u0107",
	noRecordFound: "Nie znaleziono \u017cadnych rekord\u00f3w",
	category: "Folder",
	subCategory: "Podfolder",
	confirmPasswordRequired: "Potwierd\u017a wymagane has\u0142o",
	logInWithSSO: "Zaloguj si\u0119 przy u\u017cyciu logowania jednokrotnego",
	inputPlaceHolderSearch: "Wyszukaj dowolny przewodnik",
	noGuideAvailableFor: "Nie znaleziono przewodnika pasuj\u0105cego do wyszukiwania",
	tryModifyingYourSearch: "Spr\u00f3buj zmodyfikowa\u0107 kryteria wyszukiwania",
	signInVerifyYourEmail: "Ten identyfikator e-mail nie zosta\u0142 zweryfikowany. Sprawd\u017a poczt\u0119 e-mail, aby uzyska\u0107 szczeg\u00f3\u0142owe informacje",
	signInVerifyYourAccount: "Wys\u0142ali\u015bmy Ci wiadomo\u015b\u0107 e-mail z OTP. Zweryfikuj swoje konto, aby uko\u0144czy\u0107 proces logowania",
	maintenanceMessage: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	back: "Wstecz",
	changePassword: "Zmie\u0144 has\u0142o",
	startTestAuto: "Rozpocznij testowanie automatyzacji",
	msgPasswordChangedSuccess: "Twoje has\u0142o zosta\u0142o pomy\u015blnie zmienione",
	msgConfirmNewPasswordError: "Potwierd\u017a has\u0142o musi by\u0107 takie samo jak nowe has\u0142o",
	enterUrl: "Wpisz adres URL zespo\u0142u",
	dragPlaceholderDropThis: "Upu\u015b\u0107 to ",
	dragPlaceholderHere: " tu",
	termsOfService: "Warunki",
	versionText: "Wersja",
	videoStepSuccessMessage: "Tw\u00f3j krok zosta\u0142 pomy\u015blnie utworzony",
	importSuccessMessage: "Przewodnik zosta\u0142 pomy\u015blnie przes\u0142any. Przejd\u017a do Stan zadania, aby sprawdzi\u0107 stan importu",
	worldBankHelpSupport: "Niekt\u00f3re narz\u0119dzia, takie jak Tooltip(s), mo\u017cna wy\u015bwietla\u0107 tylko w interfejsie",
	helpSupport: "Pomoc i wsparcie",
	page: "strona",
	selectAnApplication: "Wybierz aplikacj\u0119",
	refresh: "Od\u015bwie\u017cy\u0107",
	loginBtn: "Login",
	account: "Rachunek",
	taskStatus: "Stan zadania ",
	logoutBtn: "Wyloguj",
	app: "App:",
	firstStep: "Pierwszy krok",
	lastStep: "Ostatni krok",
	startTest: "Rozpocznij test",
	noInappStepInGuide: "TestMe nie mo\u017ce kontynuowa\u0107, poniewa\u017c w tym przewodniku nie ma wbudowanego kroku",
	settingBtn: "Ustawienia zaawansowane",
	orgSetting: "Ustawienia organizacji",
	close: "Zamyka\u0107",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Dokument",
	downloadBlog: "Blog",
	downloadTxt: "Zwyk\u0142y tekst",
	serviceErrorMessage: "Oops! Wyst\u0105pi\u0142 b\u0142\u0105d. Spr\u00f3buj ponownie za jaki\u015b czas. Mo\u017cesz r\u00f3wnie\u017c wys\u0142a\u0107 do nas wiadomo\u015b\u0107 e-mail na adres support@csod.com w celu uzyskania pomocy",
	guidesTab: "Prowadnice",
	noGuideCreatedYet: "\u017baden przewodnik jeszcze nie powsta\u0142!",
	noCategoryCreatedYet: "Nie utworzono jeszcze folderu!",
	chatbot: "mychat",
	notAutorised: "Nie masz wymaganego dost\u0119pu, skontaktuj si\u0119 z Adminem",
	ok: "OK",
	apiError: "B\u0142\u0105d konfiguracji. Skontaktuj si\u0119 z Adminem",
	select: "Wybra\u0107",
	mute_unmute: "Wyciszenie\/wy\u0142\u0105czenie wyciszenia",
	privacyPolicy: "Prywatno\u015b\u0107 i pliki cookie",
	privacyPolicyText: "Aplikacja MyGuide wykorzystuje pliki cookie. Je\u015bli b\u0119dziesz kontynuowa\u0107, zgadzasz si\u0119 na nasze Warunki i Polityk\u0119 prywatno\u015bci oraz wyra\u017casz zgod\u0119 na u\u017cywanie plik\u00f3w cookie",
	terms: "Warunki",
	westPecErrorMessage: "U\u017cytkownik nie jest upowa\u017cniony do dost\u0119pu do tej aplikacji. Zaloguj si\u0119 do sieci Westpac",
	noApp: "Nie znaleziono aplikacji",
	role: "Rola:",
	all: "Ca\u0142y",
	video: "Wideo",
	course: "Kurs",
	article: "Artyku\u0142",
	image: "Obraz",
	pathways: "\u015acie\u017cek",
	preview: "Prapremiera",
	more: "Wi\u0119cej",
	history: "Historia",
	publish: "Publikowa\u0107",
	selectGuideLink: "Wybierz Przewodnik po linku",
	selectGuideBeforeSubmit: "Wybierz przewodnik przed przes\u0142aniem",
	change: "Zmienia\u0107",
	checkNow: "Sprawd\u017a teraz",
	minutes: "protok\u00f3\u0142",
	clickHere: "kliknij tutaj",
	youAlmostDone: "Prawie gotowe!",
	setOrg: ", aby skonfigurowa\u0107 organizacj\u0119",
	apps: "Aplikacje",
	me: "Mnie",
	playStep: "Play Step",
	miniPlayerHelp: "Pomoc",
	defaultMiniPlayerHelp: "Pomoc",
	defaultConfirmIfSlideshowOrRedirect: "Krok niedost\u0119pny pod bie\u017c\u0105cym adresem URL.<br>Czy chcesz przej\u015b\u0107 do adresu URL kroku lub odtworzy\u0107 pokaz slajd\u00f3w?",
	defaultServiceErrorMessage: "Oops! Wyst\u0105pi\u0142 b\u0142\u0105d. Spr\u00f3buj ponownie za jaki\u015b czas. Mo\u017cesz r\u00f3wnie\u017c wys\u0142a\u0107 do nas wiadomo\u015b\u0107 e-mail na adres support@csod.com w celu uzyskania pomocy",
	defaultMaintenanceMessage: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	userNotFollowingGuideMessage: "Wygl\u0105da na to, \u017ce wykonujesz kroki, kt\u00f3re nie s\u0105 cz\u0119\u015bci\u0105 tego przewodnika. Je\u015bli nie chcesz ju\u017c post\u0119powa\u0107 zgodnie z przewodnikiem, kliknij Exit Guide",
	defaultUserNotFollowingGuideMessage: "Wygl\u0105da na to, \u017ce wykonujesz kroki, kt\u00f3re nie s\u0105 cz\u0119\u015bci\u0105 tego przewodnika. Je\u015bli nie chcesz ju\u017c post\u0119powa\u0107 zgodnie z przewodnikiem, kliknij Exit Guide",
	resumeGuide: "Przewodnik po \u017cyciorysach",
	defaultResumeGuideMessage: "Przewodnik po \u017cyciorysach",
	backToLogin: "Powr\u00f3t do logowania",
	filters: "Filtry",
	thisApp: "Ta aplikacja",
	thisWebsite: "Ta strona internetowa",
	maxFreeTourLimit: "Maksymalny limit osi\u0105gni\u0119tych wycieczek",
	passwordRegexCheck: "Has\u0142o musi zawiera\u0107 co najmniej 8 znak\u00f3w, w tym co najmniej jedn\u0105 wielk\u0105 i jedn\u0105 ma\u0142\u0105 i jedn\u0105 cyfr\u0119",
	countLimit: "99+",
	microsoftServiceKey: "Wprowad\u017a klucz subskrypcji Microsoft Cognitive Services Speech",
	numberOfImgFile: "Liczba plik\u00f3w graficznych i tekstowych powinna by\u0107 taka sama",
	availableOn: "Dost\u0119pne na",
	tooltipUnpubWorkflowTitle: "Nieopublikowany przep\u0142yw pracy",
	tooltipUnpubParentWorkflowTitle: "Opublikowany przep\u0142yw pracy, nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentWorkflowTitle: "Opublikowany przep\u0142yw pracy, Opublikowany folder",
	tooltipUnpubTooltipTitle: "Nieopublikowana etykietka narz\u0119dzia",
	tooltipUnpubParentTooltipTitle: "Opublikowana etykietka narz\u0119dzia, nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentTooltipTitle: "Opublikowana etykietka narz\u0119dzia, Opublikowany folder",
	tooltipUnpubTutorialTitle: "Nieopublikowany samouczek",
	tooltipUnpubParentTutorialTitle: "Opublikowany samouczek, Nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentTutorialTitle: "Opublikowany samouczek, Opublikowany folder",
	tooltipUnpubSubFolderTitle: "Nieopublikowany podfolder",
	tooltipUnpubSubFolderDesc: "U\u017cywanie podfolder\u00f3w do organizowania linii pomocniczych",
	tooltipUnpubParentSubFolderTitle: "Opublikowany podfolder, Nieopublikowane foldery nadrz\u0119dne",
	tooltipPubParentSubFolderTitle: "Podfolder Opublikowane, Folder Opublikowany",
	tooltipPubParentSubFolderDesc: "Organizuje przewodniki",
	exitSurvey: "Ankieta ko\u0144cowa",
	disable: "Wy\u0142\u0105cza\u0107",
	instructionExitSurvey: "Exit Survey jest wy\u015bwietlany, gdy u\u017cytkownik zamyka przewodnik przed zako\u0144czeniem",
	msgVideoNotFound: "Przesy\u0142aj\u0105c sw\u00f3j film, spr\u00f3buj za jaki\u015b czas",
	msgGiphyNotFound: "Przesy\u0142aj\u0105c GIF, spr\u00f3buj po pewnym czasie",
	userPref: "Moje preferencje",
	manageAccount: "Portal administracyjny",
	analyticsPortal: "Portal aplikacji Insights",
	errorInvalidUrl: "Nieprawid\u0142owy adres URL",
	wbFooterText: "Nauka techniczna ITS",
	navigationMenu: "Menu nawigacji",
	clearHistory: "Wyczy\u015b\u0107 histori\u0119",
	userDeniedMessage: "U\u017cytkownikowi odm\u00f3wiono dost\u0119pu do kamery i mikrofonu",
	pushNotification: "Powiadomienia push",
	viewDetail: "Zobacz szczeg\u00f3\u0142y",
	contactAdmin: "Skontaktuj si\u0119 z support@csod.com lub administratorem, aby uzyska\u0107 dalsz\u0105 pomoc",
	noAppOnDomain: "Aplikacja nie jest przypisana do bie\u017c\u0105cej domeny ",
	noGuidesOnDomain: "Nie znaleziono przewodnik\u00f3w",
	apply: "Zastosowa\u0107",
	invalidLoginCred: "Nieprawid\u0142owe dane logowania. Twoje konto zostanie zablokowane po wielu nieudanych pr\u00f3bach, otrzymasz wiadomo\u015b\u0107 e-mail z pro\u015bb\u0105 o odblokowanie konta lub mo\u017cesz zresetowa\u0107 has\u0142o",
	resendOTP: "Wy\u015blij ponownie OTP",
	sendFeedback: "Wy\u015blij opini\u0119",
	guideNotExist: "Ten przewodnik nie jest dost\u0119pny na tej stronie (B\u0142\u0105d: Niezgodno\u015b\u0107 domeny) ",
	cdnAccess: "<b>Przepraszamy<\/b> <br><br>Wygl\u0105da na to, \u017ce jest problem z naszymi serwerami.<br> Zostali\u015bmy powiadomieni o b\u0142\u0119dzie i poprawimy go tak szybko, jak to mo\u017cliwe",
	tourPlayError: "Przewodnika nie mo\u017cna odtworzy\u0107. B\u0142\u0105d podczas pobierania szczeg\u00f3\u0142\u00f3w przewodnika",
	playerMode: "Tryb gracza",
	closePanel: "Zamknij panel",
	switchCreatorMode: "Prze\u0142\u0105czanie do trybu tw\u00f3rcy",
	extensionContextError: "Kontekst rozszerzenia jest uniewa\u017cniony. Od\u015bwie\u017c stron\u0119, aby kontynuowa\u0107",
	otpSent: "OTP zosta\u0142 ponownie wys\u0142any na Tw\u00f3j adres e-mail, sprawd\u017a swoj\u0105 skrzynk\u0119 odbiorcz\u0105",
	startOver: "Zacznij od nowa",
	yesResume: "Wznawia\u0107",
	dontShowAgain: "Nie pokazuj wi\u0119cej",
	notificationHeader: "Masz powiadomienie!",
	watchLater: "Obejrzyj p\u00f3\u017aniej",
	pushSnoozeMsg: "To powiadomienie zostanie od\u0142o\u017cone na p\u00f3\u017aniej",
	showAgain: "Poka\u017c ponownie",
	noGuidesOnThisTab: "Na tej stronie nie ma \u017cadnych powiadomie\u0144",
	iAgree: "Zgadzam si\u0119",
	viewMore: "Zobacz wi\u0119cej",
	lostInternetConnection: "Utracono po\u0142\u0105czenie z serwerem. Po\u0142\u0105cz si\u0119 ponownie i spr\u00f3buj ponownie",
	next: "Nast\u0119pny",
	recent: "Niedawny",
	older: "Starszy",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Jasny",
	tooltipDontShowAgain: "Powiadomienia nie b\u0119d\u0105 ju\u017c wy\u015bwietlane. Aby w\u0142\u0105czy\u0107 powiadomienie teraz, najed\u017a na nie kursorem i kliknij \"Poka\u017c ponownie\"",
	tooltipWatchLater1: "Powiadomienia s\u0105 odk\u0142adane dla",
	tooltipWatchLater2: "i pojawi si\u0119 p\u00f3\u017aniej. Aby w\u0142\u0105czy\u0107 powiadomienie teraz, najed\u017a na nie kursorem i kliknij \"Poka\u017c ponownie\"",
	hour: "godzina",
	hours: "Godzin",
	insightsTracker: "\u015aledzenie statystyk",
	slideshow: "Pokaz slajd\u00f3w",
	autoplay: "AUTOODTWARZANIE",
	powerFormOldData: "Istniej\u0105ce dane",
	powerFormNewData: "U\u017cyj tego formularza, aby wprowadzi\u0107 nowe dane",
	powerFormNewDataMore: "Je\u015bli istniej\u0105ce dane nie s\u0105 widoczne, kliknij strza\u0142k\u0119 w lewym g\u00f3rnym rogu, aby wy\u015bwietli\u0107 dane. Nast\u0119pnie dane nale\u017cy skopiowa\u0107 do dozwolonego formatu punktowanego.",
	powerFormTitle: "Asystent wprowadzania danych",
	powerFormMandatory: "Jest to pole obowi\u0105zkowe, maksymalny limit znak\u00f3w ",
	belongToOtherApp: "Ten przewodnik jest tworzony w aplikacji {TOURURL}, kt\u00f3ra nale\u017cy do aplikacji {APPNAME}. Skopiuj ten przewodnik do tej aplikacji i spr\u00f3buj ponownie",
	setDomain: "Je\u015bli masz pewno\u015b\u0107, \u017ce {TOURURL} powinien zosta\u0107 dodany w bie\u017c\u0105cych ustawieniach domeny aplikacji, dodaj i spr\u00f3buj ponownie",
	on: "NA",
	off: "OD",
	btnPrev: "Poprzedni",
	btnPrevious: "Poprzedni",
	taskList: "Lista zada\u0144",
	unprocessedVideo: "Poczekaj, a\u017c film b\u0119dzie przetwarzany.",
	searchResult: "Wynik wyszukiwania",
	pleaseWait: "Czekaj!",
	mediaDownloadMsg: "Podczas gdy my przygotowujemy Twoje pliki do pobrania",
	mediaFileNotFound: "Nie znaleziono pliku multimedialnego",
	searchInFolder: "Szukaj w folderze",
	currentPageSearchPlaceholder: "Wyszukaj przewodnik(i) dost\u0119pny na bie\u017c\u0105cej stronie",
	brandLogo: "Logo marki",
	accessibility: "Dost\u0119pno\u015b\u0107",
	replay: "Replay",
	defaultGreetingMessage: "Hej! Witamy w aplikacji MyGuide. Jak mog\u0119 Ci pom\u00f3c? Prosz\u0119 pami\u0119ta\u0107, \u017ce jestem botem.",
	defaultErrorMessage: "Przepraszam, nie zrozumia\u0142em tego. Czy m\u00f3g\u0142by\u015b by\u0107 bardziej konkretny? ",
	defaultEndMessage: "Gotowe, dzi\u0119kujemy bardzo!",
	greetingMessage: "Hej! Witamy w aplikacji MyGuide. Jak mog\u0119 Ci pom\u00f3c? Prosz\u0119 pami\u0119ta\u0107, \u017ce jestem botem.",
	errorMessage: "Przepraszam, nie zrozumia\u0142em tego. Czy m\u00f3g\u0142by\u015b by\u0107 bardziej konkretny? ",
	endMessage: "Gotowe, dzi\u0119kujemy bardzo!",
	guideLnkToRedirect: "U\u017cyj poni\u017cszego linku, aby przekierowa\u0107 na stron\u0119 i odtworzy\u0107 przewodnik",
	otpTimer: "Mo\u017cesz spr\u00f3bowa\u0107 ponownie w ",
	seconds: " Sekund",
	limitWarning: "Osi\u0105gn\u0105\u0142e\u015b maksymalny limit nieudanych pr\u00f3b",
	403: "Wyst\u0105pi\u0142 problem z t\u0105 pro\u015bb\u0105. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	405: "Wyst\u0105pi\u0142 problem podczas przetwarzania tego \u017c\u0105dania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	429: "Zbyt wiele pr\u00f3\u015bb",
	1003: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Zaloguj si\u0119 ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, od\u015bwie\u017c stron\u0119 i spr\u00f3buj ponownie",
	1007: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	1005: "<b>Przepraszamy<\/b> <br><br>Wygl\u0105da na to, \u017ce wyst\u0105pi\u0142 problem z \u017c\u0105daniem lub z naszymi serwerami.<br> Zostali\u015bmy powiadomieni o b\u0142\u0119dzie i poprawimy go tak szybko, jak to mo\u017cliwe",
	1009: "Adres e-mail u\u017cytkownika nie jest zweryfikowany",
	1014: "Konserwacja w toku. Skontaktuj si\u0119 z nami za po\u015brednictwem support@csod.com",
	1017: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Zaloguj si\u0119 ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	1018: "Osi\u0105gni\u0119to maksymalny limit tworzenia krok\u00f3w",
	2000: "Wyst\u0105pi\u0142 problem z t\u0105 pro\u015bb\u0105. Zostali\u015bmy powiadomieni. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2001: "Nieprawid\u0142owe dane logowania. Twoje konto zostanie zablokowane po wielu nieudanych pr\u00f3bach, otrzymasz wiadomo\u015b\u0107 e-mail z pro\u015bb\u0105 o odblokowanie konta lub mo\u017cesz zresetowa\u0107 has\u0142o",
	2002: "Nieprawid\u0142owy lub wygas\u0142y OTP",
	2003: "Przes\u0142any plik nie jest prawid\u0142owym obrazem (obs\u0142ugiwane s\u0105 pliki JPG i PNG)",
	2004: "Sesja wygas\u0142a",
	2005: "Nie mogli\u015bmy \u015bledzi\u0107 tego u\u017cytkownika. Od\u015bwie\u017c i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2006: "Adres e-mail jest niepoprawny. Spr\u00f3buj ponownie",
	2007: "Rola u\u017cytkownika jest nieprawid\u0142owa. Spr\u00f3buj ponownie",
	2008: "Nale\u017cy okre\u015bli\u0107 poprawny typ zadania",
	2009: "Dany Wniosek jest niewa\u017cny; M\u00f3g\u0142 zosta\u0107 usuni\u0119ty lub nigdy nie istnia\u0142",
	2010: "Nieprawid\u0142owe parametry wej\u015bciowe. Od\u015bwie\u017c i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2011: "Dana Organizacja jest niewa\u017cna; M\u00f3g\u0142 zosta\u0107 usuni\u0119ty lub nigdy nie istnia\u0142",
	2012: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2013: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2014: "Parametr wymagany dla Super Admina[organization_id]",
	2015: "Podana zawarto\u015b\u0107 danych obrazu jest nieprawid\u0142owa. Sprawd\u017a ponownie i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	2016: "Nieprawid\u0142owa domena",
	2017: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2018: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2019: "To, czego szukasz, nie istnieje lub mog\u0142o zosta\u0107 usuni\u0119te",
	2020: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2021: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego \u017c\u0105dania. Zg\u0142o\u015b problem do support@csod.com",
	2022: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Podaj prawid\u0142owy adres URL zespo\u0142u",
	2023: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego \u017c\u0105dania. Zg\u0142o\u015b problem do support@csod.com",
	2024: "Rozmiar pliku powinien by\u0107 mniejszy ni\u017c 5 MB",
	2025: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy. Podaj prawid\u0142owy adres URL",
	2026: "Has\u0142o musi zawiera\u0107 co najmniej 8 znak\u00f3w, w tym co najmniej jedn\u0105 wielk\u0105 i jedn\u0105 ma\u0142\u0105 i jedn\u0105 cyfr\u0119",
	2027: "Nieprawid\u0142owe has\u0142o",
	2028: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2029: "Podane miasto nie jest obs\u0142ugiwane",
	2030: "W \u017c\u0105daniu brakowa\u0142o lub by\u0142 on nieprawid\u0142owy",
	2031: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas pr\u00f3by przetworzenia tego parametru. Zg\u0142o\u015b problem do support@csod.com",
	2032: "Nieprawid\u0142owy parametr[file_id]",
	2033: "Nieprawid\u0142owy adres URL. Sprawd\u017a ponownie i spr\u00f3buj ponownie",
	2034: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas przetwarzania tych parametr\u00f3w. Zg\u0142o\u015b problem do support@csod.com",
	2035: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d podczas przetwarzania tego klucza aplikacji. Zg\u0142o\u015b problem do support@csod.com",
	2036: "Serwer uwierzytelniania napotka\u0142 nieoczekiwany b\u0142\u0105d. Od\u015bwie\u017c t\u0119 stron\u0119. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b go do support@csod.com",
	2044: "Wydaje si\u0119, \u017ce \u017ale umie\u015bcili\u015bmy t\u0142umaczenie tego kroku. Prze\u0142\u0105cz si\u0119 na j\u0119zyk domy\u015blny i ponownie przet\u0142umacz krok lub skontaktuj si\u0119 z naszym dzia\u0142em obs\u0142ugi klienta w celu uzyskania dalszych informacji.",
	2200: "Napotkali\u015bmy problem podczas uzyskiwania dost\u0119pu do element\u00f3w steruj\u0105cych audio \/ wideo. Sprawd\u017a ustawienia przegl\u0105darki i spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, zg\u0142o\u015b si\u0119 do nas na support@csod.com",
	3061: "Mo\u017cesz przypi\u0105\u0107 maksymalnie 5 przewodnik\u00f3w",
	4000: "Nie mo\u017cna utworzy\u0107 podkategorii wewn\u0105trz folderu, je\u015bli przewodnik zosta\u0142 ju\u017c utworzony",
	4001: "Je\u015bli u\u017cytkownik jest ju\u017c superadministratorem, nie mo\u017cna zmieni\u0107 roli u\u017cytkownika",
	4002: "Ta akcja nie jest dozwolona w opublikowanym przewodniku",
	4003: "Nie mo\u017cna opublikowa\u0107 zablokowanego przewodnika",
	4004: "Ta akcja nie jest dozwolona w opublikowanym folderze. Cofnij publikacj\u0119",
	4006: "Aplikacja musi nale\u017ce\u0107 do danej organizacji",
	4007: "Nie jeste\u015b upowa\u017cniony do wykonania tej czynno\u015bci",
	4008: "Dzia\u0142anie nie jest dozwolone dla tej podkategorii",
	4009: "Przewodnik musi zosta\u0107 opublikowany",
	4010: "Przewodnika nie mo\u017cna utworzy\u0107 wewn\u0105trz folderu z podkategori\u0105",
	4011: "Aby utworzy\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4012: "Aby edytowa\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4013: "Aby usun\u0105\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	4014: "Aby skopiowa\u0107 i wklei\u0107 krok (y), musisz odblokowa\u0107 ten przewodnik",
	3001: "Przewodnik b\u0119dzie dost\u0119pny na eksport wkr\u00f3tce. Aby sprawdzi\u0107 status, przejd\u017a do \"Status zadania\" w menu konta",
	3002: "Przesy\u0142anie rozpocz\u0119te. Nie od\u015bwie\u017caj ani nie zamykaj przegl\u0105darki, dop\u00f3ki przesy\u0142anie nie zostanie zako\u0144czone. Stan importowania mo\u017cna sprawdzi\u0107 po jego zako\u0144czeniu",
	3003: "U\u017cytkownik ju\u017c istnieje",
	3004: "Identyfikator e-mail jest ju\u017c zweryfikowany",
	3005: "Ten adres URL jest w konflikcie z inn\u0105 konfiguracj\u0105 aplikacji, spr\u00f3buj doda\u0107 dowolny inny adres URL",
	3006: "Folder musi nale\u017ce\u0107 do tej samej aplikacji",
	3007: "Domena ju\u017c istnieje",
	3008: "Osi\u0105gn\u0105\u0142e\u015b maksymalny limit utworzonych przewodnik\u00f3w",
	3009: "Ankieta ju\u017c istnieje w danym Przewodniku",
	3010: "Krok musi nale\u017ce\u0107 do tego samego przewodnika",
	3011: "Ta organizacja zostaje zawieszona. Skontaktuj si\u0119 z administratorem",
	3012: "Przewodniki musz\u0105 nale\u017ce\u0107 do tego samego folderu",
	3013: "Ten przewodnik ju\u017c istnieje z dan\u0105 par\u0105 obiekt\u00f3w i nazw\u0105 pola",
	3014: "U\u017cytkownik zawieszony",
	3015: "U\u017cytkownik ju\u017c zweryfikowany",
	3017: "OTP zosta\u0142 pomy\u015blnie wys\u0142any na Tw\u00f3j adres e-mail",
	3018: "Rola ju\u017c istnieje",
	3019: "Kraj ju\u017c istnieje",
	3020: "Miasto ju\u017c istnieje",
	3023: "Twoja organizacja nie jest zweryfikowana. Aby uzyska\u0107 pomoc, skontaktuj si\u0119 z support@csod.com",
	3024: "Plik JSON nie jest dost\u0119pny dla tej organizacji",
	3025: "Wyst\u0105pi\u0142 problem podczas uwierzytelniania. Spr\u00f3buj ponownie. Je\u015bli problem b\u0119dzie si\u0119 powtarza\u0142, od\u015bwie\u017c stron\u0119 i spr\u00f3buj ponownie",
	3026: "Plik JSON nie jest dost\u0119pny dla tego przewodnika",
	3027: "Brak dost\u0119pnych krok\u00f3w. Utw\u00f3rz co najmniej jeden krok, aby opublikowa\u0107 przewodnik",
	3028: "Osi\u0105gni\u0119to maksymalny limit publikacji wycieczek",
	3047: "Twoje konto zosta\u0142o tymczasowo zablokowane z powodu nadmiernych b\u0142\u0119d\u00f3w logowania. Wys\u0142ali\u015bmy Ci wiadomo\u015b\u0107 e-mail z instrukcjami, aby j\u0105 odblokowa\u0107. Aby uzyska\u0107 dodatkow\u0105 pomoc, skontaktuj si\u0119 z nami pod adresem support@csod.com",
	3033: "Nieprawid\u0142owe po\u015bwiadczenia. Skontaktuj si\u0119 z support@csod.com lub administratorem, aby uzyska\u0107 dalsz\u0105 pomoc.",
	4020: "Projekt tego przewodnika ju\u017c istnieje; Wielokrotne wersje przewodnika s\u0105 niedozwolone.",
	4021: "Nieprawid\u0142owe warto\u015bci parametru [envs]",
	2054: "Stare i nowe has\u0142o nie mog\u0105 by\u0107 takie same",
	playNextBotTour: "Zagraj w nast\u0119pn\u0105 wycieczk\u0119 bota",
	defaultBotEndingMessage: "Sko\u0144czyli\u015Bmy, dzi\u0119kujemy bardzo! Co\u015B jeszcze, zanim zaczn\u0119?",
	loginNext: "Nast\u0119pny",
	3068: "Twoje stare has\u0142o wygas\u0142o ustaw nowe has\u0142o do logowania.",
	includeScreen: "Do\u0142\u0105cz zrzut ekranu",
	feedbackPlaceholder: "Masz opini\u0119? Chcieliby\u015Bmy to us\u0142ysze\u0107!",
	feedbackOptBtn: "Kliknij, aby zaznaczy\u0107 lub ukry\u0107 informacje",
	highlight: "Atrakcja",
	send: "Wys\u0142a\u0107",
	done: "Zrobione",
	hide: "Ukrywa\u0107"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.pt_BR = {
	currentPage: "P\u00e1gina atual",
	myChat: "Meu bate-papo",
	import: "Importa\u00e7\u00e3o",
	export: "Exporta\u00e7\u00e3o",
	redirectLivetour: "Jogar ao vivo",
	guideNotAvailable: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja acessar o URL do Guia?",
	downloadPPT: "Baixar PPT",
	btnYes: "Sim",
	btnNo: "N\u00e3o",
	inApp: "No aplicativo",
	live: "Viver",
	resume: "Retomar",
	tourCloseConfirm: "Voc\u00ea realmente quer fechar este Guia?",
	notifSnoozeDonotMsg: "Por favor, diga-nos se voc\u00ea deseja assistir mais tarde ou nunca mostrar a notifica\u00e7\u00e3o?",
	surveyThanksMessage: "Obrigado por fornecer sua resposta",
	testMePassedMessage: "Parab\u00e9ns! Voc\u00ea passou",
	testMeFailedMessage: "Oops! Voc\u00ea falhou",
	testMeGuideEfficiency: "Efici\u00eancia do teste:",
	testMeGuideEffectiveness: "Efic\u00e1cia do teste:",
	testMeTestTime: "Tempo de teste",
	testMeExpectedTime: "Tempo esperado",
	testMeStepsTaken: "Passos dados",
	testMeExpectedSteps: "Passos esperados",
	testMeRetakeTestBtn: "Teste de repeti\u00e7\u00e3o",
	testMeResultTitle: "Resultado do MyTest",
	ConfirmIfTestMeModeRidirect: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja redirecionar para o URL do Guia?",
	feedCmt: "Seu feedback \u00e9 valioso para n\u00f3s!<br> Por favor, diga-nos o que voc\u00ea achou em 500 caracteres ou menos",
	doNotShowAgain: "N\u00e3o mostrar novamente",
	neverShowAgain: "Nunca mais apare\u00e7a",
	skipGuide: "Pular guia",
	surveyErrorMsg: "Por favor, responda a pelo menos uma pergunta",
	redirect: "Redirecionar",
	liveGuide: "Guia ao vivo",
	question: "Pergunta",
	exitGuide: "Guia de Sa\u00edda",
	continueGuide: "Continuar Guia",
	stop: "Parar",
	characters: "Caracteres:",
	survey: "Levantamento",
	testMeStopMessage: "Voc\u00ea est\u00e1 no modo TestMe, clique em PARAR para sair",
	testMeFailedErrorMessage: "Voc\u00ea n\u00e3o conseguiu alcan\u00e7ar a etapa da meta.<br>Voc\u00ea acertou {CORRECT_STEPS} passos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Digite aqui! M\u00e1ximo de 500 caracteres",
	pushTourSnoozeMsg: "Este Tour de Lan\u00e7amento Autom\u00e1tico ser\u00e1 adiado para",
	of: "de",
	wbMplayerTitle: "Tutoriais",
	wbDragTooltip: "Arraste e solte este player em qualquer lugar da p\u00e1gina",
	dontShowEdResult: "Eu n\u00e3o quero ver isso",
	mPlayerHeaderTitle: "Micro Jogador",
	closePreview: "Fechar visualiza\u00e7\u00e3o",
	elmNotFound: "Parece que n\u00e3o conseguimos encontrar o elemento para a etapa:",
	elmNotFoundInfo: "Certifique-se de estar na p\u00e1gina correta para executar esta etapa. Verifique tamb\u00e9m se voc\u00ea pode ver o elemento selecionado",
	notExists: "N\u00e3o existe",
	elmNotFoundHeader: "Elemento de etapa n\u00e3o encontrado",
	goToStep: "Ir para a etapa",
	notFoundStep: "N\u00e3o conseguimos encontrar o elemento para o passo #",
	pleaseReselect: "Tente selecionar novamente o elemento.",
	stepRuleMatchErr: "Erro de configura\u00e7\u00e3o: as regras de etapa n\u00e3o correspondem",
	guideRuleMatchErr: "Erro de configura\u00e7\u00e3o: as regras do guia n\u00e3o correspondem",
	stepNotFoundRedirect: "Passo n\u00e3o encontrado nesta p\u00e1gina. Deseja redirecionar?",
	doitForMeWarning: "O DoItForMe n\u00e3o est\u00e1 dispon\u00edvel para as etapas de imagem, v\u00eddeo e pesquisa.",
	branchStepMessagePopup: "Selecione uma das tarefas abaixo para prosseguir",
	btnSkip: "Saltitar",
	kindlyHoverPopup: "Por favor, passe o mouse sobre este elemento para abrir o pop-up",
	stepPlayIsdefinedPopover: "O passo que voc\u00ea vai jogar \u00e9 definido no popover",
	elmNotFoundWestpac: "Etapa n\u00e3o encontrada \u2013 Este guia terminar\u00e1",
	findingElementMessage: "Tentando encontrar o passo. . .",
	badDomain: "O dom\u00ednio e o URL atuais n\u00e3o est\u00e3o autorizados a executar o MyGuide. Entre em contato com seu administrador para obter ajuda.",
	hostJsError: "Parece haver um erro na p\u00e1gina da web. O MyGuide n\u00e3o pode continuar",
	remember: "Lembre-se de mim",
	forgotPass: "Esqueceu a senha?",
	dontHavAcc: "N\u00e3o tem uma conta?",
	loginTitle: "Login",
	loginOtpScreenTitle: "Verificar OTP para entrar",
	forgetPassTitl: "Redefinir senha",
	placeholderEmail: "ID de e-mail",
	placeholderPassword: "Senha",
	placeholderNewPassword: "Nova senha",
	placeholderCurrentPassword: "Senha atual",
	placeholderFirstname: "Nome pr\u00f3prio",
	placeholderLastname: "Apelido",
	placeholderPasswordC: "Confirme a senha",
	btnCancel: "Cancelar",
	btnPayment: "Plano de atualiza\u00e7\u00e3o",
	btnSubmit: "Enviar",
	btnLogin: "Login",
	termsOfUse: "Termos de Uso",
	andLabel: "e",
	policyPrivacy: "Pol\u00edtica de privacidade",
	passwordError: "A senha deve ter 8 d\u00edgitos",
	confirmPasswordError: "A senha e a senha de confirma\u00e7\u00e3o devem ser as mesmas",
	firstnameError: "Insira um nome v\u00e1lido",
	lastnameError: "Insira um sobrenome v\u00e1lido",
	emailError: "Insira um ID de e-mail v\u00e1lido",
	orgError: "Insira um URL de organiza\u00e7\u00e3o v\u00e1lido",
	otpError: "Insira OTP v\u00e1lido",
	placeholderOtp: "Digite seu OTP aqui",
	otpSentDesc: "Se um endere\u00e7o de e-mail v\u00e1lido tiver sido fornecido, um link de redefini\u00e7\u00e3o ser\u00e1 enviado a voc\u00ea.<br>Se voc\u00ea n\u00e3o vir o e-mail em alguns minutos, verifique sua pasta de spam para ver se h\u00e1 um e-mail de",
	btnOtpVerify: "Verificar OTP",
	alreadyHavAcc: "J\u00e1 tem uma conta?",
	smartbiteMessageError: "Por favor, digite a mensagem",
	smartbiteLinkError: "Por favor, insira um link v\u00e1lido",
	noGuidesOnThisPage: "Nenhum guia dispon\u00edvel nesta p\u00e1gina!",
	clickOn: "Clique em ",
	contactUs: "Contate-nos",
	search: "Procurar",
	noRecordFound: "Nenhum registro encontrado",
	category: "Pasta",
	subCategory: "Subpasta",
	confirmPasswordRequired: "Confirme a senha necess\u00e1ria",
	logInWithSSO: "Fazer login com SSO",
	inputPlaceHolderSearch: "Pesquise qualquer guia",
	noGuideAvailableFor: "Nenhum guia foi encontrado para corresponder \u00e0 sua pesquisa",
	tryModifyingYourSearch: "Tente modificar seus crit\u00e9rios de pesquisa",
	signInVerifyYourEmail: "Este ID de e-mail n\u00e3o foi verificado. Por favor, verifique seu e-mail para obter detalhes",
	signInVerifyYourAccount: "Enviamos um e-mail com um OTP. Verifique sua conta para concluir o processo de login",
	maintenanceMessage: "Manuten\u00e7\u00e3o em andamento. Entre em contato conosco via support@csod.com",
	back: "Voltar",
	changePassword: "Alterar senha",
	startTestAuto: "Iniciar teste de automa\u00e7\u00e3o",
	msgPasswordChangedSuccess: "Sua senha foi alterada com sucesso. <br><br> Fa\u00e7a login novamente para continuar.",
	msgConfirmNewPasswordError: "Confirmar senha deve ser igual a Nova senha",
	enterUrl: "Insira o URL da equipe",
	dragPlaceholderDropThis: "Largue isso ",
	dragPlaceholderHere: " aqui",
	termsOfService: "Termos",
	versionText: "Vers\u00e3o",
	videoStepSuccessMessage: "Seu passo foi criado com sucesso",
	importSuccessMessage: "Guia carregado com sucesso. V\u00e1 para Status da tarefa para verificar o status da importa\u00e7\u00e3o",
	worldBankHelpSupport: "Algumas ferramentas, como Tooltip(s), s\u00f3 podem ser visualizadas na interface",
	helpSupport: "Ajuda e Suporte",
	page: "p\u00e1gina",
	selectAnApplication: "Selecione um aplicativo",
	refresh: "Atualizar",
	loginBtn: "Login",
	account: "Conta",
	taskStatus: "Status da tarefa ",
	logoutBtn: "Logout",
	app: "Aplica\u00e7\u00e3o:",
	firstStep: "Primeiro passo",
	lastStep: "\u00daltimo passo",
	startTest: "Iniciar teste",
	noInappStepInGuide: "O TestMe n\u00e3o pode continuar, pois n\u00e3o h\u00e1 nenhuma etapa em linha neste guia",
	settingBtn: "Configura\u00e7\u00f5es avan\u00e7adas",
	orgSetting: "Configura\u00e7\u00f5es da organiza\u00e7\u00e3o",
	close: "Fechar",
	pdf: "PDF",
	downloadPptx: "PPT",
	giphy: "GIF",
	downloadWord: "Documento",
	downloadBlog: "Blogue",
	downloadTxt: "Texto simples",
	serviceErrorMessage: "Oops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	guidesTab: "Guias",
	noGuideCreatedYet: "Nenhum guia criado ainda!",
	noCategoryCreatedYet: "Nenhuma pasta criada ainda!",
	chatbot: "Meu bate-papo",
	notAutorised: "Voc\u00ea n\u00e3o tem o acesso necess\u00e1rio, entre em contato com o administrador",
	ok: "OKEY",
	apiError: "Erro de configura\u00e7\u00e3o. Entre em contato com o administrador",
	select: "Selecionar",
	mute_unmute: "Silenciar\/Ativar som",
	privacyPolicy: "Privacidade & cookies",
	privacyPolicyText: "O MyGuide usa cookies. Se continuar, voc\u00ea est\u00e1 concordando com nossos Termos e Pol\u00edtica de Privacidade e nos dando consentimento para usar cookies",
	terms: "Termos",
	westPecErrorMessage: "Voc\u00ea n\u00e3o est\u00e1 autorizado a acessar este aplicativo. Por favor, fa\u00e7a login na rede do Westpac",
	noApp: "Nenhuma aplica\u00e7\u00e3o encontrada",
	role: "Papel:",
	all: "Todo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Artigo",
	image: "Imagem",
	pathways: "Caminhos",
	preview: "Visualizar",
	more: "Mais",
	history: "Hist\u00f3ria",
	publish: "Publicar",
	selectGuideLink: "Selecione Guia para vincular",
	selectGuideBeforeSubmit: "Selecione um Guia antes de enviar",
	change: "Mudar",
	checkNow: "Verifique agora",
	minutes: "ata",
	clickHere: "clique aqui",
	youAlmostDone: "Voc\u00ea est\u00e1 quase terminando!",
	setOrg: "para configurar sua organiza\u00e7\u00e3o",
	apps: "Apps",
	me: "Me",
	playStep: "Etapa de jogo",
	miniPlayerHelp: "Ajuda",
	defaultMiniPlayerHelp: "Ajuda",
	defaultConfirmIfSlideshowOrRedirect: "A etapa n\u00e3o est\u00e1 dispon\u00edvel no URL atual.<br>Deseja acessar o URL da etapa ou reproduzir a apresenta\u00e7\u00e3o de slides?",
	defaultServiceErrorMessage: "Oops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	defaultMaintenanceMessage: "Manuten\u00e7\u00e3o em andamento. Entre em contato conosco via support@csod.com",
	userNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se voc\u00ea n\u00e3o deseja mais seguir o Guia, clique em Sair do Guia",
	defaultUserNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se voc\u00ea n\u00e3o deseja mais seguir o Guia, clique em Sair do Guia",
	resumeGuide: "Guia de Curr\u00edculo",
	defaultResumeGuideMessage: "Guia de Curr\u00edculo",
	backToLogin: "Voltar ao login",
	filters: "Filtros",
	thisApp: "Este aplicativo",
	thisWebsite: "Este site",
	maxFreeTourLimit: "Limite m\u00e1ximo de passeios atingido",
	passwordRegexCheck: "A senha deve conter no m\u00ednimo 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Insira sua chave de assinatura de Fala dos Servi\u00e7os Cognitivos da Microsoft",
	numberOfImgFile: "O n\u00famero de arquivos de imagem e arquivos de texto deve ser o mesmo",
	availableOn: "Dispon\u00edvel em",
	tooltipUnpubWorkflowTitle: "Fluxo de trabalho n\u00e3o publicado",
	tooltipUnpubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta publicada",
	tooltipUnpubTooltipTitle: "Dica de ferramenta n\u00e3o publicada",
	tooltipUnpubParentTooltipTitle: "Dica de ferramenta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTooltipTitle: "Dica de ferramenta publicada, pasta publicada",
	tooltipUnpubTutorialTitle: "Tutorial n\u00e3o publicado",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTutorialTitle: "Tutorial publicado, pasta publicada",
	tooltipUnpubSubFolderTitle: "Subpasta n\u00e3o publicada",
	tooltipUnpubSubFolderDesc: "Usar subpastas para organizar Guias",
	tooltipUnpubParentSubFolderTitle: "Subpasta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentSubFolderTitle: "Subpasta Publicada, Pasta Publicada",
	tooltipPubParentSubFolderDesc: "Organiza guias",
	exitSurvey: "Pesquisa de sa\u00edda",
	disable: "Desabilitar",
	instructionExitSurvey: "A pesquisa de sa\u00edda \u00e9 mostrada quando um usu\u00e1rio sai de um guia antes da conclus\u00e3o",
	msgVideoNotFound: "Enviando seu v\u00eddeo, tente depois de algum tempo",
	msgGiphyNotFound: "Enviando seu GIF, tente depois de algum tempo",
	userPref: "Minhas prefer\u00eancias",
	manageAccount: "Portal de administra\u00e7\u00e3o",
	analyticsPortal: "Portal de insights",
	errorInvalidUrl: "N\u00e3o \u00e9 um URL v\u00e1lido",
	wbFooterText: "Aprendizagem T\u00e9cnica de ITS",
	navigationMenu: "Menu de navega\u00e7\u00e3o",
	clearHistory: "Limpar hist\u00f3rico",
	userDeniedMessage: "Permiss\u00f5es de acesso \u00e0 c\u00e2mera e ao microfone negadas pelo usu\u00e1rio",
	pushNotification: "Notifica\u00e7\u00f5es push",
	viewDetail: "Ver detalhes",
	contactAdmin: "Entre em contato com support@csod.com ou com seu administrador para obter mais assist\u00eancia",
	noAppOnDomain: "O aplicativo n\u00e3o est\u00e1 atribu\u00eddo ao dom\u00ednio atual ",
	noGuidesOnDomain: "Nenhum guia encontrado",
	apply: "Aplicar",
	invalidLoginCred: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar feedback",
	guideNotExist: "Este guia n\u00e3o est\u00e1 dispon\u00edvel nesta p\u00e1gina (Erro: incompatibilidade de dom\u00ednio) ",
	cdnAccess: "<b>Sentimos muito<\/b> <br><br>Parece que h\u00e1 um problema com nossos servidores.<br> Fomos notificados sobre o erro e o corrigiremos o mais r\u00e1pido poss\u00edvel",
	tourPlayError: "O guia n\u00e3o pode ser jogado. Erro ao recuperar os detalhes do Guia",
	playerMode: "Modo de jogador",
	closePanel: "Fechar painel",
	switchCreatorMode: "Mude para o Modo Criador",
	extensionContextError: "O contexto da extens\u00e3o \u00e9 invalidado. Por favor, recarregue a p\u00e1gina para continuar",
	otpSent: "OTP foi reenviado para o seu e-mail, verifique sua caixa de entrada",
	startOver: "Come\u00e7ar de novo",
	yesResume: "Retomar",
	dontShowAgain: "N\u00e3o mostrar novamente",
	notificationHeader: "Voc\u00ea recebeu uma notifica\u00e7\u00e3o!",
	watchLater: "Assista mais tarde",
	pushSnoozeMsg: "Esta notifica\u00e7\u00e3o ser\u00e1 adiada para",
	showAgain: "Mostrar novamente",
	noGuidesOnThisTab: "N\u00e3o h\u00e1 notifica\u00e7\u00f5es nesta p\u00e1gina",
	iAgree: "Concordo",
	viewMore: "Veja mais",
	lostInternetConnection: "Conex\u00e3o perdida com o servidor. Por favor, reconecte e tente novamente",
	next: "Pr\u00f3ximo",
	recent: "Recente",
	older: "Velho",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Claro",
	tooltipDontShowAgain: "As notifica\u00e7\u00f5es n\u00e3o aparecer\u00e3o mais. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	tooltipWatchLater1: "As notifica\u00e7\u00f5es s\u00e3o adiadas para",
	tooltipWatchLater2: "e aparecer\u00e1 depois disso. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	hour: "hora",
	hours: "Horas",
	insightsTracker: "Rastreador de insights",
	slideshow: "Apresenta\u00e7\u00e3o de slides",
	autoplay: "Reprodu\u00e7\u00e3o autom\u00e1tica",
	powerFormOldData: "Dados existentes",
	powerFormNewData: "Use este formul\u00e1rio para inserir novos dados",
	powerFormNewDataMore: "Se seus dados existentes n\u00e3o estiverem vis\u00edveis, clique na seta no canto superior esquerdo para visualizar seus dados. Os dados precisam ser copiados para o formato com marcadores permitido.",
	powerFormTitle: "Assistente de entrada de dados",
	powerFormMandatory: "Este \u00e9 um campo obrigat\u00f3rio, limite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Este Guia \u00e9 criado em {TOURURL}, que pertence ao aplicativo {APPNAME}. Copie este guia nesse aplicativo e tente novamente",
	setDomain: "Se voc\u00ea tiver certeza de que o {TOURURL} deve ser adicionado nas configura\u00e7\u00f5es atuais do dom\u00ednio do aplicativo, adicione e tente novamente",
	on: "EM",
	off: "DESLIGADO",
	btnPrev: "Prev",
	btnPrevious: "Anterior",
	taskList: "Lista de tarefas",
	unprocessedVideo: "Aguarde enquanto seu v\u00eddeo est\u00e1 sendo processado.",
	searchResult: "Resultado da pesquisa",
	pleaseWait: "Aguarde!",
	mediaDownloadMsg: "Enquanto preparamos seus arquivos para download",
	mediaFileNotFound: "Arquivo de m\u00eddia n\u00e3o encontrado",
	searchInFolder: "Pesquisar na pasta",
	currentPageSearchPlaceholder: "Pesquise por Guia(s) dispon\u00edvel(is) na p\u00e1gina atual",
	brandLogo: "Logotipo da marca",
	accessibility: "Acessibilidade",
	replay: "Rejogar",
	defaultGreetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Lembre-se de que sou um bot.",
	defaultErrorMessage: "Me desculpe, eu n\u00e3o entendi isso. Voc\u00ea poderia ser mais espec\u00edfico? ",
	greetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Lembre-se de que sou um bot.",
	errorMessage: "Me desculpe, eu n\u00e3o entendi isso. Voc\u00ea poderia ser mais espec\u00edfico? ",
	guideLnkToRedirect: "Use o link a seguir para redirecionar para a p\u00e1gina e reproduzir o guia",
	otpTimer: "Voc\u00ea pode tentar novamente em ",
	seconds: " Segundos",
	limitWarning: "Voc\u00ea atingiu o limite m\u00e1ximo de tentativas malsucedidas",
	403: "Tivemos um problema com esta solicita\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	405: "Tivemos um problema ao processar esta solicita\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	429: "Muitos pedidos",
	1003: "Tivemos um problema durante a autentica\u00e7\u00e3o. Fa\u00e7a login novamente e tente novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	1007: "Tivemos um problema durante a autentica\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1005: "<b>Sentimos muito<\/b> <br><br>Parece que h\u00e1 um problema com a solicita\u00e7\u00e3o ou com nossos servidores.<br> Fomos notificados sobre o erro e o corrigiremos o mais r\u00e1pido poss\u00edvel",
	1009: "O e-mail do usu\u00e1rio n\u00e3o \u00e9 verificado",
	1014: "Manuten\u00e7\u00e3o em andamento. Entre em contato conosco via support@csod.com",
	1017: "Tivemos um problema durante a autentica\u00e7\u00e3o. Fa\u00e7a login novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1018: "Voc\u00ea atingiu o limite m\u00e1ximo para criar etapas",
	2000: "Tivemos um problema com esta solicita\u00e7\u00e3o. Fomos notificados. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2001: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	2002: "OTP inv\u00e1lido ou expirado",
	2003: "O arquivo carregado n\u00e3o \u00e9 uma imagem v\u00e1lida (arquivos JPG e PNG s\u00e3o suportados)",
	2004: "Sess\u00e3o expirada",
	2005: "N\u00e3o foi poss\u00edvel rastrear esse usu\u00e1rio. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2006: "O endere\u00e7o de e-mail est\u00e1 incorreto. Por favor, tente novamente",
	2007: "Fun\u00e7\u00e3o de usu\u00e1rio inv\u00e1lida. Por favor, tente novamente",
	2008: "Voc\u00ea deve especificar um tipo de tarefa correto",
	2009: "O Aplicativo fornecido \u00e9 inv\u00e1lido; pode ter sido exclu\u00eddo ou nunca ter existido",
	2010: "Par\u00e2metros de entrada inv\u00e1lidos. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2011: "A Organiza\u00e7\u00e3o dada \u00e9 inv\u00e1lida; pode ter sido exclu\u00eddo ou nunca ter existido",
	2012: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2013: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2014: "Par\u00e2metro necess\u00e1rio para o Super Admin[organization_id]",
	2015: "O conte\u00fado dos dados de imagem fornecido \u00e9 inv\u00e1lido. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2016: "Dom\u00ednio inv\u00e1lido",
	2017: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2018: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2019: "O que voc\u00ea est\u00e1 procurando n\u00e3o existe ou pode ter sido exclu\u00eddo",
	2020: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2021: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, relate o problema para support@csod.com",
	2022: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Insira um URL de equipe v\u00e1lido",
	2023: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, relate o problema para support@csod.com",
	2024: "O tamanho do arquivo deve ser inferior a 5 MB",
	2025: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Insira um URL v\u00e1lido",
	2026: "A senha deve conter no m\u00ednimo 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um num\u00e9rico",
	2027: "Senha inv\u00e1lida",
	2028: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2029: "A cidade que voc\u00ea forneceu n\u00e3o \u00e9 suportada",
	2030: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2031: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar esse par\u00e2metro. Por favor, relate o problema para support@csod.com",
	2032: "Par\u00e2metro inv\u00e1lido[file_id]",
	2033: "URL inv\u00e1lido. Verifique novamente e tente novamente",
	2034: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar esses par\u00e2metros. Por favor, relate o problema para support@csod.com",
	2035: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar essa AppKey. Por favor, relate o problema para support@csod.com",
	2036: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado. Por favor, atualize esta p\u00e1gina. Se o problema persistir, informe-o para support@csod.com",
	2044: "Parece que perdemos a tradu\u00e7\u00e3o para esta etapa. Mude para o idioma padr\u00e3o e traduza novamente a etapa ou entre em contato com nosso suporte ao cliente para obter mais detalhes.",
	2200: "Tivemos um problema ao acessar os controles de \u00e1udio\/v\u00eddeo. Verifique as configura\u00e7\u00f5es do seu navegador e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	3061: "Voc\u00ea pode fixar at\u00e9 5 guias apenas",
	4000: "A subcategoria n\u00e3o pode ser criada dentro de uma pasta, se um guia j\u00e1 tiver sido criado",
	4001: "Se um usu\u00e1rio j\u00e1 for um superadministrador, voc\u00ea n\u00e3o poder\u00e1 alterar a fun\u00e7\u00e3o do usu\u00e1rio",
	4002: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em um Guia publicado",
	4003: "Guia bloqueado n\u00e3o pode ser publicado",
	4004: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em uma pasta publicada. Por favor, cancele a publica\u00e7\u00e3o",
	4006: "O aplicativo deve pertencer \u00e0 organiza\u00e7\u00e3o fornecida",
	4007: "Voc\u00ea n\u00e3o est\u00e1 autorizado a realizar esta a\u00e7\u00e3o",
	4008: "N\u00e3o \u00e9 permitida a a\u00e7\u00e3o para esta subcategoria",
	4009: "O guia deve ser publicado",
	4010: "O Guide n\u00e3o pode ser criado dentro de uma pasta com uma subcategoria",
	4011: "Para criar etapas, voc\u00ea precisa desbloquear este Guia",
	4012: "Para editar a(s) etapa(s), voc\u00ea precisa desbloquear este Guia",
	4013: "Para excluir a(s) etapa(s), voc\u00ea precisa desbloquear este Guia",
	4014: "Para copiar e colar a(s) etapa(s), voc\u00ea precisa desbloquear este Guia",
	3001: "O guia estar\u00e1 dispon\u00edvel para exporta\u00e7\u00e3o em breve. Para verificar o status, v\u00e1 para 'Status da tarefa' no menu da conta",
	3002: "Upload iniciado. N\u00e3o atualize ou feche o navegador at\u00e9 que o upload seja conclu\u00eddo. Voc\u00ea pode verificar o status da importa\u00e7\u00e3o assim que ela for conclu\u00edda",
	3003: "O usu\u00e1rio j\u00e1 existe",
	3004: "O ID do e-mail j\u00e1 foi verificado",
	3005: "Este URL entra em conflito com outra configura\u00e7\u00e3o do aplicativo, tente adicionar qualquer outro URL",
	3006: "A pasta deve pertencer ao mesmo aplicativo",
	3007: "O dom\u00ednio j\u00e1 existe",
	3008: "Voc\u00ea atingiu o limite m\u00e1ximo de Guia(s) criado(s)",
	3009: "A pesquisa j\u00e1 existe no Guia fornecido",
	3010: "A Etapa deve pertencer ao mesmo Guia",
	3011: "Esta Organiza\u00e7\u00e3o est\u00e1 suspensa. Entre em contato com seu administrador",
	3012: "O(s) guia(s) deve(m) pertencer \u00e0 mesma pasta",
	3013: "Este Guia j\u00e1 existe com o par de objetos e o nome do campo fornecidos",
	3014: "Usu\u00e1rio suspenso",
	3015: "Usu\u00e1rio j\u00e1 verificado",
	3017: "O OTP foi enviado com sucesso para o seu endere\u00e7o de e-mail",
	3018: "A fun\u00e7\u00e3o j\u00e1 existe",
	3019: "Pa\u00eds j\u00e1 existe",
	3020: "Cidade j\u00e1 existe",
	3023: "Sua organiza\u00e7\u00e3o n\u00e3o \u00e9 verificada. Para obter ajuda, entre em contato com support@csod.com",
	3024: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para esta organiza\u00e7\u00e3o",
	3025: "Tivemos um problema durante a autentica\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	3026: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para este Guia",
	3027: "Nenhuma etapa dispon\u00edvel. Crie pelo menos uma etapa para publicar o Guia",
	3028: "Limite m\u00e1ximo de publica\u00e7\u00e3o de tours atingido",
	3047: "Sua conta foi temporariamente bloqueada devido a falhas excessivas de login. Enviamos um e-mail com as etapas para desbloque\u00e1-lo. Para obter mais assist\u00eancia, entre em contato conosco em support@csod.com",
	3033: "Credenciais inv\u00e1lidas. Entre em contato com support@csod.com ou com seu administrador para obter mais assist\u00eancia.",
	4020: "J\u00e1 existe um rascunho deste Guia; n\u00e3o s\u00e3o permitidos v\u00e1rios rascunhos de um Guia.",
	4021: "Valores inv\u00e1lidos do par\u00e2metro [envs]",
	2054: "Uma senha antiga e nova n\u00e3o podem ser as mesmas",
	playNextBotTour: "Jogar pr\u00f3ximo tour de bot",
	defaultBotEndingMessage: "Terminamos, muito obrigado! Mais alguma coisa antes de eu come\u00e7ar?",
	startBotLbl: "Iniciar bot",
	includeScreen: "Incluir captura de tela",
	feedbackPlaceholder: "Tem coment\u00e1rios? Adorar\u00edamos ouvir isso!",
	feedbackOptBtn: "Clique para destacar ou ocultar informa\u00e7\u00f5es",
	highlight: "Destacar",
	send: "Enviar",
	done: "Terminado",
	hide: "Esconder",
	multiSelectOptionError: "Selecione pelo menos uma op\u00e7\u00e3o",
	loginNext: "Pr\u00f3ximo",
	3068: "Sua senha antiga expirou, defina uma nova senha para login.",
	captchaLbl: "Captcha",
	placeholderEnterCaptcha: "Digite Captcha",
	captchaError: "Insira o captcha v\u00e1lido",
	allGuides: "Todos os guias",
	helpCenter: "Central de Ajuda",
	applicationJsonError: "O arquivo JSON do aplicativo n\u00e3o est\u00e1 dispon\u00edvel para este aplicativo.",
	feedbackRequired: "Insira seus coment\u00e1rios.",
	default: "Inadimpl\u00eancia",
	feedbackImgErrorMsg: "A captura de tela n\u00e3o p\u00f4de ser anexada ao seu feedback devido a um problema relacionado ao navegador. Recarregue a p\u00e1gina, clique e abra a extens\u00e3o de guia na barra de a\u00e7\u00e3o do Chrome e recapture a captura de tela para obter feedback.",
	tranportURlRedirectionConfirm: "Redirecionar para a URL da etapa de transporte",
	guideContinueConfirm: "Continue com o guia",
	focus: "Foco",
	zoomOut: "Voc\u00ea n\u00e3o pode diminuir mais o n\u00edvel de zoom",
	zoomIn: "Voc\u00ea n\u00e3o pode aumentar mais o n\u00edvel de zoom",
	charM: "m",
	charS: "s"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.pt_PT = {
	currentPage: "P\u00e1gina Atual",
	myChat: "mychat",
	import: "Importa\u00e7\u00e3o",
	export: "Exporta\u00e7\u00e3o",
	redirectLivetour: "Jogar ao vivo",
	guideNotAvailable: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja ir para o URL do Guia?",
	downloadPPT: "Baixar PPT",
	btnYes: "Sim",
	btnNo: "N\u00e3o",
	inApp: "No aplicativo",
	live: "Ao vivo",
	resume: "Resumo",
	tourCloseConfirm: "Quer mesmo fechar este Guia?",
	notifSnoozeDonotMsg: "Por favor, diga-nos se voc\u00ea quer assistir isso mais tarde ou nunca mostrar a notifica\u00e7\u00e3o?",
	surveyThanksMessage: "Obrigado por fornecer a sua resposta",
	testMePassedMessage: "Parab\u00e9ns;! Voc\u00ea passou",
	testMeFailedMessage: "Ops! Falhou",
	testMeGuideEfficiency: "Efici\u00eancia do teste:",
	testMeGuideEffectiveness: "Efic\u00e1cia do teste:",
	testMeTestTime: "Tempo de teste",
	testMeExpectedTime: "Tempo esperado",
	testMeStepsTaken: "Passos dados",
	testMeExpectedSteps: "Passos esperados",
	testMeRetakeTestBtn: "Teste de retomada",
	testMeResultTitle: "Resultado do MyTest",
	ConfirmIfTestMeModeRidirect: "Guia n\u00e3o dispon\u00edvel no URL atual. Deseja redirecionar para o URL do Guia?",
	feedCmt: "O seu feedback \u00e9 valioso para n\u00f3s!<br> Diga-nos o que achou em 500 caracteres ou menos",
	doNotShowAgain: "N\u00e3o voltar a aparecer",
	neverShowAgain: "Nunca mais mostrar",
	skipGuide: "Pular Guia",
	surveyErrorMsg: "Por favor, responda pelo menos uma pergunta",
	redirect: "Redirecionamento",
	liveGuide: "Guia ao vivo",
	question: "Pergunta",
	exitGuide: "Guia de Sa\u00edda",
	continueGuide: "Continuar Guia",
	stop: "Parar",
	characters: "Personagens:",
	survey: "Inqu\u00e9rito",
	testMeStopMessage: "Voc\u00ea est\u00e1 no modo TestMe, clique em PARAR para sair",
	testMeFailedErrorMessage: "N\u00e3o foi poss\u00edvel atingir o passo do objetivo.<br>Voc\u00ea tem {CORRECT_STEPS} passos corretos de {TOTAL_STEPS}.",
	surveyCommentPlaceholder: "Digite aqui! Max 500 caracteres",
	pushTourSnoozeMsg: "Este Tour de Lan\u00e7amento Autom\u00e1tico ser\u00e1 dormido para",
	of: "de",
	wbMplayerTitle: "Tutoriais",
	wbDragTooltip: "Arraste e solte este player em qualquer lugar da p\u00e1gina",
	dontShowEdResult: "Eu n\u00e3o quero ver isso",
	mPlayerHeaderTitle: "Micro Jogador",
	closePreview: "Fechar Pr\u00e9-visualiza\u00e7\u00e3o",
	elmNotFound: "Parece que n\u00e3o conseguimos encontrar o elemento para a etapa:",
	elmNotFoundInfo: "Certifique-se de que est\u00e1 na p\u00e1gina correta para reproduzir este passo. Verifique tamb\u00e9m se voc\u00ea pode ver o elemento selecionado",
	notExists: "N\u00e3o existe",
	elmNotFoundHeader: "Elemento Step n\u00e3o encontrado",
	goToStep: "Ir para o passo",
	notFoundStep: "N\u00e3o conseguimos encontrar o elemento para o passo #",
	pleaseReselect: "Por favor, tente selecionar novamente o elemento.",
	stepRuleMatchErr: "Erro de configura\u00e7\u00e3o: As regras de etapa n\u00e3o correspondem",
	guideRuleMatchErr: "Erro de configura\u00e7\u00e3o: as regras do guia n\u00e3o correspondem",
	stepNotFoundRedirect: "Passo n\u00e3o encontrado nesta p\u00e1gina. Deseja redirecionar?",
	branchStepMessagePopup: "Selecione uma das tarefas abaixo para prosseguir",
	btnSkip: "Saltar",
	kindlyHoverPopup: "Por favor, passe o mouse sobre este elemento para abrir o pop-up",
	stepPlayIsdefinedPopover: "O passo que voc\u00ea vai jogar \u00e9 definido no popover",
	elmNotFoundWestpac: "Etapa n\u00e3o encontrada \u2013 Este guia terminar\u00e1",
	findingElementMessage: "Tentando encontrar o passo. . .",
	badDomain: "O dom\u00ednio e o URL atuais n\u00e3o est\u00e3o autorizados a executar o MyGuide. Entre em contato com seu administrador para obter ajuda.",
	hostJsError: "Parece haver um erro na p\u00e1gina da Web. MyGuide n\u00e3o pode continuar",
	remember: "Lembrar-me",
	forgotPass: "Esqueceu-se da palavra-passe?",
	dontHavAcc: "N\u00e3o tem uma conta?",
	loginTitle: "Iniciar sess\u00e3o",
	loginOtpScreenTitle: "Verificar OTP para entrar",
	forgetPassTitl: "Redefinir senha",
	placeholderEmail: "ID de e-mail",
	placeholderPassword: "Palavra-passe",
	placeholderNewPassword: "Nova palavra-passe",
	placeholderCurrentPassword: "Palavra-passe atual",
	placeholderFirstname: "Nome pr\u00f3prio",
	placeholderLastname: "Apelido",
	placeholderPasswordC: "Confirmar palavra-passe",
	btnCancel: "Cancelar",
	btnPayment: "Plano de atualiza\u00e7\u00e3o",
	btnSubmit: "Enviar",
	btnLogin: "Iniciar sess\u00e3o",
	termsOfUse: "Termos de Utiliza\u00e7\u00e3o",
	andLabel: "e",
	policyPrivacy: "Pol\u00edtica de Privacidade",
	passwordError: "A palavra-passe deve ter 8 d\u00edgitos",
	confirmPasswordError: "A senha e a senha de confirma\u00e7\u00e3o devem ser as mesmas",
	firstnameError: "Introduza um nome pr\u00f3prio v\u00e1lido",
	lastnameError: "Introduza um apelido v\u00e1lido",
	emailError: "Introduza um ID de e-mail v\u00e1lido",
	orgError: "Introduza um URL de Organiza\u00e7\u00e3o v\u00e1lido",
	otpError: "Introduza OTP v\u00e1lida",
	placeholderOtp: "Introduza a sua OTP aqui",
	otpSentDesc: "Se um endere\u00e7o de e-mail v\u00e1lido tiver sido fornecido, um link de redefini\u00e7\u00e3o ser\u00e1 enviado para voc\u00ea.<br>Se voc\u00ea n\u00e3o vir o e-mail em poucos minutos, verifique sua pasta de spam para um e-mail de",
	btnOtpVerify: "Verificar OTP",
	alreadyHavAcc: "J\u00e1 tem uma conta?",
	smartbiteMessageError: "Introduza a mensagem",
	smartbiteLinkError: "Introduza uma liga\u00e7\u00e3o v\u00e1lida",
	noGuidesOnThisPage: "Nenhum guia dispon\u00edvel nesta p\u00e1gina!",
	clickOn: "Clique em ",
	contactUs: "Contacte-nos",
	search: "Pesquisar",
	noRecordFound: "N\u00e3o foram encontrados registos",
	category: "Pasta",
	subCategory: "Subpasta",
	confirmPasswordRequired: "Confirmar palavra-passe necess\u00e1ria",
	logInWithSSO: "Login com SSO",
	inputPlaceHolderSearch: "Procurar qualquer Guia",
	noGuideAvailableFor: "Nenhum guia foi encontrado para corresponder \u00e0 sua pesquisa",
	tryModifyingYourSearch: "Tente modificar os crit\u00e9rios de pesquisa",
	signInVerifyYourEmail: "Este ID de e-mail n\u00e3o foi verificado. Por favor, verifique o seu e-mail para mais detalhes",
	signInVerifyYourAccount: "Envi\u00e1mos-lhe um e-mail com uma OTP. Verifique a sua conta para concluir o processo de in\u00edcio de sess\u00e3o",
	maintenanceMessage: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	back: "Voltar",
	changePassword: "Alterar palavra-passe",
	startTestAuto: "Iniciar testes de automa\u00e7\u00e3o",
	msgPasswordChangedSuccess: "A sua palavra-passe foi alterada com sucesso",
	msgConfirmNewPasswordError: "Confirmar senha deve ser o mesmo que Nova senha",
	enterUrl: "Insira o URL da equipe",
	dragPlaceholderDropThis: "Solte este ",
	dragPlaceholderHere: " aqui",
	termsOfService: "Termos e Condi\u00e7\u00f5es",
	versionText: "Vers\u00e3o",
	videoStepSuccessMessage: "O seu passo foi criado com sucesso",
	importSuccessMessage: "Guia carregado com sucesso. V\u00e1 para Status da Tarefa para verificar o status de importa\u00e7\u00e3o",
	worldBankHelpSupport: "Algumas ferramentas, como dica(s) de ferramenta, s\u00f3 podem ser visualizadas na interface",
	helpSupport: "Ajuda e Suporte",
	page: "p\u00e1gina",
	selectAnApplication: "Selecione uma Aplica\u00e7\u00e3o",
	refresh: "Atualizar",
	loginBtn: "Iniciar sess\u00e3o",
	account: "Conta",
	taskStatus: "Estado da tarefa ",
	logoutBtn: "Sair",
	app: "Aplica\u00e7\u00e3o:",
	firstStep: "Primeiro Passo",
	lastStep: "\u00daltima Etapa",
	startTest: "Iniciar teste",
	noInappStepInGuide: "O TestMe n\u00e3o pode continuar, pois n\u00e3o h\u00e1 nenhuma etapa embutida neste guia",
	settingBtn: "Configura\u00e7\u00f5es avan\u00e7adas",
	orgSetting: "Configura\u00e7\u00f5es da organiza\u00e7\u00e3o",
	close: "Fechar",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Documento",
	downloadBlog: "Blogue",
	downloadTxt: "Texto simples",
	serviceErrorMessage: "Ops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	guidesTab: "Guias",
	noGuideCreatedYet: "Nenhum Guia criado ainda!",
	noCategoryCreatedYet: "Nenhuma pasta criada ainda!",
	chatbot: "mychat",
	notAutorised: "Voc\u00ea n\u00e3o tem o acesso necess\u00e1rio, entre em contato com o administrador",
	ok: "OK",
	apiError: "Erro de configura\u00e7\u00e3o. Entre em contato com o administrador",
	select: "Selecione",
	mute_unmute: "Mudo\/Sem mudo",
	privacyPolicy: "Privacidade & cookies",
	privacyPolicyText: "O MyGuide utiliza cookies. Se continuar, est\u00e1 a concordar com os nossos Termos e Pol\u00edtica de Privacidade e a dar-nos consentimento para utilizar cookies",
	terms: "Termos e Condi\u00e7\u00f5es",
	westPecErrorMessage: "N\u00e3o est\u00e1 autorizado a aceder a esta aplica\u00e7\u00e3o. Inicie sess\u00e3o na rede da Westpac",
	noApp: "Nenhuma aplica\u00e7\u00e3o encontrada",
	role: "Fun\u00e7\u00e3o:",
	all: "Tudo",
	video: "V\u00eddeo",
	course: "Curso",
	article: "Artigo",
	image: "Imagem",
	pathways: "Percursos",
	preview: "Previsualizar",
	more: "Saber mais",
	history: "Hist\u00f3ria",
	publish: "Publicar",
	selectGuideLink: "Por favor, selecione Guia para vincular",
	selectGuideBeforeSubmit: "Selecione um Guia antes de enviar",
	change: "Alterar",
	checkNow: "Verifique agora",
	minutes: "minutos",
	clickHere: "clique aqui",
	youAlmostDone: "Voc\u00ea est\u00e1 quase pronto!",
	setOrg: "para configurar a sua organiza\u00e7\u00e3o",
	apps: "Aplica\u00e7\u00f5es",
	me: "Eu",
	playStep: "Passo de Reprodu\u00e7\u00e3o",
	miniPlayerHelp: "Ajuda",
	defaultMiniPlayerHelp: "Ajuda",
	defaultConfirmIfSlideshowOrRedirect: "Etapa n\u00e3o dispon\u00edvel no URL atual.<br>Deseja ir para o URL da etapa ou reproduzir uma apresenta\u00e7\u00e3o de slides?",
	defaultServiceErrorMessage: "Ops! Ocorreu um erro. Por favor, tente novamente depois de algum tempo. Voc\u00ea tamb\u00e9m pode nos enviar um e-mail para support@csod.com para qualquer assist\u00eancia",
	defaultMaintenanceMessage: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	userNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se n\u00e3o quiser mais seguir o Guia, clique em Guia de Sa\u00edda",
	defaultUserNotFollowingGuideMessage: "Parece que voc\u00ea est\u00e1 executando etapas que n\u00e3o fazem parte deste Guia. Se n\u00e3o quiser mais seguir o Guia, clique em Guia de Sa\u00edda",
	resumeGuide: "Guia de Curr\u00edculo",
	defaultResumeGuideMessage: "Guia de Curr\u00edculo",
	backToLogin: "Voltar ao Login",
	filters: "Filtros",
	thisApp: "Este aplicativo",
	thisWebsite: "Este site",
	maxFreeTourLimit: "Limite m\u00e1ximo de passeios atingidos",
	passwordRegexCheck: "A palavra-passe deve conter um m\u00ednimo de 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um valor num\u00e9rico",
	countLimit: "99+",
	microsoftServiceKey: "Introduza a sua chave de subscri\u00e7\u00e3o do Microsoft Cognitive Services Speech",
	numberOfImgFile: "O n\u00famero de arquivos de imagem e arquivos de texto deve ser o mesmo",
	availableOn: "Dispon\u00edvel em",
	tooltipUnpubWorkflowTitle: "Fluxo de trabalho n\u00e3o publicado",
	tooltipUnpubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentWorkflowTitle: "Fluxo de trabalho publicado, pasta publicada",
	tooltipUnpubTooltipTitle: "Dica de ferramenta n\u00e3o publicada",
	tooltipUnpubParentTooltipTitle: "Dica de ferramenta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTooltipTitle: "Dica de ferramenta publicada, pasta publicada",
	tooltipUnpubTutorialTitle: "Tutorial in\u00e9dito",
	tooltipUnpubParentTutorialTitle: "Tutorial publicado, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentTutorialTitle: "Tutorial publicado, pasta publicada",
	tooltipUnpubSubFolderTitle: "Subpasta n\u00e3o publicada",
	tooltipUnpubSubFolderDesc: "Usar subpastas para organizar Guias",
	tooltipUnpubParentSubFolderTitle: "Subpasta publicada, pasta(s) pai(s) n\u00e3o publicada(s)",
	tooltipPubParentSubFolderTitle: "Subpasta publicada, pasta publicada",
	tooltipPubParentSubFolderDesc: "Organiza Guias",
	exitSurvey: "Inqu\u00e9rito de Sa\u00edda",
	disable: "Desativar",
	instructionExitSurvey: "A pesquisa de sa\u00edda \u00e9 mostrada quando um usu\u00e1rio sai de um guia antes da conclus\u00e3o",
	msgVideoNotFound: "Carregando seu v\u00eddeo, tente depois de algum tempo",
	msgGiphyNotFound: "Carregando seu GIF, por favor, tente depois de algum tempo",
	userPref: "As minhas prefer\u00eancias",
	manageAccount: "Portal de administra\u00e7\u00e3o",
	analyticsPortal: "Portal de insights",
	errorInvalidUrl: "N\u00e3o \u00e9 um URL v\u00e1lido",
	wbFooterText: "Aprendizagem T\u00e9cnica ITS",
	navigationMenu: "Menu de navega\u00e7\u00e3o",
	clearHistory: "Limpar hist\u00f3rico",
	userDeniedMessage: "Usu\u00e1rio negado permiss\u00f5es de acesso \u00e0 c\u00e2mera e microfone",
	pushNotification: "Notifica\u00e7\u00f5es push",
	viewDetail: "Ver Detalhe",
	contactAdmin: "Entre em contato com support@csod.com ou seu administrador para obter mais assist\u00eancia",
	noAppOnDomain: "O aplicativo n\u00e3o est\u00e1 atribu\u00eddo para o dom\u00ednio atual ",
	noGuidesOnDomain: "Nenhum guia encontrado",
	apply: "Candidatar-se",
	invalidLoginCred: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	resendOTP: "Reenviar OTP",
	sendFeedback: "Enviar coment\u00e1rios",
	guideNotExist: "Este Guia n\u00e3o est\u00e1 dispon\u00edvel nesta p\u00e1gina (Erro: Incompatibilidade de dom\u00ednio) ",
	cdnAccess: "<b>Lamentamos<\/b> <br><br>Parece que h\u00e1 um problema com nossos servidores.<br> Fomos notificados do erro e iremos corrigi-lo o mais rapidamente poss\u00edvel",
	tourPlayError: "Guia n\u00e3o pode ser jogado. Erro ao recuperar detalhes do guia",
	playerMode: "Modo de jogador",
	closePanel: "Fechar painel",
	switchCreatorMode: "Mudar para o Modo de Criador",
	extensionContextError: "O contexto da extens\u00e3o \u00e9 invalidado. Por favor, recarregue a p\u00e1gina para continuar",
	otpSent: "OTP foi re-enviado para o seu e-mail, por favor, verifique a sua caixa de entrada",
	startOver: "Recome\u00e7ar",
	yesResume: "Resumo",
	dontShowAgain: "N\u00e3o mostrar novamente",
	notificationHeader: "Voc\u00ea tem uma notifica\u00e7\u00e3o!",
	watchLater: "Assista mais tarde",
	pushSnoozeMsg: "Esta notifica\u00e7\u00e3o ser\u00e1 suspensa por",
	showAgain: "Mostrar novamente",
	noGuidesOnThisTab: "N\u00e3o h\u00e1 notifica\u00e7\u00f5es nesta p\u00e1gina",
	iAgree: "Concordo",
	viewMore: "Ver Mais",
	lostInternetConnection: "Perda de conex\u00e3o com o servidor. Reconecte-se e tente novamente",
	next: "Seguinte",
	recent: "Recentes",
	older: "Mais antigos",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "Limpar",
	tooltipDontShowAgain: "As notifica\u00e7\u00f5es n\u00e3o aparecer\u00e3o mais. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	tooltipWatchLater1: "As notifica\u00e7\u00f5es s\u00e3o suspensas para",
	tooltipWatchLater2: "e aparecer\u00e1 depois disso. Para ativar uma notifica\u00e7\u00e3o agora, passe o mouse sobre ela e clique em 'Mostrar novamente'",
	hour: "hora",
	hours: "horas",
	insightsTracker: "Rastreador de insights",
	slideshow: "Apresenta\u00e7\u00e3o de slides",
	autoplay: "REPRODU\u00c7\u00c3O AUTOM\u00c1TICA",
	powerFormOldData: "Dados existentes",
	powerFormNewData: "Use este formul\u00e1rio para inserir novos dados",
	powerFormNewDataMore: "Se os seus dados existentes n\u00e3o estiverem vis\u00edveis, clique na seta no canto superior esquerdo para visualizar os seus dados. Em seguida, os dados precisam ser copiados para o formato com marcadores permitido.",
	powerFormTitle: "Assistente de Entrada de Dados",
	powerFormMandatory: "Este \u00e9 um campo obrigat\u00f3rio, limite m\u00e1ximo de caracteres ",
	belongToOtherApp: "Este Guia \u00e9 criado em {TOURURL}, que pertence ao aplicativo {APPNAME}. Por favor, copie este Guia nesse aplicativo e tente novamente",
	setDomain: "Se voc\u00ea tiver certeza de que o {TOURURL} deve ser adicionado nas configura\u00e7\u00f5es atuais do dom\u00ednio do aplicativo, adicione e tente novamente",
	on: "EM",
	off: "DESLIGADO",
	btnPrev: "Anterior",
	btnPrevious: "Anterior",
	taskList: "Lista de Tarefas",
	unprocessedVideo: "Aguarde enquanto o v\u00eddeo est\u00e1 a ser processado.",
	searchResult: "Resultado da Pesquisa",
	pleaseWait: "Aguarde!",
	mediaDownloadMsg: "Enquanto preparamos os seus ficheiros para download",
	mediaFileNotFound: "Arquivo de m\u00eddia n\u00e3o encontrado",
	searchInFolder: "Pesquisar na pasta",
	currentPageSearchPlaceholder: "Pesquisar Guia(s) dispon\u00edvel(is) na p\u00e1gina atual",
	brandLogo: "Log\u00f3tipo da Marca",
	accessibility: "Acessibilidade",
	replay: "Repeti\u00e7\u00e3o",
	defaultGreetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Por favor, tenha em mente que eu sou um bot.",
	defaultErrorMessage: "Sinto muito, n\u00e3o entendi isso. Poderia ser mais espec\u00edfico? ",
	defaultEndMessage: "Estamos feitos, muito obrigado!",
	greetingMessage: "Ei! Bem-vindo ao MyGuide. Como posso ajud\u00e1-lo? Por favor, tenha em mente que eu sou um bot.",
	errorMessage: "Sinto muito, n\u00e3o entendi isso. Poderia ser mais espec\u00edfico? ",
	endMessage: "Estamos feitos, muito obrigado!",
	guideLnkToRedirect: "Use o link a seguir para redirecionar para a p\u00e1gina e reproduzir o guia",
	otpTimer: "Pode tentar novamente em ",
	seconds: " segundos",
	limitWarning: "Atingiu o limite m\u00e1ximo de tentativas infrut\u00edferas",
	403: "Deparamo-nos com um problema com este pedido. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	405: "Deparamo-nos com um problema ao processar este pedido. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	429: "Demasiados pedidos",
	1003: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, fa\u00e7a login novamente e tente novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	1007: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1005: "<b>Lamentamos<\/b> <br><br>Parece que h\u00e1 um problema com o pedido ou com os nossos servidores.<br> Fomos notificados do erro e iremos corrigi-lo o mais rapidamente poss\u00edvel",
	1009: "O e-mail do usu\u00e1rio n\u00e3o \u00e9 verificado",
	1014: "Manuten\u00e7\u00e3o em curso. Entre em contato conosco via support@csod.com",
	1017: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, fa\u00e7a login novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	1018: "Voc\u00ea atingiu o limite m\u00e1ximo para criar etapas",
	2000: "Deparamo-nos com um problema com este pedido. Fomos notificados. Por favor, tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	2001: "Credenciais de login inv\u00e1lidas. Sua conta ser\u00e1 bloqueada ap\u00f3s v\u00e1rias tentativas malsucedidas, voc\u00ea receber\u00e1 um e-mail para desbloquear sua conta ou poder\u00e1 redefinir sua senha",
	2002: "OTP inv\u00e1lida ou expirada",
	2003: "O ficheiro carregado n\u00e3o \u00e9 uma imagem v\u00e1lida (os ficheiros JPG e PNG s\u00e3o suportados)",
	2004: "A sess\u00e3o expirou",
	2005: "N\u00e3o foi poss\u00edvel rastrear este usu\u00e1rio. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2006: "O endere\u00e7o de e-mail est\u00e1 incorreto. Por favor, tente novamente",
	2007: "Fun\u00e7\u00e3o de usu\u00e1rio inv\u00e1lida. Por favor, tente novamente",
	2008: "Voc\u00ea deve especificar um tipo de tarefa correto",
	2009: "O pedido apresentado \u00e9 inv\u00e1lido; poderia ter sido eliminado ou nunca existiu",
	2010: "Par\u00e2metros de entrada inv\u00e1lidos. Atualize e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2011: "A Organiza\u00e7\u00e3o dada \u00e9 inv\u00e1lida; poderia ter sido eliminado ou nunca existiu",
	2012: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2013: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2014: "Par\u00e2metro necess\u00e1rio para Super Admin[organization_id]",
	2015: "O conte\u00fado dos dados de imagem fornecido \u00e9 inv\u00e1lido. Verifique novamente e tente novamente. Se o problema persistir, informe-nos em support@csod.com",
	2016: "Dom\u00ednio inv\u00e1lido",
	2017: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2018: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2019: "O que procura n\u00e3o existe ou pode ter sido eliminado",
	2020: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2021: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, comunique o problema ao support@csod.com",
	2022: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Introduza um URL de Equipa v\u00e1lido",
	2023: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar essa solicita\u00e7\u00e3o. Por favor, comunique o problema ao support@csod.com",
	2024: "O tamanho do ficheiro deve ser inferior a 5 MB",
	2025: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o. Introduza um URL v\u00e1lido",
	2026: "A palavra-passe deve conter um m\u00ednimo de 8 caracteres, incluindo pelo menos um valor mai\u00fasculo, um min\u00fasculo e um valor num\u00e9rico",
	2027: "Palavra-passe inv\u00e1lida",
	2028: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2029: "A cidade que voc\u00ea forneceu n\u00e3o \u00e9 suportada",
	2030: "Havia um par\u00e2metro ausente ou inv\u00e1lido na solicita\u00e7\u00e3o",
	2031: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao tentar processar esse par\u00e2metro. Por favor, comunique o problema ao support@csod.com",
	2032: "Par\u00e2metro inv\u00e1lido[file_id]",
	2033: "URL inv\u00e1lido. Por favor, verifique novamente e tente novamente",
	2034: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar esses par\u00e2metros. Por favor, comunique o problema ao support@csod.com",
	2035: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado ao processar esta AppKey. Por favor, comunique o problema ao support@csod.com",
	2036: "O servidor de autentica\u00e7\u00e3o encontrou um erro inesperado. Por favor, atualize esta p\u00e1gina. Se o problema persistir, comunique o problema a support@csod.com",
	2044: "Parece que perdemos a tradu\u00e7\u00e3o para este passo. Mude para o idioma padr\u00e3o e traduza novamente a etapa, ou entre em contato com nosso suporte ao cliente para obter mais detalhes.",
	2200: "N\u00f3s nos deparamos com um problema ao acessar controles de \u00e1udio \/ v\u00eddeo. Verifique as configura\u00e7\u00f5es do seu navegador e tente isso novamente. Se o problema persistir, informe-nos em support@csod.com",
	3061: "Pode fixar apenas 5 guia(s)",
	4000: "A subcategoria n\u00e3o pode ser criada dentro de uma pasta, se um Guia j\u00e1 estiver criado",
	4001: "Se um usu\u00e1rio j\u00e1 for um Superadministrador, n\u00e3o ser\u00e1 poss\u00edvel alterar a Fun\u00e7\u00e3o de Usu\u00e1rio",
	4002: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em um Guia publicado",
	4003: "O Guia Bloqueado n\u00e3o pode ser publicado",
	4004: "Esta a\u00e7\u00e3o n\u00e3o \u00e9 permitida em uma pasta publicada. Por favor, cancele a publica\u00e7\u00e3o",
	4006: "A candidatura deve pertencer \u00e0 organiza\u00e7\u00e3o em causa",
	4007: "Voc\u00ea n\u00e3o est\u00e1 autorizado a executar esta a\u00e7\u00e3o",
	4008: "N\u00e3o \u00e9 permitida a a\u00e7\u00e3o para esta subcategoria",
	4009: "Guia deve ser publicado",
	4010: "O guia n\u00e3o pode ser criado dentro de uma pasta com uma subcategoria",
	4011: "Para criar passo(s), voc\u00ea precisa desbloquear este Guia",
	4012: "Para editar passo(s), precisa de desbloquear este Guia",
	4013: "Para excluir etapas, voc\u00ea precisa desbloquear este Guia",
	4014: "Para copiar e colar passo(s), voc\u00ea precisa desbloquear este Guia",
	3001: "Guia estar\u00e1 dispon\u00edvel para exporta\u00e7\u00e3o em breve. Para verificar o estado, v\u00e1 a 'Estado da Tarefa' no menu da conta",
	3002: "O carregamento foi iniciado. Por favor, n\u00e3o atualize ou feche o navegador at\u00e9 que o upload seja conclu\u00eddo. Voc\u00ea pode verificar o status da importa\u00e7\u00e3o assim que ela for conclu\u00edda",
	3003: "O usu\u00e1rio j\u00e1 existe",
	3004: "O ID do e-mail j\u00e1 est\u00e1 verificado",
	3005: "Este URL entra em conflito com outra configura\u00e7\u00e3o de aplica\u00e7\u00e3o, tente adicionar qualquer outro URL",
	3006: "A pasta deve pertencer ao mesmo aplicativo",
	3007: "O dom\u00ednio j\u00e1 existe",
	3008: "Atingiu o limite m\u00e1ximo do(s) Guia(s) criado(s)",
	3009: "O inqu\u00e9rito j\u00e1 existe no Guia fornecido",
	3010: "O Passo deve pertencer ao mesmo Guia",
	3011: "Esta Organiza\u00e7\u00e3o est\u00e1 suspensa. Entre em contato com seu administrador",
	3012: "O(s) guia(s) deve(m) pertencer \u00e0 mesma pasta",
	3013: "Este Guia j\u00e1 existe com o par de objetos e o nome do campo",
	3014: "Usu\u00e1rio suspenso",
	3015: "Usu\u00e1rio j\u00e1 verificado",
	3017: "OTP foi enviado com sucesso para o seu endere\u00e7o de e-mail",
	3018: "A fun\u00e7\u00e3o j\u00e1 existe",
	3019: "Pa\u00eds j\u00e1 existe",
	3020: "Cidade j\u00e1 existe",
	3023: "Sua organiza\u00e7\u00e3o n\u00e3o \u00e9 verificada. Para obter ajuda, entre em contato com support@csod.com",
	3024: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para esta organiza\u00e7\u00e3o",
	3025: "Deparamo-nos com um problema durante a autentica\u00e7\u00e3o. Por favor, tente isso novamente. Se o problema persistir, atualize a p\u00e1gina e tente novamente",
	3026: "O arquivo JSON n\u00e3o est\u00e1 dispon\u00edvel para este Guia",
	3027: "Nenhum passo dispon\u00edvel. Crie pelo menos uma etapa para publicar o Guia",
	3028: "Limite m\u00e1ximo de publica\u00e7\u00e3o da turn\u00ea atingido",
	3047: "A sua conta foi temporariamente bloqueada devido a falhas excessivas de in\u00edcio de sess\u00e3o. Enviamos-lhe um e-mail com passos para desbloque\u00e1-lo. Para mais assist\u00eancia, por favor contacte-nos em support@csod.com",
	3033: "Credenciais inv\u00e1lidas. Entre em contato com support@csod.com ou seu administrador para obter mais assist\u00eancia.",
	4020: "J\u00e1 existe um projeto deste Guia; n\u00e3o s\u00e3o permitidos v\u00e1rios rascunhos de um Guia.",
	4021: "Valores inv\u00e1lidos do par\u00e2metro [envs]",
	2054: "Uma senha antiga e nova n\u00e3o pode ser a mesma",
	playNextBotTour: "Reproduzir o pr\u00F3ximo tour de bot",
	defaultBotEndingMessage: "Terminamos, muito obrigado! Mais alguma coisa antes de eu come\u00E7ar?",
	loginNext: "Seguinte",
	3068: "Sua senha antiga expirou. Defina uma nova senha para login.",
	includeScreen: "Dołącz zrzut ekranu",
	feedbackPlaceholder: "Masz opini\u0119? Chcieliby\u015Bmy to us\u0142ysze\u0107!",
	feedbackOptBtn: "Kliknij, aby zaznaczy\u0107 lub ukry\u0107 informacje",
	highlight: "Atrakcja",
	send: "Wys\u0142a\u0107",
	done: "Zrobione",
	hide: "Ukrywa\u0107"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.ru_RU = {
	currentPage: "\u0422\u0435\u043a\u0443\u0449\u0430\u044f \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430",
	myChat: "\u043c\u0430\u0439\u0447\u0430\u0442",
	import: "\u0418\u043c\u043f\u043e\u0440\u0442",
	export: "\u042d\u043a\u0441\u043f\u043e\u0440\u0442",
	redirectLivetour: "\u0418\u0433\u0440\u0430\u0442\u044c \u0432\u0436\u0438\u0432\u0443\u044e",
	guideNotAvailable: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 \u0433\u0438\u0434\u0430?",
	downloadPPT: "\u0421\u043a\u0430\u0447\u0430\u0442\u044c PPT",
	btnYes: "\u0414\u0430",
	btnNo: "\u041d\u0435\u0442",
	inApp: "\u0412 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0438",
	live: "\u0416\u0438\u0442\u044c",
	resume: "\u0420\u0435\u0437\u044e\u043c\u0435",
	tourCloseConfirm: "\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0437\u0430\u043a\u0440\u044b\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e?",
	notifSnoozeDonotMsg: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c, \u0435\u0441\u043b\u0438 \u0432\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u044d\u0442\u043e \u043f\u043e\u0437\u0436\u0435 \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435?",
	surveyThanksMessage: "\u0421\u043f\u0430\u0441\u0438\u0431\u043e \u0437\u0430 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u044b\u0439 \u043e\u0442\u0432\u0435\u0442",
	testMePassedMessage: "\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e! \u0412\u044b \u043f\u0440\u043e\u0448\u043b\u0438",
	testMeFailedMessage: "\u041e\u0439! \u0412\u044b \u043f\u043e\u0442\u0435\u0440\u043f\u0435\u043b\u0438 \u043d\u0435\u0443\u0434\u0430\u0447\u0443",
	testMeGuideEfficiency: "\u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0430:",
	testMeGuideEffectiveness: "\u042d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c \u0442\u0435\u0441\u0442\u0430:",
	testMeTestTime: "\u0412\u0440\u0435\u043c\u044f \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	testMeExpectedTime: "\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	testMeStepsTaken: "\u041f\u0440\u0435\u0434\u043f\u0440\u0438\u043d\u044f\u0442\u044b\u0435 \u0448\u0430\u0433\u0438",
	testMeExpectedSteps: "\u041e\u0436\u0438\u0434\u0430\u0435\u043c\u044b\u0435 \u0448\u0430\u0433\u0438",
	testMeRetakeTestBtn: "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u044b\u0439 \u0442\u0435\u0441\u0442",
	testMeResultTitle: "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 MyTest",
	ConfirmIfTestMeModeRidirect: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043f\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u043c\u0443 URL-\u0430\u0434\u0440\u0435\u0441\u0443. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 URL-\u0430\u0434\u0440\u0435\u0441 \u0433\u0438\u0434\u0430?",
	feedCmt: "\u0412\u0430\u0448\u0438 \u043e\u0442\u0437\u044b\u0432\u044b \u0446\u0435\u043d\u043d\u044b \u0434\u043b\u044f \u043d\u0430\u0441!<br> \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0440\u0430\u0441\u0441\u043a\u0430\u0436\u0438\u0442\u0435 \u043d\u0430\u043c, \u0447\u0442\u043e \u0432\u044b \u0434\u0443\u043c\u0430\u0435\u0442\u0435 \u0432 500 \u0441\u0438\u043c\u0432\u043e\u043b\u0430\u0445 \u0438\u043b\u0438 \u043c\u0435\u043d\u044c\u0448\u0435",
	doNotShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	neverShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	skipGuide: "\u041f\u0440\u043e\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0433\u0438\u0434",
	surveyErrorMsg: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0442\u0432\u0435\u0442\u044c\u0442\u0435 \u0445\u043e\u0442\u044f \u0431\u044b \u043d\u0430 \u043e\u0434\u0438\u043d \u0432\u043e\u043f\u0440\u043e\u0441",
	redirect: "\u041f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c",
	liveGuide: "\u0416\u0438\u0432\u043e\u0439 \u043f\u0443\u0442\u0435\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c",
	question: "\u0412\u043e\u043f\u0440\u043e\u0441",
	exitGuide: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0432\u044b\u0445\u043e\u0434\u0443",
	continueGuide: "\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	stop: "\u041e\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430",
	characters: "\u041f\u0438\u0441\u044c\u043c\u0435\u043d\u0430:",
	survey: "\u041e\u0431\u0437\u043e\u0440",
	testMeStopMessage: "\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 TestMe, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 STOP \u0434\u043b\u044f \u0432\u044b\u0445\u043e\u0434\u0430",
	testMeFailedErrorMessage: "\u0412\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u0434\u043e\u0441\u0442\u0438\u0447\u044c \u0446\u0435\u043b\u0435\u0432\u043e\u0433\u043e \u0448\u0430\u0433\u0430.<br>\u0418\u0437 {TOTAL_STEPS} \u0432\u044b \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0448\u0430\u0433\u0438 {CORRECT_STEPS}.",
	surveyCommentPlaceholder: "\u041d\u0430\u0431\u0435\u0440\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c! \u041c\u0430\u043a\u0441\u0438\u043c\u0443\u043c 500 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432",
	pushTourSnoozeMsg: "\u042d\u0442\u043e\u0442 \u0442\u0443\u0440 \u043f\u043e \u0430\u0432\u0442\u043e\u0441\u0442\u0430\u0440\u0442\u0443 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u043e\u0436\u0435\u043d \u0434\u043b\u044f",
	of: "\u0438\u0437",
	wbMplayerTitle: "\u0423\u0447\u0435\u0431\u043d\u0438\u043a\u0438",
	wbDragTooltip: "\u041f\u0435\u0440\u0435\u0442\u0430\u0449\u0438\u0442\u0435 \u044d\u0442\u043e\u0442 \u043f\u0440\u043e\u0438\u0433\u0440\u044b\u0432\u0430\u0442\u0435\u043b\u044c \u0432 \u043b\u044e\u0431\u043e\u0435 \u043c\u0435\u0441\u0442\u043e \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435",
	dontShowEdResult: "\u042f \u043d\u0435 \u0445\u043e\u0447\u0443 \u044d\u0442\u043e\u0433\u043e \u0432\u0438\u0434\u0435\u0442\u044c",
	mPlayerHeaderTitle: "\u041c\u0438\u043a\u0440\u043e \u043f\u043b\u0435\u0435\u0440",
	closePreview: "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440",
	elmNotFound: "\u041a\u0430\u0436\u0435\u0442\u0441\u044f, \u043c\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u043c \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0448\u0430\u0433\u0430:",
	elmNotFoundInfo: "\u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u043d\u0430 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0434\u043b\u044f \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u044d\u0442\u043e\u0433\u043e \u0448\u0430\u0433\u0430. \u0422\u0430\u043a\u0436\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435, \u0432\u0438\u0434\u0438\u0442\u0435 \u043b\u0438 \u0432\u044b \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u044d\u043b\u0435\u043c\u0435\u043d\u0442",
	notExists: "\u041d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	elmNotFoundHeader: "\u042d\u043b\u0435\u043c\u0435\u043d\u0442 \u0448\u0430\u0433\u0430 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d",
	goToStep: "\u041f\u0435\u0440\u0435\u0439\u0442\u0438 \u043a \u0448\u0430\u0433\u0443",
	notFoundStep: "\u041c\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043d\u0430\u0439\u0442\u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442 \u0434\u043b\u044f \u0448\u0430\u0433\u0430 #",
	pleaseReselect: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u044d\u043b\u0435\u043c\u0435\u043d\u0442.",
	stepRuleMatchErr: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u0448\u0430\u0433\u0430 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442",
	guideRuleMatchErr: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0430\u0432\u0438\u043b\u0430 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0435\u0439 \u043d\u0435 \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u044e\u0442",
	stepNotFoundRedirect: "\u0428\u0430\u0433 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435. \u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c?",
	branchStepMessagePopup: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043e\u0434\u043d\u0443 \u0438\u0437 \u0437\u0430\u0434\u0430\u0447 \u043d\u0438\u0436\u0435, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c",
	btnSkip: "\u0421\u043a\u0438\u043f",
	kindlyHoverPopup: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u0443\u0440\u0441\u043e\u0440 \u043d\u0430 \u044d\u0442\u043e\u0442 \u044d\u043b\u0435\u043c\u0435\u043d\u0442, \u0447\u0442\u043e\u0431\u044b \u043e\u0442\u043a\u0440\u044b\u0442\u044c \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u0435 \u043e\u043a\u043d\u043e",
	stepPlayIsdefinedPopover: "\u0428\u0430\u0433, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0441\u043e\u0431\u0438\u0440\u0430\u0435\u0442\u0435\u0441\u044c \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438, \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u043e \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0435\u043c \u043e\u043a\u043d\u0435",
	elmNotFoundWestpac: "\u0428\u0430\u0433 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d \u2013 \u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u0442\u0441\u044f",
	findingElementMessage: "\u041f\u044b\u0442\u0430\u044f\u0441\u044c \u043d\u0430\u0439\u0442\u0438 \u0448\u0430\u0433...",
	badDomain: "\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u0434\u043e\u043c\u0435\u043d \u0438 URL-\u0430\u0434\u0440\u0435\u0441 \u043d\u0435 \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u044b \u0434\u043b\u044f \u0437\u0430\u043f\u0443\u0441\u043a\u0430 MyGuide. \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435\u0441\u044c \u0437\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043a \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0443.",
	hostJsError: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u043d\u0430 \u0432\u0435\u0431-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u0435\u0441\u0442\u044c \u043e\u0448\u0438\u0431\u043a\u0430. \u041d\u0435 \u0443\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \u0440\u0430\u0431\u043e\u0442\u0443 \u041f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u044b \"\u041c\u043e\u0439\u0433\u0438\u0434\"",
	remember: "\u041f\u043e\u043c\u043d\u0438 \u043c\u0435\u043d\u044f",
	forgotPass: "\u0417\u0430\u0431\u044b\u043b\u0438 \u043f\u0430\u0440\u043e\u043b\u044c?",
	dontHavAcc: "\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438?",
	loginTitle: "\u041b\u043e\u0433\u0438\u043d",
	loginOtpScreenTitle: "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 OTP \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430",
	forgetPassTitl: "\u0421\u0431\u0440\u043e\u0441 \u043f\u0430\u0440\u043e\u043b\u044f",
	placeholderEmail: "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	placeholderPassword: "\u041f\u0430\u0440\u043e\u043b\u044c",
	placeholderNewPassword: "\u041d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	placeholderCurrentPassword: "\u0422\u0435\u043a\u0443\u0449\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	placeholderFirstname: "\u0418\u043c\u044f",
	placeholderLastname: "\u0424\u0430\u043c\u0438\u043b\u0438\u044f",
	placeholderPasswordC: "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c",
	btnCancel: "\u041e\u0442\u043c\u0435\u043d\u0430",
	btnPayment: "\u041f\u043b\u0430\u043d \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f",
	btnSubmit: "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c",
	btnLogin: "\u041b\u043e\u0433\u0438\u043d",
	termsOfUse: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f",
	andLabel: "\u0438",
	policyPrivacy: "\u041f\u043e\u043b\u0438\u0442\u0438\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438",
	passwordError: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c 8 \u0446\u0438\u0444\u0440",
	confirmPasswordError: "\u041f\u0430\u0440\u043e\u043b\u044c \u0438 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0430\u044e\u0449\u0438\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c",
	firstnameError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0438\u043c\u044f",
	lastnameError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0444\u0430\u043c\u0438\u043b\u0438\u044e",
	emailError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	orgError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	otpError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 OTP",
	placeholderOtp: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u0439 OTP \u0437\u0434\u0435\u0441\u044c",
	otpSentDesc: "\u0415\u0441\u043b\u0438 \u0443\u043a\u0430\u0437\u0430\u043d \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b, \u0432\u0430\u043c \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0430 \u0441\u0441\u044b\u043b\u043a\u0430 \u0434\u043b\u044f \u0441\u0431\u0440\u043e\u0441\u0430.<br>\u0415\u0441\u043b\u0438 \u0432\u044b \u043d\u0435 \u0432\u0438\u0434\u0438\u0442\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043c\u0438\u043d\u0443\u0442, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043f\u0430\u043f\u043a\u0443 \u0441\u043f\u0430\u043c\u0430 \u043d\u0430 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0433\u043e \u043f\u0438\u0441\u044c\u043c\u0430 \u043e\u0442",
	btnOtpVerify: "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 OTP",
	alreadyHavAcc: "\u0423 \u0432\u0430\u0441 \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c?",
	smartbiteMessageError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435",
	smartbiteLinkError: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443",
	noGuidesOnThisPage: "\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0442 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432!",
	clickOn: "\u041d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u043a\u043d\u043e\u043f\u043a\u0443 ",
	contactUs: "\u0421\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438",
	search: "\u0418\u0441\u043a\u0430\u0442\u044c",
	noRecordFound: "\u0417\u0430\u043f\u0438\u0441\u0438 \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	category: "\u041f\u0430\u043f\u043a\u0430",
	subCategory: "\u0412\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	confirmPasswordRequired: "\u0422\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f",
	logInWithSSO: "\u0412\u0445\u043e\u0434 \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0435\u0434\u0438\u043d\u043e\u0433\u043e \u0432\u0445\u043e\u0434\u0430",
	inputPlaceHolderSearch: "\u041f\u043e\u0438\u0441\u043a \u043b\u044e\u0431\u043e\u0433\u043e \u0433\u0438\u0434\u0430",
	noGuideAvailableFor: "\u041d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u043e \u043d\u0438 \u043e\u0434\u043d\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 ,\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0432\u0430\u0448\u0435\u043c\u0443 \u043f\u043e\u0438\u0441\u043a\u0443",
	tryModifyingYourSearch: "\u041f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u043a\u0440\u0438\u0442\u0435\u0440\u0438\u0438 \u043f\u043e\u0438\u0441\u043a\u0430",
	signInVerifyYourEmail: "\u042d\u0442\u043e\u0442 \u0438\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u043d\u0435 \u0431\u044b\u043b \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0432\u043e\u044e \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0440\u043e\u0431\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438",
	signInVerifyYourAccount: "\u041c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0432\u0430\u043c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0441 OTP. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u0435 \u0441\u0432\u043e\u044e \u0443\u0447\u0435\u0442\u043d\u0443\u044e \u0437\u0430\u043f\u0438\u0441\u044c, \u0447\u0442\u043e\u0431\u044b \u0437\u0430\u0432\u0435\u0440\u0448\u0438\u0442\u044c \u043f\u0440\u043e\u0446\u0435\u0441\u0441 \u0432\u0445\u043e\u0434\u0430",
	maintenanceMessage: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	back: "\u041d\u0430\u0437\u0430\u0434",
	changePassword: "\u0421\u043c\u0435\u043d\u0430 \u043f\u0430\u0440\u043e\u043b\u044f",
	startTestAuto: "\u0417\u0430\u043f\u0443\u0441\u043a \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	msgPasswordChangedSuccess: "\u0412\u0430\u0448 \u043f\u0430\u0440\u043e\u043b\u044c \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0438\u0437\u043c\u0435\u043d\u0435\u043d",
	msgConfirmNewPasswordError: "\u041f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u0440\u043e\u043b\u044f \u0434\u043e\u043b\u0436\u043d\u043e \u0441\u043e\u0432\u043f\u0430\u0434\u0430\u0442\u044c \u0441 \u043d\u043e\u0432\u044b\u043c \u043f\u0430\u0440\u043e\u043b\u0435\u043c",
	enterUrl: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 URL-\u0430\u0434\u0440\u0435\u0441 \u0433\u0440\u0443\u043f\u043f\u044b",
	dragPlaceholderDropThis: "\u041e\u0442\u0431\u0440\u043e\u0441\u044c\u0442\u0435 \u044d\u0442\u043e ",
	dragPlaceholderHere: " \u0437\u0434\u0435\u0441\u044c",
	termsOfService: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f",
	versionText: "\u0412\u0435\u0440\u0441\u0438\u044f",
	videoStepSuccessMessage: "\u0412\u0430\u0448 \u0448\u0430\u0433 \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043d",
	importSuccessMessage: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043e. \u041f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0438\u043c\u043f\u043e\u0440\u0442\u0430",
	worldBankHelpSupport: "\u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0438\u0435 \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0438, \u043c\u043e\u0436\u043d\u043e \u043f\u0440\u043e\u0441\u043c\u0430\u0442\u0440\u0438\u0432\u0430\u0442\u044c \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u0435",
	helpSupport: "\u041f\u043e\u043c\u043e\u0449\u044c \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430",
	page: "\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430",
	selectAnApplication: "\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",
	refresh: "\u041e\u0441\u0432\u0435\u0436\u0430\u0442\u044c",
	loginBtn: "\u041b\u043e\u0433\u0438\u043d",
	account: "\u0421\u0447\u0435\u0442",
	taskStatus: "\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 ",
	logoutBtn: "\u0412\u044b\u0445\u043e\u0434",
	app: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435:",
	firstStep: "\u041f\u0435\u0440\u0432\u044b\u0439 \u0448\u0430\u0433",
	lastStep: "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439 \u0448\u0430\u0433",
	startTest: "\u041d\u0430\u0447\u0430\u0442\u044c \u0442\u0435\u0441\u0442",
	noInappStepInGuide: "TestMe \u043d\u0435 \u0443\u0434\u0430\u0435\u0442\u0441\u044f \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u0432 \u044d\u0442\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435 \u043d\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u043e\u0433\u043e \u0448\u0430\u0433\u0430",
	settingBtn: "\u0414\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438",
	orgSetting: "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	close: "\u0417\u0430\u043a\u0440\u044b\u0432\u0430\u0442\u044c",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442",
	downloadBlog: "\u0411\u043b\u043e\u0433",
	downloadTxt: "\u041e\u0431\u044b\u0447\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442",
	serviceErrorMessage: "\u041e\u0439! \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	guidesTab: "\u041d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435",
	noGuideCreatedYet: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0435\u0449\u0435 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e!",
	noCategoryCreatedYet: "\u041f\u0430\u043f\u043a\u0430 \u0435\u0449\u0435 \u043d\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u0430!",
	chatbot: "\u043c\u0430\u0439\u0447\u0430\u0442",
	notAutorised: "\u0423 \u0432\u0430\u0441 \u043d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0433\u043e \u0434\u043e\u0441\u0442\u0443\u043f\u0430, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	ok: "\u0425\u041e\u0420\u041e\u0428\u041e",
	apiError: "\u041e\u0448\u0438\u0431\u043a\u0430 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	select: "\u0412\u044b\u0431\u0438\u0440\u0430\u0442\u044c",
	mute_unmute: "\u041e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\/\u043e\u0442\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0437\u0432\u0443\u043a\u0430",
	privacyPolicy: "\u041a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0438 \u0444\u0430\u0439\u043b\u044b cookie",
	privacyPolicyText: "MyGuide \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0444\u0430\u0439\u043b\u044b cookie. \u0415\u0441\u043b\u0438 \u0432\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u0435, \u0432\u044b \u0441\u043e\u0433\u043b\u0430\u0448\u0430\u0435\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0423\u0441\u043b\u043e\u0432\u0438\u044f\u043c\u0438 \u0438 \u041f\u043e\u043b\u0438\u0442\u0438\u043a\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0434\u0435\u043d\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u0430\u0435\u0442\u0435 \u043d\u0430\u043c \u0441\u043e\u0433\u043b\u0430\u0441\u0438\u0435 \u043d\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 cookie.",
	terms: "\u0423\u0441\u043b\u043e\u0432\u0438\u044f",
	westPecErrorMessage: "\u0412\u044b \u043d\u0435 \u0438\u043c\u0435\u0435\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430 \u043a \u044d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0435\u0442\u044c Westpac",
	noApp: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	role: "\u0420\u043e\u043b\u044c:",
	all: "\u0412\u0441\u0435",
	video: "\u0412\u0438\u0434\u0435\u043e",
	course: "\u041a\u0443\u0440\u0441",
	article: "\u0421\u0442\u0430\u0442\u044c\u044f",
	image: "\u041e\u0431\u0440\u0430\u0437",
	pathways: "\u041f\u0443\u0442\u0438",
	preview: "\u041f\u0440\u0435\u0434\u0432\u0430\u0440\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440",
	more: "\u0411\u043e\u043b\u044c\u0448\u0435",
	history: "\u0418\u0441\u0442\u043e\u0440\u0438\u044f",
	publish: "\u0418\u0437\u0434\u0430\u0432\u0430\u0442\u044c",
	selectGuideLink: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0441\u0441\u044b\u043b\u043a\u0435",
	selectGuideBeforeSubmit: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u0435\u0440\u0435\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u043e\u0439",
	change: "\u041c\u0435\u043d\u044f\u0442\u044c",
	checkNow: "\u041f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0435\u0439\u0447\u0430\u0441",
	minutes: "\u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b",
	clickHere: "\u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u0437\u0434\u0435\u0441\u044c",
	youAlmostDone: "\u0412\u044b \u043f\u043e\u0447\u0442\u0438 \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438!",
	setOrg: ", \u0447\u0442\u043e\u0431\u044b \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044e",
	apps: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f",
	me: "\u041c\u0435\u043d\u044f",
	playStep: "\u0418\u0433\u0440\u0430\u0442\u044c \u0428\u0430\u0433",
	miniPlayerHelp: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430",
	defaultMiniPlayerHelp: "\u0421\u043f\u0440\u0430\u0432\u043a\u0430",
	defaultConfirmIfSlideshowOrRedirect: "\u0428\u0430\u0433 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u043c URL-\u0430\u0434\u0440\u0435\u0441\u0435.<br>\u0412\u044b \u0445\u043e\u0442\u0438\u0442\u0435 \u043f\u0435\u0440\u0435\u0439\u0442\u0438 \u043f\u043e URL-\u0430\u0434\u0440\u0435\u0441\u0443 \u0448\u0430\u0433\u0430 \u0438\u043b\u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0441\u043b\u0430\u0439\u0434-\u0448\u043e\u0443?",
	defaultServiceErrorMessage: "\u041e\u0439! \u041f\u0440\u043e\u0438\u0437\u043e\u0448\u043b\u0430 \u043e\u0448\u0438\u0431\u043a\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f. \u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043d\u0430\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043b\u044e\u0431\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	defaultMaintenanceMessage: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	userNotFollowingGuideMessage: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\u00bb",
	defaultUserNotFollowingGuideMessage: "\u041f\u043e\u0445\u043e\u0436\u0435, \u0447\u0442\u043e \u0432\u044b \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043d\u0435 \u044f\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0447\u0430\u0441\u0442\u044c\u044e \u044d\u0442\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430. \u0415\u0441\u043b\u0438 \u0432\u044b \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u0412\u044b\u0439\u0442\u0438 \u0438\u0437 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430\u00bb",
	resumeGuide: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0440\u0435\u0437\u044e\u043c\u0435",
	defaultResumeGuideMessage: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043f\u043e \u0440\u0435\u0437\u044e\u043c\u0435",
	backToLogin: "\u041d\u0430\u0437\u0430\u0434 \u043a \u0412\u0445\u043e\u0434\u0443",
	filters: "\u0424\u0438\u043b\u044c\u0442\u0440\u044b",
	thisApp: "\u042d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435",
	thisWebsite: "\u042d\u0442\u043e\u0442 \u0432\u0435\u0431-\u0441\u0430\u0439\u0442",
	maxFreeTourLimit: "\u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u043f\u0440\u043e\u0439\u0434\u0435\u043d\u043d\u044b\u0445 \u0442\u0443\u0440\u043e\u0432",
	passwordRegexCheck: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u043d\u043e\u0435, \u043e\u0434\u043d\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0438 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435",
	countLimit: "99+",
	microsoftServiceKey: "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043b\u044e\u0447 \u043f\u043e\u0434\u043f\u0438\u0441\u043a\u0438 \u043d\u0430 \u0440\u0435\u0447\u044c \u0441\u043b\u0443\u0436\u0431 Microsoft Cognitive Services",
	numberOfImgFile: "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0444\u0430\u0439\u043b\u043e\u0432 \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0439 \u0438 \u0442\u0435\u043a\u0441\u0442\u043e\u0432\u044b\u0445 \u0444\u0430\u0439\u043b\u043e\u0432 \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c",
	availableOn: "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043d\u0430",
	tooltipUnpubWorkflowTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441",
	tooltipUnpubParentWorkflowTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentWorkflowTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0440\u0430\u0431\u043e\u0447\u0438\u0439 \u043f\u0440\u043e\u0446\u0435\u0441\u0441, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubTooltipTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430",
	tooltipUnpubParentTooltipTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430, \u043d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentTooltipTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u0441\u043f\u043b\u044b\u0432\u0430\u044e\u0449\u0430\u044f \u043f\u043e\u0434\u0441\u043a\u0430\u0437\u043a\u0430, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubTutorialTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0443\u0447\u0435\u0431\u043d\u043e\u0435 \u043f\u043e\u0441\u043e\u0431\u0438\u0435",
	tooltipUnpubParentTutorialTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0443\u0447\u0435\u0431\u043d\u043e\u0435 \u043f\u043e\u0441\u043e\u0431\u0438\u0435, \u043d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u043f\u043a\u0438",
	tooltipPubParentTutorialTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0443\u0447\u0435\u0431\u043d\u0438\u043a, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubSubFolderTitle: "\u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipUnpubSubFolderDesc: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u044b\u0445 \u043f\u0430\u043f\u043e\u043a \u0434\u043b\u044f \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445",
	tooltipUnpubParentSubFolderTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430, \u041d\u0435\u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0440\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0430\u044f \u043f\u0430\u043f\u043a\u0430 (\u043f\u0430\u043f\u043a\u0438)",
	tooltipPubParentSubFolderTitle: "\u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0432\u043b\u043e\u0436\u0435\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430, \u041e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u043f\u0430\u043f\u043a\u0430",
	tooltipPubParentSubFolderDesc: "\u0423\u043f\u043e\u0440\u044f\u0434\u043e\u0447\u0438\u0432\u0430\u0435\u0442 \u0433\u0438\u0434\u044b",
	exitSurvey: "\u041e\u0431\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0435 \u043d\u0430 \u0432\u044b\u0435\u0437\u0434\u0435",
	disable: "\u041e\u0442\u043a\u043b\u044e\u0447\u0438\u0442\u044c",
	instructionExitSurvey: "\u041e\u043f\u0440\u043e\u0441 \u043f\u0440\u0438 \u0432\u044b\u0445\u043e\u0434\u0435 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0432\u044b\u0445\u043e\u0434\u0438\u0442 \u0438\u0437 \u0433\u0438\u0434\u0430 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435\u043c",
	msgVideoNotFound: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0432 \u0432\u0438\u0434\u0435\u043e, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	msgGiphyNotFound: "\u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0432 gif, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0447\u0435\u0440\u0435\u0437 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u0432\u0440\u0435\u043c\u044f",
	userPref: "\u041c\u043e\u0438 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f",
	manageAccount: "\u041f\u043e\u0440\u0442\u0430\u043b \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f",
	analyticsPortal: "\u041f\u043e\u0440\u0442\u0430\u043b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438",
	errorInvalidUrl: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441",
	wbFooterText: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0443\u0447\u0435\u043d\u0438\u0435 ITS",
	navigationMenu: "\u041c\u0435\u043d\u044e \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438",
	clearHistory: "\u041e\u0447\u0438\u0441\u0442\u0438\u0442\u044c \u0438\u0441\u0442\u043e\u0440\u0438\u044e",
	userDeniedMessage: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044e \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043e \u0432 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043a \u043a\u0430\u043c\u0435\u0440\u0435 \u0438 \u043c\u0438\u043a\u0440\u043e\u0444\u043e\u043d\u0443",
	pushNotification: "Push-\u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f",
	viewDetail: "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435",
	contactAdmin: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 support@csod.com \u0438\u043b\u0438 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438",
	noAppOnDomain: "\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u043d\u0435 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0434\u043e\u043c\u0435\u043d\u0430 ",
	noGuidesOnDomain: "\u0413\u0438\u0434\u044b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d\u044b",
	apply: "\u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c",
	invalidLoginCred: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u0430\u0448\u0435\u0439 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	resendOTP: "\u041f\u043e\u0432\u0442\u043e\u0440\u043d\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 OTP",
	sendFeedback: "\u041e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043e\u0442\u0437\u044b\u0432",
	guideNotExist: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e \u043d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 (\u041e\u0448\u0438\u0431\u043a\u0430: \u043d\u0435\u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u0434\u043e\u043c\u0435\u043d\u0430) ",
	cdnAccess: "<b>\u041d\u0430\u043c \u0436\u0430\u043b\u044c<\/b> <br><br>\u041f\u043e\u0445\u043e\u0436\u0435, \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438.<br> \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c \u0435\u0435 \u0432 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0435 \u0441\u0440\u043e\u043a\u0438",
	tourPlayError: "\u0412 \u0433\u0438\u0434 \u0438\u0433\u0440\u0430\u0442\u044c \u043d\u0435\u043b\u044c\u0437\u044f. \u041e\u0448\u0438\u0431\u043a\u0430 \u043f\u0440\u0438 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0438 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	playerMode: "\u0420\u0435\u0436\u0438\u043c \u0438\u0433\u0440\u043e\u043a\u0430",
	closePanel: "\u0417\u0430\u043a\u0440\u044b\u0442\u044c \u043f\u0430\u043d\u0435\u043b\u044c",
	switchCreatorMode: "\u041f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u0432 \u0440\u0435\u0436\u0438\u043c \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044f",
	extensionContextError: "\u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0437\u043d\u0430\u043d \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c",
	otpSent: "OTP \u0431\u044b\u043b \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448\u0443 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0443\u044e \u043f\u043e\u0447\u0442\u0443, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u0441\u0432\u043e\u0439 \u043f\u043e\u0447\u0442\u043e\u0432\u044b\u0439 \u044f\u0449\u0438\u043a",
	startOver: "\u041d\u0430\u0447\u0430\u0442\u044c \u0437\u0430\u043d\u043e\u0432\u043e",
	yesResume: "\u0420\u0435\u0437\u044e\u043c\u0435",
	dontShowAgain: "\u0411\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0442\u044c",
	notificationHeader: "\u0423 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435!",
	watchLater: "\u0421\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u043f\u043e\u0437\u0436\u0435",
	pushSnoozeMsg: "\u042d\u0442\u043e \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043b\u043e\u0436\u0435\u043d\u043e \u0434\u043b\u044f",
	showAgain: "\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0435\u0449\u0435 \u0440\u0430\u0437",
	noGuidesOnThisTab: "\u041d\u0430 \u044d\u0442\u043e\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435 \u043d\u0435\u0442 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0439",
	iAgree: "\u041f\u0440\u0438\u043d\u0438\u043c\u0430\u044e",
	viewMore: "\u0421\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0435",
	lostInternetConnection: "\u041f\u043e\u0442\u0435\u0440\u044f\u043d\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	next: "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439",
	recent: "\u041d\u0435\u0434\u0430\u0432\u043d\u0438\u0439",
	older: "\u0421\u0442\u0430\u0440\u0448\u0438\u0439",
	atoz: "\u0410 - \u042f",
	ztoa: "\u042f - \u0410",
	clear: "\u042f\u0441\u043d\u044b\u0439",
	tooltipDontShowAgain: "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u0431\u043e\u043b\u044c\u0448\u0435 \u043d\u0435 \u0431\u0443\u0434\u0443\u0442 \u043f\u043e\u044f\u0432\u043b\u044f\u0442\u044c\u0441\u044f. \u0427\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0439\u0447\u0430\u0441, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430 \u043d\u0435\u0433\u043e \u043a\u0443\u0440\u0441\u043e\u0440 \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043d\u043e\u0432\u0430\u00bb",
	tooltipWatchLater1: "\u0423\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u044f \u043e\u0442\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0434\u043b\u044f",
	tooltipWatchLater2: "\u0438 \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e. \u0427\u0442\u043e\u0431\u044b \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u0441\u0435\u0439\u0447\u0430\u0441, \u043d\u0430\u0432\u0435\u0434\u0438\u0442\u0435 \u043d\u0430 \u043d\u0435\u0433\u043e \u043a\u0443\u0440\u0441\u043e\u0440 \u0438 \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u00ab\u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043d\u043e\u0432\u0430\u00bb",
	hour: "\u0447\u0430\u0441",
	hours: "\u0427\u0430\u0441\u043e\u0432",
	insightsTracker: "\u041e\u0442\u0441\u043b\u0435\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u0438\u0434\u0435\u0439",
	slideshow: "\u0421\u043b\u0430\u0439\u0434-\u0448\u043e\u0443",
	autoplay: "\u0410\u0412\u0422\u041e\u0417\u0410\u041f\u0423\u0421\u041a",
	powerFormOldData: "\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435",
	powerFormNewData: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u0443 \u0444\u043e\u0440\u043c\u0443 \u0434\u043b\u044f \u0432\u0432\u043e\u0434\u0430 \u043d\u043e\u0432\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445",
	powerFormNewDataMore: "\u0415\u0441\u043b\u0438 \u0432\u0430\u0448\u0438 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435 \u0432\u0438\u0434\u043d\u044b, \u043d\u0430\u0436\u043c\u0438\u0442\u0435 \u043d\u0430 \u0441\u0442\u0440\u0435\u043b\u043a\u0443 \u0432 \u043b\u0435\u0432\u043e\u043c \u0432\u0435\u0440\u0445\u043d\u0435\u043c \u0443\u0433\u043b\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0432\u0430\u0448\u0438 \u0434\u0430\u043d\u043d\u044b\u0435. \u0417\u0430\u0442\u0435\u043c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0439 \u043c\u0430\u0440\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0444\u043e\u0440\u043c\u0430\u0442.",
	powerFormTitle: "\u041f\u043e\u043c\u043e\u0449\u043d\u0438\u043a \u043f\u043e \u0432\u0432\u043e\u0434\u0443 \u0434\u0430\u043d\u043d\u044b\u0445",
	powerFormMandatory: "\u042d\u0442\u043e \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435, \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432 ",
	belongToOtherApp: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u043d\u0430 {TOURURL}, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0438\u0442 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e {APPNAME}. \u0421\u043a\u043e\u043f\u0438\u0440\u0443\u0439\u0442\u0435 \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0432 \u044d\u0442\u043e \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	setDomain: "\u0415\u0441\u043b\u0438 \u0432\u044b \u0443\u0432\u0435\u0440\u0435\u043d\u044b, \u0447\u0442\u043e {TOURURL} \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d \u0432 \u0442\u0435\u043a\u0443\u0449\u0438\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0434\u043e\u043c\u0435\u043d\u0430 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	on: "\u041d\u0410",
	off: "\u041e\u0422",
	btnPrev: "\u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0430\u044f",
	btnPrevious: "\u041f\u0440\u0435\u0434\u044b\u0434\u0443\u0449\u0438\u0439",
	taskList: "\u0421\u043f\u0438\u0441\u043e\u043a \u0437\u0430\u0434\u0430\u0447",
	unprocessedVideo: "\u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435, \u043f\u043e\u043a\u0430 \u0432\u0430\u0448\u0435 \u0432\u0438\u0434\u0435\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043e.",
	searchResult: "\u0420\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043f\u043e\u0438\u0441\u043a\u0430",
	pleaseWait: "\u041f\u043e\u0434\u043e\u0436\u0434\u0438\u0442\u0435!",
	mediaDownloadMsg: "\u041f\u043e\u043a\u0430 \u043c\u044b \u0433\u043e\u0442\u043e\u0432\u0438\u043c \u0432\u0430\u0448\u0438 \u0444\u0430\u0439\u043b\u044b \u043a \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0435",
	mediaFileNotFound: "\u041c\u0435\u0434\u0438\u0430\u0444\u0430\u0439\u043b \u043d\u0435 \u043d\u0430\u0439\u0434\u0435\u043d",
	searchInFolder: "\u041f\u043e\u0438\u0441\u043a \u0432 \u043f\u0430\u043f\u043a\u0435",
	currentPageSearchPlaceholder: "\u041f\u043e\u0438\u0441\u043a \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 (\u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432), \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043d\u0430 \u0442\u0435\u043a\u0443\u0449\u0435\u0439 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435",
	brandLogo: "\u041b\u043e\u0433\u043e\u0442\u0438\u043f \u0431\u0440\u0435\u043d\u0434\u0430",
	accessibility: "\u0414\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u044c",
	replay: "\u041f\u0435\u0440\u0435\u0438\u0433\u0440\u044b\u0432\u0430\u0442\u044c",
	defaultGreetingMessage: "\u042d\u0439! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 MyGuide. \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u0432\u0430\u043c \u043f\u043e\u043c\u043e\u0447\u044c? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u044f \u0431\u043e\u0442.",
	defaultErrorMessage: "\u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u043d\u044f\u043b. \u041d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438? ",
	defaultEndMessage: "\u041c\u044b \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438, \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435!",
	greetingMessage: "\u042d\u0439! \u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 MyGuide. \u041a\u0430\u043a \u044f \u043c\u043e\u0433\u0443 \u0432\u0430\u043c \u043f\u043e\u043c\u043e\u0447\u044c? \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0438\u043c\u0435\u0439\u0442\u0435 \u0432 \u0432\u0438\u0434\u0443, \u0447\u0442\u043e \u044f \u0431\u043e\u0442.",
	errorMessage: "\u0418\u0437\u0432\u0438\u043d\u0438\u0442\u0435, \u044f \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u043d\u044f\u043b. \u041d\u0435 \u043c\u043e\u0433\u043b\u0438 \u0431\u044b \u0432\u044b \u0431\u044b\u0442\u044c \u0431\u043e\u043b\u0435\u0435 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u043c\u0438? ",
	endMessage: "\u041c\u044b \u0437\u0430\u043a\u043e\u043d\u0447\u0438\u043b\u0438, \u0441\u043f\u0430\u0441\u0438\u0431\u043e \u0431\u043e\u043b\u044c\u0448\u043e\u0435!",
	guideLnkToRedirect: "\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0441\u0441\u044b\u043b\u043a\u0443, \u0447\u0442\u043e\u0431\u044b \u043f\u0435\u0440\u0435\u043d\u0430\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u0432\u043e\u0441\u043f\u0440\u043e\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	otpTimer: "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u044c \u043f\u043e\u043f\u044b\u0442\u043a\u0443 \u0432 ",
	seconds: " \u0442\u043e\u0432\u0430\u0440\u044b \u0432\u0442\u043e\u0440\u043e\u0433\u043e \u0441\u043e\u0440\u0442\u0430",
	limitWarning: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a",
	403: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0441 \u044d\u0442\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	405: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u0430. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	429: "\u0421\u043b\u0438\u0448\u043a\u043e\u043c \u043c\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432",
	1003: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	1007: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	1005: "<b>\u041d\u0430\u043c \u0436\u0430\u043b\u044c<\/b> <br><br>\u041f\u043e\u0445\u043e\u0436\u0435, \u0435\u0441\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u0441 \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c \u0438\u043b\u0438 \u0441 \u043d\u0430\u0448\u0438\u043c\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u043c\u0438.<br> \u041c\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u0438\u0435 \u043e\u0431 \u043e\u0448\u0438\u0431\u043a\u0435 \u0438 \u0438\u0441\u043f\u0440\u0430\u0432\u0438\u043c \u0435\u0435 \u0432 \u043a\u0440\u0430\u0442\u0447\u0430\u0439\u0448\u0438\u0435 \u0441\u0440\u043e\u043a\u0438",
	1009: "\u042d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u0430\u044f \u043f\u043e\u0447\u0442\u0430 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f \u043d\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d\u0430",
	1014: "\u0422\u0435\u0445\u043d\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u0441\u043b\u0443\u0436\u0438\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u0442\u0441\u044f. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u0447\u0435\u0440\u0435\u0437 support@csod.com",
	1017: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u0432\u043e\u0439\u0434\u0438\u0442\u0435 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	1018: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0448\u0430\u0433\u043e\u0432",
	2000: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0441 \u044d\u0442\u0438\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u043c. \u041c\u044b \u0431\u044b\u043b\u0438 \u0443\u0432\u0435\u0434\u043e\u043c\u043b\u0435\u043d\u044b. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2001: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u0432\u0445\u043e\u0434\u0430. \u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u043f\u043e\u0441\u043b\u0435 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043d\u0435\u0443\u0434\u0430\u0447\u043d\u044b\u0445 \u043f\u043e\u043f\u044b\u0442\u043e\u043a, \u0432\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u0435 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0434\u043b\u044f \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0438 \u0432\u0430\u0448\u0435\u0439 \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438 \u0438\u043b\u0438 \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0431\u0440\u043e\u0441\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	2002: "\u041d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u0438\u043b\u0438 \u043f\u0440\u043e\u0441\u0440\u043e\u0447\u0435\u043d\u043d\u044b\u0439 OTP",
	2003: "\u0417\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0439 \u0444\u0430\u0439\u043b \u043d\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c \u0438\u0437\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435\u043c (\u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0444\u0430\u0439\u043b\u044b JPG \u0438 PNG)",
	2004: "\u0421\u0440\u043e\u043a \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441\u0435\u0430\u043d\u0441\u0430 \u0438\u0441\u0442\u0435\u043a",
	2005: "\u041c\u044b \u043d\u0435 \u0441\u043c\u043e\u0433\u043b\u0438 \u043e\u0442\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u044d\u0442\u043e\u0433\u043e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2006: "\u0410\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u043d\u0435\u0432\u0435\u0440\u0435\u043d. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2007: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u0430\u044f \u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2008: "\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u043a\u0430\u0437\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0439 \u0442\u0438\u043f \u0437\u0430\u0434\u0430\u0447\u0438",
	2009: "\u0414\u0430\u043d\u043d\u043e\u0435 \u0417\u0430\u044f\u0432\u043b\u0435\u043d\u0438\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c; \u041e\u043d \u043c\u043e\u0433 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b",
	2010: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0432\u0445\u043e\u0434\u043d\u044b\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b. \u041e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2011: "\u0414\u0430\u043d\u043d\u0430\u044f \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439; \u041e\u043d \u043c\u043e\u0433 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d \u0438\u043b\u0438 \u043d\u0438\u043a\u043e\u0433\u0434\u0430 \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u043e\u0432\u0430\u043b",
	2012: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2013: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2014: "\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0439 \u0434\u043b\u044f Super Admin[organization_id]",
	2015: "\u041f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u043c\u043e\u0435 Image Data \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u043c. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	2016: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u0434\u043e\u043c\u0435\u043d",
	2017: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2018: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2019: "\u0422\u043e, \u0447\u0442\u043e \u0432\u044b \u0438\u0449\u0435\u0442\u0435, \u043d\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0438\u043b\u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u043e",
	2020: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2021: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2022: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441 \u043a\u043e\u043c\u0430\u043d\u0434\u044b",
	2023: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u044d\u0442\u043e\u0442 \u0437\u0430\u043f\u0440\u043e\u0441. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2024: "\u0420\u0430\u0437\u043c\u0435\u0440 \u0444\u0430\u0439\u043b\u0430 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0442\u044c 5 \u041c\u0411",
	2025: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0439 URL",
	2026: "\u041f\u0430\u0440\u043e\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 8 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u043e \u043a\u0440\u0430\u0439\u043d\u0435\u0439 \u043c\u0435\u0440\u0435 \u043e\u0434\u043d\u043e \u043f\u0440\u043e\u043f\u0438\u0441\u043d\u043e\u0435, \u043e\u0434\u043d\u043e \u0441\u0442\u0440\u043e\u0447\u043d\u043e\u0435 \u0438 \u043e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e\u0432\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435",
	2027: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c",
	2028: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2029: "\u0413\u043e\u0440\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u043b\u0438, \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442\u0441\u044f",
	2030: "\u0412 \u0437\u0430\u043f\u0440\u043e\u0441\u0435 \u043e\u0442\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u043b \u0438\u043b\u0438 \u0431\u044b\u043b \u043d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440",
	2031: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043f\u043e\u043f\u044b\u0442\u043a\u0435 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u044d\u0442\u043e\u0433\u043e \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2032: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440[file_id]",
	2033: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0439 URL-\u0430\u0434\u0440\u0435\u0441. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	2034: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u0438\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2035: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443 \u043f\u0440\u0438 \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0435 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u044e\u0447\u0430 AppKey. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0435 support@csod.com",
	2036: "\u0421\u0435\u0440\u0432\u0435\u0440 \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438 \u043e\u0431\u043d\u0430\u0440\u0443\u0436\u0438\u043b \u043d\u0435\u043f\u0440\u0435\u0434\u0432\u0438\u0434\u0435\u043d\u043d\u0443\u044e \u043e\u0448\u0438\u0431\u043a\u0443. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u044d\u0442\u0443 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043e \u043d\u0435\u0439 support@csod.com",
	2044: "\u041f\u043e\u0445\u043e\u0436\u0435, \u043c\u044b \u0443\u043f\u0443\u0441\u0442\u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0432\u043e\u0434 \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0448\u0430\u0433\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u0441\u044c \u043d\u0430 \u044f\u0437\u044b\u043a \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u043d\u043e \u043f\u0435\u0440\u0435\u0432\u0435\u0434\u0438\u0442\u0435 \u0448\u0430\u0433 \u0438\u043b\u0438 \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0448\u0435\u0439 \u0441\u043b\u0443\u0436\u0431\u043e\u0439 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0438 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.",
	2200: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u043f\u0440\u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0430\u0443\u0434\u0438\u043e \/ \u0432\u0438\u0434\u0435\u043e. \u041f\u0440\u043e\u0432\u0435\u0440\u044c\u0442\u0435 \u043d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438 \u0431\u0440\u0430\u0443\u0437\u0435\u0440\u0430 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u0441\u043e\u043e\u0431\u0449\u0438\u0442\u0435 \u043d\u0430\u043c \u043e\u0431 \u044d\u0442\u043e\u043c \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	3061: "\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0437\u0430\u043a\u0440\u0435\u043f\u0438\u0442\u044c \u0434\u043e 5 \u043d\u0430\u043f\u0440\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0445 \u0442\u043e\u043b\u044c\u043a\u043e",
	4000: "\u041f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u044f \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u0430 \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438, \u0435\u0441\u043b\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0436\u0435 \u0441\u043e\u0437\u0434\u0430\u043d\u043e",
	4001: "\u0415\u0441\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0441\u0443\u043f\u0435\u0440\u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c, \u0432\u044b \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u043e\u043b\u044c \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
	4002: "\u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442\u0441\u044f \u0432 \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u043c \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	4003: "\u0417\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e",
	4004: "\u042d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0437\u0430\u043f\u0440\u0435\u0449\u0435\u043d\u043e \u0434\u043b\u044f \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0438. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043e\u0442\u043c\u0435\u043d\u0438\u0442\u0435 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u044e",
	4006: "\u0417\u0430\u044f\u0432\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	4007: "\u0412\u044b \u043d\u0435 \u0438\u043c\u0435\u0435\u0442\u0435 \u043f\u0440\u0430\u0432\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u044d\u0442\u043e \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435",
	4008: "\u0414\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0434\u043b\u044f \u044d\u0442\u043e\u0439 \u043f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f",
	4009: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043d\u043e",
	4010: "\u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0441\u043e\u0437\u0434\u0430\u043d\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u043f\u0430\u043f\u043a\u0438 \u0441 \u043f\u043e\u0434\u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0435\u0439",
	4011: "\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4012: "\u0427\u0442\u043e\u0431\u044b \u043e\u0442\u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4013: "\u0427\u0442\u043e\u0431\u044b \u0443\u0434\u0430\u043b\u0438\u0442\u044c \u0448\u0430\u0433\u0438, \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	4014: "\u0427\u0442\u043e\u0431\u044b \u0441\u043a\u043e\u043f\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438 \u0432\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0448\u0430\u0433\u0438, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e",
	3001: "\u0413\u0438\u0434 \u0431\u0443\u0434\u0435\u0442 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043e\u0440\u0442\u0430 \u0432 \u0431\u043b\u0438\u0436\u0430\u0439\u0448\u0435\u0435 \u0432\u0440\u0435\u043c\u044f. \u0427\u0442\u043e\u0431\u044b \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441, \u043f\u0435\u0440\u0435\u0439\u0434\u0438\u0442\u0435 \u0432 \u00ab\u0421\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0437\u0430\u0434\u0430\u0447\u0438\u00bb \u0432 \u043c\u0435\u043d\u044e \u0443\u0447\u0435\u0442\u043d\u043e\u0439 \u0437\u0430\u043f\u0438\u0441\u0438",
	3002: "\u0417\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0430\u0447\u0430\u043b\u0430\u0441\u044c. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u0435 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0439\u0442\u0435 \u0438 \u043d\u0435 \u0437\u0430\u043a\u0440\u044b\u0432\u0430\u0439\u0442\u0435 \u0431\u0440\u0430\u0443\u0437\u0435\u0440 \u0434\u043e \u0442\u0435\u0445 \u043f\u043e\u0440, \u043f\u043e\u043a\u0430 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0438\u0442\u044c \u0441\u0442\u0430\u0442\u0443\u0441 \u0438\u043c\u043f\u043e\u0440\u0442\u0430 \u043f\u043e\u0441\u043b\u0435 \u0435\u0433\u043e \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u044f",
	3003: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3004: "\u0418\u0434\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b \u0443\u0436\u0435 \u043f\u043e\u0434\u0442\u0432\u0435\u0440\u0436\u0434\u0435\u043d",
	3005: "\u042d\u0442\u043e\u0442 URL-\u0430\u0434\u0440\u0435\u0441 \u043a\u043e\u043d\u0444\u043b\u0438\u043a\u0442\u0443\u0435\u0442 \u0441 \u0434\u0440\u0443\u0433\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0435\u0439 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f, \u043f\u043e\u043f\u0440\u043e\u0431\u0443\u0439\u0442\u0435 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 URL-\u0430\u0434\u0440\u0435\u0441",
	3006: "\u041f\u0430\u043f\u043a\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043e\u0434\u043d\u043e\u043c\u0443 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044e",
	3007: "\u0414\u043e\u043c\u0435\u043d \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3008: "\u0412\u044b \u0434\u043e\u0441\u0442\u0438\u0433\u043b\u0438 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u0440\u0435\u0434\u0435\u043b\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u0445 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432",
	3009: "\u041e\u043f\u0440\u043e\u0441 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0432 \u0434\u0430\u043d\u043d\u043e\u043c \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0435",
	3010: "\u0428\u0430\u0433 \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043e\u0434\u043d\u043e\u043c\u0443 \u0438 \u0442\u043e\u043c\u0443 \u0436\u0435 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0443",
	3011: "\u0414\u0435\u044f\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u044d\u0442\u043e\u0439 \u041e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438 \u043f\u0440\u0438\u043e\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c",
	3012: "\u0413\u0438\u0434(\u044b) \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u043d\u0430\u0434\u043b\u0435\u0436\u0430\u0442\u044c \u043a \u043e\u0434\u043d\u043e\u0439 \u043f\u0430\u043f\u043a\u0435",
	3013: "\u042d\u0442\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u043e \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0441 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0439 \u043f\u0430\u0440\u043e\u0439 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432 \u0438 \u0438\u043c\u0435\u043d\u0435\u043c \u043f\u043e\u043b\u044f",
	3014: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d",
	3015: "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0443\u0436\u0435 \u0432\u0435\u0440\u0438\u0444\u0438\u0446\u0438\u0440\u043e\u0432\u0430\u043d",
	3017: "OTP \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u0435\u043d \u043d\u0430 \u0432\u0430\u0448 \u0430\u0434\u0440\u0435\u0441 \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0439 \u043f\u043e\u0447\u0442\u044b",
	3018: "\u0420\u043e\u043b\u044c \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3019: "\u0421\u0442\u0440\u0430\u043d\u0430 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3020: "\u0413\u043e\u0440\u043e\u0434 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442",
	3023: "\u0412\u0430\u0448\u0430 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u0435\u043d\u0430. \u0417\u0430 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u043e\u0431\u0440\u0430\u0449\u0430\u0439\u0442\u0435\u0441\u044c \u0432 support@csod.com",
	3024: "\u0424\u0430\u0439\u043b JSON \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0439 \u043e\u0440\u0433\u0430\u043d\u0438\u0437\u0430\u0446\u0438\u0438",
	3025: "\u041c\u044b \u0441\u0442\u043e\u043b\u043a\u043d\u0443\u043b\u0438\u0441\u044c \u0441 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u043e\u0439 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0430\u0443\u0442\u0435\u043d\u0442\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0438. \u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443. \u0415\u0441\u043b\u0438 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u0430 \u043d\u0435 \u0443\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u0430, \u043e\u0431\u043d\u043e\u0432\u0438\u0442\u0435 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0438 \u043f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u043e\u043f\u044b\u0442\u043a\u0443",
	3026: "\u0424\u0430\u0439\u043b JSON \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d \u0434\u043b\u044f \u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430",
	3027: "\u0428\u0430\u0433 \u043d\u0435\u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d. \u0421\u043e\u0437\u0434\u0430\u0439\u0442\u0435 \u0445\u043e\u0442\u044f \u0431\u044b \u043e\u0434\u0438\u043d \u0448\u0430\u0433 \u0434\u043b\u044f \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430",
	3028: "\u0414\u043e\u0441\u0442\u0438\u0433\u043d\u0443\u0442 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043b\u0438\u043c\u0438\u0442 \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0442\u0443\u0440\u0430",
	3047: "\u0412\u0430\u0448\u0430 \u0443\u0447\u0435\u0442\u043d\u0430\u044f \u0437\u0430\u043f\u0438\u0441\u044c \u0431\u044b\u043b\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0438\u0437-\u0437\u0430 \u0447\u0440\u0435\u0437\u043c\u0435\u0440\u043d\u044b\u0445 \u043e\u0448\u0438\u0431\u043e\u043a \u0432\u0445\u043e\u0434\u0430 \u0432 \u0441\u0438\u0441\u0442\u0435\u043c\u0443. \u041c\u044b \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u043b\u0438 \u0432\u0430\u043c \u044d\u043b\u0435\u043a\u0442\u0440\u043e\u043d\u043d\u043e\u0435 \u043f\u0438\u0441\u044c\u043c\u043e \u0441 \u0438\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c\u0438 \u043f\u043e \u0435\u0433\u043e \u0440\u0430\u0437\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u043a\u0435. \u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u043c\u0438 \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 support@csod.com",
	3033: "\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0443\u0447\u0435\u0442\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435. \u041f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u0441\u0432\u044f\u0436\u0438\u0442\u0435\u0441\u044c \u0441 support@csod.com \u0438\u043b\u0438 \u0432\u0430\u0448\u0438\u043c \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u043e\u043c \u0434\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043e\u043c\u043e\u0449\u0438.",
	4020: "\u041f\u0440\u043e\u0435\u043a\u0442 \u043d\u0430\u0441\u0442\u043e\u044f\u0449\u0435\u0433\u043e \u0420\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442; \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u043e\u0432 \u0440\u0443\u043a\u043e\u0432\u043e\u0434\u0441\u0442\u0432\u0430 \u043d\u0435 \u0434\u043e\u043f\u0443\u0441\u043a\u0430\u044e\u0442\u0441\u044f.",
	4021: "\u041d\u0435\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0430 [envs]",
	2054: "\u0421\u0442\u0430\u0440\u044b\u0439 \u0438 \u043d\u043e\u0432\u044b\u0439 \u043f\u0430\u0440\u043e\u043b\u044c \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u043e\u0434\u0438\u043d\u0430\u043a\u043e\u0432\u044b\u043c\u0438",
	playNextBotTour: "\u0412\u043E\u0441\u043F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0439 \u0431\u043E\u0442-\u0442\u0443\u0440",
	defaultBotEndingMessage: "\u041C\u044B \u0437\u0430\u043A\u043E\u043D\u0447\u0438\u043B\u0438, \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u0441\u043F\u0430\u0441\u0438\u0431\u043E! \u0427\u0442\u043E-\u043D\u0438\u0431\u0443\u0434\u044C \u0435\u0449\u0435, \u043F\u0440\u0435\u0436\u0434\u0435 \u0447\u0435\u043C \u044F \u043D\u0430\u0447\u043D\u0443?",
	loginNext: "\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439",
	3068: "\u0421\u0440\u043E\u043A \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0432\u0430\u0448\u0435\u0433\u043E \u0441\u0442\u0430\u0440\u043E\u0433\u043E \u043F\u0430\u0440\u043E\u043B\u044F \u0438\u0441\u0442\u0435\u043A, \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u0435 \u043D\u043E\u0432\u044B\u0439 \u043F\u0430\u0440\u043E\u043B\u044C \u0434\u043B\u044F \u0432\u0445\u043E\u0434\u0430.",
	includeScreen: "\u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0441\u043D\u0438\u043C\u043E\u043A \u044D\u043A\u0440\u0430\u043D\u0430",
	feedbackPlaceholder: "\u0415\u0441\u0442\u044C \u043E\u0442\u0437\u044B\u0432\u044B? \u041C\u044B \u0445\u043E\u0442\u0435\u043B\u0438 \u0431\u044B \u0443\u0441\u043B\u044B\u0448\u0430\u0442\u044C \u044D\u0442\u043E!",
	feedbackOptBtn: "\u041D\u0430\u0436\u043C\u0438\u0442\u0435, \u0447\u0442\u043E\u0431\u044B \u0432\u044B\u0434\u0435\u043B\u0438\u0442\u044C \u0438\u043B\u0438 \u0441\u043A\u0440\u044B\u0442\u044C \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E",
	highlight: "\u0412\u044B\u0434\u0435\u043B\u044F\u0442\u044C",
	send: "\u041E\u0442\u043F\u0440\u0430\u0432\u043B\u044F\u0442\u044C",
	done: "\u0421\u0434\u0435\u043B\u0430\u043D\u043D\u044B\u0439",
	hide: "\u0421\u043A\u0440\u044B\u0432\u0430\u0442\u044C"
};
GmCXt.playerSvgs = {
	iconPopupDrag: '<svg width="17" height="17" viewBox="0 0 17 17" fill="none">' +
		'<path d="M13.9443 7.55643H9.4991C9.18045 7.55643 8.93013 7.81896 8.93013 8.13378C8.93013 8.45074 9.18256 8.70806 9.4991 8.70806H13.9435L13.0248 9.64754C12.8048 9.87252 12.8048 10.2329 13.0248 10.4579C13.1353 10.5709 13.2802 10.6285 13.4288 10.6285C13.5774 10.6285 13.7224 10.5709 13.8328 10.4579L15.7107 8.53744C15.9307 8.31246 15.9307 7.95203 15.7107 7.72705L13.8328 5.80656C13.6104 5.57906 13.2503 5.57906 13.0278 5.80656C12.8079 6.03152 12.8078 6.39192 13.0278 6.6169L13.0277 6.61678L13.1708 6.47716L13.0278 6.61695L13.9443 7.55643Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M2.84286 10.4579C2.9533 10.5709 3.09821 10.6285 3.24684 10.6285C3.39547 10.6285 3.54038 10.5709 3.65082 10.4579C3.87081 10.2329 3.87081 9.87252 3.65082 9.64754L2.73219 8.70806H7.17656C7.49416 8.70806 7.74553 8.4466 7.74553 8.13378C7.74553 7.8231 7.49625 7.55643 7.17656 7.55643H2.7314L3.64782 6.61695L3.50482 6.47712L3.64799 6.61678L3.64787 6.6169C3.86781 6.39192 3.8678 6.03152 3.64782 5.80656C3.42538 5.57906 3.0653 5.57906 2.84286 5.80656L0.964993 7.72705C0.745002 7.95203 0.745002 8.31246 0.964993 8.53744L2.84286 10.4579Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M6.06066 3.32867C6.27841 3.55932 6.64328 3.55681 6.86178 3.32955L7.76905 2.40168V6.94241C7.76905 7.25723 8.01938 7.51976 8.33803 7.51976C8.65668 7.51976 8.907 7.25723 8.907 6.94241V2.40168L9.81493 3.33021C9.92537 3.44316 10.0703 3.50083 10.2189 3.50083C10.3675 3.50083 10.5124 3.44316 10.6229 3.33021C10.8429 3.10523 10.8429 2.7448 10.6229 2.51981L8.74501 0.599317C8.52857 0.377962 8.15649 0.377962 7.94004 0.599317L6.06216 2.51981C5.84267 2.74429 5.84217 3.10358 6.06066 3.32867Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M7.76917 13.86L6.86126 12.9314C6.63882 12.7039 6.27874 12.7039 6.0563 12.9314C5.83631 13.1564 5.83631 13.5168 6.0563 13.7418L7.93417 15.6623C8.04012 15.7707 8.18439 15.8329 8.33815 15.8329C8.48804 15.8329 8.63556 15.7713 8.74213 15.6623L10.62 13.7418C10.84 13.5168 10.84 13.1564 10.62 12.9314C10.3976 12.7039 10.0375 12.7039 9.81503 12.9314L8.90712 13.86V9.31924H8.90714L8.9071 9.31637C8.90264 9.00646 8.65933 8.74189 8.33815 8.74189C8.0195 8.74189 7.76917 9.00443 7.76917 9.31924V13.86Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'</svg>',
	iconStepAutoGear: '<svg width="35px" height="35px" viewBox="0 0 35 35" version="1.1" >' +
		'<g id="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="Desktop" transform="translate(-235.000000, -594.000000)" fill-rule="nonzero">' +
		'<g id="automation-step-popup" transform="translate(186.000000, 576.000000)">' +
		'<g class="Group-3" transform="translate(49.000000, 18.000000)">' +
		'<path d="M35,19.3074463 L35,15.6868582 L32.3417597,14.7818585 C32.1983895,13.9709332 31.9833343,13.1875035 31.7172156,12.425874 L33.5633522,10.314208 L31.7533528,7.18284608 L28.9951462,7.72136805 C28.7225464,7.41223837 28.4495539,7.1105718 28.1690983,6.83050895 C27.8819651,6.54337579 27.5802985,6.26390214 27.2715616,5.99797991 L27.8175467,3.24684361 L24.6852029,1.43743337 L22.5670557,3.28219516 C21.8119073,3.01077381 21.0300488,2.80161046 20.2181415,2.65116997 L19.3131418,0 L15.6860726,0 L14.7800909,2.65116997 C13.9691656,2.80141406 13.1863251,3.01057741 12.4256776,3.28219516 L10.3134224,1.43743337 L7.1816677,3.24684361 L7.72765277,5.99797991 C7.41852309,6.26350934 7.10978621,6.54357219 6.82972336,6.83050895 C6.53551989,7.1186241 6.25604624,7.42736098 5.98953482,7.74356097 L5.99660513,7.72195724 L3.24645082,7.18343527 L1.43546939,10.3147971 L3.28160597,12.4264632 C3.01607654,13.1880927 2.80102127,13.9780035 2.65018798,14.7824477 L-1.42108547e-14,15.6874474 L-1.42108547e-14,19.3080355 L2.65018798,20.2130352 C2.80102127,21.0239605 3.01666573,21.8148533 3.28160597,22.5690197 L1.43546939,24.6806857 L3.24645082,27.8185287 L5.99660513,27.2725436 C6.26311655,27.5812805 6.5425902,27.8833399 6.82972336,28.170473 C7.11685652,28.4585882 7.42657539,28.738651 7.73472308,29.0035913 L7.1816677,31.7482465 L10.3204927,33.564727 L12.4260704,31.7189832 C13.1867179,31.9849054 13.9772179,32.2001571 14.7804837,32.3439201 L15.6864654,35 L19.3135346,35 L20.2185343,32.3439201 C21.0304416,32.2001571 21.8123001,31.9849054 22.5745188,31.7103417 L24.6855956,33.5645306 L27.8179395,31.7480501 L27.2719544,28.9959318 C27.5806913,28.7300095 27.8823579,28.4515179 28.169491,28.1698838 C28.4499467,27.8827507 28.7296167,27.5806913 28.995539,27.2719544 L31.7537456,27.8179395 L33.563745,24.6800965 L31.7176084,22.5684305 C31.9835307,21.8142641 32.1987823,21.0239605 32.3421525,20.212446 L35,19.3074463 Z M17.5033388,22.5821783 C14.6883733,22.5821783 12.4111442,20.3065204 12.4111442,17.4986252 C12.4111442,14.6885697 14.6881769,12.4131081 17.5033388,12.4131081 C20.3114303,12.4131081 22.5888558,14.6887661 22.5888558,17.4986252 C22.588463,20.3065204 20.3112339,22.5821783 17.5033388,22.5821783 Z" class="shape" fill="#454560"></path>' +
		'<path d="M17.5032383,9.77477477 C13.2315636,9.77477477 9.77477477,13.2323075 9.77477477,17.4975465 C9.77477477,21.7621966 13.2315636,25.2252252 17.5032383,25.2252252 C21.7678476,25.2252252 25.2252252,21.7621966 25.2252252,17.4975465 C25.2246364,13.2319149 21.7678476,9.77477477 17.5032383,9.77477477 Z M17.5032383,21.5831861 C15.2407129,21.5831861 13.4103596,19.7536282 13.4103596,17.4975465 C13.4103596,15.2408758 15.2407129,13.4097477 17.5032383,13.4097477 C19.7596797,13.4097477 21.5884628,15.2408758 21.5884628,17.4975465 C21.5884628,19.7536282 19.7590909,21.5831861 17.5032383,21.5831861 Z" class="shape" fill="#454560"></path>' +
		'<path d="M17.6621871,7.25225225 C12.0838459,7.25225225 7.56756757,11.7679398 7.56756757,17.3387975 C7.56756757,22.9096553 12.083649,27.4324324 17.6621871,27.4324324 C23.2330449,27.4324324 27.7477477,22.9092614 27.7477477,17.3387975 C27.7477477,11.767349 23.2330449,7.25225225 17.6621871,7.25225225 Z M17.6621871,23.1485358 C14.4452767,23.1485358 11.8443746,20.5470429 11.8443746,17.3387975 C11.8443746,14.1313399 14.4452767,11.5284685 17.6621871,11.5284685 C20.8700386,11.5284685 23.4715315,14.1313399 23.4715315,17.3387975 C23.4715315,20.5472398 20.8702355,23.1485358 17.6621871,23.1485358 Z" class="shape" fill="#56E7CE"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	iconPopupEdit: '<svg width="15" height="15" viewBox="0 0 15 15" fill="none" >' +
		'<path d="M12.9655 1.65245C12.1867 0.873663 10.9241 0.873663 10.1453 1.65245L2.23938 9.55838C2.18519 9.61256 2.14607 9.67973 2.12565 9.75347L1.08599 13.5068C1.04324 13.6607 1.08669 13.8255 1.19955 13.9386C1.31259 14.0514 1.47738 14.0949 1.63127 14.0523L5.38465 13.0125C5.45839 12.992 5.52555 12.9529 5.57973 12.8987L13.4855 4.99263C14.2631 4.21333 14.2631 2.95176 13.4855 2.17245L12.9655 1.65245ZM3.20494 9.84642L9.67533 3.37586L11.7621 5.46261L5.29152 11.9332L3.20494 9.84642ZM2.78811 10.6829L4.45526 12.3502L2.14919 12.9891L2.78811 10.6829ZM12.8589 4.366L12.3889 4.83598L10.302 2.74905L10.7721 2.27908C11.2047 1.8465 11.9061 1.8465 12.3387 2.27908L12.8589 2.79908C13.2907 3.23218 13.2907 3.93307 12.8589 4.366Z" fill="#757575" stroke="#757575" stroke-width="0.5" />' +
		'</svg>',
	iconClosePopup: '<svg width="12" height="12" viewBox="0 0 12 13" fill="none" > ' +
		'<path d = "M6.90481 6.67981L11.5191 1.96076C11.8058 1.66783 11.8058 1.19252 11.5191 0.89958C11.2324 0.60639 10.7682 0.60639 10.4815 0.89958L5.86718 5.61863L1.25264 0.89958C0.965959 0.60639 0.501692 0.60639 0.215011 0.89958C-0.0716703 1.19252 -0.0716703 1.66783 0.215011 1.96076L4.82955 6.67981L0.215011 11.3989C-0.0716703 11.6918 -0.0716703 12.1671 0.215011 12.46C0.358352 12.6064 0.546211 12.6797 0.733826 12.6797C0.92144 12.6797 1.1093 12.6064 1.25264 12.4598L5.86718 7.74075L10.4815 12.4598C10.6248 12.6064 10.8127 12.6797 11.0003 12.6797C11.1879 12.6797 11.3758 12.6064 11.5191 12.4598C11.8058 12.1669 11.8058 11.6915 11.5191 11.3986L6.90481 6.67981Z"' +
		'fill = "#666666"' +
		' fill-opacity="0.9"  />' +
		'</svg>',
	iconPause: '<svg width="15px" height="21px" viewBox="0 0 15 21" version="1.1" >' +
		'<g id="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g id="Automation-Setp-POPUP" transform="translate(-765.000000, -999.000000)" fill="#FFFFFE">' +
		'<g id="automation-step-popup-copy" transform="translate(198.000000, 736.000000)">' +
		'<path d="M580.5,263 L577.5,263 C576.672,263 576,263.672 576,264.5 L576,282.5 C576,283.328 576.672,284 577.5,284 L580.5,284 C581.328,284 582,283.328 582,282.5 L582,264.5 C582,263.672 581.328,263 580.5,263 L580.5,263 Z M571.5,263 L568.5,263 C567.672,263 567,263.672 567,264.5 L567,282.5 C567,283.328 567.672,284 568.5,284 L571.5,284 C572.328,284 573,283.328 573,282.5 L573,264.5 C573,263.672 572.328,263 571.5,263 L571.5,263 Z" id="Fill-125"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	iconClassicNavNext: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g><g><path d="M37.3,27.1L17.2,45.1c-1.3,1.2-3.3,1.2-4.6,0c-1.3-1.2-1.3-3,0-4.1l17.8-16L12.6,9c-1.3-1.2-1.3-3,0-4.1' +
		'c1.3-1.2,3.3-1.2,4.6,0l20.1,18.1c0.7,0.5,1,1.3,1,2.1S38,26.5,37.3,27.1z"/>' +
		'</g></g>' +
		'</svg>',
	iconClassicNavPrev: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g><g>' +
		'<path d="M11.7,25c0-0.7,0.3-1.5,1-2.1L32.8,4.9c1.3-1.2,3.3-1.2,4.6,0s1.3,3,0,4.1L19.6,25l17.8,16c1.3,1.2,1.3,3,0,4.1' +
		'c-1.3,1.2-3.3,1.2-4.6,0L12.7,27.1C12,26.5,11.7,25.7,11.7,25z"/> </g></g>' +
		'</svg>',
	iconPlayStepNext: '<svg  width="12px" height="12px" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve">' +
		'<g> <g><path d="M29.2,27.3L9.1,47.4c-1.3,1.3-3.4,1.3-4.6,0c-1.3-1.3-1.3-3.3,0-4.6L22.2,25L4.5,7.2c-1.3-1.3-1.3-3.3,0-4.6' +
		'c1.3-1.3,3.3-1.3,4.6,0l20.1,20.1c0.6,0.6,1,1.5,1,2.3C30.1,25.8,29.8,26.7,29.2,27.3z"/></g><g>' +
		'<path d="M45.5,27.3L25.4,47.4c-1.3,1.3-3.4,1.3-4.6,0c-1.3-1.3-1.3-3.3,0-4.6L38.6,25L20.8,7.2c-1.3-1.3-1.3-3.3,0-4.6' +
		'c1.3-1.3,3.3-1.3,4.6,0l20.1,20.1c0.6,0.6,1,1.5,1,2.3C46.5,25.8,46.2,26.7,45.5,27.3z"/> </g></g>' +
		'</svg>',
	iconStepPlayAudioOn: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask id="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM12.999 10.8197L12.6392 11.167L12.6392 11.167L12.999 10.8197ZM13.0021 10.3221L13.3573 10.674L13.3574 10.674L13.0021 10.3221ZM13.002 5.94458L13.3572 5.5927L13.3572 5.59269L13.002 5.94458ZM12.9989 5.44696L12.6392 5.09964L12.6391 5.09974L12.9989 5.44696ZM13.4854 5.44372L13.8407 5.09185L13.8405 5.09174L13.4854 5.44372ZM13.4855 10.8228L13.1302 10.471L13.1301 10.4712L13.4855 10.8228ZM15.601 12.4459L15.9608 12.0987L15.9607 12.0987L15.601 12.4459ZM16.0875 12.4491L15.7323 12.0973L15.7322 12.0974L16.0875 12.4491ZM16.0875 3.81778L16.4427 3.46595L16.4427 3.46593L16.0875 3.81778ZM15.6009 3.82095L15.2412 3.47368L15.2412 3.47372L15.6009 3.82095ZM15.604 4.31856L15.2487 4.67036L15.2488 4.6704L15.604 4.31856ZM15.6041 11.9483L15.9593 12.3002L15.9594 12.3002L15.6041 11.9483ZM9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841ZM6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178ZM6.57612 13.6173L6.57686 13.6179L7.183 12.8225L7.18226 12.822L6.57612 13.6173ZM3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574ZM1.34404 11.4467H3.79765V10.4467H1.34404V11.4467ZM0.5 10.5949C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5ZM0.5 5.67172V10.5949H1.5V5.67172H0.5ZM1.34404 4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987ZM3.79778 4.81987H1.34404V5.81987H3.79778V4.81987ZM9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489ZM10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677ZM11.1122 0.985114C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122ZM11.1122 15.2815V0.985114H10.1122V15.2815H11.1122ZM10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316ZM10.2682 16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333ZM3.90323 9.74307H1.68808V10.7431H3.90323V9.74307ZM4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215ZM7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258ZM10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062ZM9.42413 1.68434V14.6139H10.4241V1.68434H9.42413ZM4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449ZM3.90333 6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361ZM1.68808 6.52361H3.90333V5.52361H1.68808V6.52361ZM2.18808 10.2431V6.02361H1.18808V10.2431H2.18808ZM12.6392 11.167C12.8034 11.3371 13.0232 11.4244 13.2438 11.4244V10.4244C13.2868 10.4244 13.3292 10.4419 13.3587 10.4725L12.6392 11.167ZM12.6468 9.97028C12.3202 10.3 12.3171 10.8333 12.6392 11.167L13.3587 10.4725C13.4138 10.5296 13.4135 10.6173 13.3573 10.674L12.6468 9.97028ZM13.4003 8.13331C13.4003 8.82872 13.1329 9.47944 12.6468 9.97029L13.3574 10.674C14.0298 9.99498 14.4003 9.09103 14.4003 8.13331H13.4003ZM12.6468 6.29645C13.1329 6.78718 13.4003 7.43784 13.4003 8.13331H14.4003C14.4003 7.17552 14.0297 6.27158 13.3572 5.5927L12.6468 6.29645ZM12.6391 5.09974C12.317 5.43348 12.3202 5.96676 12.6468 6.29647L13.3572 5.59269C13.4134 5.64936 13.4138 5.73706 13.3586 5.79418L12.6391 5.09974ZM13.8405 5.09174C13.5078 4.75604 12.9675 4.75964 12.6392 5.09964L13.3585 5.79427C13.2973 5.85765 13.1925 5.85844 13.1303 5.7957L13.8405 5.09174ZM15.0884 8.13328C15.0884 6.98605 14.6453 5.90416 13.8407 5.09185L13.1302 5.79559C13.7482 6.41946 14.0884 7.24796 14.0884 8.13328H15.0884ZM13.8408 11.1747C14.6453 10.3623 15.0884 9.28048 15.0884 8.13328H14.0884C14.0884 9.01856 13.7482 9.84704 13.1302 10.471L13.8408 11.1747ZM13.2438 11.4244C13.4608 11.4244 13.6773 11.3398 13.8409 11.1745L13.1301 10.4712C13.1596 10.4414 13.2013 10.4244 13.2438 10.4244V11.4244ZM15.8458 12.0506C15.8889 12.0506 15.9312 12.0681 15.9608 12.0987L15.2412 12.7931C15.4053 12.9632 15.6252 13.0506 15.8458 13.0506V12.0506ZM15.7322 12.0974C15.7618 12.0675 15.8035 12.0506 15.8458 12.0506V13.0506C16.0628 13.0506 16.2793 12.9661 16.4429 12.8009L15.7322 12.0974ZM17.3576 8.13354C17.3576 9.63294 16.7805 11.0389 15.7323 12.0973L16.4428 12.801C17.6775 11.5543 18.3576 9.89499 18.3576 8.13354H17.3576ZM15.7322 4.16961C16.7805 5.22815 17.3576 6.63418 17.3576 8.13354H18.3576C18.3576 6.37212 17.6775 4.71279 16.4427 3.46595L15.7322 4.16961ZM15.9607 4.16822C15.8994 4.23171 15.7945 4.23249 15.7322 4.16963L16.4427 3.46593C16.11 3.13003 15.5695 3.13363 15.2412 3.47368L15.9607 4.16822ZM15.9593 3.96676C16.0154 4.02343 16.0158 4.1111 15.9607 4.16817L15.2412 3.47372C14.9191 3.80742 14.9222 4.3406 15.2487 4.67036L15.9593 3.96676ZM17.6696 8.13354C17.6696 6.56169 17.062 5.0802 15.9593 3.96673L15.2488 4.6704C16.1652 5.59574 16.6696 6.82397 16.6696 8.13354H17.6696ZM15.9594 12.3002C17.062 11.1868 17.6696 9.70542 17.6696 8.13354H16.6696C16.6696 9.44315 16.1652 10.6713 15.2489 11.5965L15.9594 12.3002ZM15.9607 12.0987C16.0159 12.1558 16.0155 12.2435 15.9593 12.3002L15.2489 11.5964C14.9223 11.9262 14.9191 12.4595 15.2413 12.7932L15.9607 12.0987Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	iconStepPlayAudioOff: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask id="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17" />' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" />' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" fill="#757575" />' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM15.9422 8.50005L15.5886 8.14651L15.2351 8.50006L15.5886 8.85361L15.9422 8.50005ZM17.9084 6.53378L17.555 6.18009L17.5548 6.18024L17.9084 6.53378ZM17.9084 10.4662L17.5548 10.8198L17.555 10.8199L17.9084 10.4662ZM17.9084 10.9084L17.555 10.5547L17.5548 10.5548L17.9084 10.9084ZM17.4662 10.9084L17.8198 10.5548L17.8198 10.5548L17.4662 10.9084ZM15.5001 8.94211L15.8536 8.58856L15.5001 8.235L15.1465 8.58855L15.5001 8.94211ZM13.5338 10.9084L13.1802 10.5548L13.1802 10.5548L13.5338 10.9084ZM13.0916 10.9085L12.7382 11.2622L12.7384 11.2623L13.0916 10.9085ZM13.0916 10.4663L13.445 10.82L13.4452 10.8199L13.0916 10.4663ZM15.0579 8.50005L15.4115 8.85361L15.765 8.50005L15.4115 8.1465L15.0579 8.50005ZM13.0916 6.53378L13.4452 6.18023L13.445 6.18009L13.0916 6.53378ZM13.0916 6.09162L13.445 6.44532L13.4452 6.44517L13.0916 6.09162ZM13.5338 6.09162L13.1802 6.44517L13.1802 6.44518L13.5338 6.09162ZM15.5001 8.05789L15.1465 8.41145L15.5001 8.765L15.8536 8.41144L15.5001 8.05789ZM17.4662 6.09162L17.1127 5.73807L17.1127 5.73808L17.4662 6.09162ZM17.9084 6.09162L17.5548 6.44517L17.555 6.44532L17.9084 6.09162ZM10.2682 15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333ZM10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529ZM10.1122 15.2815C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122ZM10.1122 0.985114V15.2815H11.1122V0.985114H10.1122ZM10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545ZM10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063ZM4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058ZM1.34404 5.81987H3.79778V4.81987H1.34404V5.81987ZM1.5 5.67172C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5ZM1.5 10.5949V5.67172H0.5V10.5949H1.5ZM1.34404 10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467ZM3.79765 10.4467H1.34404V11.4467H3.79765V10.4467ZM7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221ZM7.183 12.8225L7.18226 12.822L6.57612 13.6173L6.57686 13.6179L7.183 12.8225ZM10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616ZM1.68808 10.7431H3.90323V9.74307H1.68808V10.7431ZM1.18808 6.02361V10.2431H2.18808V6.02361H1.18808ZM3.90333 5.52361H1.68808V6.52361H3.90333V5.52361ZM3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201ZM9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564ZM10.4241 14.6139V1.68434H9.42413V14.6139H10.4241ZM6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531ZM3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147ZM3.90323 10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431ZM16.2958 8.8536L18.2619 6.88733L17.5548 6.18024L15.5886 8.14651L16.2958 8.8536ZM18.2619 10.1127L16.2957 8.1465L15.5886 8.85361L17.5548 10.8198L18.2619 10.1127ZM18.2618 11.2621C18.5794 10.9447 18.5794 10.4299 18.2618 10.1125L17.555 10.8199C17.4817 10.7467 17.4817 10.6279 17.555 10.5547L18.2618 11.2621ZM17.6873 11.5C17.8946 11.5 18.1034 11.4205 18.2619 11.2619L17.5548 10.5548C17.5912 10.5184 17.64 10.5 17.6873 10.5V11.5ZM17.1127 11.2619C17.2712 11.4205 17.4801 11.5 17.6873 11.5V10.5C17.7347 10.5 17.7834 10.5184 17.8198 10.5548L17.1127 11.2619ZM15.1465 9.29565L17.1127 11.2619L17.8198 10.5548L15.8536 8.58856L15.1465 9.29565ZM13.8873 11.2619L15.8536 9.29566L15.1465 8.58855L13.1802 10.5548L13.8873 11.2619ZM13.3127 11.5C13.5199 11.5 13.7288 11.4205 13.8873 11.2619L13.1802 10.5548C13.2166 10.5184 13.2653 10.5 13.3127 10.5V11.5ZM12.7384 11.2623C12.8968 11.4205 13.1055 11.5 13.3127 11.5V10.5C13.36 10.5 13.4086 10.5184 13.4449 10.5546L12.7384 11.2623ZM12.7382 10.1126C12.4206 10.43 12.4206 10.9448 12.7382 11.2622L13.445 10.5548C13.5183 10.628 13.5183 10.7468 13.445 10.82L12.7382 10.1126ZM14.7044 8.1465L12.7381 10.1128L13.4452 10.8199L15.4115 8.85361L14.7044 8.1465ZM12.7381 6.88734L14.7044 8.85361L15.4115 8.1465L13.4452 6.18023L12.7381 6.88734ZM12.7382 5.73792C12.4206 6.05528 12.4206 6.57013 12.7382 6.88748L13.445 6.18009C13.5183 6.25332 13.5183 6.37208 13.445 6.44532L12.7382 5.73792ZM13.8873 5.73808C13.5699 5.42064 13.0555 5.42064 12.7381 5.73808L13.4452 6.44517C13.3721 6.51828 13.2533 6.51828 13.1802 6.44517L13.8873 5.73808ZM15.8536 7.70434L13.8873 5.73807L13.1802 6.44518L15.1465 8.41145L15.8536 7.70434ZM17.1127 5.73808L15.1465 7.70435L15.8536 8.41144L17.8198 6.44517L17.1127 5.73808ZM18.2619 5.73807C17.9445 5.42064 17.4301 5.42064 17.1127 5.73807L17.8198 6.44517C17.7467 6.51828 17.6279 6.51828 17.5548 6.44517L18.2619 5.73807ZM18.2618 6.88748C18.5794 6.57013 18.5794 6.05528 18.2618 5.73793L17.555 6.44532C17.4817 6.37208 17.4817 6.25332 17.555 6.18009L18.2618 6.88748Z" fill="#757575" mask="url(#path-1-outside-1)" />' +
		'</svg>',
	popup_info: '<svg width="24" height="24" viewBox="0 0 24 24" fill="none">' +
		'<circle cx="12" cy="12" r="11.1" stroke="white" stroke-width="1.8"/>' +
		'<rect x="11" y="11" width="2" height="9" rx="1" fill="white"/>' +
		'<circle cx="12" cy="7.5" r="1.5" fill="white"/>' +
		'</svg>',
	fullscreen: '<svg version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 28.361 28.361" style="enable-background:new 0 0 28.361 28.361;" xml:space="preserve">' +
		'<g>' +
		'<g class="c115_arrows">' +
		'<path d="M28.36,19.595c0-0.868-0.665-1.57-1.491-1.57c-0.819,0.002-1.492,0.702-1.492,1.57v3.25l-6.018-6.021 c-0.582-0.583-1.524-0.583-2.106,0c-0.582,0.582-0.582,1.527,0,2.109l5.989,5.987h-3.235c-0.881,0.002-1.591,0.669-1.591,1.491 c0,0.824,0.71,1.49,1.591,1.49h6.761c0.881,0,1.59-0.665,1.593-1.49c-0.003-0.022-0.006-0.039-0.009-0.061 c0.003-0.028,0.009-0.058,0.009-0.087v-6.668H28.36z"/>' +
		'<path d="M9,16.824l-6.015,6.021v-3.25c0-0.868-0.672-1.568-1.493-1.57c-0.824,0-1.49,0.702-1.49,1.57L0,26.264 c0,0.029,0.008,0.059,0.01,0.087c-0.002,0.021-0.006,0.038-0.008,0.061c0.002,0.825,0.712,1.49,1.592,1.49h6.762 c0.879,0,1.59-0.666,1.59-1.49c0-0.822-0.711-1.489-1.59-1.491H5.121l5.989-5.987c0.58-0.582,0.58-1.527,0-2.109 C10.527,16.241,9.584,16.241,9,16.824z"/>' +
		'<path d="M19.359,11.535l6.018-6.017v3.25c0,0.865,0.673,1.565,1.492,1.568c0.826,0,1.491-0.703,1.491-1.568V2.097 c0-0.029-0.006-0.059-0.009-0.085c0.003-0.021,0.006-0.041,0.009-0.062c-0.003-0.826-0.712-1.491-1.592-1.491h-6.761 c-0.881,0-1.591,0.665-1.591,1.491c0,0.821,0.71,1.49,1.591,1.492h3.235l-5.989,5.987c-0.582,0.581-0.582,1.524,0,2.105 C17.835,12.12,18.777,12.12,19.359,11.535z"/>' +
		'<path d="M5.121,3.442h3.234c0.879-0.002,1.59-0.671,1.59-1.492c0-0.826-0.711-1.491-1.59-1.491H1.594 c-0.88,0-1.59,0.665-1.592,1.491C0.004,1.971,0.008,1.991,0.01,2.012C0.008,2.038,0,2.067,0,2.097l0.002,6.672 c0,0.865,0.666,1.568,1.49,1.568c0.821-0.003,1.493-0.703,1.493-1.568v-3.25L9,11.535c0.584,0.585,1.527,0.585,2.11,0 c0.58-0.581,0.58-1.524,0-2.105L5.121,3.442z"/>' +
		'</g>' +
		'<g class="Capa_1_253_">' +
		'</g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'</svg>',
	close_btn: '<svg width="10px" height="10px" viewBox="0 0 14 14" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="step-action-icons" transform="translate(-6.000000, -6.000000)" fill-rule="nonzero" fill="#FFFFFF">' +
		'<g class="down-arrow-copy" transform="translate(5.000000, 5.000000)">' +
		'<g class="download-arrow" transform="translate(1.000000, 1.000000)">' +
		'<path d="M6.81388436,5.99990412 L11.8314316,0.982437076 C12.0561895,0.757682781 12.0561895,0.393320016 11.8314316,0.168565721 C11.6066737,-0.0561885737 11.2423051,-0.0561885737 11.0175472,0.168565721 L6,5.18603276 L0.982452776,0.169332801 C0.757694889,-0.0554214942 0.393326302,-0.0554214942 0.168568415,0.169332801 C-0.0561894717,0.394087095 -0.0561894717,0.75844986 0.168568415,0.983204155 L5.18611564,6.00067119 L0.169335507,11.0173712 C-0.0554223799,11.2421254 -0.0554223799,11.6064882 0.169335507,11.8312425 C0.282097996,11.9432361 0.428612523,12 0.575894141,12 C0.72317576,12 0.870457378,11.9440032 0.982452776,11.8312425 L6,6.81377547 L11.0175472,11.8312425 C11.1303097,11.9432361 11.2768242,12 11.4241059,12 C11.5713875,12 11.7186691,11.9440032 11.8306645,11.8312425 C12.0554224,11.6064882 12.0554224,11.2421254 11.8306645,11.0173712 L6.81388436,5.99990412 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	down_arrow: '<svg width="16" height="20" viewBox="0 0 16 20" fill="none" >' +
		'<path d="M7.35176 19.0648C7.35193 19.065 7.3521 19.0651 7.35227 19.0653C7.37346 19.0865 7.39576 19.1065 7.41892 19.1256C7.42953 19.1343 7.44075 19.1418 7.45166 19.15C7.46468 19.1598 7.47744 19.1699 7.49098 19.179C7.50404 19.1877 7.51757 19.1952 7.53098 19.2032C7.54327 19.2106 7.55526 19.2183 7.56789 19.225C7.58156 19.2323 7.59561 19.2385 7.60957 19.2451C7.62272 19.2513 7.6357 19.2579 7.64919 19.2635C7.66272 19.2691 7.67656 19.2736 7.69031 19.2785C7.70479 19.2837 7.71906 19.2893 7.73384 19.2937C7.74759 19.2979 7.76155 19.301 7.77547 19.3044C7.79056 19.3083 7.80547 19.3125 7.82085 19.3155C7.83696 19.3187 7.8532 19.3206 7.8694 19.3229C7.88277 19.3248 7.89596 19.3274 7.90949 19.3287C7.96965 19.3346 8.03028 19.3346 8.09043 19.3287C8.10397 19.3274 8.11716 19.3248 8.13052 19.3229C8.14672 19.3206 8.16297 19.3187 8.17908 19.3155C8.19446 19.3125 8.20937 19.3083 8.22445 19.3044C8.23833 19.301 8.25234 19.2979 8.26609 19.2937C8.28087 19.2893 8.29518 19.2837 8.30962 19.2785C8.32337 19.2736 8.3372 19.2691 8.35074 19.2635C8.36423 19.2579 8.37721 19.2513 8.39036 19.2451C8.40432 19.2385 8.41837 19.2323 8.43204 19.225C8.44467 19.2183 8.45666 19.2105 8.46895 19.2032C8.48235 19.1952 8.49589 19.1877 8.50895 19.179C8.52249 19.1699 8.53525 19.1598 8.54827 19.15C8.55918 19.1419 8.5704 19.1343 8.58101 19.1256C8.60417 19.1065 8.62647 19.0865 8.64765 19.0653C8.64782 19.0651 8.648 19.065 8.64817 19.0648L15.0648 12.6482C15.4228 12.2902 15.4228 11.7098 15.0648 11.3518C14.7068 10.9938 14.1264 10.9938 13.7685 11.3518L8.91659 16.2036V1.91665C8.91659 1.41039 8.5062 1 7.99994 1C7.49368 1 7.08329 1.41039 7.08329 1.91665V16.2036L2.23147 11.3518C1.8735 10.9938 1.29308 10.9938 0.935105 11.3518C0.577133 11.7098 0.577133 12.2902 0.935105 12.6482L7.35176 19.0648Z" fill="#ffffff" stroke="#ffffff" stroke-width="0.7" />' +
		'</svg>',
	close_resume: '<svg width="15" height="15" viewBox="0 0 15 15" fill="none" >' +
		'<path d="M8.97536 7.53536L14.9293 13.4893L13.4893 14.9293L7.53536 8.97536L7.5 8.94L7.46464 8.97536L1.51071 14.9293L0.0707109 13.4893L6.02464 7.53536L6.06 7.5L6.02464 7.46464L0.0707107 1.51071L1.51071 0.0707107L7.46464 6.02464L7.5 6.06L7.53536 6.02464L13.4893 0.0707109L14.9293 1.51071L8.97536 7.46464L8.94 7.5L8.97536 7.53536Z" fill="white" stroke="white" stroke-width="0.1" />' +
		'</svg>',
	resume: '<svg width="30" height="30" viewBox="0 0 30 30" fill="none" >' +
		'<circle cx="15" cy="15" r="15" fill="#26273b" />' +
		'<path d="M12 8L22.3846 15.5L12 23V8Z" fill="white" />' +
		'</svg>',
	popup_close: '<svg viewBox="0 0 11 11" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.800000012">' +
		'<g class="Desktop" transform="translate(-598.000000, -109.000000)" fill="#333333">' +
		'<g class="Group-3" transform="translate(546.000000, 108.000000)">' +
		'<path d="M58.3537478,6.51267909 L62.8600942,1.9175241 C63.0539691,1.70602684 63.0453206,1.37891815 62.8405407,1.1779615 C62.6357608,0.97700485 62.3085543,0.974528998 62.1007571,1.17236383 L57.6015073,5.76042205 L52.9177457,1.16526706 C52.7836541,1.02441675 52.5834203,0.967912822 52.3954816,1.01788948 C52.2075429,1.06786613 52.0618215,1.21636649 52.0154005,1.40521871 C51.9689795,1.59407093 52.0292498,1.79320748 52.1726018,1.92462086 L56.8492668,6.51267909 L52.1726018,11.1007373 C51.9747713,11.3085392 51.9772471,11.6357528 52.1781993,11.8405372 C52.3791516,12.0453216 52.7062531,12.0539703 52.9177457,11.8600911 L57.6015073,7.26493612 L62.1007571,11.8529943 C62.3085543,12.0508292 62.6357608,12.0483533 62.8405407,11.8473967 C63.0453206,11.64644 63.0539691,11.3193313 62.8600942,11.1078341 L58.3537478,6.51267909 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	micro_drag: '<svg viewBox="0 0 23 23" fill="none" >' +
		'<path d="M8.67297 4.91634L10.6347 2.95457V8.34838C10.6347 8.57787 10.7259 8.79796 10.8882 8.96023C11.0504 9.1225 11.2705 9.21367 11.5 9.21367C11.7295 9.21367 11.9496 9.1225 12.1119 8.96023C12.2741 8.79796 12.3653 8.57787 12.3653 8.34838V2.95388L14.3278 4.91634C14.49 5.07863 14.7102 5.16981 14.9397 5.16981C15.1692 5.16981 15.3893 5.07863 15.5516 4.91634C15.7139 4.75404 15.8051 4.53393 15.8051 4.30441C15.8051 4.07489 15.7139 3.85478 15.5516 3.69249L12.1119 0.253516C12.0316 0.173143 11.9362 0.109386 11.8312 0.0658876C11.7262 0.0223889 11.6137 0 11.5 0C11.3864 0 11.2738 0.0223889 11.1688 0.0658876C11.0638 0.109386 10.9684 0.173143 10.8881 0.253516L7.44912 3.69249C7.29146 3.85564 7.20418 4.07418 7.20609 4.30106C7.20799 4.52793 7.29893 4.74498 7.45932 4.90545C7.6197 5.06593 7.8367 5.15699 8.06357 5.15903C8.29045 5.16106 8.50904 5.07391 8.67228 4.91634H8.67297Z" fill="white" />' +
		'<path d="M14.3277 18.0832L12.3653 20.0456V14.6511C12.3653 14.4216 12.2741 14.2015 12.1118 14.0393C11.9496 13.877 11.7295 13.7858 11.5 13.7858C11.2705 13.7858 11.0504 13.877 10.8882 14.0393C10.7259 14.2015 10.6347 14.4216 10.6347 14.6511V20.0449L8.67295 18.0825C8.50918 17.9281 8.2917 17.8436 8.06665 17.8469C7.8416 17.8502 7.6267 17.9411 7.46755 18.1002C7.3084 18.2594 7.21752 18.4743 7.21421 18.6993C7.21089 18.9244 7.2954 19.1419 7.44979 19.3056L10.8888 22.7453C10.9691 22.8257 11.0645 22.8894 11.1695 22.9329C11.2745 22.9764 11.387 22.9988 11.5007 22.9988C11.6143 22.9988 11.7269 22.9764 11.8319 22.9329C11.9369 22.8894 12.0323 22.8257 12.1126 22.7453L15.5523 19.3056C15.7098 19.1424 15.797 18.9238 15.795 18.6969C15.7929 18.47 15.7019 18.253 15.5414 18.0927C15.3809 17.9323 15.1639 17.8413 14.937 17.8394C14.7101 17.8375 14.4916 17.9248 14.3284 18.0825L14.3277 18.0832Z" fill="white" />' +
		'<path d="M2.95457 12.3647H8.34838C8.57787 12.3647 8.79796 12.2735 8.96023 12.1112C9.1225 11.949 9.21367 11.7289 9.21367 11.4994C9.21367 11.2699 9.1225 11.0498 8.96023 10.8875C8.79796 10.7253 8.57787 10.6341 8.34838 10.6341H2.95457L4.91634 8.67234C5.07391 8.50911 5.16106 8.29051 5.15903 8.06363C5.15699 7.83676 5.06593 7.61976 4.90545 7.45938C4.74498 7.29899 4.52793 7.20805 4.30106 7.20615C4.07418 7.20424 3.85564 7.29152 3.69249 7.44918L0.253515 10.8882C0.173142 10.9685 0.109385 11.0639 0.0658863 11.1689C0.0223876 11.2739 0 11.3864 0 11.5001C0 11.6137 0.0223876 11.7263 0.0658863 11.8313C0.109385 11.9363 0.173142 12.0317 0.253515 12.112L3.69249 15.5517C3.77285 15.632 3.86825 15.6958 3.97324 15.7393C4.07823 15.7828 4.19077 15.8051 4.30441 15.8051C4.41806 15.8051 4.53059 15.7828 4.63558 15.7393C4.74058 15.6958 4.83598 15.632 4.91634 15.5517C4.9967 15.4713 5.06044 15.3759 5.10393 15.2709C5.14742 15.1659 5.16981 15.0534 5.16981 14.9397C5.16981 14.8261 5.14742 14.7136 5.10393 14.6086C5.06044 14.5036 4.9967 14.4082 4.91634 14.3278L2.95457 12.3647Z" fill="white" />' +
		'<path d="M22.9999 11.4994C22.9999 11.3858 22.9775 11.2732 22.9341 11.1682C22.8906 11.0632 22.8269 10.9678 22.7465 10.8875L19.3069 7.44851C19.1431 7.29412 18.9256 7.20961 18.7006 7.21292C18.4755 7.21624 18.2606 7.30711 18.1015 7.46627C17.9423 7.62542 17.8514 7.84032 17.8481 8.06537C17.8448 8.29042 17.9293 8.5079 18.0837 8.67167L20.0462 10.6334H14.6517C14.4222 10.6334 14.2021 10.7246 14.0398 10.8869C13.8775 11.0491 13.7864 11.2692 13.7864 11.4987C13.7864 11.7282 13.8775 11.9483 14.0398 12.1106C14.2021 12.2728 14.4222 12.364 14.6517 12.364H20.0455L18.083 14.3265C18.0003 14.4062 17.9344 14.5017 17.889 14.6073C17.8436 14.7128 17.8197 14.8264 17.8187 14.9412C17.8177 15.0561 17.8395 15.1701 17.883 15.2764C17.9265 15.3828 17.9907 15.4794 18.0719 15.5607C18.1532 15.6419 18.2498 15.7062 18.3561 15.7498C18.4624 15.7933 18.5763 15.8152 18.6912 15.8143C18.8061 15.8133 18.9197 15.7895 19.0253 15.7441C19.1308 15.6988 19.2263 15.6329 19.3062 15.5503L22.7458 12.1106C22.9082 11.9486 22.9996 11.7288 22.9999 11.4994Z" fill="white" />' +
		'</svg>',
	mplayer_close: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 22 22" fill="none" >' +
		'<path d="M3.32401 3.32414C7.55657 -0.908416 14.4435 -0.908 18.6756 3.32414C22.9077 7.55627 22.9077 14.4432 18.6756 18.6757C14.443 22.9083 7.55615 22.9083 3.32402 18.6757C-0.908127 14.4432 -0.908535 7.55669 3.32401 3.32414ZM14.0365 15.4458C14.4257 15.835 15.0565 15.835 15.4457 15.4458C15.8348 15.0567 15.8348 14.4258 15.4457 14.0367L12.409 10.9999L15.2958 8.11304C15.685 7.72388 15.685 7.09305 15.2958 6.70389C14.9067 6.31474 14.2759 6.31474 13.8867 6.70389L10.9998 9.59079L7.96308 6.55405C7.57392 6.1649 6.94309 6.1649 6.55393 6.55405C6.16472 6.94284 6.16484 7.57411 6.55393 7.9632L9.59066 10.9999L6.40452 14.1861C6.01536 14.5752 6.01536 15.2061 6.40452 15.5952C6.79367 15.9844 7.42451 15.9844 7.81366 15.5952L10.9998 12.4091L14.0365 15.4458Z" fill="white" stroke="#7BA827" stroke-width="0.3" />' +
		'</svg>',

	close: '<svg height="15px" width="15px" version="1.1" id="Capa_1" class="Capa_1" x="0px" y="0px" viewBox="0 0 50 50" style="enable-background:new 0 0 50 50;" xml:space="preserve"><g><g><path d="M46,4C44.9,3,43.2,3,42.1,4L25,21.2L7.9,4C6.8,3,5.1,3,4,4S3,6.8,4,7.9L21.2,25L4,42.1C3,43.2,3,44.9,4,46c0.5,0.5,1.2,0.8,1.9,0.8s1.4-0.3,1.9-0.8L25,28.8L42.1,46c0.5,0.5,1.2,0.8,1.9,0.8c0.7,0,1.4-0.3,1.9-0.8c1.1-1.1,1.1-2.8,0-3.8L28.8,25L46,7.9C47,6.8,47,5.1,46,4z"></path></g></g></svg>',

	slideshow_drag: '<svg width="16" height="16" viewBox="0 0 16 16">' +
		'<g fill="#FFFFFE" fill-rule="evenodd">' +
		'<path d="M10.8 11.825l-2.071 2.06V1.638l2.07 2.06c.191.194.5.194.691 0a.486.486 0 0 0 0-.688L8.61.14a.47.47 0 0 0-.37-.136.47.47 0 0 0-.37.136L4.992 3.01c-.19.194-.19.5 0 .689.19.193.5.193.69 0l2.072-2.061v12.247l-2.071-2.06a.482.482 0 0 0-.69 0 .486.486 0 0 0 0 .688l2.879 2.87a.47.47 0 0 0 .37.136.47.47 0 0 0 .37-.136l2.88-2.87c.19-.194.19-.5 0-.688a.482.482 0 0 0-.691 0"/>' +
		'<path d="M4.178 10.32l-2.06-2.07h12.246l-2.06 2.07a.482.482 0 0 0 0 .691c.189.19.494.19.688 0l2.87-2.88a.47.47 0 0 0 .136-.37.47.47 0 0 0-.135-.37l-2.87-2.879a.486.486 0 0 0-.69 0 .482.482 0 0 0 0 .69l2.061 2.071H2.117l2.06-2.07a.482.482 0 0 0 0-.69.486.486 0 0 0-.688 0L.62 7.391a.47.47 0 0 0-.136.369.47.47 0 0 0 .136.37l2.87 2.88c.194.19.5.19.689 0a.482.482 0 0 0 0-.69"/>' +
		'</g>' +
		'</svg>',
	close_popup: '<svg width="12" height="12" viewBox="0 0 12 13" fill="none" >' +
		'<path d="M6.90481 6.67981L11.5191 1.96076C11.8058 1.66783 11.8058 1.19252 11.5191 0.89958C11.2324 0.60639 10.7682 0.60639 10.4815 0.89958L5.86718 5.61863L1.25264 0.89958C0.965959 0.60639 0.501692 0.60639 0.215011 0.89958C-0.0716703 1.19252 -0.0716703 1.66783 0.215011 1.96076L4.82955 6.67981L0.215011 11.3989C-0.0716703 11.6918 -0.0716703 12.1671 0.215011 12.46C0.358352 12.6064 0.546211 12.6797 0.733826 12.6797C0.92144 12.6797 1.1093 12.6064 1.25264 12.4598L5.86718 7.74075L10.4815 12.4598C10.6248 12.6064 10.8127 12.6797 11.0003 12.6797C11.1879 12.6797 11.3758 12.6064 11.5191 12.4598C11.8058 12.1669 11.8058 11.6915 11.5191 11.3986L6.90481 6.67981Z" fill="#666666" fill-opacity="0.9" />' +
		'</svg>',
	external_link: '<svg class="mgPlayerJSTest_position-center mgPlayerJSTest_width-height-100" viewBox="0 0 17 18" fill="none" >' +
		'<g clip-path="url(#clip)">' +
		'<path d="M13.0266 5.10103C13.1992 5.13132 13.3496 5.22781 13.4505 5.37282C13.5517 5.51647 13.5909 5.69066 13.5604 5.86336L13.4619 5.84599C13.4877 5.69966 13.4547 5.55242 13.3687 5.4304L13.3684 5.42995C13.2825 5.30656 13.1554 5.22515 13.0094 5.19952L13.0093 5.19951L6.98281 4.13688C6.98279 4.13688 6.98278 4.13687 6.98277 4.13687C6.8371 4.11126 6.69018 4.14394 6.56783 4.22962C6.44567 4.31515 6.36472 4.44211 6.33891 4.58775C6.33891 4.58776 6.33891 4.58777 6.3389 4.58778L6.24258 5.13487L6.24255 5.13501C6.21672 5.28049 6.24947 5.4274 6.33513 5.54973C6.4199 5.6708 6.54116 5.74565 6.68823 5.77146L10.2384 6.39115L10.4768 6.43276L10.2786 6.57157L3.68558 11.1881C3.43578 11.363 3.37455 11.7299 3.55106 11.982L3.86985 12.4372C4.0391 12.679 4.38546 12.7337 4.63939 12.568L4.63756 12.5646L11.2152 7.9589L11.4127 7.82064L11.3711 8.05807L10.7544 11.5783L10.7543 11.5784C10.7287 11.7237 10.7626 11.8729 10.8485 11.9955C10.9343 12.118 11.0621 12.2002 11.2079 12.226L11.755 12.3226C11.755 12.3226 11.755 12.3226 11.755 12.3226C11.9009 12.3483 12.048 12.3158 12.17 12.2304C12.2923 12.1447 12.3734 12.0178 12.3991 11.8722L12.3991 11.8722L13.4619 5.84599L13.0266 5.10103ZM13.0266 5.10103L7.00013 4.03839L13.0266 5.10103Z" fill="#666666" stroke="white" stroke-width="0.2" />' +
		'</g>' +
		'<defs>' +
		'<clipPath class="clip">' +
		'<rect width="12" height="12" fill="white" transform="translate(16.8906 10.2871) rotate(145)" />' +
		'</clipPath>' +
		'</defs>' +
		'</svg>',
	testme_result_passed: '<svg width="33px" height="37px" viewBox="0 0 33 37" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Test-Result-for-TestMe-01" transform="translate(-654.000000, -232.000000)" fill-rule="nonzero" fill="#59A847">' +
		'<g class="Group-35" transform="translate(407.000000, 180.000000)">' +
		'<g class="Group-34" transform="translate(14.000000, 41.000000)">' +
		'<g class="like-(2)" transform="translate(229.000000, 9.000000)">' +
		'<path d="M36.1574,25.1045131 C36.681,24.5365796 37,23.7869359 37,22.9667458 C37,21.1988124 35.5194,19.760095 33.7,19.760095 L27.2950667,19.760095 C27.9294,17.8895487 28.2,15.407601 28.2,14.3437055 L28.2,13.2755344 C28.2,10.9182898 26.2258667,9 23.8,9 L22.7,9 C22.1954667,9 21.7554667,9.33349169 21.633,9.80950119 L21.0338667,12.1389549 C20.1942,15.4011876 17.5285333,19.0004751 14.7697333,19.6546318 C14.2864667,18.4660333 13.0933333,17.6223278 11.7,17.6223278 L5.1,17.6223278 C4.4928,17.6223278 4,18.1011876 4,18.6912114 L4,37.9311164 C4,38.5211401 4.4928,39 5.1,39 L11.7,39 C13.0119333,39 14.1471333,38.2524941 14.6788,37.172209 L18.4584,38.3964371 C19.6940667,38.7969121 20.9818,39 22.2849333,39 L31.5,39 C33.3194,39 34.8,37.5612827 34.8,35.7933492 C34.8,35.3764846 34.7178667,34.9774347 34.5682667,34.6118765 C35.9674667,34.2406176 37,32.9942993 37,31.5178147 C37,30.6976247 36.681,29.947981 36.1574,29.3800475 C36.681,28.812114 37,28.0624703 37,27.2422803 C37,26.4220903 36.681,25.6724466 36.1574,25.1045131 Z M12.8,35.7933492 C12.8,36.3826603 12.3064667,36.8622328 11.7,36.8622328 L6.2,36.8622328 L6.2,19.760095 L11.7,19.760095 C12.3064667,19.760095 12.8,20.2396675 12.8,20.8289786 L12.8,35.7933492 Z M31.5,26.1733967 L33.7,26.1733967 C34.3064667,26.1733967 34.8,26.6529691 34.8,27.2422803 C34.8,27.8315914 34.3064667,28.3111639 33.7,28.3111639 L31.5,28.3111639 C30.8928,28.3111639 30.4,28.7900238 30.4,29.3800475 C30.4,29.9700713 30.8928,30.4489311 31.5,30.4489311 L33.7,30.4489311 C34.3064667,30.4489311 34.8,30.9285036 34.8,31.5178147 C34.8,32.1071259 34.3064667,32.5866983 33.7,32.5866983 L31.5,32.5866983 C30.8928,32.5866983 30.4,33.0655582 30.4,33.6555819 C30.4,34.2456057 30.8928,34.7244656 31.5,34.7244656 C32.1064667,34.7244656 32.6,35.204038 32.6,35.7933492 C32.6,36.3826603 32.1064667,36.8622328 31.5,36.8622328 L22.2849333,36.8622328 C21.2186667,36.8622328 20.1648667,36.6961995 19.1536,36.3684086 L15,35.0230404 L15,21.7966746 C16.7255333,21.4781473 18.4144,20.4163895 19.939,18.6783848 C21.4276667,16.9809976 22.6347333,14.7306413 23.1678667,12.6577197 L23.5587333,11.1377672 L23.8,11.1377672 C25.0129333,11.1377672 26,12.0969121 26,13.2755344 L26,14.3437055 C26,15.7788599 25.538,18.5315914 24.9469333,19.760095 L22.7,19.760095 C22.0928,19.760095 21.6,20.2389549 21.6,20.8289786 C21.6,21.4190024 22.0928,21.8978622 22.7,21.8978622 L33.7,21.8978622 C34.3064667,21.8978622 34.8,22.3774347 34.8,22.9667458 C34.8,23.556057 34.3064667,24.0356295 33.7,24.0356295 L31.5,24.0356295 C30.8928,24.0356295 30.4,24.5144893 30.4,25.1045131 C30.4,25.6945368 30.8928,26.1733967 31.5,26.1733967 Z" class="shape"></path>' +
		'<circle class="Oval" cx="9" cy="33" r="1"></circle>' +
		'<path d="M24,2 C23.4477333,2 23,2.44039344 23,2.98360656 L23,5.01639344 C23,5.55960656 23.4477333,6 24,6 C24.5522667,6 25,5.55960656 25,5.01639344 L25,2.98360656 C25,2.44039344 24.5522667,2 24,2 Z" class="shape"></path>' +
		'<path d="M19.7426337,6.50001098 L18.5,5.25736818 C18.1569035,4.91421061 17.6005214,4.91421061 17.2573663,5.25736818 C16.9142112,5.60052575 16.9142112,6.15685341 17.2573663,6.50001098 L18.5,7.74265379 C18.8430965,8.08575278 19.3995372,8.08581136 19.7426337,7.74265379 C20.0857888,7.39949622 20.0857888,6.84316855 19.7426337,6.50001098 Z" class="shape"></path>' +
		'<path d="M31.7426337,5.25736881 C31.3995372,4.9142104 30.8431551,4.9142104 30.5,5.25736881 L29.2573663,6.49995606 C28.9142112,6.84311447 28.9142112,7.39944349 29.2573663,7.7426019 C29.6004628,8.08576031 30.1568449,8.08581889 30.5,7.74266048 L31.7426337,6.50001464 C32.0857888,6.15685624 32.0857888,5.60052721 31.7426337,5.25736881 Z" class="shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	testme_result_failed: '<svg width="33px" height="30px" viewBox="0 0 33 30" version="1.1" >' +
		'<defs></defs>' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Test-Result-for-TestMe-02" transform="translate(-654.000000, -239.000000)" fill-rule="nonzero" fill="#F04A5F">' +
		'<g class="Group-35" transform="translate(407.000000, 180.000000)">' +
		'<g class="Group-34" transform="translate(14.000000, 41.000000)">' +
		'<g class="like-(2)" transform="translate(249.000000, 31.000000) scale(1, -1) translate(-249.000000, -31.000000) translate(230.000000, 11.000000)">' +
		'<path d="M35.1574,19.1045131 C35.681,18.5365796 36,17.7869359 36,16.9667458 C36,15.1988124 34.5194,13.760095 32.7,13.760095 L26.2950667,13.760095 C26.9294,11.8895487 27.2,9.40760095 27.2,8.34370546 L27.2,7.27553444 C27.2,4.91828979 25.2258667,3 22.8,3 L21.7,3 C21.1954667,3 20.7554667,3.33349169 20.633,3.80950119 L20.0338667,6.13895487 C19.1942,9.40118765 16.5285333,13.0004751 13.7697333,13.6546318 C13.2864667,12.4660333 12.0933333,11.6223278 10.7,11.6223278 L4.1,11.6223278 C3.4928,11.6223278 3,12.1011876 3,12.6912114 L3,31.9311164 C3,32.5211401 3.4928,33 4.1,33 L10.7,33 C12.0119333,33 13.1471333,32.2524941 13.6788,31.172209 L17.4584,32.3964371 C18.6940667,32.7969121 19.9818,33 21.2849333,33 L30.5,33 C32.3194,33 33.8,31.5612827 33.8,29.7933492 C33.8,29.3764846 33.7178667,28.9774347 33.5682667,28.6118765 C34.9674667,28.2406176 36,26.9942993 36,25.5178147 C36,24.6976247 35.681,23.947981 35.1574,23.3800475 C35.681,22.812114 36,22.0624703 36,21.2422803 C36,20.4220903 35.681,19.6724466 35.1574,19.1045131 Z M11.8,29.7933492 C11.8,30.3826603 11.3064667,30.8622328 10.7,30.8622328 L5.2,30.8622328 L5.2,13.760095 L10.7,13.760095 C11.3064667,13.760095 11.8,14.2396675 11.8,14.8289786 L11.8,29.7933492 Z M30.5,20.1733967 L32.7,20.1733967 C33.3064667,20.1733967 33.8,20.6529691 33.8,21.2422803 C33.8,21.8315914 33.3064667,22.3111639 32.7,22.3111639 L30.5,22.3111639 C29.8928,22.3111639 29.4,22.7900238 29.4,23.3800475 C29.4,23.9700713 29.8928,24.4489311 30.5,24.4489311 L32.7,24.4489311 C33.3064667,24.4489311 33.8,24.9285036 33.8,25.5178147 C33.8,26.1071259 33.3064667,26.5866983 32.7,26.5866983 L30.5,26.5866983 C29.8928,26.5866983 29.4,27.0655582 29.4,27.6555819 C29.4,28.2456057 29.8928,28.7244656 30.5,28.7244656 C31.1064667,28.7244656 31.6,29.204038 31.6,29.7933492 C31.6,30.3826603 31.1064667,30.8622328 30.5,30.8622328 L21.2849333,30.8622328 C20.2186667,30.8622328 19.1648667,30.6961995 18.1536,30.3684086 L14,29.0230404 L14,15.7966746 C15.7255333,15.4781473 17.4144,14.4163895 18.939,12.6783848 C20.4276667,10.9809976 21.6347333,8.73064133 22.1678667,6.65771971 L22.5587333,5.13776722 L22.8,5.13776722 C24.0129333,5.13776722 25,6.09691211 25,7.27553444 L25,8.34370546 C25,9.77885986 24.538,12.5315914 23.9469333,13.760095 L21.7,13.760095 C21.0928,13.760095 20.6,14.2389549 20.6,14.8289786 C20.6,15.4190024 21.0928,15.8978622 21.7,15.8978622 L32.7,15.8978622 C33.3064667,15.8978622 33.8,16.3774347 33.8,16.9667458 C33.8,17.556057 33.3064667,18.0356295 32.7,18.0356295 L30.5,18.0356295 C29.8928,18.0356295 29.4,18.5144893 29.4,19.1045131 C29.4,19.6945368 29.8928,20.1733967 30.5,20.1733967 Z" class="shape"></path>' +
		'<circle class="Oval" cx="8" cy="27" r="1"></circle>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	popup_drag: '<svg width="17" height="17" viewBox="0 0 17 17" fill="none">' +
		'<path d="M13.9443 7.55643H9.4991C9.18045 7.55643 8.93013 7.81896 8.93013 8.13378C8.93013 8.45074 9.18256 8.70806 9.4991 8.70806H13.9435L13.0248 9.64754C12.8048 9.87252 12.8048 10.2329 13.0248 10.4579C13.1353 10.5709 13.2802 10.6285 13.4288 10.6285C13.5774 10.6285 13.7224 10.5709 13.8328 10.4579L15.7107 8.53744C15.9307 8.31246 15.9307 7.95203 15.7107 7.72705L13.8328 5.80656C13.6104 5.57906 13.2503 5.57906 13.0278 5.80656C12.8079 6.03152 12.8078 6.39192 13.0278 6.6169L13.0277 6.61678L13.1708 6.47716L13.0278 6.61695L13.9443 7.55643Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M2.84286 10.4579C2.9533 10.5709 3.09821 10.6285 3.24684 10.6285C3.39547 10.6285 3.54038 10.5709 3.65082 10.4579C3.87081 10.2329 3.87081 9.87252 3.65082 9.64754L2.73219 8.70806H7.17656C7.49416 8.70806 7.74553 8.4466 7.74553 8.13378C7.74553 7.8231 7.49625 7.55643 7.17656 7.55643H2.7314L3.64782 6.61695L3.50482 6.47712L3.64799 6.61678L3.64787 6.6169C3.86781 6.39192 3.8678 6.03152 3.64782 5.80656C3.42538 5.57906 3.0653 5.57906 2.84286 5.80656L0.964993 7.72705C0.745002 7.95203 0.745002 8.31246 0.964993 8.53744L2.84286 10.4579Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M6.06066 3.32867C6.27841 3.55932 6.64328 3.55681 6.86178 3.32955L7.76905 2.40168V6.94241C7.76905 7.25723 8.01938 7.51976 8.33803 7.51976C8.65668 7.51976 8.907 7.25723 8.907 6.94241V2.40168L9.81493 3.33021C9.92537 3.44316 10.0703 3.50083 10.2189 3.50083C10.3675 3.50083 10.5124 3.44316 10.6229 3.33021C10.8429 3.10523 10.8429 2.7448 10.6229 2.51981L8.74501 0.599317C8.52857 0.377962 8.15649 0.377962 7.94004 0.599317L6.06216 2.51981C5.84267 2.74429 5.84217 3.10358 6.06066 3.32867Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'<path d="M7.76917 13.86L6.86126 12.9314C6.63882 12.7039 6.27874 12.7039 6.0563 12.9314C5.83631 13.1564 5.83631 13.5168 6.0563 13.7418L7.93417 15.6623C8.04012 15.7707 8.18439 15.8329 8.33815 15.8329C8.48804 15.8329 8.63556 15.7713 8.74213 15.6623L10.62 13.7418C10.84 13.5168 10.84 13.1564 10.62 12.9314C10.3976 12.7039 10.0375 12.7039 9.81503 12.9314L8.90712 13.86V9.31924H8.90714L8.9071 9.31637C8.90264 9.00646 8.65933 8.74189 8.33815 8.74189C8.0195 8.74189 7.76917 9.00443 7.76917 9.31924V13.86Z" fill="#757575" stroke="#757575" stroke-width="0.4"/>' +
		'</svg>',
	close_slideshow: '<svg width="12" height="12" viewBox="0 0 12 12">' +
		'<path fill="#FFF" fill-rule="nonzero" d="M6.69 5.98L11.814.858a.503.503 0 0 0-.711-.71L5.98 5.268.858.147a.502.502 0 1 0-.71.71L5.268 5.98.148 11.1a.503.503 0 0 0 .71.712L5.98 6.69l5.122 5.122a.503.503 0 1 0 .71-.712L6.692 5.98z"/>' +
		'</svg>',
	slideshow_next_button: '<svg width="33"  height="33"  viewBox="0 0 33 33">' +
  '<path fill-rule="evenodd" clip-rule="evenodd" d="M11.2547 16.568C11.2547 16.588 11.2587 16.6053 11.26 16.6253C11.2717 16.8879 11.381 17.1366 11.5667 17.3227L11.5693 17.3267L19.0987 24.856C19.1977 24.9557 19.3155 25.0349 19.4452 25.0891C19.5749 25.1433 19.714 25.1714 19.8545 25.1717C19.9951 25.1721 20.1343 25.1448 20.2643 25.0913C20.3943 25.0378 20.5124 24.9592 20.612 24.86L20.988 24.4827C21.1881 24.2818 21.3002 24.0096 21.2997 23.7261C21.2992 23.4426 21.1862 23.1708 20.9853 22.9707L14.5827 16.5693L20.9827 10.168C21.0825 10.069 21.1618 9.95136 21.2161 9.82171C21.2704 9.69207 21.2986 9.55299 21.2991 9.41243C21.2996 9.27188 21.2724 9.13261 21.219 9.00258C21.1656 8.87256 21.0871 8.75433 20.988 8.65466L20.6107 8.27733C20.4094 8.07758 20.1371 7.96593 19.8536 7.96693C19.57 7.96793 19.2985 8.0815 19.0987 8.28266L11.9427 15.4373L11.5653 15.8147C11.3653 16.0147 11.264 16.2747 11.2587 16.5387C11.2587 16.5493 11.2547 16.5587 11.2547 16.568Z" fill="#555555"/>' +
'</svg>',
	slideshow_prev_button: '<svg width="33" height="33" viewBox="0 0 33 33" fill="none" xmlns="http://www.w3.org/2000/svg">' +
  '<path fill-rule="evenodd" clip-rule="evenodd" d="M11.4774 16.5707C11.4774 16.5507 11.4814 16.5333 11.4827 16.5133C11.4944 16.2508 11.6038 16.0021 11.7894 15.816L11.7921 15.812L19.3214 8.28268C19.4204 8.18296 19.5382 8.10374 19.6679 8.04957C19.7976 7.99539 19.9367 7.96731 20.0772 7.96694C20.2178 7.96657 20.357 7.99391 20.487 8.0474C20.617 8.10089 20.7351 8.17948 20.8347 8.27868L21.2107 8.65601C21.4108 8.85689 21.523 9.12902 21.5225 9.41256C21.522 9.6961 21.4089 9.96783 21.2081 10.168L14.8054 16.5693L21.2054 22.9707C21.3052 23.0696 21.3845 23.1873 21.4388 23.317C21.4931 23.4466 21.5213 23.5857 21.5218 23.7262C21.5223 23.8668 21.4951 24.0061 21.4417 24.1361C21.3883 24.2661 21.3098 24.3843 21.2107 24.484L20.8334 24.8613C20.6322 25.0611 20.3598 25.1727 20.0763 25.1717C19.7927 25.1707 19.5212 25.0572 19.3214 24.856L12.1654 17.7013L11.7881 17.324C11.5881 17.124 11.4867 16.864 11.4801 16.6L11.4774 16.5707Z" fill="#555555"/>' +
  '</svg>'
  ,
	notification_guide_play: '<svg width="74px" height="75px" viewBox="0 0 74 75" version="1.1" >' +
		'<defs>' +
		'<filter x="-21.6%" y="-14.7%" width="143.1%" height="143.1%" filterUnits="objectBoundingBox" class="filter-np1">' +
		'<feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>' +
		'<feGaussianBlur stdDeviation="1.5" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.210484601 0" type="matrix" in="shadowBlurOuter1" result="shadowMatrixOuter1"></feColorMatrix>' +
		'<feMerge>' +
		'<feMergeNode in="shadowMatrixOuter1"></feMergeNode>' +
		'<feMergeNode in="SourceGraphic"></feMergeNode>' +
		'</feMerge>' +
		'</filter>' +
		'<path d="M29,0 C12.992,0 0,12.992 0,29 C0,45.008 12.992,58 29,58 C45.008,58 58,45.008 58,29 C58,12.992 45.008,0 29,0 L29,0 Z" class="path-np2"></path>' +
		'<filter x="-16.4%" y="-12.9%" width="132.8%" height="132.8%" filterUnits="objectBoundingBox" class="filter-np3">' +
		'<feMorphology radius="2.5" operator="dilate" in="SourceAlpha" result="shadowSpreadOuter1"></feMorphology>' +
		'<feOffset dx="0" dy="2" in="shadowSpreadOuter1" result="shadowOffsetOuter1"></feOffset>' +
		'<feMorphology radius="2.5" operator="erode" in="SourceAlpha" result="shadowInner"></feMorphology>' +
		'<feOffset dx="0" dy="2" in="shadowInner" result="shadowInner"></feOffset>' +
		'<feComposite in="shadowOffsetOuter1" in2="shadowInner" operator="out" result="shadowOffsetOuter1"></feComposite>' +
		'<feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.211447011 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>' +
		'</filter>' +
		'<path d="M29,6 C41.696,6 52,16.304 52,29 C52,41.696 41.696,52 29,52 C16.304,52 6,41.696 6,29 C6,16.304 16.304,6 29,6 Z M37.394022,29.7044835 C38.2809792,29.0392656 38.2864907,27.964868 37.394022,27.2955165 L26.605978,19.2044835 C25.7190208,18.5392656 25,18.9023438 25,19.9945615 L25,37.0054385 C25,38.1070044 25.7135093,38.464868 26.605978,37.7955165 L37.394022,29.7044835 Z" class="path-np4"></path>' +
		'<filter x="-15.2%" y="-10.9%" width="130.4%" height="130.4%" filterUnits="objectBoundingBox" class="filter-np5">' +
		'<feOffset dx="0" dy="2" in="SourceAlpha" result="shadowOffsetOuter1"></feOffset>' +
		'<feGaussianBlur stdDeviation="2" in="shadowOffsetOuter1" result="shadowBlurOuter1"></feGaussianBlur>' +
		'<feColorMatrix values="0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.211447011 0" type="matrix" in="shadowBlurOuter1"></feColorMatrix>' +
		'</filter>' +
		'</defs>' +
		'<g class="Page-np1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.854520089">' +
		'<g class="03-slideshow-mode-copy-2" transform="translate(-1161.000000, -436.000000)">' +
		'<g class="Group-np-21" filter="url(#filter-np1)" transform="translate(1169.000000, 441.000000)">' +
		'<g class="Shape-Copy-np-3">' +
		'<use fill="black" fill-opacity="1" filter="url(#filter-np3)" xlink:href="#path-np2"></use>' +
		'<use stroke="#ffffff" stroke-width="5" xlink:href="#path-np2"></use>' +
		'</g>' +
		'<g class="combined-shape">' +
		'<use fill="black" fill-opacity="1" filter="url(#filter-np5)" xlink:href="#path-np4"></use>' +
		'<use fill="#ffffff" class="shape-combined-np" fill-rule="evenodd" xlink:href="#path-np4"></use>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	push_not_single_play: '<svg width="9" height="13" viewBox="0 0 9 13" fill="none">' +
		'<path opacity="0.3" d="M0 0L9 6.5L0 13V0Z" fill="black" />' +
		'</svg>',
	push_prev: '<svg width="30" height="30" version="1.1" class="Layer_1" x="0px" y="0px" viewBox="0 0 30 30" style="enable-background:new 0 0 30 30;" xml:space="preserve">' +
		'<style type="text/css">' +
		'.st0{fill:#FFFFFF;}' +
		'.st1{fill:#666666;}' +
		'</style>' +
		'<g>' +
		'<path class="st0" d="M15,2.8C8.3,2.8,2.8,8.3,2.8,15S8.3,27.2,15,27.2S27.2,21.7,27.2,15S21.7,2.8,15,2.8z"/>' +
		'</g>' +
		'<g>' +
		'<path class="st1" d="M15,0C6.7,0,0,6.7,0,15s6.7,15,15,15s15-6.7,15-15S23.3,0,15,0z M18.5,21.6c0.5,0.4,0.5,1.2,0,1.6 c-0.2,0.2-0.5,0.4-0.8,0.4s-0.6-0.1-0.8-0.3l-7.5-7.2C9.1,15.8,9,15.5,9,15.2s0.1-0.6,0.4-0.8l7.5-7.2c0.5-0.4,1.2-0.4,1.6,0 c0.4,0.5,0.4,1.2,0,1.6l-6.7,6.4L18.5,21.6z"/>' +
		'</g>' +
		'</svg>',
	overlay_tour_popup_close: '<svg  width="16px" height="16px" version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve">' +
		'<g>' +
		'<g class="close">' +
		'<polygon points="23.3,3 21,0.7 12,9.7 3,0.7 0.7,3 9.7,12 0.7,21 3,23.3 12,14.3 21,23.3 23.3,21 14.3,12"/>' +
		'</g>' +
		'</g>' +
		'</svg>',
	tutorial: '<svg width="32" height="32" viewBox="0 0 32 32" fill="none">' +
		'<circle cx="16" cy="16" r="16" fill="#45465F"/>' +
		'<path d="M20.9755 8H11.3879C10.2677 8.00051 9.3596 8.90847 9.35922 10.0287V11.8293H8.40574C8.18157 11.8293 8 12.011 8 12.2351C8 12.4591 8.18157 12.6408 8.40574 12.6408H9.35504V14.3782H8.40574C8.18157 14.3782 8 14.5598 8 14.7839C8 15.008 8.18157 15.1897 8.40574 15.1897H9.35504V17.8513H8.40574C8.18157 17.8513 8 18.033 8 18.2571C8 18.4812 8.18157 18.6628 8.40574 18.6628H9.35504V21.3244H8.40574C8.18157 21.3244 8 21.5061 8 21.7302C8 21.9542 8.18157 22.1359 8.40574 22.1359H9.35504V23.0123C9.35554 24.1325 10.2635 25.0405 11.3837 25.041H20.9713C22.0915 25.0405 22.9997 24.1325 23 23.0123V10.0287C23.0016 8.90923 22.0949 8.00076 20.9755 8ZM22.1927 23.0123C22.1907 23.6837 21.6469 24.2276 20.9755 24.2295H11.3879C10.7165 24.2276 10.1726 23.6837 10.1707 23.0123V22.1359H11.12C11.3442 22.1359 11.5257 21.9542 11.5257 21.7302C11.5257 21.5061 11.3442 21.3244 11.12 21.3244H10.1707V18.6628H11.12C11.3442 18.6628 11.5257 18.4812 11.5257 18.2571C11.5257 18.033 11.3442 17.8513 11.12 17.8513H10.1707V15.1897H11.12C11.3442 15.1897 11.5257 15.008 11.5257 14.7839C11.5257 14.5598 11.3442 14.3782 11.12 14.3782H10.1707V12.6408H11.12C11.3442 12.6408 11.5257 12.4591 11.5257 12.2351C11.5257 12.011 11.3442 11.8293 11.12 11.8293H10.1707V10.0287C10.1726 9.35732 10.7165 8.81338 11.3879 8.81148H20.9755C21.6469 8.81338 22.1907 9.35732 22.1927 10.0287V23.0123Z" fill="white" stroke="white" stroke-width="0.5"/>' +
		'<rect x="13.5449" y="11.697" width="6.4698" height="1.38639" fill="white"/>' +
		'<rect x="13.5449" y="15.394" width="6.4698" height="1.38639" fill="white"/>' +
		'<rect x="13.5449" y="19.0911" width="6.4698" height="1.38639" fill="white"/>' +
		'</svg>',
	white_myguide_logo: '<svg width="82" height="27" viewBox="0 0 82 27" fill="none">' +
		'<path d="M55.2148 18.8794C55.2127 18.8247 55.1993 18.7709 55.1756 18.7213C55.1519 18.6717 55.1184 18.6272 55.0768 18.5905C55.0353 18.5537 54.9867 18.5255 54.9339 18.5074C54.8811 18.4893 54.8251 18.4818 54.7693 18.4852C53.2776 18.5788 51.8711 19.1986 50.8107 20.2298C50.7399 20.3095 50.7024 20.4125 50.7058 20.5181C50.7092 20.6237 50.7531 20.7242 50.8289 20.7994C50.9047 20.8746 51.0067 20.9191 51.1145 20.9239C51.2223 20.9287 51.328 20.8935 51.4105 20.8253C52.3247 19.9234 53.5429 19.3778 54.8378 19.2904C54.9416 19.28 55.0377 19.2321 55.1074 19.1561C55.1771 19.0802 55.2154 18.9815 55.2148 18.8794Z" fill="#76C9BE" />' +
		'<path d="M54.7595 20.0531C53.6997 20.1452 52.7059 20.5961 51.949 21.328C51.9091 21.3662 51.8774 21.4119 51.8558 21.4623C51.8341 21.5127 51.823 21.5669 51.823 21.6216C51.823 21.6762 51.8341 21.7304 51.8558 21.7808C51.8774 21.8312 51.9091 21.8769 51.949 21.9151C52.0307 21.9954 52.1417 22.0407 52.2575 22.0409C52.3123 22.041 52.3665 22.0298 52.4167 22.0081C52.4669 21.9864 52.5119 21.9548 52.5488 21.9151C53.1688 21.3258 53.9761 20.9617 54.8366 20.8834C54.8926 20.8792 54.9471 20.8641 54.9971 20.8389C55.047 20.8137 55.0912 20.779 55.1272 20.7367C55.1631 20.6945 55.1901 20.6456 55.2064 20.593C55.2227 20.5404 55.2281 20.4852 55.2222 20.4305C55.2179 20.3757 55.2024 20.3223 55.1767 20.2734C55.151 20.2245 55.1155 20.1812 55.0723 20.146C55.0292 20.1108 54.9793 20.0845 54.9255 20.0685C54.8718 20.0525 54.8153 20.0473 54.7595 20.0531Z" fill="#76C9BE" />' +
		'<path d="M63.1583 20.5427C63.0764 20.4628 62.9654 20.418 62.8498 20.418C62.7342 20.418 62.6232 20.4628 62.5413 20.5427C62.5021 20.5812 62.4713 20.6271 62.4507 20.6775C62.4301 20.728 62.4201 20.782 62.4214 20.8363V22.6481C62.23 22.4867 62.0235 22.3434 61.8045 22.2203C61.4944 22.0407 61.1444 21.9377 60.7847 21.9202C60.4249 21.9026 60.0662 21.9711 59.7395 22.1196C59.44 22.2531 59.1673 22.4377 58.934 22.6648C58.7 22.8947 58.5112 23.1648 58.3771 23.4617C58.2392 23.7681 58.1691 24.0997 58.1714 24.4346C58.1693 24.7668 58.2394 25.0956 58.3771 25.3992C58.5073 25.6916 58.6901 25.9587 58.9169 26.1877C59.1505 26.4161 59.4269 26.5984 59.7309 26.7245C60.3677 26.9808 61.082 26.9808 61.7188 26.7245C61.9737 26.6211 62.2108 26.4797 62.4214 26.3051V26.4896C62.4202 26.5454 62.4305 26.6008 62.4515 26.6527C62.4725 26.7045 62.5039 26.7518 62.5438 26.7916C62.5837 26.8314 62.6313 26.8631 62.6838 26.8847C62.7364 26.9063 62.7928 26.9174 62.8498 26.9174C62.9073 26.9187 62.9645 26.9082 63.0177 26.8865C63.0708 26.8649 63.1187 26.8325 63.1583 26.7916C63.201 26.7535 63.2346 26.7068 63.2568 26.6546C63.279 26.6024 63.2893 26.5461 63.2868 26.4896V20.8363C63.2886 20.7812 63.278 20.7263 63.2558 20.6756C63.2336 20.6248 63.2003 20.5795 63.1583 20.5427ZM62.3014 25.1056C62.216 25.2996 62.0939 25.4761 61.9415 25.6257C61.7852 25.7767 61.6024 25.8989 61.4017 25.9864C60.982 26.1564 60.5105 26.1564 60.0908 25.9864C59.8888 25.905 59.7054 25.7852 59.551 25.6341C59.3166 25.3996 59.1576 25.103 59.0936 24.781C59.0296 24.459 59.0635 24.1257 59.1911 23.8223C59.3489 23.4309 59.6562 23.115 60.0479 22.9416C60.2572 22.8575 60.4814 22.8147 60.7077 22.8158C60.9275 22.8158 61.1453 22.8556 61.3503 22.9332C61.547 23.015 61.7248 23.1348 61.873 23.2855C62.0284 23.4344 62.1534 23.6109 62.2414 23.8056C62.3289 24.0169 62.381 24.2406 62.3957 24.4682C62.4052 24.686 62.3672 24.9033 62.2843 25.1056H62.3014Z" fill="white" />' +
		'<path d="M56.9546 22.6483C56.7235 22.4207 56.4501 22.2385 56.1491 22.1115C55.8445 21.9783 55.5145 21.9097 55.1809 21.9102C54.8296 21.9227 54.4837 21.9996 54.1612 22.1366C53.8432 22.2602 53.5523 22.4425 53.3044 22.6734C53.075 22.9004 52.8918 23.1679 52.7646 23.4619C52.6303 23.7723 52.561 24.1061 52.561 24.4432C52.561 24.7804 52.6303 25.1141 52.7646 25.4246C52.8904 25.7214 53.077 25.9897 53.313 26.213C53.5488 26.4345 53.8249 26.6109 54.127 26.7331C54.4405 26.8553 54.7749 26.9179 55.1123 26.9176C55.4536 26.9249 55.7934 26.8709 56.1148 26.7582C56.422 26.643 56.6956 26.4558 56.9117 26.213C56.9933 26.1329 57.0392 26.0243 57.0392 25.9111C57.0392 25.7979 56.9933 25.6893 56.9117 25.6091C56.8302 25.5318 56.7211 25.4885 56.6075 25.4885C56.494 25.4885 56.3849 25.5318 56.3033 25.6091C56.1434 25.7514 55.9612 25.8675 55.7635 25.953C55.364 26.1052 54.9207 26.1052 54.5211 25.953C54.1541 25.8204 53.8493 25.5608 53.6643 25.2233C53.6615 25.2038 53.6615 25.1841 53.6643 25.1646C53.5434 24.9337 53.4817 24.6775 53.4843 24.4181C53.4853 24.2174 53.523 24.0186 53.5957 23.8309C53.6269 23.7406 53.6671 23.6535 53.7157 23.5709C53.8106 23.4098 53.9322 23.2652 54.0756 23.1431C54.2285 23.0239 54.3989 22.9277 54.5811 22.858C54.9576 22.7247 55.3699 22.7247 55.7464 22.858C55.9285 22.9277 56.099 23.0239 56.2519 23.1431C56.3975 23.2654 56.5219 23.4099 56.6204 23.5709C56.6969 23.6934 56.7546 23.8262 56.7917 23.9651H54.6411C54.5421 23.9846 54.4531 24.037 54.3891 24.1135C54.3251 24.1899 54.2902 24.2857 54.2902 24.3845C54.2902 24.4833 54.3251 24.5791 54.3891 24.6556C54.4531 24.732 54.5421 24.7844 54.6411 24.8039H57.2887C57.3957 24.801 57.4984 24.7625 57.58 24.6949C57.6282 24.6567 57.6665 24.6079 57.6918 24.5526C57.7171 24.4972 57.7287 24.4367 57.7257 24.3761C57.717 24.0686 57.6441 23.766 57.5115 23.487C57.3831 23.1748 57.1939 22.8899 56.9546 22.6483Z" fill="white" />' +
		'<path d="M72.2655 13.4968C72.7827 14.0016 73.3973 14.4008 74.0735 14.671C74.7651 14.9556 75.5082 15.1011 76.2584 15.0988C77.0235 15.1105 77.7842 14.9854 78.5034 14.7297C79.1883 14.4622 79.7969 14.0363 80.2771 13.4884C80.4578 13.3014 80.5586 13.0538 80.5586 12.7964C80.5586 12.539 80.4578 12.2913 80.2771 12.1044C80.1871 12.0161 80.0803 11.9461 79.9626 11.8983C79.845 11.8506 79.7189 11.826 79.5916 11.826C79.4642 11.826 79.3381 11.8506 79.2205 11.8983C79.1029 11.9461 78.996 12.0161 78.9061 12.1044C78.5616 12.4401 78.1544 12.7078 77.7065 12.8928C76.8246 13.2584 75.8319 13.2734 74.9389 12.9348C74.5269 12.7822 74.1466 12.5577 73.8164 12.2722C73.478 11.9866 73.1886 11.6496 72.9596 11.274L72.8825 11.123C72.6202 10.6009 72.4825 10.0273 72.4797 9.44549C72.4807 8.98379 72.5678 8.52614 72.7368 8.09507C72.8097 7.89564 72.8985 7.70213 73.0024 7.51632C73.2214 7.141 73.5123 6.81062 73.8593 6.54335C74.1944 6.26242 74.5734 6.03588 74.9817 5.87233C75.8097 5.56413 76.7244 5.56413 77.5523 5.87233C77.9627 6.02813 78.3425 6.25232 78.6747 6.53496C79.0187 6.80858 79.3091 7.1411 79.5316 7.51632C79.7011 7.78909 79.8336 8.08234 79.9257 8.38864H75.1274C74.8638 8.38864 74.611 8.49115 74.4246 8.67362C74.2382 8.85609 74.1335 9.10357 74.1335 9.36162C74.1335 9.61967 74.2382 9.86715 74.4246 10.0496C74.611 10.2321 74.8638 10.3346 75.1274 10.3346H81.0311C81.2703 10.3295 81.5004 10.2436 81.6823 10.0913C81.7867 10.0001 81.8693 9.88732 81.9241 9.76117C81.9789 9.63503 82.0046 9.4986 81.9993 9.36162C81.9984 8.59075 81.8351 7.82835 81.5195 7.1221C81.2129 6.4543 80.7895 5.84402 80.2685 5.31875C79.7513 4.80283 79.1413 4.38483 78.4691 4.08575C77.7935 3.78614 77.0601 3.6317 76.3184 3.63282C75.5315 3.6742 74.7603 3.86507 74.0478 4.19479C73.3723 4.4785 72.7564 4.88234 72.2313 5.38585C71.7132 5.90485 71.3029 6.51727 71.0231 7.1892C70.7245 7.89357 70.573 8.64934 70.5776 9.41194C70.5716 10.1918 70.7261 10.9648 71.0317 11.685C71.3184 12.3619 71.7375 12.9774 72.2655 13.4968Z" fill="white" />' +
		'<path d="M13.3069 4.77153C12.9189 4.41655 12.4691 4.13247 11.9788 3.93276C11.4636 3.7204 10.9098 3.61199 10.3508 3.61402C9.67692 3.60539 9.01143 3.76104 8.41433 4.06696C7.97961 4.27903 7.58542 4.56276 7.24902 4.90573C6.91833 4.56369 6.52993 4.27995 6.10085 4.06696C5.50452 3.75813 4.83899 3.59958 4.16438 3.60564C3.6489 3.60777 3.14114 3.72844 2.68204 3.95792C2.47325 4.06206 2.27019 4.17685 2.07368 4.30181C2.01767 4.17771 1.93598 4.06633 1.83376 3.97469C1.63287 3.78075 1.3619 3.67223 1.07974 3.67274C0.939606 3.66963 0.80032 3.69484 0.670585 3.7468C0.540849 3.79875 0.42345 3.87633 0.325719 3.97469C0.221894 4.0705 0.139388 4.18624 0.0833615 4.3147C0.0273355 4.44315 -0.00100356 4.58153 0.000117865 4.7212V14.107C-0.0020539 14.2469 0.0258084 14.3856 0.0818992 14.5142C0.13799 14.6428 0.221058 14.7584 0.325719 14.8535C0.424645 14.9503 0.542265 15.0269 0.67172 15.0787C0.801175 15.1306 0.939878 15.1567 1.07974 15.1555C1.21974 15.1576 1.35873 15.132 1.48832 15.0801C1.61791 15.0282 1.73542 14.9511 1.83376 14.8535C1.93843 14.7584 2.02149 14.6428 2.07758 14.5142C2.13367 14.3856 2.16154 14.2469 2.15937 14.107V7.54785C2.1662 7.30303 2.22276 7.06199 2.32573 6.83878C2.42871 6.61557 2.57605 6.41466 2.75916 6.24776C2.94378 6.0689 3.16343 5.92841 3.40491 5.83472C3.64639 5.74104 3.90471 5.69608 4.16438 5.70256C4.42472 5.69669 4.68356 5.74274 4.92514 5.83791C5.16672 5.93308 5.38599 6.07538 5.56961 6.25615C5.75814 6.43044 5.90969 6.63944 6.01555 6.87117C6.12142 7.10291 6.17952 7.35281 6.18653 7.60657V14.1154C6.18436 14.2552 6.21222 14.3939 6.26831 14.5225C6.32441 14.6511 6.40747 14.7668 6.51213 14.8619C6.61106 14.9587 6.72868 15.0353 6.85814 15.0871C6.98759 15.139 7.12629 15.1651 7.26616 15.1639C7.40616 15.166 7.54514 15.1403 7.67474 15.0884C7.80433 15.0365 7.92184 14.9595 8.02018 14.8619C8.12484 14.7668 8.20791 14.6511 8.264 14.5225C8.32009 14.3939 8.34795 14.2552 8.34578 14.1154V7.59818C8.34491 7.3498 8.39746 7.10403 8.50001 6.87684C8.59825 6.64811 8.74083 6.44018 8.91987 6.26454C9.10384 6.09504 9.319 5.96127 9.55393 5.87031C10.0615 5.66481 10.6316 5.66481 11.1391 5.87031C11.3821 5.96706 11.6033 6.10955 11.7903 6.2897C11.9718 6.46184 12.1173 6.66697 12.2187 6.89361C12.3213 7.1208 12.3738 7.36658 12.3729 7.61496V14.1238C12.3708 14.2636 12.3986 14.4023 12.4547 14.5309C12.5108 14.6595 12.5939 14.7752 12.6986 14.8703C12.7975 14.9671 12.9151 15.0437 13.0446 15.0955C13.174 15.1473 13.3127 15.1734 13.4526 15.1723C13.5926 15.1744 13.7316 15.1487 13.8612 15.0968C13.9907 15.0449 14.1083 14.9679 14.2066 14.8703C14.3113 14.7752 14.3943 14.6595 14.4504 14.5309C14.5065 14.4023 14.5344 14.2636 14.5322 14.1238V7.59818C14.5361 7.05984 14.4191 6.52724 14.1895 6.03807C13.9974 5.55571 13.6956 5.12255 13.3069 4.77153Z" fill="white" />' +
		'<path d="M23.9405 3.63011C23.7348 3.62826 23.5328 3.68352 23.3579 3.78948C23.1733 3.89704 23.0314 4.0626 22.9552 4.25919L20.1361 11.2713L17.4285 4.25919C17.3489 4.062 17.2041 3.89661 17.0172 3.78948C16.829 3.67793 16.6116 3.62255 16.3917 3.63011C16.2498 3.62313 16.1081 3.64653 15.9764 3.69868C15.8447 3.75083 15.7262 3.83048 15.6291 3.93207C15.4476 4.1298 15.3496 4.38763 15.3549 4.65341C15.3547 4.80638 15.3867 4.95774 15.4492 5.09796C15.4492 5.18184 15.5263 5.31604 15.6377 5.60122C15.7491 5.8864 15.9633 6.43999 16.2461 7.16972C16.5288 7.89945 16.8973 8.84726 17.3428 9.99638C17.7884 11.1455 18.3196 12.5127 18.9537 14.1902L17.5999 17.6963C17.5999 17.755 17.5999 17.8137 17.5485 17.864C17.5393 17.9308 17.5393 17.9985 17.5485 18.0653C17.5483 18.3349 17.656 18.5938 17.8484 18.7867C17.9722 18.9147 18.127 19.01 18.2984 19.0639C18.4698 19.1178 18.6524 19.1286 18.8292 19.0951C19.006 19.0617 19.1713 18.9851 19.3099 18.8726C19.4485 18.76 19.5558 18.6151 19.622 18.4512L24.9259 5.08119C24.9932 4.9512 25.0284 4.80755 25.0287 4.6618C25.024 4.40061 24.9166 4.15125 24.7288 3.96562C24.6289 3.85862 24.507 3.77343 24.3712 3.71562C24.2354 3.65781 24.0886 3.62868 23.9405 3.63011Z" fill="white" />' +
		'<path d="M52.5503 3.63328C52.4101 3.63017 52.2708 3.65538 52.1411 3.70734C52.0114 3.75929 51.894 3.83687 51.7962 3.93524C51.6924 4.03104 51.6099 4.14679 51.5539 4.27524C51.4979 4.40369 51.4695 4.54208 51.4706 4.68174V10.8383C51.4598 11.1295 51.3868 11.4152 51.2564 11.6771C51.1314 11.9321 50.9634 12.1646 50.7595 12.3649C50.5383 12.5615 50.2829 12.7177 50.0054 12.8262C49.4119 13.0612 48.7482 13.0612 48.1547 12.8262C47.8715 12.7162 47.6126 12.5539 47.3921 12.3481C47.1725 12.1392 46.9952 11.8916 46.8694 11.6184C46.7506 11.354 46.6893 11.0684 46.6895 10.7796V4.68174C46.6906 4.54208 46.6622 4.40369 46.6062 4.27524C46.5502 4.14679 46.4677 4.03104 46.3638 3.93524C46.1619 3.74281 45.8916 3.63456 45.6098 3.63328C45.3287 3.63768 45.0607 3.75009 44.8635 3.94624C44.6664 4.14239 44.5559 4.40656 44.5559 4.68174V10.746C44.5575 11.3226 44.6769 11.893 44.9072 12.4236C45.1429 12.9399 45.4741 13.4091 45.884 13.8076C46.5173 14.3995 47.3086 14.8042 48.1667 14.9749C49.0248 15.1456 49.9147 15.0753 50.7338 14.7721C51.032 14.6688 51.319 14.5367 51.5906 14.3779C51.6485 14.5244 51.7393 14.6562 51.8562 14.7638C51.9551 14.8605 52.0728 14.9371 52.2022 14.9889C52.3317 15.0408 52.4704 15.0669 52.6102 15.0657C52.7502 15.0678 52.8892 15.0422 53.0188 14.9903C53.1484 14.9384 53.2659 14.8613 53.3643 14.7638C53.4689 14.6686 53.552 14.553 53.6081 14.4244C53.6642 14.2958 53.692 14.1571 53.6899 14.0172V4.68174C53.691 4.54208 53.6626 4.40369 53.6066 4.27524C53.5506 4.14679 53.4681 4.03104 53.3643 3.93524C53.2613 3.82724 53.1343 3.74385 52.9932 3.6915C52.852 3.63914 52.7005 3.61923 52.5503 3.63328Z" fill="white" />' +
		'<path d="M55.695 3.60561C55.5537 3.60332 55.4134 3.62887 55.2824 3.68075C55.1514 3.73262 55.0323 3.80976 54.9324 3.90757C54.8286 4.00337 54.7461 4.11912 54.6901 4.24757C54.634 4.37602 54.6057 4.51441 54.6068 4.65407V14.0399C54.6046 14.1797 54.6325 14.3184 54.6886 14.447C54.7447 14.5756 54.8277 14.6912 54.9324 14.7864C55.0316 14.8857 55.1503 14.9644 55.2814 15.0178C55.4124 15.0711 55.5531 15.098 55.695 15.0968C55.835 15.0989 55.974 15.0732 56.1036 15.0213C56.2332 14.9694 56.3507 14.8924 56.449 14.7948C56.5537 14.6996 56.6367 14.584 56.6928 14.4554C56.7489 14.3268 56.7768 14.1881 56.7746 14.0483V4.65407C56.7724 4.37523 56.6576 4.10857 56.4554 3.91218C56.2532 3.7158 55.9798 3.6056 55.695 3.60561Z" fill="white" />' +
		'<path d="M67.6396 13.7047V13.9563C67.6369 14.0962 67.6645 14.2351 67.7206 14.3638C67.7767 14.4924 67.8601 14.608 67.9652 14.7028C68.0638 14.8 68.1814 14.8768 68.3109 14.9287C68.4404 14.9805 68.5793 15.0064 68.7192 15.0048C68.8593 15.0079 68.9986 14.9827 69.1284 14.9307C69.2581 14.8788 69.3755 14.8012 69.4732 14.7028C69.5783 14.608 69.6617 14.4924 69.7178 14.3638C69.7739 14.2351 69.8015 14.0962 69.7988 13.9563V1.19024C69.8015 1.05035 69.7739 0.911491 69.7178 0.782814C69.6617 0.654137 69.5783 0.538571 69.4732 0.443739C69.2741 0.249615 69.0045 0.140625 68.7235 0.140625C68.4425 0.140625 68.1729 0.249615 67.9737 0.443739C67.8687 0.538571 67.7853 0.654137 67.7292 0.782814C67.673 0.911491 67.6454 1.05035 67.6481 1.19024V5.13246C67.2384 4.80985 66.7963 4.52882 66.3286 4.29369C65.541 3.86586 64.6586 3.63264 63.7581 3.61429C62.9742 3.61506 62.1988 3.77202 61.4789 4.07561C60.0663 4.65464 58.9221 5.724 58.2657 7.07841C57.9492 7.77552 57.7856 8.5299 57.7856 9.29276C57.7856 10.0556 57.9492 10.81 58.2657 11.5071C58.5804 12.1787 59.0158 12.7895 59.551 13.3105C60.0994 13.8338 60.7451 14.2495 61.4532 14.5351C62.2011 14.8334 63.0018 14.9845 63.8095 14.9796C64.5978 14.9817 65.3795 14.8394 66.1144 14.5602C66.6637 14.3514 67.1778 14.063 67.6396 13.7047ZM63.8181 12.9079C63.301 12.9123 62.7882 12.8153 62.31 12.6227C61.8526 12.4452 61.436 12.18 61.0847 11.8426C60.7343 11.5192 60.4548 11.1293 60.2633 10.6967C60.0718 10.2641 59.9723 9.7978 59.9708 9.32631C59.9706 8.84496 60.0697 8.36851 60.2622 7.92557C60.4689 7.4893 60.7599 7.09626 61.119 6.76806C61.477 6.43909 61.8919 6.17497 62.3443 5.98801C62.8225 5.79535 63.3352 5.69838 63.8523 5.70283C64.349 5.69972 64.8414 5.79383 65.3004 5.97962C65.7454 6.1548 66.1524 6.41095 66.5 6.73451C66.8531 7.06461 67.1433 7.45374 67.3568 7.88363C67.56 8.34297 67.6762 8.83467 67.6996 9.3347C67.7 9.80882 67.5978 10.2777 67.3997 10.7103C67.1988 11.1475 66.9069 11.5388 66.5428 11.8594C66.193 12.1985 65.7761 12.464 65.3175 12.6395C64.8422 12.83 64.3315 12.9214 63.8181 12.9079Z" fill="white" />' +
		'<path d="M34.8052 0C32.3977 0.0331607 30.1018 0.998956 28.4203 2.68585C26.7388 4.37274 25.8088 6.64323 25.834 9C25.834 15.165 33.8626 24.2069 34.2054 24.5927C34.2809 24.6752 34.3734 24.7412 34.4767 24.7864C34.5801 24.8316 34.692 24.8549 34.8052 24.8549C34.9183 24.8549 35.0303 24.8316 35.1336 24.7864C35.2369 24.7412 35.3294 24.6752 35.4049 24.5927C35.7391 24.2069 43.7677 15.165 43.7677 9C43.7952 6.64401 42.8671 4.3735 41.187 2.68636C39.5069 0.999224 37.2118 0.0331569 34.8052 0Z" fill="#76C9BE" />' +
		'<path d="M40.3249 10.4584C40.1966 11.1045 39.953 11.7235 39.6052 12.2869C39.2784 12.8363 38.8515 13.3225 38.3456 13.7212C37.8497 14.1284 37.284 14.4465 36.6748 14.6606C36.05 14.8892 35.3882 15.0057 34.7212 15.0045C33.957 15.0093 33.2005 14.8549 32.502 14.5516C31.8339 14.29 31.2231 13.9056 30.7026 13.4192C30.1856 12.8945 29.773 12.2801 29.4859 11.6075C29.1861 10.9003 29.0317 10.1421 29.0317 9.37637C29.0317 8.61066 29.1861 7.85248 29.4859 7.14524C29.769 6.45558 30.1817 5.82398 30.7026 5.28318C31.2178 4.76127 31.8319 4.34249 32.5105 4.05018C33.2829 3.72073 34.1217 3.56764 34.9634 3.60252C35.8051 3.6374 36.6277 3.85932 37.3688 4.25149C38.157 4.66176 38.8329 5.25148 39.3396 5.97097C39.456 6.13991 39.5214 6.33762 39.5281 6.54133C39.5251 6.75232 39.4496 6.95619 39.3139 7.12008C39.1927 7.25941 39.0283 7.35614 38.8458 7.39551C38.6632 7.43488 38.4726 7.41474 38.3028 7.33816C38.1445 7.27255 38.008 7.16509 37.9086 7.02782C37.4762 6.51205 36.9394 6.08941 36.3321 5.78644C35.849 5.55292 35.3197 5.42521 34.7811 5.41217C34.2425 5.39914 33.7074 5.50109 33.2131 5.71095C32.7489 5.90728 32.3294 6.19246 31.9793 6.54972C31.6171 6.91398 31.3266 7.3405 31.1224 7.80787C30.9227 8.293 30.8209 8.8114 30.8225 9.33443C30.8144 10.364 31.2207 11.3554 31.9536 12.094C32.3056 12.4491 32.7246 12.7339 33.1874 12.9328C33.6687 13.1374 34.1879 13.243 34.7126 13.2431C35.1235 13.2446 35.5317 13.1794 35.9208 13.0502C36.2931 12.9211 36.6472 12.7463 36.9747 12.5301C37.3041 12.2969 37.5933 12.0138 37.8315 11.6914C37.9606 11.5326 38.0726 11.3611 38.1657 11.1797H36.452C36.3331 11.1805 36.2153 11.1571 36.1061 11.1108C35.997 11.0646 35.8988 10.9967 35.8179 10.9113C35.733 10.8274 35.6658 10.7279 35.6202 10.6185C35.5746 10.5091 35.5516 10.392 35.5523 10.2739C35.5504 10.0327 35.6459 9.80057 35.8179 9.628C35.8996 9.54416 35.998 9.47777 36.1072 9.43301C36.2163 9.38826 36.3337 9.36612 36.452 9.36798H39.4681C39.5947 9.36552 39.7204 9.39056 39.8359 9.44133C39.9515 9.49209 40.0541 9.5673 40.1364 9.66155C40.2867 9.83759 40.3659 10.0613 40.3592 10.2906C40.3531 10.3475 40.3417 10.4036 40.3249 10.4584Z" fill="white" />' +
		'<path d="M68.1366 25.6495C67.9767 25.7918 67.7944 25.9079 67.5968 25.9934C67.1796 26.1612 66.7116 26.1612 66.2944 25.9934C66.0937 25.906 65.9109 25.7838 65.7546 25.6328C65.6004 25.4846 65.478 25.3078 65.3947 25.1127C65.3085 24.9109 65.2648 24.694 65.2662 24.4753C65.265 24.2538 65.3087 24.0343 65.3947 23.8294C65.4757 23.6306 65.5983 23.4506 65.7546 23.301C65.9092 23.148 66.0925 23.0255 66.2944 22.9403C66.7116 22.7725 67.1796 22.7725 67.5968 22.9403C67.7894 23.0194 67.9686 23.1269 68.128 23.259C68.2067 23.3354 68.3129 23.3782 68.4237 23.3782C68.5344 23.3782 68.6406 23.3354 68.7193 23.259C68.7611 23.2253 68.795 23.1831 68.8187 23.1353C68.8423 23.0875 68.8552 23.0353 68.8564 22.9822C68.8401 22.8678 68.7859 22.7617 68.7021 22.6803C68.5916 22.55 68.4616 22.4369 68.3165 22.3448C68.1323 22.2314 67.9371 22.1359 67.7339 22.0596C67.4866 21.973 67.2254 21.9304 66.9627 21.9338C66.6114 21.9464 66.2656 22.0232 65.9431 22.1603C65.6402 22.2885 65.3642 22.4705 65.1291 22.6971C64.8976 22.9223 64.7142 23.1903 64.5893 23.4855C64.4583 23.7938 64.3913 24.1246 64.3922 24.4585C64.3892 24.7988 64.4593 25.136 64.5978 25.4482C64.7236 25.745 64.9102 26.0133 65.1462 26.2367C65.3948 26.4626 65.6858 26.6393 66.0031 26.7567C66.3153 26.8829 66.6506 26.9457 66.9884 26.9412C67.2782 26.9506 67.5676 26.9138 67.8453 26.8322C68.0545 26.7671 68.2535 26.674 68.4365 26.5554C68.5846 26.4706 68.7153 26.3597 68.8221 26.2283C68.8977 26.1434 68.9454 26.0382 68.9592 25.9263C68.9595 25.8694 68.9474 25.813 68.9237 25.7609C68.9001 25.7089 68.8655 25.6623 68.8221 25.6244C68.7802 25.5737 68.7269 25.5333 68.6663 25.5063C68.6056 25.4793 68.5394 25.4666 68.4729 25.469C68.4064 25.4714 68.3413 25.489 68.283 25.5204C68.2246 25.5517 68.1745 25.5959 68.1366 25.6495Z" fill="white" />' +
		'<path d="M73.5945 22.688C73.3741 22.4648 73.1161 22.2804 72.8319 22.1428C72.5159 22.0125 72.1765 21.9453 71.8337 21.9453C71.4908 21.9453 71.1514 22.0125 70.8354 22.1428C70.5161 22.2641 70.2248 22.4466 69.9786 22.6796C69.7326 22.9064 69.5371 23.1805 69.4045 23.4848C69.2735 23.7931 69.2065 24.1239 69.2074 24.4578C69.2035 24.801 69.2736 25.1411 69.4131 25.4559C69.5389 25.7527 69.7255 26.0211 69.9615 26.2444C70.21 26.4704 70.501 26.647 70.8183 26.7644C71.1318 26.8866 71.4662 26.9493 71.8037 26.9489C72.165 26.9445 72.519 26.8492 72.8319 26.6722C73.0572 26.5482 73.2672 26.399 73.4574 26.2276V26.5463C73.4592 26.6291 73.4855 26.7096 73.5331 26.778C73.5807 26.8464 73.6475 26.8999 73.7255 26.9318C73.8035 26.9638 73.8894 26.9729 73.9726 26.9581C74.0558 26.9433 74.1328 26.9051 74.1943 26.8483C74.2357 26.8093 74.2684 26.7623 74.2905 26.7104C74.3127 26.6584 74.3236 26.6026 74.3228 26.5463V24.4578C74.336 24.1253 74.2776 23.7938 74.1514 23.4848C74.0174 23.188 73.8285 22.9179 73.5945 22.688ZM73.3289 25.1624C73.2403 25.3547 73.1186 25.5306 72.969 25.6824C72.8119 25.8282 72.6289 25.9447 72.4292 26.0263C72.006 26.1884 71.5345 26.1793 71.1182 26.0011C70.9176 25.9137 70.7347 25.7915 70.5784 25.6405C70.3477 25.4 70.1946 25.0982 70.1383 24.773C70.0819 24.4478 70.1247 24.1135 70.2614 23.8119C70.4192 23.4205 70.7265 23.1046 71.1182 22.9312C71.3242 22.8462 71.5458 22.8034 71.7694 22.8054C71.9957 22.8043 72.2199 22.8471 72.4292 22.9312C72.8209 23.1046 73.1282 23.4205 73.286 23.8119C73.3749 24.0162 73.4215 24.2358 73.4231 24.4578C73.4378 24.6964 73.4058 24.9355 73.3289 25.1624Z" fill="white" />' +
		'<path d="M76.7726 23.8967C75.9158 23.8045 75.7101 23.729 75.6587 23.3851C75.6587 23.3012 75.6073 23.0412 76.0443 22.8734C76.3695 22.7611 76.7217 22.7475 77.055 22.8343C77.3883 22.9211 77.687 23.1043 77.9122 23.3599C77.9777 23.4492 78.0763 23.5097 78.1868 23.5285C78.2974 23.5473 78.4111 23.5229 78.5034 23.4606C78.5495 23.4296 78.5887 23.3899 78.6189 23.3438C78.6491 23.2978 78.6696 23.2463 78.6791 23.1924C78.6887 23.1385 78.6872 23.0832 78.6747 23.0299C78.6622 22.9766 78.6389 22.9262 78.6062 22.8818C78.2692 22.4744 77.8105 22.1803 77.2944 22.0404C76.7782 21.9005 76.2303 21.922 75.7272 22.1018C75.4314 22.1873 75.1768 22.3742 75.0101 22.6283C74.8433 22.8824 74.7755 23.1868 74.819 23.4857C74.9647 24.5258 75.95 24.6349 76.6783 24.7187C77.4067 24.8026 77.8779 24.8949 77.9551 25.3814C78.015 25.6917 77.8351 25.9182 77.4409 26.0356C77.13 26.1369 76.7937 26.1351 76.4839 26.0305C76.1742 25.9259 75.9082 25.7243 75.7272 25.4569C75.6745 25.3674 75.5899 25.3001 75.4896 25.268C75.3893 25.2358 75.2804 25.241 75.1838 25.2826C75.0872 25.3241 75.0096 25.3991 74.966 25.4932C74.9224 25.5873 74.9158 25.6938 74.9475 25.7924C75.1404 26.1535 75.435 26.4529 75.7965 26.6551C76.1579 26.8573 76.571 26.9538 76.9868 26.9331C77.2333 26.9339 77.4785 26.9 77.7151 26.8324C78.0735 26.7593 78.3893 26.5537 78.5968 26.2584C78.8043 25.9632 78.8875 25.601 78.829 25.2472C78.5977 24.1064 77.5438 23.989 76.7726 23.8967Z" fill="white" />' +
		'<path d="M81.3993 21.9267H80.8509V20.8363C80.8527 20.7812 80.8421 20.7263 80.8199 20.6756C80.7977 20.6248 80.7644 20.5795 80.7224 20.5427C80.6405 20.4628 80.5296 20.418 80.4139 20.418C80.2983 20.418 80.1874 20.4628 80.1055 20.5427C80.0634 20.5795 80.0301 20.6248 80.0079 20.6756C79.9857 20.7263 79.9751 20.7812 79.9769 20.8363V21.9267H79.4371C79.3796 21.9259 79.3226 21.9366 79.2695 21.9583C79.2165 21.9799 79.1685 22.012 79.1286 22.0525C79.0866 22.0893 79.0533 22.1346 79.0311 22.1853C79.0089 22.2361 78.9983 22.2909 79.0001 22.3461C78.9976 22.4026 79.0079 22.4589 79.0301 22.5111C79.0523 22.5632 79.0859 22.61 79.1286 22.6481C79.1685 22.6886 79.2165 22.7207 79.2695 22.7423C79.3226 22.7639 79.3796 22.7747 79.4371 22.7739H79.9855V24.8708C79.9863 24.8848 79.9863 24.8988 79.9855 24.9127V25.6928C79.9642 25.8526 79.9787 26.0149 80.0281 26.1686C80.0776 26.3223 80.1607 26.4636 80.2716 26.5826C80.3826 26.7016 80.5187 26.7955 80.6706 26.8576C80.8225 26.9198 80.9863 26.9488 81.1508 26.9426C81.2644 26.9426 81.3734 26.8984 81.4537 26.8197C81.5341 26.7411 81.5792 26.6344 81.5792 26.5232C81.5792 26.4119 81.5341 26.3053 81.4537 26.2266C81.3734 26.148 81.2644 26.1038 81.1508 26.1038C81.0051 26.1038 80.8338 26.1038 80.8338 25.6844V24.9127C80.8338 24.9127 80.8338 24.9127 80.8338 24.8708V22.7739H81.3993C81.4568 22.7747 81.5138 22.7639 81.5669 22.7423C81.6199 22.7207 81.6679 22.6886 81.7078 22.6481C81.7505 22.61 81.7841 22.5632 81.8063 22.5111C81.8285 22.4589 81.8388 22.4026 81.8363 22.3461C81.8381 22.2909 81.8275 22.2361 81.8053 22.1853C81.7831 22.1346 81.7498 22.0893 81.7078 22.0525C81.6679 22.012 81.6199 21.9799 81.5669 21.9583C81.5138 21.9366 81.4568 21.9259 81.3993 21.9267Z" fill="white" />' +
		'<path d="M47.6924 23.4856C47.554 23.3572 47.3947 23.2523 47.2211 23.1753C47.0414 23.0939 46.845 23.0537 46.647 23.0578C46.4269 23.0577 46.2109 23.1157 46.0215 23.2256C45.8993 23.2921 45.7845 23.3708 45.6788 23.4604V22.4288C45.6801 22.3636 45.6555 22.3004 45.6102 22.2526C45.5856 22.2283 45.5562 22.2089 45.5238 22.1958C45.4915 22.1826 45.4568 22.1758 45.4217 22.1758C45.3867 22.1758 45.352 22.1826 45.3196 22.1958C45.2873 22.2089 45.2579 22.2283 45.2332 22.2526C45.208 22.2747 45.188 22.3019 45.1747 22.3323C45.1614 22.3627 45.155 22.3957 45.1561 22.4288V25.7167C45.1559 25.7509 45.1627 25.7849 45.1759 25.8165C45.1891 25.8482 45.2086 25.877 45.2332 25.9013C45.2851 25.9467 45.3522 25.9717 45.4217 25.9717C45.4913 25.9717 45.5584 25.9467 45.6102 25.9013C45.6541 25.8493 45.6783 25.7841 45.6788 25.7167V25.6412C45.7862 25.7256 45.9043 25.7961 46.0301 25.8509C46.2219 25.9324 46.4294 25.9724 46.6385 25.9684C46.8363 25.9738 47.0331 25.9386 47.2161 25.8649C47.3991 25.7912 47.5643 25.6807 47.7009 25.5406C47.8307 25.4089 47.9351 25.2555 48.0094 25.0877C48.0917 24.9114 48.1327 24.7194 48.1294 24.5257C48.1294 24.3296 48.0886 24.1355 48.0094 23.9553C47.933 23.7816 47.8257 23.6225 47.6924 23.4856ZM46.27 25.3896C46.1595 25.3463 46.0579 25.2838 45.9701 25.2051C45.8846 25.121 45.8124 25.0249 45.7559 24.9199C45.7055 24.8086 45.6764 24.6892 45.6702 24.5676V24.5257C45.6763 24.396 45.7053 24.2683 45.7559 24.1482C45.8102 24.0369 45.8825 23.9349 45.9701 23.8463C46.0551 23.762 46.1573 23.6962 46.27 23.6534C46.5066 23.5609 46.7703 23.5609 47.0069 23.6534C47.122 23.7004 47.2268 23.7687 47.3154 23.8547C47.4012 23.943 47.4708 24.0451 47.521 24.1566C47.5719 24.2733 47.5981 24.3988 47.5981 24.5257C47.6 24.65 47.5737 24.7732 47.521 24.8863C47.4736 24.9994 47.4038 25.1021 47.3155 25.1885C47.2273 25.2749 47.1224 25.3432 47.0069 25.3896C46.8908 25.4395 46.7653 25.4653 46.6385 25.4653C46.5116 25.4653 46.3862 25.4395 46.27 25.3896Z" fill="white" />' +
		'<path d="M55.7108 2.60773C56.3307 2.60773 56.8333 2.11579 56.8333 1.50894C56.8333 0.9021 56.3307 0.410156 55.7108 0.410156C55.0909 0.410156 54.5884 0.9021 54.5884 1.50894C54.5884 2.11579 55.0909 2.60773 55.7108 2.60773Z" fill="white" />' +
		'<path d="M50.6049 22.6058C50.5516 22.6053 50.4993 22.6196 50.454 22.647C50.4063 22.6748 50.3695 22.7176 50.3498 22.7685L49.6199 24.5819L48.9188 22.7685C48.8982 22.7175 48.8607 22.6747 48.8123 22.647C48.7636 22.6181 48.7073 22.6038 48.6503 22.6058C48.6136 22.604 48.5769 22.61 48.5428 22.6235C48.5087 22.637 48.478 22.6576 48.4529 22.6839C48.4059 22.735 48.3805 22.8017 48.3819 22.8704C48.3818 22.91 48.3901 22.9491 48.4063 22.9854C48.4063 23.0071 48.4263 23.0418 48.4551 23.1155C48.4839 23.1893 48.5394 23.3325 48.6126 23.5212C48.6858 23.7099 48.7812 23.955 48.8966 24.2522C49.012 24.5494 49.1495 24.903 49.3137 25.3368L48.9632 26.2436C48.9632 26.2587 48.9632 26.2739 48.9498 26.2869C48.9475 26.3042 48.9475 26.3217 48.9498 26.339C48.9498 26.4087 48.9777 26.4757 49.0275 26.5256C49.0596 26.5587 49.0996 26.5833 49.144 26.5973C49.1884 26.6112 49.2357 26.614 49.2815 26.6053C49.3272 26.5967 49.37 26.5769 49.4059 26.5478C49.4418 26.5187 49.4696 26.4812 49.4867 26.4388L50.86 22.9811C50.8775 22.9474 50.8866 22.9103 50.8867 22.8726C50.8854 22.805 50.8576 22.7406 50.809 22.6925C50.7831 22.6649 50.7516 22.6428 50.7164 22.6279C50.6813 22.6129 50.6433 22.6054 50.6049 22.6058Z" fill="white"/>' +
		'</svg>',
	expand_power_form: '<svg width="21px" height="22px" viewBox="0 0 21 22" version="1.1" >' +
		'<g class="Org-Settings" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Group-21" transform="translate(0.759765, 0.499911)" fill="#33424E" fill-rule="nonzero">' +
		'<path d="M10.1624834,2.27541981 L3.04766596,10.8253949 L10.152206,19.156286 C10.6255219,19.7113033 10.5592897,20.544932 10.0042724,21.0182478 C9.44925516,21.4915636 8.61562647,21.4253315 8.14231066,20.8703142 L0.315807121,11.6928378 C-0.101354441,11.2036679 -0.105693382,10.485182 0.305529767,9.99100945 L8.1320333,0.585791292 C8.59861134,0.0250979825 9.4313793,-0.0511975253 9.99207261,0.415380506 C10.5527659,0.881958537 10.6290614,1.7147265 10.1624834,2.27541981 Z M19.4984209,2.16560259 L12.3836035,10.7155777 L19.4881435,19.0464688 C19.9614594,19.6014861 19.8952272,20.4351148 19.3402099,20.9084306 C18.7851927,21.3817464 17.951564,21.3155143 17.4782482,20.760497 L9.65174462,11.5830206 C9.23458306,11.0938506 9.23024412,10.3753648 9.64146727,9.88119224 L17.4679708,0.475974075 C17.9345488,-0.0847192344 18.7673168,-0.161014742 19.3280101,0.305563289 C19.8887034,0.77214132 19.9649989,1.60490928 19.4984209,2.16560259 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	slideshow_maximize: '<svg width="13" height="13" viewBox="0 0 13 13">' +
		'<path fill="#FFFFFE" fill-rule="evenodd" d="M12.443 0h-4.86a.541.541 0 1 0 0 1.083h3.591L7.491 4.766l.766.766 3.676-3.676-.016 3.56a.541.541 0 1 0 1.083 0V.543c0-.16-.066-.29-.17-.379A.538.538 0 0 0 12.442 0zM5.417 11.917H1.826l3.683-3.683-.766-.766-3.676 3.677.016-3.562a.541.541 0 1 0-1.083 0v4.875c0 .161.066.29.17.379.1.1.236.163.387.163h4.86a.541.541 0 1 0 0-1.083z"/>' +
		'</svg>',
	slideshow_minimize: '<svg width="20px" height="20px" viewBox="0 0 23 22" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="02-branching-Steps-in-Slideshow" transform="translate(-1425.000000, -157.000000)" fill="#FFFFFF" fill-rule="nonzero" stroke="#FFFFFF">' +
		'<g class="Group" transform="translate(1372.000000, 158.000000)">' +
		'<g class="Group-13" transform="translate(54.000000, 0.000000)">' +
		'<path d="M6.47313953,15.1523381 L0.915079615,20.7103981 L6.21813712e-12,19.7953184 L5.53024234,14.2650761 L2.58626288,14.2351782 L2.59940477,12.9411273 L7.76576717,12.9935949 L7.76930426,18.1171178 L6.47518692,18.1180112 L6.47313953,15.1523381 Z" class="combined-shape"></path>' +
		'<path d="M15.1545626,6.47094784 L18.1222454,6.47094784 L18.1222454,7.76506548 L12.9493121,7.76506548 L12.945775,2.58903707 L14.2398923,2.58815272 L14.2419187,5.55343307 L19.7955164,2.52700421e-15 L20.7105958,0.915079364 L15.1545626,6.47094784 Z" class="combined-shape"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	playerbar_prev_button: '<svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_slideshow-03-_new" transform="translate(-331.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="play--pssh-" transform="translate(315.000000, 925.000000)">' +
		'<polygon class="shape" points="18.8725 16.25 23.065 12.0575 22 11 16 17 22 23 23.0575 21.9425 18.8725 17.75 28 17.75 28 16.25"></polygon>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	playerbar_next_button: '<svg width="12px" height="12px" viewBox="0 0 12 12" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_slideshow-03-_new" transform="translate(-423.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="play--pssh-" transform="translate(315.000000, 925.000000)">' +
		'<g class="ic_skip_previous-copy" transform="translate(114.000000, 17.000000) scale(-1, 1) translate(-114.000000, -17.000000) translate(102.000000, 5.000000)">' +
		'<polygon class="shape" points="18 11.25 8.8725 11.25 13.065 7.0575 12 6 6 12 12 18 13.0575 16.9425 8.8725 12.75 18 12.75"></polygon>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
    slideshow_unmute: '<svg width="33" height="33" viewBox="0 0 33 33" fill="none" xmlns="http://www.w3.org/2000/svg">' +
    '<path d="M21.0738 13.7253C20.7266 13.5565 20.296 13.704 20.1253 14.0587C19.956 14.4129 20.1058 14.8378 20.46 15.0071C21.0875 15.3089 21.4778 15.8805 21.4778 16.5C21.4778 17.1196 21.0875 17.6911 20.46 17.9925C20.1058 18.1618 19.956 18.5871 20.1253 18.9409C20.2969 19.2987 20.7271 19.4427 21.0738 19.2742C22.2 18.7347 22.9 17.6716 22.9 16.5C22.9 15.3285 22.2 14.2649 21.0738 13.7253ZM16.136 7.96667C15.8733 7.96667 15.6062 8.06356 15.3902 8.28001L11.436 12.2333H6.89998C6.31065 12.2333 5.83331 12.7107 5.83331 13.3V19.7C5.83331 20.2889 6.31065 20.7667 6.89998 20.7667H11.436L15.3902 24.72C15.6066 24.9365 15.8738 25.0333 16.136 25.0333C16.684 25.0333 17.2111 24.6102 17.2111 23.9658V9.03423C17.2111 8.38934 16.6835 7.96667 16.136 7.96667ZM15.7889 23.1076L12.0249 19.3445H7.25554V13.6556H12.0249L15.7889 9.89245V23.1076ZM27.1666 16.4996C27.1666 13.5609 25.6546 10.872 23.2195 9.48312C22.8778 9.28845 22.4378 9.40401 22.24 9.7449C22.0422 10.0853 22.1613 10.52 22.5049 10.7165C24.4946 11.852 25.732 14.0676 25.732 16.4996C25.732 18.9316 24.4946 21.1476 22.5049 22.2827C22.1618 22.4791 22.0426 22.9138 22.24 23.2542C22.4311 23.5822 22.8649 23.7182 23.2195 23.516C25.6546 22.1276 27.1666 19.4387 27.1666 16.4996Z" fill="#555555">' +
    '</svg>',
      slideshow_mute: '<svg width="32" height="32" viewBox="0 0 32 32"><g fill="#555" fillrule="evenodd">' +
      '<path d="M11.864 17.654l-2.996-4.286 2.996-2.996v7.282zm8.488-15.771L18.79.32 0 19.11l1.563 1.562 5.716-5.715 2.896 4.139a2.15 2.15 0 0 0 1.688.795 2.205 2.205 0 0 0 2.21-2.21V8.162l6.28-6.28zM4.125 11.858V7.734h3.892l3.845-5.497v1.885l2.172-2.172c-.093-.79-.58-1.477-1.327-1.785a2.229 2.229 0 0 0-2.408.48L6.865 5.522h-2.74c-1.219 0-2.21.992-2.21 2.21v4.422c0 .534.198 1.017.514 1.4l1.696-1.697z">' +
      '</g>' +
      '</svg>',
	slideshow_video_mode: '<svg width="20px" height="14px" viewBox="0 0 20 14" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_video02_new" transform="translate(-1138.000000, -936.000000)" fill="#FFFFFF">' +
		'<g class="Group-3-Copy-15" transform="translate(1130.000000, 925.000000)">' +
		'<g class="Group-3" transform="translate(8.000000, 8.000000)">' +
		'<path d="M14.4827586,6.29411765 L14.4827586,4.23529412 C14.4827586,3.55258824 14.02,3 13.4482759,3 L1.72413793,3 C0.771724138,3 0,6.13435294 0,10 C0,13.8656471 0.771724138,17 1.72413793,17 L13.4482759,17 C14.02,17 14.4827586,16.4474118 14.4827586,15.7647059 L14.4827586,13.7058824 L20,17 L20,3 L14.4827586,6.29411765 Z" class="Stroke-732"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
    add_icon: '<svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">' +
  '<path fill-rule="evenodd" clip-rule="evenodd" d="M19.2 13.3H12.8V19.7C12.8 19.9122 12.7157 20.1157 12.5657 20.2657C12.4157 20.4157 12.2122 20.5 12 20.5C11.7878 20.5 11.5843 20.4157 11.4343 20.2657C11.2843 20.1157 11.2 19.9122 11.2 19.7V13.3H4.8C4.58783 13.3 4.38434 13.2157 4.23431 13.0657C4.08429 12.9157 4 12.7122 4 12.5C4 12.2878 4.08429 12.0843 4.23431 11.9343C4.38434 11.7843 4.58783 11.7 4.8 11.7H11.2V5.3C11.2 5.19494 11.2207 5.09091 11.2609 4.99385C11.3011 4.89679 11.36 4.8086 11.4343 4.73431C11.5086 4.66003 11.5968 4.6011 11.6939 4.5609C11.7909 4.52069 11.8949 4.5 12 4.5C12.1051 4.5 12.2091 4.52069 12.3061 4.5609C12.4032 4.6011 12.4914 4.66003 12.5657 4.73431C12.64 4.8086 12.6989 4.89679 12.7391 4.99385C12.7793 5.09091 12.8 5.19494 12.8 5.3V11.7H19.2C19.4122 11.7 19.6157 11.7843 19.7657 11.9343C19.9157 12.0843 20 12.2878 20 12.5C20 12.7122 19.9157 12.9157 19.7657 13.0657C19.6157 13.2157 19.4122 13.3 19.2 13.3Z" fill="#555555"/>'+
 '</svg>',
 subtract_icon: '<svg width="24" height="25" viewBox="0 0 24 25" fill="none" xmlns="http://www.w3.org/2000/svg">' +
 '<path fill-rule="evenodd" clip-rule="evenodd" d="M19.2 11.5C19.642 11.5 20 11.948 20 12.5C20 13.052 19.642 13.5 19.2 13.5H4.8C4.358 13.5 4 13.052 4 12.5C4 11.948 4.358 11.5 4.8 11.5H19.2Z" fill="#555555"/>'+
 '</svg>',
	slideshow_giphy_mode: '<svg width="14" height="11" viewBox="0 0 14 11">' +
		'<g fill="none" fill-rule="nonzero">' +
		'<circle cx="3.26" cy="6.802" r="3.255" fill="#FFF"/>' +
		'<circle cx="6.82" cy="5.028" r="3.255" fill="#003054" stroke="#175280" stroke-opacity=".612" stroke-width=".25"/>' +
		'<path fill="#FFF" d="M10.381 6.38a3.124 3.124 0 1 1 3.124-3.124 3.128 3.128 0 0 1-3.124 3.124z"/>' +
		'<path fill="#FFF9F9" d="M10.381.262a2.993 2.993 0 1 1-2.993 2.993A2.997 2.997 0 0 1 10.381.262zm0-.262a3.255 3.255 0 1 0 0 6.51 3.255 3.255 0 0 0 0-6.51z"/>' +
		'</g>' +
		'</svg>',
	slideshow_mode: '<svg width="15" height="14" viewBox="0 0 15 14">' +
		'<path fill="#FEFFFF" fill-rule="evenodd" d="M13.086 9.02c0 .53-.353.862-.89.862H3.284c-.537 0-.891-.332-.891-.862L2.387.824h10.706l-.007 8.196zM.74 0v.875h.875v8.313c0 1.036.72 1.75 1.75 1.75H5.99L4.24 14l1.318-.006 1.745-3.056h.875l1.744 3.056L11.24 14l-1.75-3.063h2.625c1.031 0 1.75-.713 1.75-1.75V.876h.875V0h-14zm4.294 3.294h5.412a1 1 0 0 1 1 1v2.941a1 1 0 0 1-1 1H5.034a1 1 0 0 1-1-1v-2.94a1 1 0 0 1 1-1zm-.176 4.118h5.765v-2.47l-2.306 2.47-1.153-1.853-2.306 1.853zm3.706-3.294a.412.412 0 1 0 0-.824.412.412 0 0 0 0 .824z"/>' +
		'</svg>',
	playerbar_close: '<svg width="20px" height="20px" viewBox="0 0 20 20" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="GuideMe-Player_video02_new" transform="translate(-1546.000000, -932.000000)" fill="#EFEFF5">' +
		'<path d="M1559.53562,944.65 C1559.78,944.89375 1559.78,945.29375 1559.53562,945.5375 C1559.29188,945.78125 1558.89563,945.78125 1558.65125,945.5375 L1556.00375,942.8875 L1553.3375,945.55625 C1553.09125,945.8 1552.6925,945.8 1552.44625,945.55625 C1552.20062,945.30625 1552.20062,944.90625 1552.44625,944.6625 L1555.1125,941.99375 L1552.465,939.35 C1552.22062,939.10625 1552.22062,938.70625 1552.465,938.4625 C1552.70813,938.21875 1553.10437,938.21875 1553.34875,938.4625 L1555.99625,941.1125 L1558.6825,938.425 C1558.92875,938.18125 1559.32687,938.18125 1559.57312,938.425 C1559.81875,938.675 1559.81875,939.06875 1559.57312,939.31875 L1556.8875,942.00625 L1559.53562,944.65 L1559.53562,944.65 Z M1556,932 C1550.47688,932 1546,936.475 1546,942 C1546,947.525 1550.47688,952 1556,952 C1561.52312,952 1566,947.525 1566,942 C1566,936.475 1561.52312,932 1556,932 L1556,932 Z" class="Fill-23"></path>' +
		'</g>' +
		'</g>' +
		'</svg>',
	branch_slideshow: '<svg width="26px" height="19px" viewBox="0 0 26 19" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd" opacity="0.5">' +
		'<g class="02-branching-Steps-in-Slideshow" transform="translate(-708.000000, -287.000000)" fill="#FFFFFF" fill-rule="nonzero">' +
		'<g class="Group-17" transform="translate(721.000000, 296.375000) scale(1, -1) rotate(90.000000) translate(-721.000000, -296.375000) translate(712.000000, 284.000000)">' +
		'<path d="M17.9743355,3.54499151 C17.9743355,5.50285655 16.387209,7.08998302 14.429344,7.08998302 C12.4714789,7.08998302 10.8843525,5.50285655 10.8843525,3.54499151 C10.8843525,1.58714746 12.4714885,-1.50990331e-14 14.429344,-1.50990331e-14 C16.3871994,-1.50990331e-14 17.9743355,1.58714746 17.9743355,3.54499151 Z M16.7519246,3.54499151 C16.7519246,2.26226437 15.7120786,1.22241087 14.429344,1.22241087 C13.1466093,1.22241087 12.1067633,2.26226437 12.1067633,3.54499151 C12.1067633,4.82773767 13.1465978,5.86757216 14.429344,5.86757216 C15.7120901,5.86757216 16.7519246,4.82773767 16.7519246,3.54499151 Z" class="Stroke-1"></path>' +
		'<polygon class="Stroke-3" points="2.93378608 6.47877759 4.15619694 6.47877759 4.15619694 18.2444822 2.93378608 18.2444822"></polygon>' +
		'<path d="M7.08998302,3.54499151 C7.08998302,5.50285655 5.50285655,7.08998302 3.54499151,7.08998302 C1.58712647,7.08998302 -1.03828057e-12,5.50285655 -1.03828057e-12,3.54499151 C-1.03828057e-12,1.58714746 1.58713604,-1.50990331e-14 3.54499151,-1.50990331e-14 C5.50284698,-1.50990331e-14 7.08998302,1.58714746 7.08998302,3.54499151 Z M5.86757216,3.54499151 C5.86757216,2.26226437 4.82772614,1.22241087 3.54499151,1.22241087 C2.26225689,1.22241087 1.22241087,2.26226437 1.22241087,3.54499151 C1.22241087,4.82773767 2.26224535,5.86757216 3.54499151,5.86757216 C4.82773767,5.86757216 5.86757216,4.82773767 5.86757216,3.54499151 Z" class="Stroke-5"></path>' +
		'<path d="M7.08998302,21.1782835 C7.08998302,23.1361276 5.50284698,24.723275 3.54499151,24.723275 C1.58713604,24.723275 -1.03828057e-12,23.1361276 -1.03828057e-12,21.1782835 C-1.03828057e-12,19.2204185 1.58712647,17.633292 3.54499151,17.633292 C5.50285655,17.633292 7.08998302,19.2204185 7.08998302,21.1782835 Z M5.86757216,21.1782835 C5.86757216,19.8955374 4.82773767,18.8557029 3.54499151,18.8557029 C2.26224535,18.8557029 1.22241087,19.8955374 1.22241087,21.1782835 C1.22241087,22.4610107 2.26225689,23.5008642 3.54499151,23.5008642 C4.82772614,23.5008642 5.86757216,22.4610107 5.86757216,21.1782835 Z" class="Stroke-7"></path>' +
		'<path d="M13.8181385,8.63838031 L13.8181385,6.47877759 L15.0405494,6.47877759 L15.0405494,8.63838031 C15.0405494,10.5962244 13.4534134,12.1833718 11.4955579,12.1833718 L6.4787837,12.1833718 L6.4787837,10.960961 L11.4955579,10.960961 C12.7782925,10.960961 13.8181385,9.92110745 13.8181385,8.63838031 Z M6.47877759,10.960961 L6.47877759,12.1833718 C5.19603143,12.1833718 4.15619694,13.2232063 4.15619694,14.5059525 L2.93378608,14.5059525 C2.93378608,12.5480874 4.52091255,10.960961 6.47877759,10.960961 Z" class="combined-shape"></path>" +' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	icon_play_step: '<svg width="38px" height="43px" viewBox="0 0 38 43" version="1.1" >' +
		'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Mobile" transform="translate(-129.000000, -142.000000)" fill="#ffffff">' +
		'<g class="Group-3" transform="translate(129.000000, 142.000000)">' +
		'<path d="M35.9019,23.8148 L4.3299,42.0428 C1.9489,43.4178 -0.0001,42.2928 -0.0001,39.5428 L-0.0001,3.0868 C-0.0001,0.3368 1.9489,-0.7882 4.3299,0.5868 L35.9019,18.8148 C38.2829,20.1898 38.2829,22.4398 35.9019,23.8148" class="Fill-1"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	icon_pause_step: '<svg width="15px" height="21px" viewBox="0 0 15 21" version="1.1" >' +
		'<g class="Popup-Design" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
		'<g class="Automation-Setp-POPUP" transform="translate(-765.000000, -999.000000)" fill="#FFFFFE">' +
		'<g class="automation-step-popup-copy" transform="translate(198.000000, 736.000000)">' +
		'<path d="M580.5,263 L577.5,263 C576.672,263 576,263.672 576,264.5 L576,282.5 C576,283.328 576.672,284 577.5,284 L580.5,284 C581.328,284 582,283.328 582,282.5 L582,264.5 C582,263.672 581.328,263 580.5,263 L580.5,263 Z M571.5,263 L568.5,263 C567.672,263 567,263.672 567,264.5 L567,282.5 C567,283.328 567.672,284 568.5,284 L571.5,284 C572.328,284 573,283.328 573,282.5 L573,264.5 C573,263.672 572.328,263 571.5,263 L571.5,263 Z" class="Fill-125"></path>' +
		'</g>' +
		'</g>' +
		'</g>' +
		'</svg>',
	smallscreen: '<svg version="1.1" class="Capa_1" x="0px" y="0px" viewBox="0 0 28.359 28.359" style="enable-background:new 0 0 28.359 28.359;" xml:space="preserve">' +
		'<g>' +
		'<g class="c116_arrows">' +
		'<path d="M21.935,19.368h3.235c0.878-0.003,1.589-0.67,1.589-1.492c0-0.824-0.711-1.492-1.589-1.492h-6.764 c-0.879,0-1.59,0.668-1.591,1.492c0.001,0.019,0.007,0.041,0.007,0.061c0,0.027-0.007,0.057-0.007,0.086v6.673 c0,0.864,0.666,1.566,1.49,1.566c0.822-0.002,1.492-0.702,1.492-1.566v-3.252l6.018,6.02c0.582,0.583,1.525,0.583,2.108,0 c0.58-0.582,0.58-1.526,0-2.108L21.935,19.368z"/>' +
		'<path d="M11.543,17.876c-0.002-0.824-0.712-1.492-1.592-1.492H3.189c-0.877,0-1.593,0.668-1.593,1.492 c0,0.822,0.716,1.489,1.593,1.492h3.235l-5.991,5.986c-0.577,0.582-0.577,1.526,0,2.108c0.584,0.583,1.527,0.583,2.108,0 l6.019-6.02v3.252c0,0.864,0.67,1.564,1.491,1.566c0.826,0,1.491-0.702,1.491-1.566v-6.673c0-0.029-0.008-0.059-0.008-0.086 C11.535,17.917,11.541,17.895,11.543,17.876z"/>' +
		'<path d="M16.815,10.479c0.001,0.824,0.712,1.491,1.591,1.491h6.764c0.878,0,1.589-0.667,1.589-1.491 c0-0.822-0.711-1.487-1.589-1.489h-3.235l5.989-5.987c0.58-0.584,0.58-1.528,0-2.109c-0.583-0.582-1.526-0.582-2.108,0 l-6.018,6.02V3.662c0-0.867-0.67-1.568-1.492-1.568c-0.824,0-1.49,0.701-1.49,1.568v6.671c0,0.03,0.007,0.057,0.007,0.087 C16.822,10.44,16.816,10.456,16.815,10.479z"/>' +
		'<path d="M10.052,2.094c-0.821,0-1.491,0.701-1.491,1.568v3.251l-6.019-6.02c-0.581-0.582-1.524-0.582-2.108,0 c-0.577,0.581-0.577,1.525,0,2.109l5.991,5.987H3.189c-0.876,0.003-1.592,0.668-1.592,1.49c0,0.824,0.716,1.491,1.593,1.491h6.761 c0.88,0,1.59-0.667,1.592-1.491c-0.002-0.023-0.008-0.039-0.008-0.06c0-0.03,0.008-0.057,0.008-0.087v-6.67 C11.543,2.795,10.878,2.094,10.052,2.094z"/>' +
		'</g>' +
		'<g class="Capa_1_156_">' +
		'</g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'<g>' +
		'</g>' +
		'</svg>',
	play_step_audio_off: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask class="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.0755 15.5729C10.1334 15.613 10.2007 15.6333 10.2682 15.6333C10.3235 15.6333 10.3789 15.6197 10.4295 15.5922C10.542 15.5312 10.6122 15.4116 10.6122 15.2815V0.985114C10.6122 0.852045 10.5388 0.730341 10.4224 0.670632C10.3062 0.611029 10.1669 0.623485 10.0625 0.703072C10.0229 0.733296 6.12166 3.70627 3.79778 5.31987H1.34404C1.15403 5.31987 1 5.47743 1 5.67172V10.5949C1 10.7892 1.15403 10.9467 1.34404 10.9467H3.79765C4.92723 11.7312 5.91912 12.4876 6.87919 13.2197L6.87993 13.2202C7.87115 13.976 8.89613 14.7576 10.0755 15.5729ZM3.90323 10.2431H1.68808V6.02361H3.90333C3.97204 6.02361 4.03916 6.00256 4.09603 5.96323C5.90625 4.7116 8.7392 2.58106 9.92413 1.68434V14.6139C8.97669 13.9413 8.12158 13.2893 7.29049 12.6555C6.29956 11.8999 5.27491 11.1186 4.09593 10.3034C4.03902 10.2641 3.9719 10.2431 3.90323 10.2431ZM17.9084 6.53378L15.9422 8.50005L17.9084 10.4662C18.0305 10.5883 18.0305 10.7863 17.9084 10.9084C17.8473 10.9695 17.7673 11 17.6873 11C17.6074 11 17.5273 10.9695 17.4662 10.9084L15.5001 8.94211L13.5338 10.9084C13.4727 10.9695 13.3926 11 13.3127 11C13.2327 11 13.1527 10.9695 13.0916 10.9085C12.9695 10.7864 12.9695 10.5884 13.0916 10.4663L15.0579 8.50005L13.0916 6.53378C12.9695 6.41172 12.9695 6.21368 13.0916 6.09162C13.2138 5.96946 13.4116 5.96946 13.5338 6.09162L15.5001 8.05789L17.4662 6.09162C17.5884 5.96946 17.7862 5.96946 17.9084 6.09162C18.0305 6.21368 18.0305 6.41172 17.9084 6.53378Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM15.9422 8.50005L15.5886 8.14651L15.2351 8.50006L15.5886 8.85361L15.9422 8.50005ZM17.9084 6.53378L17.555 6.18009L17.5548 6.18024L17.9084 6.53378ZM17.9084 10.4662L17.5548 10.8198L17.555 10.8199L17.9084 10.4662ZM17.9084 10.9084L17.555 10.5547L17.5548 10.5548L17.9084 10.9084ZM17.4662 10.9084L17.8198 10.5548L17.8198 10.5548L17.4662 10.9084ZM15.5001 8.94211L15.8536 8.58856L15.5001 8.235L15.1465 8.58855L15.5001 8.94211ZM13.5338 10.9084L13.1802 10.5548L13.1802 10.5548L13.5338 10.9084ZM13.0916 10.9085L12.7382 11.2622L12.7384 11.2623L13.0916 10.9085ZM13.0916 10.4663L13.445 10.82L13.4452 10.8199L13.0916 10.4663ZM15.0579 8.50005L15.4115 8.85361L15.765 8.50005L15.4115 8.1465L15.0579 8.50005ZM13.0916 6.53378L13.4452 6.18023L13.445 6.18009L13.0916 6.53378ZM13.0916 6.09162L13.445 6.44532L13.4452 6.44517L13.0916 6.09162ZM13.5338 6.09162L13.1802 6.44517L13.1802 6.44518L13.5338 6.09162ZM15.5001 8.05789L15.1465 8.41145L15.5001 8.765L15.8536 8.41144L15.5001 8.05789ZM17.4662 6.09162L17.1127 5.73807L17.1127 5.73808L17.4662 6.09162ZM17.9084 6.09162L17.5548 6.44517L17.555 6.44532L17.9084 6.09162ZM10.2682 15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333ZM10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529ZM10.1122 15.2815C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122ZM10.1122 0.985114V15.2815H11.1122V0.985114H10.1122ZM10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545ZM10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063ZM4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058ZM1.34404 5.81987H3.79778V4.81987H1.34404V5.81987ZM1.5 5.67172C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5ZM1.5 10.5949V5.67172H0.5V10.5949H1.5ZM1.34404 10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467ZM3.79765 10.4467H1.34404V11.4467H3.79765V10.4467ZM7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221ZM7.183 12.8225L7.18226 12.822L6.57612 13.6173L6.57686 13.6179L7.183 12.8225ZM10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616ZM1.68808 10.7431H3.90323V9.74307H1.68808V10.7431ZM1.18808 6.02361V10.2431H2.18808V6.02361H1.18808ZM3.90333 5.52361H1.68808V6.52361H3.90333V5.52361ZM3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201ZM9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564ZM10.4241 14.6139V1.68434H9.42413V14.6139H10.4241ZM6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531ZM3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147ZM3.90323 10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431ZM16.2958 8.8536L18.2619 6.88733L17.5548 6.18024L15.5886 8.14651L16.2958 8.8536ZM18.2619 10.1127L16.2957 8.1465L15.5886 8.85361L17.5548 10.8198L18.2619 10.1127ZM18.2618 11.2621C18.5794 10.9447 18.5794 10.4299 18.2618 10.1125L17.555 10.8199C17.4817 10.7467 17.4817 10.6279 17.555 10.5547L18.2618 11.2621ZM17.6873 11.5C17.8946 11.5 18.1034 11.4205 18.2619 11.2619L17.5548 10.5548C17.5912 10.5184 17.64 10.5 17.6873 10.5V11.5ZM17.1127 11.2619C17.2712 11.4205 17.4801 11.5 17.6873 11.5V10.5C17.7347 10.5 17.7834 10.5184 17.8198 10.5548L17.1127 11.2619ZM15.1465 9.29565L17.1127 11.2619L17.8198 10.5548L15.8536 8.58856L15.1465 9.29565ZM13.8873 11.2619L15.8536 9.29566L15.1465 8.58855L13.1802 10.5548L13.8873 11.2619ZM13.3127 11.5C13.5199 11.5 13.7288 11.4205 13.8873 11.2619L13.1802 10.5548C13.2166 10.5184 13.2653 10.5 13.3127 10.5V11.5ZM12.7384 11.2623C12.8968 11.4205 13.1055 11.5 13.3127 11.5V10.5C13.36 10.5 13.4086 10.5184 13.4449 10.5546L12.7384 11.2623ZM12.7382 10.1126C12.4206 10.43 12.4206 10.9448 12.7382 11.2622L13.445 10.5548C13.5183 10.628 13.5183 10.7468 13.445 10.82L12.7382 10.1126ZM14.7044 8.1465L12.7381 10.1128L13.4452 10.8199L15.4115 8.85361L14.7044 8.1465ZM12.7381 6.88734L14.7044 8.85361L15.4115 8.1465L13.4452 6.18023L12.7381 6.88734ZM12.7382 5.73792C12.4206 6.05528 12.4206 6.57013 12.7382 6.88748L13.445 6.18009C13.5183 6.25332 13.5183 6.37208 13.445 6.44532L12.7382 5.73792ZM13.8873 5.73808C13.5699 5.42064 13.0555 5.42064 12.7381 5.73808L13.4452 6.44517C13.3721 6.51828 13.2533 6.51828 13.1802 6.44517L13.8873 5.73808ZM15.8536 7.70434L13.8873 5.73807L13.1802 6.44518L15.1465 8.41145L15.8536 7.70434ZM17.1127 5.73808L15.1465 7.70435L15.8536 8.41144L17.8198 6.44517L17.1127 5.73808ZM18.2619 5.73807C17.9445 5.42064 17.4301 5.42064 17.1127 5.73807L17.8198 6.44517C17.7467 6.51828 17.6279 6.51828 17.5548 6.44517L18.2619 5.73807ZM18.2618 6.88748C18.5794 6.57013 18.5794 6.05528 18.2618 5.73793L17.555 6.44532C17.4817 6.37208 17.4817 6.25332 17.555 6.18009L18.2618 6.88748Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	play_step_audio_on: '<svg width="19" height="17" viewBox="0 0 19 17" fill="none">' +
		'<mask class="path-1-outside-1" maskUnits="userSpaceOnUse" x="0" y="-0.366699" width="19" height="17" fill="black">' +
		'<rect fill="white" y="-0.366699" width="19" height="17"/>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z"/>' +
		'</mask>' +
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M10.2682 15.6333C10.2007 15.6333 10.1334 15.613 10.0755 15.5729C8.89613 14.7576 7.87115 13.976 6.87993 13.2202L6.87919 13.2197C5.91912 12.4876 4.92723 11.7312 3.79765 10.9467H1.34404C1.15403 10.9467 1 10.7892 1 10.5949V5.67172C1 5.47743 1.15403 5.31987 1.34404 5.31987H3.79778C6.12166 3.70627 10.0229 0.733296 10.0625 0.703072C10.1669 0.623485 10.3062 0.611029 10.4224 0.670632C10.5388 0.730341 10.6122 0.852045 10.6122 0.985114V15.2815C10.6122 15.4116 10.542 15.5312 10.4295 15.5922C10.3789 15.6197 10.3235 15.6333 10.2682 15.6333ZM1.68808 10.2431H3.90323C3.9719 10.2431 4.03902 10.2641 4.09593 10.3034C5.27491 11.1186 6.29956 11.8999 7.29049 12.6555C8.12158 13.2893 8.97669 13.9413 9.92413 14.6139V1.68434C8.7392 2.58106 5.90625 4.7116 4.09603 5.96323C4.03916 6.00256 3.97204 6.02361 3.90333 6.02361H1.68808V10.2431ZM13.2438 10.9244C13.155 10.9244 13.0663 10.8895 12.999 10.8197C12.8655 10.6814 12.8668 10.4587 13.0021 10.3221C13.5813 9.73721 13.9003 8.95988 13.9003 8.13331C13.9003 7.30668 13.5813 6.52938 13.002 5.94458C12.8668 5.80806 12.8654 5.58527 12.9989 5.44696C13.1324 5.30865 13.3501 5.30724 13.4854 5.44372C14.1967 6.16181 14.5884 7.117 14.5884 8.13328C14.5884 9.14952 14.1967 10.1047 13.4855 10.8228C13.4184 10.8906 13.3311 10.9244 13.2438 10.9244ZM15.601 12.4459C15.6683 12.5157 15.7571 12.5506 15.8458 12.5506C15.9331 12.5506 16.0205 12.5168 16.0875 12.4491C17.229 11.2966 17.8576 9.76397 17.8576 8.13354C17.8576 6.50315 17.229 4.97047 16.0875 3.81778C15.9523 3.68126 15.7344 3.68267 15.6009 3.82095C15.4674 3.95926 15.4688 4.18201 15.604 4.31856C16.6136 5.33797 17.1696 6.69283 17.1696 8.13354C17.1696 9.57429 16.6136 10.9291 15.6041 11.9483C15.4689 12.0849 15.4675 12.3076 15.601 12.4459Z" fill="#757575"/>' +
		'<path d="M10.0755 15.5729L10.36 15.1617L10.3598 15.1616L10.0755 15.5729ZM6.87993 13.2202L7.1831 12.8226L7.183 12.8225L6.87993 13.2202ZM6.87919 13.2197L6.57601 13.6173L6.57612 13.6173L6.87919 13.2197ZM3.79765 10.9467L4.08287 10.5361L3.95424 10.4467H3.79765V10.9467ZM3.79778 5.31987V5.81987H3.95435L4.08296 5.73058L3.79778 5.31987ZM10.0625 0.703072L10.3657 1.10066L10.3657 1.10063L10.0625 0.703072ZM10.4224 0.670632L10.6508 0.225813L10.6505 0.225677L10.4224 0.670632ZM10.4295 15.5922L10.1909 15.1528L10.1908 15.1529L10.4295 15.5922ZM1.68808 10.2431H1.18808V10.7431H1.68808V10.2431ZM4.09593 10.3034L4.38028 9.89217L4.38025 9.89215L4.09593 10.3034ZM7.29049 12.6555L7.59367 12.258L7.59367 12.258L7.29049 12.6555ZM9.92413 14.6139L9.6347 15.0216L10.4241 15.582V14.6139H9.92413ZM9.92413 1.68434H10.4241V0.678921L9.62241 1.28564L9.92413 1.68434ZM4.09603 5.96323L3.81167 5.55196L3.8116 5.55201L4.09603 5.96323ZM1.68808 6.02361V5.52361H1.18808V6.02361H1.68808ZM12.999 10.8197L12.6392 11.167L12.6392 11.167L12.999 10.8197ZM13.0021 10.3221L13.3573 10.674L13.3574 10.674L13.0021 10.3221ZM13.002 5.94458L13.3572 5.5927L13.3572 5.59269L13.002 5.94458ZM12.9989 5.44696L12.6392 5.09964L12.6391 5.09974L12.9989 5.44696ZM13.4854 5.44372L13.8407 5.09185L13.8405 5.09174L13.4854 5.44372ZM13.4855 10.8228L13.1302 10.471L13.1301 10.4712L13.4855 10.8228ZM15.601 12.4459L15.9608 12.0987L15.9607 12.0987L15.601 12.4459ZM16.0875 12.4491L15.7323 12.0973L15.7322 12.0974L16.0875 12.4491ZM16.0875 3.81778L16.4427 3.46595L16.4427 3.46593L16.0875 3.81778ZM15.6009 3.82095L15.2412 3.47368L15.2412 3.47372L15.6009 3.82095ZM15.604 4.31856L15.2487 4.67036L15.2488 4.6704L15.604 4.31856ZM15.6041 11.9483L15.9593 12.3002L15.9594 12.3002L15.6041 11.9483ZM9.79098 15.9841C9.93362 16.0828 10.1004 16.1333 10.2682 16.1333V15.1333C10.3011 15.1333 10.3333 15.1433 10.36 15.1617L9.79098 15.9841ZM6.57676 13.6178C7.56726 14.3731 8.60092 15.1613 9.79114 15.9842L10.3598 15.1616C9.19134 14.3538 8.17504 13.579 7.1831 12.8226L6.57676 13.6178ZM6.57612 13.6173L6.57686 13.6179L7.183 12.8225L7.18226 12.822L6.57612 13.6173ZM3.51243 11.3574C4.63163 12.1347 5.6152 12.8846 6.57601 13.6173L7.18237 12.8221C6.22304 12.0905 5.22283 11.3278 4.08287 10.5361L3.51243 11.3574ZM1.34404 11.4467H3.79765V10.4467H1.34404V11.4467ZM0.5 10.5949C0.5 11.0546 0.86733 11.4467 1.34404 11.4467V10.4467C1.44072 10.4467 1.5 10.5237 1.5 10.5949H0.5ZM0.5 5.67172V10.5949H1.5V5.67172H0.5ZM1.34404 4.81987C0.86733 4.81987 0.5 5.21196 0.5 5.67172H1.5C1.5 5.7429 1.44072 5.81987 1.34404 5.81987V4.81987ZM3.79778 4.81987H1.34404V5.81987H3.79778V4.81987ZM9.75931 0.305489C9.71744 0.337422 5.82555 3.30316 3.51261 4.90917L4.08296 5.73058C6.41776 4.10938 10.3283 1.12917 10.3657 1.10066L9.75931 0.305489ZM10.6505 0.225677C10.3623 0.0779435 10.0164 0.109434 9.75928 0.305513L10.3657 1.10063C10.3173 1.13753 10.25 1.14412 10.1944 1.11559L10.6505 0.225677ZM11.1122 0.985114C11.1122 0.668733 10.9376 0.373023 10.6508 0.225813L10.1941 1.11545C10.14 1.08766 10.1122 1.03536 10.1122 0.985114H11.1122ZM11.1122 15.2815V0.985114H10.1122V15.2815H11.1122ZM10.6681 16.0316C10.9452 15.8811 11.1122 15.5908 11.1122 15.2815H10.1122C10.1122 15.2324 10.1387 15.1812 10.1909 15.1528L10.6681 16.0316ZM10.2682 16.1333C10.4056 16.1333 10.5433 16.0994 10.6682 16.0315L10.1908 15.1529C10.2145 15.14 10.2413 15.1333 10.2682 15.1333V16.1333ZM3.90323 9.74307H1.68808V10.7431H3.90323V9.74307ZM4.38025 9.89215C4.2405 9.79554 4.07435 9.74307 3.90323 9.74307V10.7431C3.86945 10.7431 3.83755 10.7327 3.8116 10.7147L4.38025 9.89215ZM7.59367 12.258C6.60345 11.5029 5.57013 10.7148 4.38028 9.89217L3.81157 10.7147C4.97969 11.5224 5.99566 12.297 6.98731 13.0531L7.59367 12.258ZM10.2136 14.2062C9.27408 13.5392 8.42544 12.8922 7.59367 12.258L6.98731 13.0531C7.81773 13.6864 8.6793 14.3434 9.6347 15.0216L10.2136 14.2062ZM9.42413 1.68434V14.6139H10.4241V1.68434H9.42413ZM4.38039 6.37449C6.2009 5.11576 9.04234 2.97869 10.2259 2.08304L9.62241 1.28564C8.43606 2.18343 5.61161 4.30744 3.81167 5.55196L4.38039 6.37449ZM3.90333 6.52361C4.07444 6.52361 4.24065 6.47115 4.38046 6.37444L3.8116 5.55201C3.83767 5.53398 3.86963 5.52361 3.90333 5.52361V6.52361ZM1.68808 6.52361H3.90333V5.52361H1.68808V6.52361ZM2.18808 10.2431V6.02361H1.18808V10.2431H2.18808ZM12.6392 11.167C12.8034 11.3371 13.0232 11.4244 13.2438 11.4244V10.4244C13.2868 10.4244 13.3292 10.4419 13.3587 10.4725L12.6392 11.167ZM12.6468 9.97028C12.3202 10.3 12.3171 10.8333 12.6392 11.167L13.3587 10.4725C13.4138 10.5296 13.4135 10.6173 13.3573 10.674L12.6468 9.97028ZM13.4003 8.13331C13.4003 8.82872 13.1329 9.47944 12.6468 9.97029L13.3574 10.674C14.0298 9.99498 14.4003 9.09103 14.4003 8.13331H13.4003ZM12.6468 6.29645C13.1329 6.78718 13.4003 7.43784 13.4003 8.13331H14.4003C14.4003 7.17552 14.0297 6.27158 13.3572 5.5927L12.6468 6.29645ZM12.6391 5.09974C12.317 5.43348 12.3202 5.96676 12.6468 6.29647L13.3572 5.59269C13.4134 5.64936 13.4138 5.73706 13.3586 5.79418L12.6391 5.09974ZM13.8405 5.09174C13.5078 4.75604 12.9675 4.75964 12.6392 5.09964L13.3585 5.79427C13.2973 5.85765 13.1925 5.85844 13.1303 5.7957L13.8405 5.09174ZM15.0884 8.13328C15.0884 6.98605 14.6453 5.90416 13.8407 5.09185L13.1302 5.79559C13.7482 6.41946 14.0884 7.24796 14.0884 8.13328H15.0884ZM13.8408 11.1747C14.6453 10.3623 15.0884 9.28048 15.0884 8.13328H14.0884C14.0884 9.01856 13.7482 9.84704 13.1302 10.471L13.8408 11.1747ZM13.2438 11.4244C13.4608 11.4244 13.6773 11.3398 13.8409 11.1745L13.1301 10.4712C13.1596 10.4414 13.2013 10.4244 13.2438 10.4244V11.4244ZM15.8458 12.0506C15.8889 12.0506 15.9312 12.0681 15.9608 12.0987L15.2412 12.7931C15.4053 12.9632 15.6252 13.0506 15.8458 13.0506V12.0506ZM15.7322 12.0974C15.7618 12.0675 15.8035 12.0506 15.8458 12.0506V13.0506C16.0628 13.0506 16.2793 12.9661 16.4429 12.8009L15.7322 12.0974ZM17.3576 8.13354C17.3576 9.63294 16.7805 11.0389 15.7323 12.0973L16.4428 12.801C17.6775 11.5543 18.3576 9.89499 18.3576 8.13354H17.3576ZM15.7322 4.16961C16.7805 5.22815 17.3576 6.63418 17.3576 8.13354H18.3576C18.3576 6.37212 17.6775 4.71279 16.4427 3.46595L15.7322 4.16961ZM15.9607 4.16822C15.8994 4.23171 15.7945 4.23249 15.7322 4.16963L16.4427 3.46593C16.11 3.13003 15.5695 3.13363 15.2412 3.47368L15.9607 4.16822ZM15.9593 3.96676C16.0154 4.02343 16.0158 4.1111 15.9607 4.16817L15.2412 3.47372C14.9191 3.80742 14.9222 4.3406 15.2487 4.67036L15.9593 3.96676ZM17.6696 8.13354C17.6696 6.56169 17.062 5.0802 15.9593 3.96673L15.2488 4.6704C16.1652 5.59574 16.6696 6.82397 16.6696 8.13354H17.6696ZM15.9594 12.3002C17.062 11.1868 17.6696 9.70542 17.6696 8.13354H16.6696C16.6696 9.44315 16.1652 10.6713 15.2489 11.5965L15.9594 12.3002ZM15.9607 12.0987C16.0159 12.1558 16.0155 12.2435 15.9593 12.3002L15.2489 11.5964C14.9223 11.9262 14.9191 12.4595 15.2413 12.7932L15.9607 12.0987Z" fill="#757575" mask="url(#path-1-outside-1)"/>' +
		'</svg>',
	external_link_white: '<svg  fill="white" viewBox="0 0 30 30" width="24px" height="24px">' +
		'<path d="M 25.980469 2.9902344 A 1.0001 1.0001 0 0 0 25.869141 3 L 20 3 A 1.0001 1.0001 0 1 0 20 5 L 23.585938 5 L 13.292969 15.292969 A 1.0001 1.0001 0 1 0 14.707031 16.707031 L 25 6.4140625 L 25 10 A 1.0001 1.0001 0 1 0 27 10 L 27 4.1269531 A 1.0001 1.0001 0 0 0 25.980469 2.9902344 z M 6 7 C 4.9069372 7 4 7.9069372 4 9 L 4 24 C 4 25.093063 4.9069372 26 6 26 L 21 26 C 22.093063 26 23 25.093063 23 24 L 23 14 L 23 11.421875 L 21 13.421875 L 21 16 L 21 24 L 6 24 L 6 9 L 14 9 L 16 9 L 16.578125 9 L 18.578125 7 L 16 7 L 14 7 L 6 7 z"/>' +
		'</svg>',
	close_media_popup: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="24" height="24">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z" style="fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	print_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="24" height="24">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M19 8H5c-1.66 0-3 1.34-3 3v6h4v4h12v-4h4v-6c0-1.66-1.34-3-3-3zm-3 11H8v-5h8v5zm3-7c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm-1-9H6v4h12V3z" style="fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	min_pdf_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 514 514" xml:space="preserve" y="0px" x="0px" class="Layer_1_1621441515254" width="20" height="20">' +
		'<g transform="translate(1, 1)">' +
		'<style type="text/css">' +
		'.st0_1621441515254 {' +
			'fill: #394042;' +
		'}' +
		'</style>' +
		'<path d="M140,274c-6.6,0-12-5.4-12-12v-12c0-6.6,5.4-12,12-12h232c6.6,0,12,5.4,12,12v12c0,6.6-5.4,12-12,12H140z   M504,256c0,137-111,248-248,248S8,393,8,256S119,8,256,8S504,119,504,256z M472,256c0-119.9-97.3-216-216-216  C136.1,40,40,137.3,40,256c0,119.9,97.3,216,216,216C375.9,472,472,374.7,472,256z" class="st0_1621441515254" vector-effect="non-scaling-stroke" style="fill: rgba(255, 255, 255, 0.8);" />' +
		'</g>' +
		'</svg>',
	max_pdf_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 19.375 19.375" width="19.375" height="19.375">' +
		'<g transform="translate(0, 0)">' +
		'<g transform="translate(0, 0) rotate(0)">' +
		'<path d="M14.6875,9.45313v0.46875c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-3.82812v3.82813c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-0.46875c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-3.82812h-3.82812c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-0.46875c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h3.82813v-3.82812c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h0.46875c0.25781,0 0.46875,0.21094 0.46875,0.46875v3.82813h3.82813c0.25781,0 0.46875,0.21094 0.46875,0.46875zM19.375,9.6875c0,5.35156 -4.33594,9.6875 -9.6875,9.6875c-5.35156,0 -9.6875,-4.33594 -9.6875,-9.6875c0,-5.35156 4.33594,-9.6875 9.6875,-9.6875c5.35156,0 9.6875,4.33594 9.6875,9.6875zM18.125,9.6875c0,-4.68359 -3.80078,-8.4375 -8.4375,-8.4375c-4.68359,0 -8.4375,3.80078 -8.4375,8.4375c0,4.68359 3.80078,8.4375 8.4375,8.4375c4.68359,0 8.4375,-3.80078 8.4375,-8.4375z" style="stroke-width: 0; stroke-linecap: butt; stroke-linejoin: miter; fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'<defs>' +
		'<path class="path-162254104429736" d="M14.6875,9.45313v0.46875c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-3.82812v3.82813c0,0.25781 -0.21094,0.46875 -0.46875,0.46875h-0.46875c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-3.82812h-3.82812c-0.25781,0 -0.46875,-0.21094 -0.46875,-0.46875v-0.46875c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h3.82813v-3.82812c0,-0.25781 0.21094,-0.46875 0.46875,-0.46875h0.46875c0.25781,0 0.46875,0.21094 0.46875,0.46875v3.82813h3.82813c0.25781,0 0.46875,0.21094 0.46875,0.46875zM19.375,9.6875c0,5.35156 -4.33594,9.6875 -9.6875,9.6875c-5.35156,0 -9.6875,-4.33594 -9.6875,-9.6875c0,-5.35156 4.33594,-9.6875 9.6875,-9.6875c5.35156,0 9.6875,4.33594 9.6875,9.6875zM18.125,9.6875c0,-4.68359 -3.80078,-8.4375 -8.4375,-8.4375c-4.68359,0 -8.4375,3.80078 -8.4375,8.4375c0,4.68359 3.80078,8.4375 8.4375,8.4375c4.68359,0 8.4375,-3.80078 8.4375,-8.4375z" vector-effect="non-scaling-stroke" />' +
		'</defs>' +
		'</g>' +
		'</svg>',
	page_down_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="20" height="20">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#010101" style="fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	page_up_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 24 24" width="20" height="20">' +
		'<g>' +
		'<path xmlns:default="http://www.w3.org/2000/svg" d="M20 12l-1.41-1.41L13 16.17V4h-2v12.17l-5.58-5.59L4 12l8 8 8-8z" fill="#010101" style="fill: rgba(255, 255, 255, 0.8);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'</svg>',
	pdf_download_icon: '<svg version="1.2" overflow="visible" preserveAspectRatio="none" viewBox="0 0 18.77415 17.33333" width="18.77415" height="17.33333">' +
		'<g transform="translate(0, 0)">' +
		'<g transform="translate(-0.000020000000001241247, -2.220446049250313e-16) rotate(0)">' +
		'<path d="M14.22417,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.08667,0.37917 -0.21667,0.50917zM17.10583,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.07583,0.37917 -0.21667,0.50917zM18.77417,12.6425c0,-0.59583 -0.4875,-1.08333 -1.08333,-1.08333h-5.24333l-1.53833,1.53833c-0.845,0.845 -2.22083,0.845 -3.06583,0v0l-1.51667,-1.53833h-5.24333c-0.59583,0 -1.08333,0.4875 -1.08333,1.08333v3.6075c0,0.59583 0.4875,1.08333 1.08333,1.08333h16.59667c0.59583,0 1.08333,-0.4875 1.08333,-1.08333v-3.61833v0zM14.44083,5.785h-2.8925v-5.05917c-0.01083,-0.40083 -0.33583,-0.715 -0.73667,-0.72583h-2.88167c-0.39,0.01083 -0.715,0.325 -0.72583,0.72583v5.04833h-2.87083c-0.30333,-0.01083 -0.56333,0.1625 -0.67167,0.44417c-0.14083,0.27083 -0.065,0.59583 0.1625,0.79083l5.04833,5.04833c0.27083,0.28167 0.715,0.2925 0.99667,0.02167c0.01083,-0.01083 0.01083,-0.01083 0.02167,-0.02167l5.04833,-5.04833c0.2275,-0.195 0.30333,-0.52 0.1625,-0.79083c-0.0975,-0.28167 -0.37917,-0.46583 -0.6825,-0.44417z" style="stroke-width: 0; stroke-linecap: butt; stroke-linejoin: miter; fill: rgb(255, 255, 255);" vector-effect="non-scaling-stroke" />' +
		'</g>' +
		'<defs>' +
		'<path class="path-162254104427026" d="M14.22417,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.08667,0.37917 -0.21667,0.50917zM17.10583,15.67583c-0.28167,0.27083 -0.72583,0.26 -0.99667,-0.02167c-0.27083,-0.28167 -0.26,-0.72583 0.02167,-0.99667c0.28167,-0.27083 0.72583,-0.26 0.99667,0.02167c0.13,0.13 0.195,0.30333 0.195,0.4875c0,0.195 -0.07583,0.37917 -0.21667,0.50917zM18.77417,12.6425c0,-0.59583 -0.4875,-1.08333 -1.08333,-1.08333h-5.24333l-1.53833,1.53833c-0.845,0.845 -2.22083,0.845 -3.06583,0v0l-1.51667,-1.53833h-5.24333c-0.59583,0 -1.08333,0.4875 -1.08333,1.08333v3.6075c0,0.59583 0.4875,1.08333 1.08333,1.08333h16.59667c0.59583,0 1.08333,-0.4875 1.08333,-1.08333v-3.61833v0zM14.44083,5.785h-2.8925v-5.05917c-0.01083,-0.40083 -0.33583,-0.715 -0.73667,-0.72583h-2.88167c-0.39,0.01083 -0.715,0.325 -0.72583,0.72583v5.04833h-2.87083c-0.30333,-0.01083 -0.56333,0.1625 -0.67167,0.44417c-0.14083,0.27083 -0.065,0.59583 0.1625,0.79083l5.04833,5.04833c0.27083,0.28167 0.715,0.2925 0.99667,0.02167c0.01083,-0.01083 0.01083,-0.01083 0.02167,-0.02167l5.04833,-5.04833c0.2275,-0.195 0.30333,-0.52 0.1625,-0.79083c-0.0975,-0.28167 -0.37917,-0.46583 -0.6825,-0.44417z" vector-effect="non-scaling-stroke" />' +
		'</defs>' +
		'</g>' +
		'</svg>',

	iconExternalLink: '<svg  class="mgPlayerJSTest_width-height-100" viewBox="0 0 24 25" fill="none">'+
		'<path fill-rule="evenodd" clip-rule="evenodd" d="M19.3521 5.68455C19.3891 5.77155 19.4091 5.91455 19.4091 5.91455H19.3901V10.8506C19.3901 11.2506 19.0761 11.4736 18.6751 11.4736H18.6851C18.2841 11.4736 17.9411 11.2506 17.9411 10.8506V7.76755L11.6751 14.0686C11.3921 14.3526 10.9331 14.3456 10.6921 14.0626V14.0496C10.4501 13.7666 10.3851 13.2816 10.6691 12.9996L16.9531 6.63955H13.8701C13.4701 6.63955 13.1081 6.34155 13.1081 5.94055V5.96655C13.1081 5.56655 13.4701 5.19055 13.8701 5.19055H18.7021H18.6661V5.24055C18.9071 5.24055 19.2421 5.42355 19.3521 5.68455ZM16.1901 12.3766L17.6401 13.8266V18.3996C17.6401 19.1996 17.0101 19.8096 16.2101 19.8096H6.05906C5.25906 19.8096 4.59106 19.1996 4.59106 18.3996V8.25055C4.59106 7.45055 5.25906 6.76055 6.06006 6.76055H10.6321L12.0821 8.21055H6.04206V18.3605H16.1901V12.3766Z" fill="#555555"/>'+
		'</svg>',

	taskCompleted: '<svg width="10px" height="7px" viewBox="0 0 10 7" version="1.1"  >' +
			'<g class="Guide-Settings-3" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
				'<g class="Widget-settings-06" transform="translate(-667.000000, -387.000000)" fill="#09B002" fill-rule="nonzero">' +
					'<g class="Group-15" transform="translate(295.000000, 335.000000)">' +
						'<g class="Create-Rules">' +
							'<g class="Group-13" transform="translate(366.000000, 45.000000)">' +
								'<path d="M14.4641065,7.17913453 L9.05523893,12.5531704 L7.03997546,10.527955 C6.80112943,10.289109 6.41798057,10.289109 6.17913453,10.527955 C5.94028849,10.7668011 5.94028849,11.1499499 6.17913453,11.388796 L8.62233048,13.8469198 C8.73677754,13.9613669 8.89103227,14.0260543 9.05523893,14.0260543 L9.05523893,14.0260543 C9.21446962,14.0260543 9.36872435,13.9613669 9.48317141,13.8469198 L15.3249475,8.03997546 C15.5637935,7.80112943 15.5637935,7.41798057 15.3249475,7.17913453 C15.0861014,6.94028849 14.7029526,6.94028849 14.4641065,7.17913453 Z" class="shape">' +'</path>' +
							'</g>' +
						'</g>' +
					'</g>' +
				'</g>' +
			'</g>' +
		'</svg>',
    doubleTick: '<svg width="32px" height="32px" viewBox="0 0 32 32" version="1.1"  >' +
			'<g class="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">' +
				'<g class="verified" fill="green" fill-rule="nonzero">' +
					'<path d="M27.3136875,4.68625 C24.2916875,1.6643125 20.27375,0 16,0 C11.7261875,0 7.70825,1.6643125 4.68625,4.68625 C1.6643125,7.70825 0,11.72625 0,16 C0,20.27375 1.6643125,24.2916875 4.68625,27.3136875 C7.70825,30.3356875 11.72625,32 16,32 C20.27375,32 24.2916875,30.3356875 27.3136875,27.31375 C30.3356875,24.2916875 32,20.27375 32,16 C32,11.72625 30.3356875,7.7083125 27.3136875,4.68625 Z M23.644125,12.1920625 L14.7025625,21.1336875 C14.5195,21.31675 14.2795625,21.40825 14.0396875,21.40825 C13.79975,21.40825 13.5598125,21.31675 13.37675,21.1336875 L8.355875,16.112875 C7.98975,15.7468125 7.98975,15.15325 8.355875,14.7870625 C8.7219375,14.4209375 9.3155625,14.4209375 9.6816875,14.7870625 L14.0396875,19.145 L22.3183125,10.86625 C22.684375,10.500125 23.278,10.500125 23.644125,10.86625 C24.01025,11.232375 24.01025,11.8259375 23.644125,12.1920625 Z" class="shape"></path>' +
				'</g>' +
			'</g>' +
		'</svg>',
};

GmCXt.svgs = Object.assign({},GmCXt.svgs,GmCXt.playerSvgs);

if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.tr_TR = {
	currentPage: "Ge\u00e7erli Sayfa",
	myChat: "mychat",
	import: "Ithalat",
	export: "Ihracat",
	redirectLivetour: "Canl\u0131 Oyna",
	guideNotAvailable: "K\u0131lavuz ge\u00e7erli URL'de mevcut de\u011fil. Rehber URL'sine gitmek istiyor musunuz?",
	downloadPPT: "PPT'yi indirin",
	btnYes: "Evet",
	btnNo: "Hay\u0131r",
	inApp: "Uygulama \u0130\u00e7i",
	live: "Ya\u015famak",
	resume: "\u00d6zge\u00e7mi\u015f",
	tourCloseConfirm: "Bu K\u0131lavuzu ger\u00e7ekten kapatmak istiyor musunuz?",
	notifSnoozeDonotMsg: "L\u00fctfen bunu daha sonra izlemek isteyip istemedi\u011finizi veya bildirimi hi\u00e7 g\u00f6stermemek isteyip istemedi\u011finizi bize bildirin?",
	surveyThanksMessage: "Yan\u0131t\u0131n\u0131z\u0131 verdi\u011finiz i\u00e7in te\u015fekk\u00fcr ederiz",
	testMePassedMessage: "Tebrikler! Sen Ge\u00e7tin",
	testMeFailedMessage: "Oops! Ba\u015far\u0131s\u0131z Oldunuz",
	testMeGuideEfficiency: "Test verimlili\u011fi:",
	testMeGuideEffectiveness: "Test etkinli\u011fi:",
	testMeTestTime: "Test S\u00fcresi",
	testMeExpectedTime: "Beklenen S\u00fcre",
	testMeStepsTaken: "At\u0131lan Ad\u0131mlar",
	testMeExpectedSteps: "Beklenen Ad\u0131mlar",
	testMeRetakeTestBtn: "Tekrar S\u0131nava Girme",
	testMeResultTitle: "MyTest Sonucu",
	ConfirmIfTestMeModeRidirect: "K\u0131lavuz ge\u00e7erli URL'de mevcut de\u011fil. K\u0131lavuz URL'sine y\u00f6nlendirmek istiyor musunuz?",
	feedCmt: "Geri bildiriminiz bizim i\u00e7in de\u011ferlidir!<br> L\u00fctfen bize 500 karakter veya daha k\u0131sa s\u00fcrede ne d\u00fc\u015f\u00fcnd\u00fc\u011f\u00fcn\u00fcz\u00fc s\u00f6yleyin",
	doNotShowAgain: "Bir daha g\u00f6sterme",
	neverShowAgain: "Bir Daha Asla G\u00f6sterme",
	skipGuide: "Atlama K\u0131lavuzu",
	surveyErrorMsg: "L\u00fctfen en az bir soruyu cevaplay\u0131n",
	redirect: "Y\u00f6nlendirme",
	liveGuide: "Canl\u0131 Rehber",
	question: "Soru",
	exitGuide: "\u00c7\u0131k\u0131\u015f K\u0131lavuzu",
	continueGuide: "Devam K\u0131lavuzu",
	stop: "Durmak",
	characters: "Karakter:",
	survey: "Anket",
	testMeStopMessage: "TestMe modundas\u0131n\u0131z, \u00e7\u0131kmak i\u00e7in DURDUR'u t\u0131klat\u0131n",
	testMeFailedErrorMessage: "Hedef ad\u0131m\u0131na ula\u015famad\u0131n\u0131z.<br>{CORRECT_STEPS} d\u0131\u015f\u0131nda {TOTAL_STEPS} ad\u0131mlar\u0131n\u0131z var.",
	surveyCommentPlaceholder: "Buraya yaz\u0131n! En fazla 500 karakter",
	pushTourSnoozeMsg: "Bu Otomatik Ba\u015flatma Turu i\u00e7in ertelenecek",
	of: "in",
	wbMplayerTitle: "\u00d6\u011freticiler",
	wbDragTooltip: "Bu oynat\u0131c\u0131y\u0131 sayfada herhangi bir yere s\u00fcr\u00fckleyip b\u0131rak\u0131n",
	dontShowEdResult: "Bunu g\u00f6rmek istemiyorum",
	mPlayerHeaderTitle: "Mikro Oynat\u0131c\u0131",
	closePreview: "\u00d6nizlemeyi Kapat",
	elmNotFound: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re ad\u0131m i\u00e7in \u00f6\u011feyi bulam\u0131yoruz:",
	elmNotFoundInfo: "Bu ad\u0131m\u0131 oynamak i\u00e7in do\u011fru sayfada oldu\u011funuzdan emin olun. Ayr\u0131ca se\u00e7ilen \u00f6\u011feyi g\u00f6r\u00fcp g\u00f6remedi\u011finizi de kontrol edin",
	notExists: "Yok",
	elmNotFoundHeader: "Ad\u0131m \u00f6\u011fesi bulunamad\u0131",
	goToStep: "Ad\u0131ma git",
	notFoundStep: "Ad\u0131m i\u00e7in eleman\u0131 bulamad\u0131k #",
	pleaseReselect: "L\u00fctfen \u00f6\u011feyi yeniden se\u00e7meyi deneyin.",
	stepRuleMatchErr: "Yap\u0131land\u0131rma hatas\u0131: Ad\u0131m kurallar\u0131 e\u015fle\u015fmiyor",
	guideRuleMatchErr: "Yap\u0131land\u0131rma hatas\u0131: K\u0131lavuz kurallar\u0131 e\u015fle\u015fmiyor",
	stepNotFoundRedirect: "Ad\u0131m bu sayfada bulunamad\u0131. Y\u00f6nlendirme yapmak ister misiniz?",
	branchStepMessagePopup: "Devam etmek i\u00e7in l\u00fctfen a\u015fa\u011f\u0131daki g\u00f6revlerden birini se\u00e7in",
	btnSkip: "Atlamak",
	kindlyHoverPopup: "L\u00fctfen a\u00e7\u0131l\u0131r pencereyi a\u00e7mak i\u00e7in fareyi bu \u00f6\u011fenin \u00fczerine getirin",
	stepPlayIsdefinedPopover: "Oynayaca\u011f\u0131n\u0131z ad\u0131m a\u00e7\u0131l\u0131r pencerede tan\u0131mlan\u0131r",
	elmNotFoundWestpac: "Ad\u0131m bulunamad\u0131 \u2013 Bu K\u0131lavuz sona erecek",
	findingElementMessage: "Ad\u0131m bulmaya \u00e7al\u0131\u015fmak...",
	badDomain: "Ge\u00e7erli alan ad\u0131 ve URL, MyGuide'\u0131 \u00e7al\u0131\u015ft\u0131rma yetkisine sahip de\u011fildir. Yard\u0131m i\u00e7in l\u00fctfen Y\u00f6neticinizle ileti\u015fime ge\u00e7in.",
	hostJsError: "Web sayfas\u0131nda bir hata var gibi g\u00f6r\u00fcn\u00fcyor. MyGuide devam edemiyor",
	remember: "Beni Hat\u0131rla",
	forgotPass: "\u015eifrenizi mi unuttunuz?",
	dontHavAcc: "Hesab\u0131n\u0131z yok mu?",
	loginTitle: "Oturum a\u00e7ma",
	loginOtpScreenTitle: "Oturum A\u00e7mak i\u00e7in OTP'yi do\u011frulama",
	forgetPassTitl: "\u015eifreyi S\u0131f\u0131rla",
	placeholderEmail: "E-posta Kimli\u011fi",
	placeholderPassword: "Parola",
	placeholderNewPassword: "Yeni \u015eifre",
	placeholderCurrentPassword: "Ge\u00e7erli \u015eifre",
	placeholderFirstname: "Ad",
	placeholderLastname: "Soyad\u0131",
	placeholderPasswordC: "\u015eifreyi Onayla",
	btnCancel: "\u0130ptal",
	btnPayment: "Y\u00fckseltme plan\u0131",
	btnSubmit: "G\u00f6nder",
	btnLogin: "Oturum a\u00e7ma",
	termsOfUse: "Kullan\u0131m \u015eartlar\u0131",
	andLabel: "ve",
	policyPrivacy: "Gizlilik Politikas\u0131",
	passwordError: "\u015eifre 8 hane uzunlu\u011funda olmal\u0131d\u0131r",
	confirmPasswordError: "Parola ve onay parolas\u0131 ayn\u0131 olmal\u0131d\u0131r",
	firstnameError: "L\u00fctfen ge\u00e7erli bir ad girin",
	lastnameError: "L\u00fctfen ge\u00e7erli bir soyad\u0131 girin",
	emailError: "L\u00fctfen ge\u00e7erli bir E-posta Kimli\u011fi girin",
	orgError: "L\u00fctfen ge\u00e7erli bir Kurulu\u015f URL'si girin",
	otpError: "L\u00fctfen ge\u00e7erli OTP girin",
	placeholderOtp: "OTP'nizi buraya girin",
	otpSentDesc: "Ge\u00e7erli bir e-posta adresi sa\u011flanm\u0131\u015fsa, size bir s\u0131f\u0131rlama ba\u011flant\u0131s\u0131 g\u00f6nderilecektir.<br>E-postay\u0131 birka\u00e7 dakika i\u00e7inde g\u00f6rmezseniz, l\u00fctfen spam klas\u00f6r\u00fcn\u00fczde bir e-posta olup olmad\u0131\u011f\u0131n\u0131 kontrol edin.",
	btnOtpVerify: "OTP'yi do\u011frulama",
	alreadyHavAcc: "Zaten bir hesab\u0131n\u0131z m\u0131 var?",
	smartbiteMessageError: "L\u00fctfen mesaj girin",
	smartbiteLinkError: "L\u00fctfen ge\u00e7erli bir ba\u011flant\u0131 girin",
	noGuidesOnThisPage: "Bu sayfada Rehber Yok!",
	clickOn: "\u00dczerine t\u0131klay\u0131n ",
	contactUs: "Bize Ula\u015f\u0131n",
	search: "Aramak",
	noRecordFound: "Kay\u0131t bulunamad\u0131",
	category: "Klas\u00f6r",
	subCategory: "Alt Klas\u00f6r",
	confirmPasswordRequired: "Gerekli \u015eifreyi Onayla",
	logInWithSSO: "TOA ile giri\u015f yap",
	inputPlaceHolderSearch: "Herhangi bir K\u0131lavuzu aray\u0131n",
	noGuideAvailableFor: "Araman\u0131za uygun K\u0131lavuz(lar) bulunamad\u0131",
	tryModifyingYourSearch: "Arama \u00f6l\u00e7\u00fctlerinizi de\u011fi\u015ftirmeyi deneyin",
	signInVerifyYourEmail: "Bu E-posta Kimli\u011fi do\u011frulanmad\u0131. Ayr\u0131nt\u0131lar i\u00e7in l\u00fctfen e-postan\u0131z\u0131 kontrol edin",
	signInVerifyYourAccount: "Size OTP i\u00e7eren bir e-posta g\u00f6nderdik. Oturum A\u00e7ma i\u015flemini tamamlamak i\u00e7in l\u00fctfen hesab\u0131n\u0131z\u0131 do\u011frulay\u0131n",
	maintenanceMessage: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	back: "Geri",
	changePassword: "Parolay\u0131 de\u011fi\u015ftir",
	startTestAuto: "Otomasyon Testini Ba\u015flat",
	msgPasswordChangedSuccess: "\u015eifreniz ba\u015far\u0131yla de\u011fi\u015ftirildi",
	msgConfirmNewPasswordError: "Parolay\u0131 Onayla Yeni Parola ile ayn\u0131 olmal\u0131d\u0131r",
	enterUrl: "Ekip URL'sini girin",
	dragPlaceholderDropThis: "Bunu b\u0131rak ",
	dragPlaceholderHere: " burada",
	termsOfService: "Terim",
	versionText: "S\u00fcr\u00fcm",
	videoStepSuccessMessage: "Ad\u0131m\u0131n\u0131z ba\u015far\u0131yla olu\u015fturuldu",
	importSuccessMessage: "K\u0131lavuz ba\u015far\u0131yla y\u00fcklendi. \u0130\u00e7e aktarma durumunu kontrol etmek i\u00e7in G\u00f6rev Durumu'na gidin",
	worldBankHelpSupport: "Ara\u00e7 \u0130pu\u00e7lar\u0131 gibi baz\u0131 ara\u00e7lar yaln\u0131zca aray\u00fczde g\u00f6r\u00fcnt\u00fclenebilir",
	helpSupport: "Yard\u0131m ve Destek",
	page: "sayfa",
	selectAnApplication: "Bir Uygulama Se\u00e7in",
	refresh: "Yenilemek",
	loginBtn: "Oturum a\u00e7ma",
	account: "Hesap",
	taskStatus: "G\u00f6rev durumu ",
	logoutBtn: "Oturum kapatma",
	app: "App:",
	firstStep: "\u0130lk Ad\u0131m",
	lastStep: "Son Ad\u0131m",
	startTest: "Testi Ba\u015flat",
	noInappStepInGuide: "Bu k\u0131lavuzda sat\u0131r i\u00e7i ad\u0131m olmad\u0131\u011f\u0131ndan TestMe devam edemiyor",
	settingBtn: "Geli\u015fmi\u015f Ayarlar",
	orgSetting: "Kurulu\u015f ayarlar\u0131",
	close: "Kapatmak",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "Belge",
	downloadBlog: "Blog Yaz\u0131lar\u0131",
	downloadTxt: "D\u00fcz metin",
	serviceErrorMessage: "Oops! Bir hata olu\u015ftu. L\u00fctfen bir s\u00fcre sonra tekrar deneyin. Ayr\u0131ca herhangi bir yard\u0131m i\u00e7in support@csod.com adresinden bize e-posta g\u00f6nderebilirsiniz.",
	guidesTab: "Rehberleri",
	noGuideCreatedYet: "Hen\u00fcz Rehber olu\u015fturulmad\u0131!",
	noCategoryCreatedYet: "Hen\u00fcz Klas\u00f6r olu\u015fturulmad\u0131!",
	chatbot: "mychat",
	notAutorised: "Gerekli eri\u015fime sahip de\u011filsiniz, l\u00fctfen Y\u00f6netici ile ileti\u015fime ge\u00e7in",
	ok: "TAMAM",
	apiError: "Yap\u0131land\u0131rma hatas\u0131. L\u00fctfen Y\u00f6netici ile ileti\u015fime ge\u00e7in",
	select: "Se\u00e7mek",
	mute_unmute: "Sesi Kapat\/Sesi A\u00e7",
	privacyPolicy: "Gizlilik ve \u00c7erezler",
	privacyPolicyText: "MyGuide \u00e7erezleri kullan\u0131r. Devam ederseniz, \u015eartlar ve Gizlilik Politikam\u0131z\u0131 kabul etmi\u015f ve \u00e7erezleri kullanmam\u0131za izin vermi\u015f olursunuz.",
	terms: "Terim",
	westPecErrorMessage: "Bu uygulamaya eri\u015fme yetkiniz yoktur. L\u00fctfen Westpac'\u0131n a\u011f\u0131nda oturum a\u00e7\u0131n",
	noApp: "Uygulama bulunamad\u0131",
	role: "Rol:",
	all: "T\u00fcm",
	video: "Video",
	course: "Kurs",
	article: "Makale",
	image: "Resim",
	pathways: "Yol",
	preview: "\u00d6nizleme",
	more: "Daha",
	history: "Tarih",
	publish: "Yay\u0131nlamak",
	selectGuideLink: "L\u00fctfen Ba\u011flant\u0131 k\u0131lavuzu'nu se\u00e7in",
	selectGuideBeforeSubmit: "L\u00fctfen g\u00f6ndermeden \u00f6nce bir Rehber se\u00e7in",
	change: "De\u011fi\u015ftirmek",
	checkNow: "\u015eimdi Kontrol Et",
	minutes: "tutanak",
	clickHere: "buraya t\u0131klay\u0131n",
	youAlmostDone: "Neredeyse bitti!",
	setOrg: "Kurulu\u015funuzu kurmak i\u00e7in",
	apps: "Apps",
	me: "Beni",
	playStep: "Ad\u0131m\u0131 Oynat",
	miniPlayerHelp: "Yard\u0131m",
	defaultMiniPlayerHelp: "Yard\u0131m",
	defaultConfirmIfSlideshowOrRedirect: "Bu ad\u0131m ge\u00e7erli URL'de kullan\u0131lam\u0131yor.<br>Ad\u0131m URL'sine gitmek mi yoksa slayt g\u00f6sterisi oynatmak m\u0131 istiyorsunuz?",
	defaultServiceErrorMessage: "Oops! Bir hata olu\u015ftu. L\u00fctfen bir s\u00fcre sonra tekrar deneyin. Ayr\u0131ca herhangi bir yard\u0131m i\u00e7in support@csod.com adresinden bize e-posta g\u00f6nderebilirsiniz.",
	defaultMaintenanceMessage: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	userNotFollowingGuideMessage: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re bu K\u0131lavuzun par\u00e7as\u0131 olmayan ad\u0131mlar\u0131 ger\u00e7ekle\u015ftiriyorsunuz. Art\u0131k K\u0131lavuzu takip etmek istemiyorsan\u0131z, \u00c7\u0131k\u0131\u015f K\u0131lavuzu'na t\u0131klay\u0131n",
	defaultUserNotFollowingGuideMessage: "G\u00f6r\u00fcn\u00fc\u015fe g\u00f6re bu K\u0131lavuzun par\u00e7as\u0131 olmayan ad\u0131mlar\u0131 ger\u00e7ekle\u015ftiriyorsunuz. Art\u0131k K\u0131lavuzu takip etmek istemiyorsan\u0131z, \u00c7\u0131k\u0131\u015f K\u0131lavuzu'na t\u0131klay\u0131n",
	resumeGuide: "\u00d6zge\u00e7mi\u015f K\u0131lavuzu",
	defaultResumeGuideMessage: "\u00d6zge\u00e7mi\u015f K\u0131lavuzu",
	backToLogin: "Giri\u015f Yap'a Geri D\u00f6n",
	filters: "Filtre",
	thisApp: "Bu Uygulama",
	thisWebsite: "Bu Web Sitesi",
	maxFreeTourLimit: "Maksimum tur s\u0131n\u0131r\u0131na ula\u015f\u0131ld\u0131",
	passwordRegexCheck: "Parola, en az bir b\u00fcy\u00fck harf, bir k\u00fc\u00e7\u00fck harf ve bir say\u0131sal de\u011fer dahil olmak \u00fczere en az 8 karakter i\u00e7ermelidir",
	countLimit: "99+",
	microsoftServiceKey: "L\u00fctfen Microsoft Bili\u015fsel Hizmetler Konu\u015fma abonelik anahtar\u0131n\u0131z\u0131 girin",
	numberOfImgFile: "G\u00f6r\u00fcnt\u00fc dosyalar\u0131n\u0131n ve metin dosyalar\u0131n\u0131n say\u0131s\u0131 ayn\u0131 olmal\u0131d\u0131r",
	availableOn: "\u015eurada mevcuttur:",
	tooltipUnpubWorkflowTitle: "Yay\u0131nlanmam\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131",
	tooltipUnpubParentWorkflowTitle: "Yay\u0131mlanm\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentWorkflowTitle: "Yay\u0131mlanm\u0131\u015f \u0130\u015f Ak\u0131\u015f\u0131, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubTooltipTitle: "Yay\u0131nlanmam\u0131\u015f Ara\u00e7 \u0130pucu",
	tooltipUnpubParentTooltipTitle: "Yay\u0131mlanm\u0131\u015f Ara\u00e7 \u0130pucu, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentTooltipTitle: "Yay\u0131nlanan Ara\u00e7 \u0130pucu, Yay\u0131nlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubTutorialTitle: "Yay\u0131nlanmam\u0131\u015f \u00d6\u011fretici",
	tooltipUnpubParentTutorialTitle: "Yay\u0131mlanm\u0131\u015f \u00d6\u011fretici, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentTutorialTitle: "Yay\u0131nlanan \u00d6\u011fretici, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipUnpubSubFolderTitle: "Yay\u0131mlanmam\u0131\u015f Alt Klas\u00f6r",
	tooltipUnpubSubFolderDesc: "K\u0131lavuzlar\u0131 d\u00fczenlemek i\u00e7in alt klas\u00f6rleri kullanma",
	tooltipUnpubParentSubFolderTitle: "Yay\u0131mlanm\u0131\u015f Alt Klas\u00f6r, Yay\u0131mlanmam\u0131\u015f \u00dcst Klas\u00f6r(ler)",
	tooltipPubParentSubFolderTitle: "Yay\u0131mlanm\u0131\u015f Alt Klas\u00f6r, Yay\u0131mlanm\u0131\u015f Klas\u00f6r",
	tooltipPubParentSubFolderDesc: "K\u0131lavuzlar\u0131 D\u00fczenler",
	exitSurvey: "Anketten \u00c7\u0131k",
	disable: "Devre d\u0131\u015f\u0131 b\u0131rakmak",
	instructionExitSurvey: "Anketten \u00c7\u0131k, kullan\u0131c\u0131 tamamlanmadan \u00f6nce bir k\u0131lavuzdan \u00e7\u0131kt\u0131\u011f\u0131nda g\u00f6sterilir",
	msgVideoNotFound: "Videonuzu y\u00fcklerken l\u00fctfen bir s\u00fcre sonra deneyin",
	msgGiphyNotFound: "GIF'inizi y\u00fcklerken, l\u00fctfen bir s\u00fcre sonra deneyin",
	userPref: "Tercihlerim",
	manageAccount: "Y\u00f6netici portal\u0131",
	analyticsPortal: "\u0130\u00e7g\u00f6r\u00fcler portal\u0131",
	errorInvalidUrl: "Ge\u00e7erli bir URL de\u011fil",
	wbFooterText: "ITS Teknik \u00d6\u011frenme",
	navigationMenu: "Gezinme men\u00fcs\u00fc",
	clearHistory: "Ge\u00e7mi\u015fi Temizle",
	userDeniedMessage: "Kullan\u0131c\u0131 taraf\u0131ndan reddedilen Kamera ve Mikrofon eri\u015fim izinleri",
	pushNotification: "Anl\u0131k Bildirimler",
	viewDetail: "Detay\u0131 G\u00f6r\u00fcnt\u00fcle",
	contactAdmin: "Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com veya Y\u00f6neticinizle ileti\u015fime ge\u00e7in",
	noAppOnDomain: "Ge\u00e7erli etki alan\u0131 i\u00e7in uygulama atanmad\u0131 ",
	noGuidesOnDomain: "Rehber bulunamad\u0131",
	apply: "Uygulamak",
	invalidLoginCred: "Ge\u00e7ersiz oturum a\u00e7ma kimlik bilgileri. Birden fazla ba\u015far\u0131s\u0131z denemeden sonra hesab\u0131n\u0131z kilitlenir, hesab\u0131n\u0131z\u0131n kilidini a\u00e7mak i\u00e7in bir e-posta al\u0131rs\u0131n\u0131z veya \u015fifrenizi s\u0131f\u0131rlayabilirsiniz",
	resendOTP: "OTP'yi yeniden g\u00f6nder",
	sendFeedback: "Geri Bildirim G\u00f6nder",
	guideNotExist: "Bu K\u0131lavuz bu sayfada mevcut de\u011fil (Hata: Etki alan\u0131 uyu\u015fmazl\u0131\u011f\u0131) ",
	cdnAccess: "<b>\u00dczg\u00fcn\u00fcz<\/b>. <br><br>Sunucular\u0131m\u0131zla ilgili bir sorun var gibi g\u00f6r\u00fcn\u00fcyor.<br> Hata bize bildirildi ve m\u00fcmk\u00fcn olan en k\u0131sa s\u00fcrede d\u00fczeltece\u011fiz",
	tourPlayError: "Rehber oynat\u0131lamaz. K\u0131lavuz ayr\u0131nt\u0131lar\u0131 al\u0131n\u0131rken hata olu\u015ftu",
	playerMode: "Oynat\u0131c\u0131 modu",
	closePanel: "Paneli kapat",
	switchCreatorMode: "\u0130\u00e7erik \u00dcretici Modu'na ge\u00e7me",
	extensionContextError: "Uzant\u0131 ba\u011flam\u0131 ge\u00e7ersiz k\u0131l\u0131nd\u0131. Devam etmek i\u00e7in l\u00fctfen sayfay\u0131 yeniden y\u00fckleyin",
	otpSent: "OTP e-postan\u0131za yeniden g\u00f6nderildi, l\u00fctfen gelen kutunuzu kontrol edin",
	startOver: "Yeniden Ba\u015fla",
	yesResume: "\u00d6zge\u00e7mi\u015f",
	dontShowAgain: "Bir daha g\u00f6sterme",
	notificationHeader: "Bir bildiriminiz var!",
	watchLater: "Daha sonra izleyin",
	pushSnoozeMsg: "Bu bildirim i\u00e7in ertelenecektir",
	showAgain: "Tekrar g\u00f6ster",
	noGuidesOnThisTab: "Bu sayfada bildirim yok",
	iAgree: "Kabul Ediyorum",
	viewMore: "Daha Fazlas\u0131n\u0131 G\u00f6r",
	lostInternetConnection: "Sunucu ba\u011flant\u0131s\u0131 kesildi. L\u00fctfen yeniden ba\u011flan\u0131n ve yeniden deneyin",
	next: "\u00d6n\u00fcm\u00fczdeki",
	recent: "Yeni",
	older: "Eski",
	atoz: "A'dan Z'ye",
	ztoa: "Z - A",
	clear: "Berrak",
	tooltipDontShowAgain: "Bildirimler art\u0131k g\u00f6r\u00fcnmez. Bir bildirimi \u015fimdi etkinle\u015ftirmek i\u00e7in, fareyle \u00fczerine gelin ve 'Tekrar G\u00f6ster'i t\u0131klay\u0131n.",
	tooltipWatchLater1: "Bildirimler i\u00e7in ertelenir",
	tooltipWatchLater2: "ve bundan sonra g\u00f6r\u00fcnecektir. Bir bildirimi \u015fimdi etkinle\u015ftirmek i\u00e7in, fareyle \u00fczerine gelin ve 'Tekrar G\u00f6ster'i t\u0131klay\u0131n.",
	hour: "saat",
	hours: "Saat",
	insightsTracker: "\u0130\u00e7g\u00f6r\u00fcler \u0130zleyici",
	slideshow: "Slayt G\u00f6sterisi",
	autoplay: "OTOMAT\u0130K OYNATMA",
	powerFormOldData: "Mevcut veriler",
	powerFormNewData: "Yeni veriler girmek i\u00e7in bu formu kullan\u0131n",
	powerFormNewDataMore: "Mevcut verileriniz g\u00f6r\u00fcnm\u00fcyorsa, verilerinizi g\u00f6r\u00fcnt\u00fclemek i\u00e7in l\u00fctfen sol \u00fcstteki oka t\u0131klay\u0131n. Daha sonra verilerin izin verilen madde i\u015faretli bi\u00e7ime kopyalanmas\u0131 gerekir.",
	powerFormTitle: "Veri Giri\u015f Yard\u0131mc\u0131s\u0131",
	powerFormMandatory: "Bu zorunlu bir aland\u0131r, maksimum karakter s\u0131n\u0131r\u0131 ",
	belongToOtherApp: "Bu K\u0131lavuz, {APPNAME} uygulamas\u0131na ait olan {TOURURL} \u00fczerinde olu\u015fturulmu\u015ftur. L\u00fctfen bu K\u0131lavuzu bu uygulamaya kopyalay\u0131n ve tekrar deneyin",
	setDomain: "{TOURURL} \u00f6\u011fesinin ge\u00e7erli uygulama etki alan\u0131 ayarlar\u0131na eklenmesi gerekti\u011finden eminseniz, l\u00fctfen ekleyin ve yeniden deneyin",
	on: "\u00dcZER\u0130NDE",
	off: "KAPALI",
	btnPrev: "\u00d6nceki",
	btnPrevious: "\u00d6nceki",
	taskList: "G\u00f6rev Listesi",
	unprocessedVideo: "Videonuz i\u015flenirken l\u00fctfen bekleyin.",
	searchResult: "Arama Sonucu",
	pleaseWait: "L\u00fctfen bekleyin!",
	mediaDownloadMsg: "Dosyalar\u0131n\u0131z\u0131 indirmeye haz\u0131rlarken",
	mediaFileNotFound: "Medya dosyas\u0131 bulunamad\u0131",
	searchInFolder: "Klas\u00f6rde ara",
	currentPageSearchPlaceholder: "Ge\u00e7erli sayfada bulunan K\u0131lavuz(lar)\u0131 aray\u0131n",
	brandLogo: "Marka Logosu",
	accessibility: "Eri\u015filebilirlik",
	replay: "Replay",
	defaultGreetingMessage: "Selam! MyGuide'a ho\u015f geldiniz. Size nas\u0131l yard\u0131mc\u0131 olabilirim? L\u00fctfen bir bot oldu\u011fumu unutmay\u0131n.",
	defaultErrorMessage: "\u00dczg\u00fcn\u00fcm, bunu anlamad\u0131m. Daha spesifik olabilir misiniz? ",
	defaultEndMessage: "\u0130\u015fimiz bitti, \u00e7ok te\u015fekk\u00fcr ederim!",
	greetingMessage: "Selam! MyGuide'a ho\u015f geldiniz. Size nas\u0131l yard\u0131mc\u0131 olabilirim? L\u00fctfen bir bot oldu\u011fumu unutmay\u0131n.",
	errorMessage: "\u00dczg\u00fcn\u00fcm, bunu anlamad\u0131m. Daha spesifik olabilir misiniz? ",
	endMessage: "\u0130\u015fimiz bitti, \u00e7ok te\u015fekk\u00fcr ederim!",
	guideLnkToRedirect: "Sayfaya y\u00f6nlendirmek ve k\u0131lavuzu oynatmak i\u00e7in a\u015fa\u011f\u0131daki ba\u011flant\u0131y\u0131 kullan\u0131n",
	otpTimer: "\u015eurada tekrar deneyebilirsiniz: ",
	seconds: " Saniye",
	limitWarning: "Ba\u015far\u0131s\u0131z denemelerin maksimum s\u0131n\u0131r\u0131na ula\u015ft\u0131n\u0131z",
	403: "Bu istekle ilgili bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	405: "Bu iste\u011fi i\u015flerken bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	429: "\u00c7ok fazla istek",
	1003: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen yeniden giri\u015f yap\u0131n ve tekrar deneyin. Sorun devam ederse, sayfay\u0131 yenileyin ve yeniden deneyin",
	1007: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	1005: "<b>\u00dczg\u00fcn\u00fcz<\/b>. <br><br>\u0130stekte veya sunucular\u0131m\u0131zda bir sorun var gibi g\u00f6r\u00fcn\u00fcyor.<br> Hata bize bildirildi ve m\u00fcmk\u00fcn olan en k\u0131sa s\u00fcrede d\u00fczeltece\u011fiz",
	1009: "Kullan\u0131c\u0131 e-postas\u0131 do\u011frulanmad\u0131",
	1014: "Bak\u0131m devam ediyor. L\u00fctfen support@csod.com \u00fczerinden bizimle ileti\u015fime ge\u00e7in",
	1017: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen yeniden giri\u015f yap\u0131n ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	1018: "Ad\u0131m olu\u015fturmak i\u00e7in maksimum s\u0131n\u0131ra ula\u015ft\u0131n\u0131z",
	2000: "Bu istekle ilgili bir sorunla kar\u015f\u0131la\u015ft\u0131k. Bize haber verildi. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2001: "Ge\u00e7ersiz oturum a\u00e7ma kimlik bilgileri. Birden fazla ba\u015far\u0131s\u0131z denemeden sonra hesab\u0131n\u0131z kilitlenir, hesab\u0131n\u0131z\u0131n kilidini a\u00e7mak i\u00e7in bir e-posta al\u0131rs\u0131n\u0131z veya \u015fifrenizi s\u0131f\u0131rlayabilirsiniz",
	2002: "Ge\u00e7ersiz veya s\u00fcresi dolmu\u015f OTP",
	2003: "Y\u00fcklenen dosya ge\u00e7erli bir resim de\u011fil (JPG ve PNG dosyalar\u0131 desteklenir)",
	2004: "Oturumun s\u00fcresi doldu",
	2005: "Bu kullan\u0131c\u0131y\u0131 takip edemedik. L\u00fctfen yenileyin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2006: "E-posta adresi yanl\u0131\u015f. L\u00fctfen tekrar deneyin",
	2007: "Kullan\u0131c\u0131 Rol\u00fc ge\u00e7ersiz. L\u00fctfen tekrar deneyin",
	2008: "Do\u011fru bir G\u00f6rev t\u00fcr\u00fc belirtmeniz gerekir",
	2009: "Verilen Ba\u015fvuru ge\u00e7ersizdir; silinmi\u015f veya hi\u00e7 var olmam\u0131\u015f olabilir",
	2010: "Ge\u00e7ersiz giri\u015f parametreleri. L\u00fctfen yenileyin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2011: "Verilen Kurulu\u015f ge\u00e7ersizdir; silinmi\u015f veya hi\u00e7 var olmam\u0131\u015f olabilir",
	2012: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2013: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse, support@csod.com adresinden bize bildirin",
	2014: "S\u00fcper Y\u00f6netici i\u00e7in gerekli parametre[organization_id]",
	2015: "Sa\u011flanan G\u00f6r\u00fcnt\u00fc Verileri i\u00e7eri\u011fi ge\u00e7ersiz. L\u00fctfen tekrar kontrol edin ve tekrar deneyin. Sorun devam ederse bize bildirin support@csod.com",
	2016: "Ge\u00e7ersiz Etki Alan\u0131",
	2017: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2018: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2019: "Arad\u0131\u011f\u0131n\u0131z \u015fey mevcut de\u011fil veya silinmi\u015f olabilir",
	2020: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2021: "Kimlik do\u011frulama sunucusu bu iste\u011fi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2022: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen ge\u00e7erli bir Ekip URL'si girin",
	2023: "Kimlik do\u011frulama sunucusu bu iste\u011fi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2024: "Dosya boyutu 5 MB'den k\u00fc\u00e7\u00fck olmal\u0131d\u0131r",
	2025: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131. L\u00fctfen ge\u00e7erli bir URL girin",
	2026: "Parola, en az bir b\u00fcy\u00fck harf, bir k\u00fc\u00e7\u00fck harf ve bir say\u0131sal de\u011fer dahil olmak \u00fczere en az 8 karakter i\u00e7ermelidir",
	2027: "Ge\u00e7ersiz \u015eifre",
	2028: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2029: "Sa\u011flad\u0131\u011f\u0131n\u0131z \u015eehir desteklenmiyor",
	2030: "\u0130stekte eksik veya ge\u00e7ersiz bir parametre vard\u0131",
	2031: "Kimlik do\u011frulama sunucusu bu parametreyi i\u015flemeye \u00e7al\u0131\u015f\u0131rken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2032: "Ge\u00e7ersiz parametre[file_id]",
	2033: "Ge\u00e7ersiz URL. L\u00fctfen tekrar kontrol edin ve tekrar deneyin",
	2034: "Kimlik do\u011frulama sunucusu bu parametreleri i\u015flerken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2035: "Kimlik do\u011frulama sunucusu bu AppKey i\u015flenirken beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen sorunu support@csod.com",
	2036: "Kimlik do\u011frulama sunucusu beklenmeyen bir hatayla kar\u015f\u0131la\u015ft\u0131. L\u00fctfen bu sayfay\u0131 yenileyin. Sorun devam ederse, sorunu support@csod.com",
	2044: "Bu ad\u0131m i\u00e7in \u00e7eviriyi yanl\u0131\u015f yerle\u015ftirmi\u015f gibi g\u00f6r\u00fcn\u00fcyoruz. L\u00fctfen Varsay\u0131lan Dil'e ge\u00e7in ve ad\u0131m\u0131 yeniden \u00e7evirin veya daha fazla ayr\u0131nt\u0131 i\u00e7in m\u00fc\u015fteri deste\u011fimizle ileti\u015fime ge\u00e7in.",
	2200: "Ses \/ video kontrollerine eri\u015firken bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen taray\u0131c\u0131 ayarlar\u0131n\u0131z\u0131 kontrol edin ve tekrar deneyin. Sorun devam ederse bize bildirin support@csod.com",
	3061: "Yaln\u0131zca 5 adede kadar K\u0131lavuzu sabitleyebilirsiniz",
	4000: "Bir K\u0131lavuz zaten olu\u015fturulmu\u015fsa, alt kategori bir Klas\u00f6r\u00fcn i\u00e7inde olu\u015fturulamaz",
	4001: "Bir kullan\u0131c\u0131 zaten S\u00fcper Y\u00f6neticiyse, Kullan\u0131c\u0131 Rol\u00fcn\u00fc de\u011fi\u015ftiremezsiniz",
	4002: "Yay\u0131mlanm\u0131\u015f bir K\u0131lavuzda bu eyleme izin verilmez",
	4003: "Kilitli K\u0131lavuz yay\u0131nlanam\u0131yor",
	4004: "Bu eyleme yay\u0131mlanm\u0131\u015f bir klas\u00f6rde izin verilmez. L\u00fctfen yay\u0131ndan kald\u0131r\u0131n",
	4006: "Ba\u015fvuru verilen kurulu\u015fa ait olmal\u0131d\u0131r",
	4007: "Bu eylemi ger\u00e7ekle\u015ftirme yetkiniz yoktur",
	4008: "Bu alt kategori i\u00e7in eyleme izin verilmiyor",
	4009: "Rehber yay\u0131nlanmal\u0131",
	4010: "K\u0131lavuz, alt kategorisi olan bir klas\u00f6r\u00fcn i\u00e7inde olu\u015fturulamaz",
	4011: "Ad\u0131m(lar) olu\u015fturmak i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4012: "Ad\u0131m(lar)\u0131 d\u00fczenlemek i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4013: "Ad\u0131m(lar)\u0131 silmek i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	4014: "Ad\u0131m(lar)\u0131 kopyalay\u0131p yap\u0131\u015ft\u0131rmak i\u00e7in bu K\u0131lavuzun kilidini a\u00e7man\u0131z gerekir",
	3001: "K\u0131lavuz yak\u0131nda d\u0131\u015fa aktar\u0131lmak \u00fczere kullan\u0131ma sunulacakt\u0131r. Durumu kontrol etmek i\u00e7in, hesap men\u00fcs\u00fc alt\u0131ndaki 'G\u00f6rev Durumu'na gidin",
	3002: "Y\u00fckleme ba\u015flad\u0131. L\u00fctfen y\u00fckleme tamamlanana kadar taray\u0131c\u0131y\u0131 yenilemeyin veya kapatmay\u0131n. \u0130\u00e7e aktarma durumunu tamamland\u0131ktan sonra kontrol edebilirsiniz",
	3003: "Kullan\u0131c\u0131 zaten var",
	3004: "E-posta Kimli\u011fi zaten do\u011frulanm\u0131\u015f",
	3005: "Bu URL di\u011fer uygulama yap\u0131land\u0131rmalar\u0131yla \u00e7ak\u0131\u015f\u0131yor, l\u00fctfen ba\u015fka bir URL eklemeyi deneyin",
	3006: "Klas\u00f6r ayn\u0131 uygulamaya ait olmal\u0131d\u0131r",
	3007: "Etki alan\u0131 zaten var",
	3008: "Olu\u015fturulan Rehber(ler)in maksimum s\u0131n\u0131r\u0131na ula\u015ft\u0131n\u0131z",
	3009: "Anket verilen K\u0131lavuzda zaten var",
	3010: "Ad\u0131m ayn\u0131 K\u0131lavuza ait olmal\u0131d\u0131r",
	3011: "Bu kurulu\u015f ask\u0131ya al\u0131nd\u0131. L\u00fctfen Y\u00f6neticinizle ileti\u015fime ge\u00e7in",
	3012: "K\u0131lavuz(lar) ayn\u0131 klas\u00f6re ait olmal\u0131d\u0131r",
	3013: "Bu K\u0131lavuz, verilen nesne \u00e7ifti ve alan ad\u0131yla zaten var",
	3014: "Kullan\u0131c\u0131 ask\u0131ya al\u0131nd\u0131",
	3015: "Kullan\u0131c\u0131 zaten do\u011frulanm\u0131\u015f",
	3017: "OTP e-posta adresinize ba\u015far\u0131yla g\u00f6nderildi",
	3018: "Rol zaten var",
	3019: "\u00dclke zaten var",
	3020: "\u015eehir zaten var",
	3023: "Kurulu\u015funuz do\u011frulanmad\u0131. Yard\u0131m i\u00e7in l\u00fctfen support@csod.com ileti\u015fime ge\u00e7in",
	3024: "JSON dosyas\u0131 bu kurulu\u015f i\u00e7in kullan\u0131lam\u0131yor",
	3025: "Kimlik do\u011frulama s\u0131ras\u0131nda bir sorunla kar\u015f\u0131la\u015ft\u0131k. L\u00fctfen bunu tekrar deneyin. Sorun devam ederse sayfay\u0131 yenileyin ve yeniden deneyin",
	3026: "JSON dosyas\u0131 bu K\u0131lavuz i\u00e7in kullan\u0131lam\u0131yor",
	3027: "Ad\u0131m yok. K\u0131lavuzu yay\u0131mlamak i\u00e7in en az bir ad\u0131m olu\u015fturma",
	3028: "Maksimum tur yay\u0131nlama s\u0131n\u0131r\u0131na ula\u015f\u0131ld\u0131",
	3047: "Hesab\u0131n\u0131z a\u015f\u0131r\u0131 giri\u015f hatalar\u0131 nedeniyle ge\u00e7ici olarak kilitlendi. Size kilidini a\u00e7ma ad\u0131mlar\u0131n\u0131 i\u00e7eren bir e-posta g\u00f6nderdik. Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com adresinden bizimle ileti\u015fime ge\u00e7in",
	3033: "Ge\u00e7ersiz kimlik bilgileri. Daha fazla yard\u0131m i\u00e7in l\u00fctfen support@csod.com veya Y\u00f6neticinizle ileti\u015fime ge\u00e7in.",
	4020: "Bu K\u0131lavuzun bir tasla\u011f\u0131 zaten mevcuttur; bir K\u0131lavuzun birden fazla tasla\u011f\u0131na izin verilmez.",
	4021: "[envs] parametresinin ge\u00e7ersiz de\u011ferleri",
	2054: "Eski ve yeni bir \u015fifre ayn\u0131 olamaz",
	playNextBotTour: "Sonraki bot turunu oyna",
	defaultBotEndingMessage: "Bitirdik, \u00E7ok te\u015Fekk\u00FCrler! Ba\u015Flamadan \u00F6nce ba\u015Fka bir \u015Fey var m\u0131?",
	loginNext: "\u00d6n\u00fcm\u00fczdeki",
	3068: "Eski \u015Fifrenizin s\u00FCresi doldu, giri\u015F i\u00E7in yeni \u015Fifre belirleyin.",
	includeScreen: "Ekran G\u00F6r\u00FCnt\u00FCs\u00FCn\u00FC Dahil Et",
	feedbackPlaceholder: "Geri bildiriminiz var m\u0131? Duymay\u0131 \u00E7ok isteriz!",
	feedbackOptBtn: "Bilgileri vurgulamak veya gizlemek i\u00E7in t\u0131klay\u0131n",
	highlight: "Vurgulamak",
	send: "G\u00F6ndermek",
	done: "Tamamlamak",
	hide: "Saklamak"
};
if (GmCXt === undefined) var GmCXt = {};
if (GmCXt.playerLbls === undefined) GmCXt.playerLbls = {};
GmCXt.playerLbls.zh_CN = {
	currentPage: "\u5f53\u524d\u9875\u9762",
	myChat: "\u6211\u7684\u804a\u5929",
	import: "\u8fdb\u53e3",
	export: "\u51fa\u53e3",
	redirectLivetour: "\u5b9e\u65f6\u64ad\u653e",
	guideNotAvailable: "\u6307\u5357\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002\u662f\u5426\u8981\u8f6c\u5230\u6307\u5357\u7f51\u5740\uff1f",
	downloadPPT: "\u4e0b\u8f7dPPT",
	btnYes: "\u662f\u7684",
	btnNo: "\u4e0d",
	inApp: "\u5e94\u7528\u5185",
	live: "\u4f4f",
	resume: "\u6062\u590d",
	tourCloseConfirm: "\u662f\u5426\u786e\u5b9e\u8981\u5173\u95ed\u672c\u6307\u5357\uff1f",
	notifSnoozeDonotMsg: "\u8bf7\u544a\u8bc9\u6211\u4eec\u60a8\u662f\u5426\u60f3\u7a0d\u540e\u89c2\u770b\u6216\u4ece\u4e0d\u663e\u793a\u901a\u77e5\uff1f",
	surveyThanksMessage: "\u611f\u8c22\u60a8\u7684\u56de\u590d",
	testMePassedMessage: "\u795d\u8d3a\uff01\u4f60\u901a\u8fc7\u4e86",
	testMeFailedMessage: "\u54ce\u5440\uff01\u4f60\u5931\u8d25\u4e86",
	testMeGuideEfficiency: "\u6d4b\u8bd5\u6548\u7387\uff1a",
	testMeGuideEffectiveness: "\u6d4b\u8bd5\u6548\u679c\uff1a",
	testMeTestTime: "\u6d4b\u8bd5\u65f6\u95f4",
	testMeExpectedTime: "\u9884\u671f\u65f6\u95f4",
	testMeStepsTaken: "\u91c7\u53d6\u7684\u6b65\u9aa4",
	testMeExpectedSteps: "\u9884\u671f\u6b65\u9aa4",
	testMeRetakeTestBtn: "\u91cd\u8003",
	testMeResultTitle: "\u6211\u7684\u6d4b\u8bd5\u7ed3\u679c",
	ConfirmIfTestMeModeRidirect: "\u6307\u5357\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002\u662f\u5426\u8981\u91cd\u5b9a\u5411\u5230\u6307\u5357\u7f51\u5740\uff1f",
	feedCmt: "\u60a8\u7684\u53cd\u9988\u5bf9\u6211\u4eec\u5f88\u6709\u4ef7\u503c\uff01<br> \u8bf7\u7528 500 \u4e2a\u5b57\u7b26\u6216\u66f4\u5c11\u7684\u5b57\u7b26\u544a\u8bc9\u6211\u4eec\u60a8\u7684\u60f3\u6cd5",
	doNotShowAgain: "\u4e0d\u518d\u663e\u793a",
	neverShowAgain: "\u518d\u4e5f\u4e0d\u663e\u793a",
	skipGuide: "\u8df3\u8fc7\u6307\u5357",
	surveyErrorMsg: "\u8bf7\u81f3\u5c11\u56de\u7b54\u4e00\u4e2a\u95ee\u9898",
	redirect: "\u91cd\u5b9a\u5411",
	liveGuide: "\u73b0\u573a\u5bfc\u6e38",
	question: "\u95ee\u9898",
	exitGuide: "\u9000\u51fa\u6307\u5357",
	continueGuide: "\u7ee7\u7eed\u6307\u5357",
	stop: "\u505c",
	characters: "\u5b57\u7b26\uff1a",
	survey: "\u8c03\u67e5",
	testMeStopMessage: "\u60a8\u5904\u4e8e\u6d4b\u8bd5\u6211\u6a21\u5f0f\uff0c\u5355\u51fb\u505c\u6b62\u9000\u51fa",
	testMeFailedErrorMessage: "\u60a8\u65e0\u6cd5\u8fbe\u5230\u76ee\u6807\u6b65\u9aa4\u3002<br>\u4f60\u4ece {TOTAL_STEPS} \u4e2d\u6b63\u786e\u83b7\u5f97\u4e86 {CORRECT_STEPS} \u4e2a\u6b65\u9aa4\u3002",
	surveyCommentPlaceholder: "\u5728\u8fd9\u91cc\u8f93\u5165\uff01\u6700\u591a 500 \u4e2a\u5b57\u7b26",
	pushTourSnoozeMsg: "\u6b64\u81ea\u52a8\u53d1\u5e03\u4e4b\u65c5\u5c06\u88ab\u6682\u505c",
	of: "\u4e4b",
	wbMplayerTitle: "\u6559\u7a0b",
	wbDragTooltip: "\u5c06\u6b64\u64ad\u653e\u5668\u62d6\u653e\u5230\u9875\u9762\u4e0a\u7684\u4efb\u4f55\u4f4d\u7f6e",
	dontShowEdResult: "\u6211\u4e0d\u60f3\u770b\u5230\u8fd9\u4e2a",
	mPlayerHeaderTitle: "\u5fae\u578b\u64ad\u653e\u5668",
	closePreview: "\u5173\u95ed\u9884\u89c8",
	elmNotFound: "\u4f3c\u4e4e\u6211\u4eec\u627e\u4e0d\u5230\u8be5\u6b65\u9aa4\u7684\u5143\u7d20\uff1a",
	elmNotFoundInfo: "\u786e\u4fdd\u60a8\u5728\u6b63\u786e\u7684\u9875\u9762\u4e0a\u624d\u80fd\u6267\u884c\u6b64\u6b65\u9aa4\u3002\u8fd8\u8981\u68c0\u67e5\u60a8\u662f\u5426\u53ef\u4ee5\u770b\u5230\u6240\u9009\u5143\u7d20",
	notExists: "\u4e0d\u5b58\u5728",
	elmNotFoundHeader: "\u672a\u627e\u5230\u6b65\u9aa4\u5143\u7d20",
	goToStep: "\u8f6c\u5230\u6b65\u9aa4",
	notFoundStep: "\u6211\u4eec\u627e\u4e0d\u5230\u6b65\u9aa4\u7684\u5143\u7d20#",
	pleaseReselect: "\u8bf7\u5c1d\u8bd5\u91cd\u65b0\u9009\u62e9\u8be5\u5143\u7d20\u3002",
	stepRuleMatchErr: "\u914d\u7f6e\u9519\u8bef\uff1a\u6b65\u9aa4\u89c4\u5219\u4e0d\u5339\u914d",
	guideRuleMatchErr: "\u914d\u7f6e\u9519\u8bef\uff1a\u6307\u5357\u89c4\u5219\u4e0d\u5339\u914d",
	stepNotFoundRedirect: "\u5728\u6b64\u9875\u9762\u4e0a\u627e\u4e0d\u5230\u6b65\u9aa4\u3002\u662f\u5426\u8981\u91cd\u5b9a\u5411\uff1f",
	branchStepMessagePopup: "\u8bf7\u9009\u62e9\u4ee5\u4e0b\u4efb\u52a1\u4e4b\u4e00\u4ee5\u7ee7\u7eed",
	btnSkip: "\u8df3",
	kindlyHoverPopup: "\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u6b64\u5143\u7d20\u4e0a\u4ee5\u6253\u5f00\u5f39\u51fa\u7a97\u53e3",
	stepPlayIsdefinedPopover: "\u60a8\u8981\u64ad\u653e\u7684\u6b65\u9aa4\u5728\u5f39\u51fa\u6846\u4e0a\u5b9a\u4e49",
	elmNotFoundWestpac: "\u672a\u627e\u5230\u6b65\u9aa4 \u2013 \u672c\u6307\u5357\u5c06\u7ed3\u675f",
	findingElementMessage: "\u8bd5\u56fe\u627e\u5230\u6b65\u9aa4\u3002\u3002\u3002",
	badDomain: "\u5f53\u524d\u57df\u548c URL \u65e0\u6743\u8fd0\u884c MyGuide\u3002\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458\u5bfb\u6c42\u5e2e\u52a9\u3002",
	hostJsError: "\u7f51\u9875\u4e0a\u4f3c\u4e4e\u6709\u9519\u8bef\u3002\u6211\u7684\u5411\u5bfc\u65e0\u6cd5\u7ee7\u7eed",
	remember: "\u8bb0\u4f4f\u6211",
	forgotPass: "\u5fd8\u8bb0\u5bc6\u7801\uff1f",
	dontHavAcc: "\u6ca1\u6709\u5e10\u6237\uff1f",
	loginTitle: "\u767b\u5f55",
	loginOtpScreenTitle: "\u9a8c\u8bc1 OTP \u4ee5\u767b\u5f55",
	forgetPassTitl: "\u91cd\u7f6e\u5bc6\u7801",
	placeholderEmail: "\u7535\u5b50\u90ae\u4ef6\u7f16\u53f7",
	placeholderPassword: "\u5bc6\u7801",
	placeholderNewPassword: "\u65b0\u5bc6\u7801",
	placeholderCurrentPassword: "\u5f53\u524d\u5bc6\u7801",
	placeholderFirstname: "\u540d\u5b57",
	placeholderLastname: "\u59d3",
	placeholderPasswordC: "\u786e\u8ba4\u5bc6\u7801",
	btnCancel: "\u53d6\u6d88",
	btnPayment: "\u5347\u7ea7\u8ba1\u5212",
	btnSubmit: "\u63d0\u4ea4",
	btnLogin: "\u767b\u5f55",
	termsOfUse: "\u4f7f\u7528\u6761\u6b3e",
	andLabel: "\u548c",
	policyPrivacy: "\u9690\u79c1\u7b56\u7565",
	passwordError: "\u5bc6\u7801\u957f\u5ea6\u5fc5\u987b\u4e3a 8 \u4f4d\u6570\u5b57",
	confirmPasswordError: "\u5bc6\u7801\u548c\u786e\u8ba4\u5bc6\u7801\u5fc5\u987b\u76f8\u540c",
	firstnameError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u540d\u5b57",
	lastnameError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u59d3\u6c0f",
	emailError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6ID",
	orgError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7ec4\u7ec7\u7f51\u5740",
	otpError: "\u8bf7\u8f93\u5165\u6709\u6548\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	placeholderOtp: "\u5728\u6b64\u8f93\u5165\u60a8\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	otpSentDesc: "\u5982\u679c\u63d0\u4f9b\u4e86\u6709\u6548\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740\uff0c\u5219\u4f1a\u5411\u60a8\u53d1\u9001\u91cd\u7f6e\u94fe\u63a5\u3002<br>\u5982\u679c\u60a8\u5728\u51e0\u5206\u949f\u5185\u6ca1\u6709\u770b\u5230\u8be5\u7535\u5b50\u90ae\u4ef6\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u5783\u573e\u90ae\u4ef6\u6587\u4ef6\u5939\u4e2d\u662f\u5426\u6709\u6765\u81ea",
	btnOtpVerify: "\u9a8c\u8bc1\u4e00\u6b21\u6027\u5bc6\u7801",
	alreadyHavAcc: "\u5df2\u6709\u5e10\u6237\uff1f",
	smartbiteMessageError: "\u8bf7\u8f93\u5165\u7559\u8a00",
	smartbiteLinkError: "\u8bf7\u8f93\u5165\u6709\u6548\u94fe\u63a5",
	noGuidesOnThisPage: "\u6b64\u9875\u9762\u4e0a\u6ca1\u6709\u53ef\u7528\u7684\u6307\u5357\uff01",
	clickOn: "\u70b9\u51fb ",
	contactUs: "\u8054\u7cfb\u6211\u4eec",
	search: "\u641c\u7d22",
	noRecordFound: "\u672a\u627e\u5230\u8bb0\u5f55",
	category: "\u6587\u4ef6\u5939",
	subCategory: "\u5b50\u6587\u4ef6\u5939",
	confirmPasswordRequired: "\u786e\u8ba4\u5bc6\u7801 \u5fc5\u586b",
	logInWithSSO: "\u4f7f\u7528 SSO \u767b\u5f55",
	inputPlaceHolderSearch: "\u641c\u7d22\u4efb\u4f55\u6307\u5357",
	noGuideAvailableFor: "\u672a\u627e\u5230\u4e0e\u60a8\u7684\u641c\u7d22\u5339\u914d\u7684\u6307\u5357",
	tryModifyingYourSearch: "\u5c1d\u8bd5\u4fee\u6539\u641c\u7d22\u6761\u4ef6",
	signInVerifyYourEmail: "\u6b64\u7535\u5b50\u90ae\u4ef6 ID \u5c1a\u672a\u9a8c\u8bc1\u3002\u8bf7\u67e5\u770b\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u4e86\u89e3\u8be6\u7ec6\u4fe1\u606f",
	signInVerifyYourAccount: "\u6211\u4eec\u5df2\u5411\u60a8\u53d1\u9001\u4e00\u5c01\u5305\u542b OTP \u7684\u7535\u5b50\u90ae\u4ef6\u3002\u8bf7\u9a8c\u8bc1\u60a8\u7684\u5e10\u6237\u4ee5\u5b8c\u6210\u767b\u5f55\u8fc7\u7a0b",
	maintenanceMessage: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	back: "\u8fd4\u56de",
	changePassword: "\u66f4\u6539\u5bc6\u7801",
	startTestAuto: "\u5f00\u59cb\u81ea\u52a8\u5316\u6d4b\u8bd5",
	msgPasswordChangedSuccess: "\u60a8\u7684\u5bc6\u7801\u5df2\u6210\u529f\u66f4\u6539",
	msgConfirmNewPasswordError: "\u786e\u8ba4\u5bc6\u7801\u5fc5\u987b\u4e0e\u65b0\u5bc6\u7801\u76f8\u540c",
	enterUrl: "\u8f93\u5165\u56e2\u961f\u7f51\u5740",
	dragPlaceholderDropThis: "\u653e\u4e0b\u8fd9\u4e2a ",
	dragPlaceholderHere: " \u8fd9\u91cc",
	termsOfService: "\u6761\u6b3e",
	versionText: "\u7248\u672c",
	videoStepSuccessMessage: "\u60a8\u7684\u6b65\u9aa4\u5df2\u6210\u529f\u521b\u5efa",
	importSuccessMessage: "\u6307\u5357\u4e0a\u4f20\u6210\u529f\u3002\u8f6c\u5230\u4efb\u52a1\u72b6\u6001\u4ee5\u68c0\u67e5\u5bfc\u5165\u72b6\u6001",
	worldBankHelpSupport: "\u67d0\u4e9b\u5de5\u5177\uff08\u4f8b\u5982\u5de5\u5177\u63d0\u793a\uff09\u53ea\u80fd\u5728\u754c\u9762\u4e2d\u67e5\u770b",
	helpSupport: "\u5e2e\u52a9\u4e0e\u652f\u6301",
	page: "\u9875",
	selectAnApplication: "\u9009\u62e9\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f",
	refresh: "\u5237\u65b0",
	loginBtn: "\u767b\u5f55",
	account: "\u5e10\u6237",
	taskStatus: "\u4efb\u52a1\u72b6\u6001 ",
	logoutBtn: "\u6ce8\u9500",
	app: "\u5e94\u7528\u7a0b\u5e8f\uff1a",
	firstStep: "\u7b2c\u4e00\u6b65",
	lastStep: "\u6700\u540e\u4e00\u6b65",
	startTest: "\u5f00\u59cb\u6d4b\u8bd5",
	noInappStepInGuide: "TestMe \u65e0\u6cd5\u7ee7\u7eed\uff0c\u56e0\u4e3a\u672c\u6307\u5357\u4e2d\u6ca1\u6709\u5185\u8054\u6b65\u9aa4",
	settingBtn: "\u9ad8\u7ea7\u8bbe\u7f6e",
	orgSetting: "\u7ec4\u7ec7\u8bbe\u7f6e",
	close: "\u5173\u95ed",
	pdf: ".PDF",
	downloadPptx: ".PPT",
	giphy: ".GIF",
	downloadWord: "\u516c\u6587",
	downloadBlog: "\u535a\u5ba2",
	downloadTxt: "\u7eaf\u6587\u672c",
	serviceErrorMessage: "\u54ce\u5440\uff01\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002\u60a8\u4e5f\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 support@csod.com \u4ee5\u83b7\u53d6\u4efb\u4f55\u5e2e\u52a9",
	guidesTab: "\u6307\u5357",
	noGuideCreatedYet: "\u5c1a\u672a\u521b\u5efa\u6307\u5357\uff01",
	noCategoryCreatedYet: "\u5c1a\u672a\u521b\u5efa\u6587\u4ef6\u5939\uff01",
	chatbot: "\u6211\u7684\u804a\u5929",
	notAutorised: "\u60a8\u6ca1\u6709\u6240\u9700\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458",
	ok: "\u8fd8\u884c",
	apiError: "\u914d\u7f6e\u9519\u8bef\u3002\u8bf7\u8054\u7cfb\u7ba1\u7406\u5458",
	select: "\u9009\u62e9",
	mute_unmute: "\u9759\u97f3\/\u53d6\u6d88\u9759\u97f3",
	privacyPolicy: "\u9690\u79c1\u548c\u997c\u5e72",
	privacyPolicyText: "MyGuide \u4f7f\u7528\u997c\u5e72\u3002\u5982\u679c\u60a8\u7ee7\u7eed\uff0c\u5373\u8868\u793a\u60a8\u540c\u610f\u6211\u4eec\u7684\u6761\u6b3e\u548c\u9690\u79c1\u653f\u7b56\uff0c\u5e76\u540c\u610f\u6211\u4eec\u4f7f\u7528 Cookie",
	terms: "\u6761\u6b3e",
	westPecErrorMessage: "\u60a8\u65e0\u6743\u8bbf\u95ee\u6b64\u5e94\u7528\u7a0b\u5e8f\u3002\u8bf7\u767b\u5f55\u897f\u592a\u5e73\u6d0b\u94f6\u884c\u7684\u7f51\u7edc",
	noApp: "\u672a\u627e\u5230\u5e94\u7528\u7a0b\u5e8f",
	role: "\u89d2\u8272\uff1a",
	all: "\u90fd",
	video: "\u89c6\u9891",
	course: "\u8bfe\u7a0b",
	article: "\u54c1",
	image: "\u56fe\u50cf",
	pathways: "\u9014\u5f84",
	preview: "\u9884\u89c8",
	more: "\u66f4\u591a",
	history: "\u5386\u53f2",
	publish: "\u53d1\u5e03",
	selectGuideLink: "\u8bf7\u9009\u62e9\u94fe\u63a5\u6307\u5357",
	selectGuideBeforeSubmit: "\u8bf7\u5728\u63d0\u4ea4\u524d\u9009\u62e9\u4e00\u4e2a\u6307\u5357",
	change: "\u6539\u53d8",
	checkNow: "\u7acb\u5373\u68c0\u67e5",
	minutes: "\u7eaa\u8981",
	clickHere: "\u70b9\u51fb\u8fd9\u91cc",
	youAlmostDone: "\u4f60\u5feb\u5b8c\u6210\u4e86\uff01",
	setOrg: "\u8bbe\u7f6e\u60a8\u7684\u7ec4\u7ec7",
	apps: "\u5e94\u7528\u7a0b\u5e8f",
	me: "\u6211",
	playStep: "\u64ad\u653e\u6b65\u9aa4",
	miniPlayerHelp: "\u5e2e\u52a9",
	defaultMiniPlayerHelp: "\u5e2e\u52a9",
	defaultConfirmIfSlideshowOrRedirect: "\u6b65\u9aa4\u5728\u5f53\u524d URL \u4e0a\u4e0d\u53ef\u7528\u3002<br>\u60a8\u8981\u8f6c\u5230\u6b65\u9aa4 URL \u8fd8\u662f\u64ad\u653e\u5e7b\u706f\u7247\uff1f",
	defaultServiceErrorMessage: "\u54ce\u5440\uff01\u53d1\u751f\u9519\u8bef\u3002\u8bf7\u7a0d\u540e\u91cd\u8bd5\u3002\u60a8\u4e5f\u53ef\u4ee5\u53d1\u9001\u7535\u5b50\u90ae\u4ef6\u81f3 support@csod.com \u4ee5\u83b7\u53d6\u4efb\u4f55\u5e2e\u52a9",
	defaultMaintenanceMessage: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	userNotFollowingGuideMessage: "\u60a8\u4f3c\u4e4e\u6b63\u5728\u6267\u884c\u4e0d\u5c5e\u4e8e\u672c\u6307\u5357\u7684\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u4e0d\u518d\u5e0c\u671b\u9075\u5faa\u6307\u5357\uff0c\u8bf7\u5355\u51fb\u9000\u51fa\u6307\u5357",
	defaultUserNotFollowingGuideMessage: "\u60a8\u4f3c\u4e4e\u6b63\u5728\u6267\u884c\u4e0d\u5c5e\u4e8e\u672c\u6307\u5357\u7684\u6b65\u9aa4\u3002\u5982\u679c\u60a8\u4e0d\u518d\u5e0c\u671b\u9075\u5faa\u6307\u5357\uff0c\u8bf7\u5355\u51fb\u9000\u51fa\u6307\u5357",
	resumeGuide: "\u7b80\u5386\u6307\u5357",
	defaultResumeGuideMessage: "\u7b80\u5386\u6307\u5357",
	backToLogin: "\u8fd4\u56de\u767b\u5f55",
	filters: "\u8fc7\u6ee4 \u5668",
	thisApp: "\u8fd9\u4e2a\u7a0b\u5e8f",
	thisWebsite: "\u672c\u7f51\u7ad9",
	maxFreeTourLimit: "\u8fbe\u5230\u6700\u5927\u65c5\u884c\u9650\u5236",
	passwordRegexCheck: "\u5bc6\u7801\u5fc5\u987b\u81f3\u5c11\u5305\u542b 8 \u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u81f3\u5c11\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3001\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c\u4e00\u4e2a\u6570\u503c",
	countLimit: "99+",
	microsoftServiceKey: "\u8bf7\u8f93\u5165\u4f60\u7684 Microsoft \u8ba4\u77e5\u670d\u52a1\u8bed\u97f3\u8ba2\u9605\u5bc6\u94a5",
	numberOfImgFile: "\u56fe\u50cf\u6587\u4ef6\u548c\u6587\u672c\u6587\u4ef6\u7684\u6570\u91cf\u5e94\u76f8\u540c",
	availableOn: "\u9002\u7528\u4e8e",
	tooltipUnpubWorkflowTitle: "\u672a\u53d1\u5e03\u7684\u5de5\u4f5c\u6d41",
	tooltipUnpubParentWorkflowTitle: "\u5df2\u53d1\u5e03\u7684\u5de5\u4f5c\u6d41\uff0c\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentWorkflowTitle: "\u5df2\u53d1\u5e03\u5de5\u4f5c\u6d41\uff0c\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubTooltipTitle: "\u672a\u53d1\u5e03\u7684\u5de5\u5177\u63d0\u793a",
	tooltipUnpubParentTooltipTitle: "\u5df2\u53d1\u5e03\u7684\u5de5\u5177\u63d0\u793a\uff0c\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentTooltipTitle: "\u5df2\u53d1\u5e03\u5de5\u5177\u63d0\u793a\uff0c\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubTutorialTitle: "\u672a\u53d1\u5e03\u7684\u6559\u7a0b",
	tooltipUnpubParentTutorialTitle: "\u5df2\u53d1\u5e03\u6559\u7a0b\uff0c \u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentTutorialTitle: "\u5df2\u53d1\u5e03\u6559\u7a0b\uff0c \u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipUnpubSubFolderTitle: "\u672a\u53d1\u5e03\u7684\u5b50\u6587\u4ef6\u5939",
	tooltipUnpubSubFolderDesc: "\u4f7f\u7528\u5b50\u6587\u4ef6\u5939\u7ec4\u7ec7\u6307\u5357",
	tooltipUnpubParentSubFolderTitle: "\u5df2\u53d1\u5e03\u5b50\u6587\u4ef6\u5939\u3001\u672a\u53d1\u5e03\u7684\u7236\u6587\u4ef6\u5939",
	tooltipPubParentSubFolderTitle: "\u5df2\u53d1\u5e03\u5b50\u6587\u4ef6\u5939\u3001\u5df2\u53d1\u5e03\u6587\u4ef6\u5939",
	tooltipPubParentSubFolderDesc: "\u7ec4\u7ec7\u6307\u5357",
	exitSurvey: "\u9000\u51fa\u8c03\u67e5",
	disable: "\u7981\u7528",
	instructionExitSurvey: "\u5f53\u7528\u6237\u5728\u5b8c\u6210\u4e4b\u524d\u9000\u51fa\u6307\u5357\u65f6\uff0c\u5c06\u663e\u793a\u9000\u51fa\u8c03\u67e5",
	msgVideoNotFound: "\u4e0a\u4f20\u60a8\u7684\u89c6\u9891\uff0c\u8bf7\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5c1d\u8bd5",
	msgGiphyNotFound: "\u4e0a\u4f20\u60a8\u7684 GIF\uff0c\u8bf7\u5728\u4e00\u6bb5\u65f6\u95f4\u540e\u5c1d\u8bd5",
	userPref: "\u6211\u7684\u504f\u597d",
	manageAccount: "\u7ba1\u7406\u95e8\u6237",
	analyticsPortal: "\u89c1\u89e3\u95e8\u6237",
	errorInvalidUrl: "\u4e0d\u662f\u6709\u6548\u7684\u7f51\u5740",
	wbFooterText: "\u667a\u80fd\u4ea4\u901a\u7cfb\u7edf\u6280\u672f\u5b66\u4e60",
	navigationMenu: "\u5bfc\u822a\u83dc\u5355",
	clearHistory: "\u6e05\u9664\u5386\u53f2\u8bb0\u5f55",
	userDeniedMessage: "\u7528\u6237\u62d2\u7edd\u6444\u50cf\u5934\u548c\u9ea6\u514b\u98ce\u8bbf\u95ee\u6743\u9650",
	pushNotification: "\u63a8\u9001\u901a\u77e5",
	viewDetail: "\u67e5\u770b\u8be6\u60c5",
	contactAdmin: "\u8bf7\u8054\u7cfb support@csod.com \u6216\u60a8\u7684\u7ba1\u7406\u5458\u4ee5\u83b7\u5f97\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9",
	noAppOnDomain: "\u672a\u4e3a\u5f53\u524d\u57df\u5206\u914d\u5e94\u7528\u7a0b\u5e8f ",
	noGuidesOnDomain: "\u672a\u627e\u5230\u6307\u5357",
	apply: "\u5e94\u7528",
	invalidLoginCred: "\u767b\u5f55\u51ed\u636e\u65e0\u6548\u3002\u591a\u6b21\u5c1d\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u7684\u5e10\u6237\u5c06\u88ab\u9501\u5b9a\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u5c01\u89e3\u9501\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u91cd\u7f6e\u5bc6\u7801",
	resendOTP: "\u91cd\u65b0\u53d1\u9001\u4e00\u6b21\u6027\u5bc6\u7801",
	sendFeedback: "\u53d1\u9001\u53cd\u9988",
	guideNotExist: "\u672c\u6307\u5357\u5728\u6b64\u9875\u9762\u4e0a\u4e0d\u53ef\u7528\uff08\u9519\u8bef\uff1a\u57df\u4e0d\u5339\u914d\uff09 ",
	cdnAccess: "<b>\u5bf9\u4e0d\u8d77<\/b> <br><br>\u6211\u4eec\u7684\u670d\u52a1\u5668\u4f3c\u4e4e\u6709\u95ee\u9898\u3002<br> \u6211\u4eec\u5df2\u6536\u5230\u6709\u5173\u8be5\u9519\u8bef\u7684\u901a\u77e5\uff0c\u5e76\u5c06\u5c3d\u5feb\u66f4\u6b63",
	tourPlayError: "\u6307\u5357\u4e0d\u80fd\u64ad\u653e\u3002\u68c0\u7d22\u6307\u5357\u8be6\u7ec6\u4fe1\u606f\u65f6\u51fa\u9519",
	playerMode: "\u64ad\u653e\u5668\u6a21\u5f0f",
	closePanel: "\u5173\u95ed\u9762\u677f",
	switchCreatorMode: "\u5207\u6362\u5230\u521b\u5efa\u8005\u6a21\u5f0f",
	extensionContextError: "\u6269\u5c55\u4e0a\u4e0b\u6587\u5931\u6548\u3002\u8bf7\u91cd\u65b0\u52a0\u8f7d\u9875\u9762\u4ee5\u7ee7\u7eed",
	otpSent: "\u4e00\u6b21\u6027\u5bc6\u7801\u5df2\u91cd\u65b0\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u8bf7\u68c0\u67e5\u60a8\u7684\u6536\u4ef6\u7bb1",
	startOver: "\u91cd\u65b0\u5f00\u59cb",
	yesResume: "\u6062\u590d",
	dontShowAgain: "\u4e0d\u518d\u663e\u793a",
	notificationHeader: "\u60a8\u6536\u5230\u901a\u77e5\uff01",
	watchLater: "\u7a0d\u540e\u89c2\u770b",
	pushSnoozeMsg: "\u6b64\u901a\u77e5\u5c06\u88ab\u6682\u505c",
	showAgain: "\u518d\u6b21\u663e\u793a",
	noGuidesOnThisTab: "\u6b64\u9875\u9762\u4e0a\u6ca1\u6709\u901a\u77e5",
	iAgree: "\u6211\u540c\u610f",
	viewMore: "\u67e5\u770b\u66f4\u591a",
	lostInternetConnection: "\u5931\u53bb\u4e0e\u670d\u52a1\u5668\u7684\u8fde\u63a5\u3002\u8bf7\u91cd\u65b0\u8fde\u63a5\u5e76\u91cd\u8bd5",
	next: "\u4e0b\u4e00\u4e2a",
	recent: "\u6700\u8fd1",
	older: "\u8001",
	atoz: "A - Z",
	ztoa: "Z - A",
	clear: "\u6e05\u695a",
	tooltipDontShowAgain: "\u901a\u77e5\u5c06\u4e0d\u518d\u663e\u793a\u3002\u8981\u7acb\u5373\u542f\u7528\u901a\u77e5\uff0c\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u901a\u77e5\u4e0a\uff0c\u7136\u540e\u5355\u51fb\u201c\u518d\u6b21\u663e\u793a\u201d",
	tooltipWatchLater1: "\u901a\u77e5\u88ab\u6682\u505c",
	tooltipWatchLater2: "\u5e76\u5c06\u5728\u90a3\u4e4b\u540e\u51fa\u73b0\u3002\u8981\u7acb\u5373\u542f\u7528\u901a\u77e5\uff0c\u8bf7\u5c06\u9f20\u6807\u60ac\u505c\u5728\u901a\u77e5\u4e0a\uff0c\u7136\u540e\u5355\u51fb\u201c\u518d\u6b21\u663e\u793a\u201d",
	hour: "\u5c0f\u65f6",
	hours: "\u5c0f\u65f6",
	insightsTracker: "\u6d1e\u5bdf\u8ffd\u8e2a\u5668",
	slideshow: "\u5e7b\u706f\u7247\u653e\u6620",
	autoplay: "\u81ea\u52a8\u64ad\u653e",
	powerFormOldData: "\u73b0\u6709\u6570\u636e",
	powerFormNewData: "\u4f7f\u7528\u6b64\u8868\u5355\u8f93\u5165\u65b0\u6570\u636e",
	powerFormNewDataMore: "\u5982\u679c\u60a8\u73b0\u6709\u7684\u6570\u636e\u4e0d\u53ef\u89c1\uff0c\u8bf7\u5355\u51fb\u5de6\u4e0a\u89d2\u7684\u7bad\u5934\u67e5\u770b\u60a8\u7684\u6570\u636e\u3002\u7136\u540e\uff0c\u9700\u8981\u5c06\u6570\u636e\u590d\u5236\u5230\u5141\u8bb8\u7684\u9879\u76ee\u7b26\u53f7\u683c\u5f0f\u3002",
	powerFormTitle: "\u6570\u636e\u8f93\u5165\u52a9\u624b",
	powerFormMandatory: "\u8fd9\u662f\u5fc5\u586b\u5b57\u6bb5\uff0c\u6700\u5927\u5b57\u7b26\u6570\u9650\u5236 ",
	belongToOtherApp: "\u672c\u6307\u5357\u662f\u5728\u5c5e\u4e8e {APPNAME} \u5e94\u7528\u7a0b\u5e8f\u7684 {TOURURL} \u4e0a\u521b\u5efa\u7684\u3002\u8bf7\u5728\u8be5\u5e94\u7528\u7a0b\u5e8f\u4e2d\u590d\u5236\u672c\u6307\u5357\uff0c\u7136\u540e\u91cd\u8bd5",
	setDomain: "\u5982\u679c\u60a8\u786e\u5b9a\u5e94\u5728\u5f53\u524d\u5e94\u7528\u7a0b\u5e8f\u57df\u8bbe\u7f6e\u4e2d\u6dfb\u52a0 {TOURURL}\uff0c\u8bf7\u6dfb\u52a0\u5e76\u91cd\u8bd5",
	on: "\u4e0a",
	off: "\u5173\u95ed",
	btnPrev: "\u6628\u65e5",
	btnPrevious: "\u4ee5\u524d",
	taskList: "\u4efb\u52a1\u5217\u8868",
	unprocessedVideo: "\u6b63\u5728\u5904\u7406\u60a8\u7684\u89c6\u9891\uff0c\u8bf7\u7a0d\u5019\u3002",
	searchResult: "\u641c\u7d22\u7ed3\u679c",
	pleaseWait: "\u8bf7\u7a0d\u5019\uff01",
	mediaDownloadMsg: "\u5f53\u6211\u4eec\u51c6\u5907\u60a8\u7684\u6587\u4ef6\u4ee5\u4f9b\u4e0b\u8f7d\u65f6",
	mediaFileNotFound: "\u672a\u627e\u5230\u5a92\u4f53\u6587\u4ef6",
	searchInFolder: "\u5728\u6587\u4ef6\u5939\u4e2d\u641c\u7d22",
	currentPageSearchPlaceholder: "\u641c\u7d22\u5f53\u524d\u9875\u9762\u4e0a\u53ef\u7528\u7684\u6307\u5357",
	brandLogo: "\u54c1\u724c\u6807\u5fd7",
	accessibility: "\u53ef\u53ca\u6027",
	replay: "\u91cd\u64ad",
	defaultGreetingMessage: "\u563f\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u5411\u5bfc\u3002\u6211\u8be5\u600e\u4e48\u5e2e\u52a9\u4f60\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6211\u662f\u4e00\u4e2a\u673a\u5668\u4eba\u3002",
	defaultErrorMessage: "\u5bf9\u4e0d\u8d77\uff0c\u6211\u4e0d\u660e\u767d\u3002\u4f60\u80fd\u66f4\u5177\u4f53\u4e00\u70b9\u5417\uff1f ",
	defaultEndMessage: "\u6211\u4eec\u5b8c\u6210\u4e86\uff0c\u975e\u5e38\u611f\u8c22\uff01",
	greetingMessage: "\u563f\uff01\u6b22\u8fce\u6765\u5230\u6211\u7684\u5411\u5bfc\u3002\u6211\u8be5\u600e\u4e48\u5e2e\u52a9\u4f60\uff1f\u8bf7\u8bb0\u4f4f\uff0c\u6211\u662f\u4e00\u4e2a\u673a\u5668\u4eba\u3002",
	errorMessage: "\u5bf9\u4e0d\u8d77\uff0c\u6211\u4e0d\u660e\u767d\u3002\u4f60\u80fd\u66f4\u5177\u4f53\u4e00\u70b9\u5417\uff1f ",
	endMessage: "\u6211\u4eec\u5b8c\u6210\u4e86\uff0c\u975e\u5e38\u611f\u8c22\uff01",
	guideLnkToRedirect: "\u4f7f\u7528\u4ee5\u4e0b\u94fe\u63a5\u91cd\u5b9a\u5411\u5230\u9875\u9762\u5e76\u64ad\u653e\u6307\u5357",
	otpTimer: "\u60a8\u53ef\u4ee5\u5728 ",
	seconds: " \u79d2",
	limitWarning: "\u60a8\u5df2\u8fbe\u5230\u5931\u8d25\u5c1d\u8bd5\u7684\u6700\u5927\u9650\u5236",
	403: "\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u7684\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	405: "\u6211\u4eec\u5728\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	429: "\u8bf7\u6c42\u8fc7\u591a",
	1003: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u65b0\u767b\u5f55\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5237\u65b0\u9875\u9762\u5e76\u91cd\u8bd5",
	1007: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	1005: "<b>\u5bf9\u4e0d\u8d77<\/b> <br><br>\u8bf7\u6c42\u6216\u6211\u4eec\u7684\u670d\u52a1\u5668\u4f3c\u4e4e\u6709\u95ee\u9898\u3002<br> \u6211\u4eec\u5df2\u6536\u5230\u6709\u5173\u8be5\u9519\u8bef\u7684\u901a\u77e5\uff0c\u5e76\u5c06\u5c3d\u5feb\u66f4\u6b63",
	1009: "\u7528\u6237\u7535\u5b50\u90ae\u4ef6\u672a\u9a8c\u8bc1",
	1014: "\u7ef4\u62a4\u6b63\u5728\u8fdb\u884c\u4e2d\u3002\u8bf7\u901a\u8fc7 support@csod.com \u4e0e\u6211\u4eec\u8054\u7cfb",
	1017: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u65b0\u767b\u5f55\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	1018: "\u60a8\u5df2\u8fbe\u5230\u521b\u5efa\u6b65\u9aa4\u7684\u6700\u5927\u9650\u5236",
	2000: "\u6211\u4eec\u9047\u5230\u4e86\u8fd9\u4e2a\u8bf7\u6c42\u7684\u95ee\u9898\u3002\u6211\u4eec\u5df2\u6536\u5230\u901a\u77e5\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2001: "\u767b\u5f55\u51ed\u636e\u65e0\u6548\u3002\u591a\u6b21\u5c1d\u8bd5\u5931\u8d25\u540e\uff0c\u60a8\u7684\u5e10\u6237\u5c06\u88ab\u9501\u5b9a\uff0c\u60a8\u5c06\u6536\u5230\u4e00\u5c01\u89e3\u9501\u5e10\u6237\u7684\u7535\u5b50\u90ae\u4ef6\uff0c\u6216\u8005\u60a8\u53ef\u4ee5\u91cd\u7f6e\u5bc6\u7801",
	2002: "\u65e0\u6548\u6216\u8fc7\u671f\u7684\u4e00\u6b21\u6027\u5bc6\u7801",
	2003: "\u4e0a\u4f20\u7684\u6587\u4ef6\u4e0d\u662f\u6709\u6548\u7684\u56fe\u50cf\uff08\u652f\u6301 JPG \u548c PNG \u6587\u4ef6\uff09",
	2004: "\u4f1a\u8bdd\u5df2\u8fc7\u671f",
	2005: "\u6211\u4eec\u65e0\u6cd5\u8ddf\u8e2a\u6b64\u7528\u6237\u3002\u8bf7\u5237\u65b0\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2006: "\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u4e0d\u6b63\u786e\u3002\u8bf7\u91cd\u8bd5",
	2007: "\u7528\u6237\u89d2\u8272\u65e0\u6548\u3002\u8bf7\u91cd\u8bd5",
	2008: "\u60a8\u5fc5\u987b\u6307\u5b9a\u6b63\u786e\u7684\u4efb\u52a1\u7c7b\u578b",
	2009: "\u7ed9\u5b9a\u7684\u5e94\u7528\u7a0b\u5e8f\u65e0\u6548;\u5b83\u53ef\u80fd\u5df2\u88ab\u5220\u9664\u6216\u4ece\u672a\u5b58\u5728",
	2010: "\u8f93\u5165\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u5237\u65b0\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2011: "\u7ed9\u5b9a\u7684\u7ec4\u7ec7\u65e0\u6548;\u5b83\u53ef\u80fd\u5df2\u88ab\u5220\u9664\u6216\u4ece\u672a\u5b58\u5728",
	2012: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2013: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2014: "\u8d85\u7ea7\u7ba1\u7406\u5458\u6240\u9700\u7684\u53c2\u6570[organization_id]",
	2015: "\u63d0\u4f9b\u7684\u56fe\u50cf\u6570\u636e\u5185\u5bb9\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	2016: "\u65e0\u6548\u57df",
	2017: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2018: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2019: "\u60a8\u8981\u67e5\u627e\u7684\u5185\u5bb9\u4e0d\u5b58\u5728\u6216\u53ef\u80fd\u5df2\u88ab\u5220\u9664",
	2020: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2021: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2022: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u56e2\u961f\u7f51\u5740",
	2023: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u8bf7\u6c42\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2024: "\u6587\u4ef6\u5927\u5c0f\u5e94\u5c0f\u4e8e 5 MB",
	2025: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548\u3002\u8bf7\u8f93\u5165\u6709\u6548\u7684\u7f51\u5740",
	2026: "\u5bc6\u7801\u5fc5\u987b\u81f3\u5c11\u5305\u542b 8 \u4e2a\u5b57\u7b26\uff0c\u5305\u62ec\u81f3\u5c11\u4e00\u4e2a\u5927\u5199\u5b57\u6bcd\u3001\u4e00\u4e2a\u5c0f\u5199\u5b57\u6bcd\u548c\u4e00\u4e2a\u6570\u503c",
	2027: "\u5bc6\u7801\u65e0\u6548",
	2028: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2029: "\u4e0d\u652f\u6301\u60a8\u63d0\u4f9b\u7684\u57ce\u5e02",
	2030: "\u8bf7\u6c42\u4e2d\u7f3a\u5c11\u53c2\u6570\u6216\u53c2\u6570\u65e0\u6548",
	2031: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5c1d\u8bd5\u5904\u7406\u6b64\u53c2\u6570\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2032: "\u53c2\u6570\u65e0\u6548[file_id]",
	2033: "\u7f51\u5740\u65e0\u6548\u3002\u8bf7\u91cd\u65b0\u68c0\u67e5\u5e76\u91cd\u8bd5",
	2034: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5904\u7406\u8fd9\u4e9b\u53c2\u6570\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2035: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u5728\u5904\u7406\u6b64\u5e94\u7528\u7a0b\u5e8f\u5bc6\u94a5\u65f6\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5c06\u95ee\u9898\u62a5\u544a\u7ed9 support@csod.com",
	2036: "\u8eab\u4efd\u9a8c\u8bc1\u670d\u52a1\u5668\u9047\u5230\u610f\u5916\u9519\u8bef\u3002\u8bf7\u5237\u65b0\u6b64\u9875\u9762\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411 support@csod.com \u62a5\u544a\u95ee\u9898",
	2044: "\u6211\u4eec\u4f3c\u4e4e\u653e\u9519\u4e86\u8fd9\u4e00\u6b65\u7684\u7ffb\u8bd1\u3002\u8bf7\u5207\u6362\u5230\u9ed8\u8ba4\u8bed\u8a00\u5e76\u91cd\u65b0\u7ffb\u8bd1\u8be5\u6b65\u9aa4\uff0c\u6216\u8054\u7cfb\u6211\u4eec\u7684\u5ba2\u6237\u652f\u6301\u4ee5\u83b7\u53d6\u66f4\u591a\u8be6\u7ec6\u4fe1\u606f\u3002",
	2200: "\u6211\u4eec\u5728\u8bbf\u95ee\u97f3\u9891\/\u89c6\u9891\u63a7\u4ef6\u65f6\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u68c0\u67e5\u60a8\u7684\u6d4f\u89c8\u5668\u8bbe\u7f6e\uff0c\u7136\u540e\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5411\u6211\u4eec\u62a5\u544a support@csod.com",
	3061: "\u60a8\u6700\u591a\u53ea\u80fd\u56fa\u5b9a 5 \u4e2a\u6307\u5357",
	4000: "\u5982\u679c\u5df2\u521b\u5efa\u53c2\u8003\u7ebf\uff0c\u5219\u65e0\u6cd5\u5728\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u5b50\u7c7b\u522b",
	4001: "\u5982\u679c\u7528\u6237\u5df2\u7ecf\u662f\u8d85\u7ea7\u7528\u6237\uff0c\u5219\u65e0\u6cd5\u66f4\u6539\u7528\u6237\u89d2\u8272",
	4002: "\u5df2\u53d1\u5e03\u7684\u6307\u5357\u4e0d\u5141\u8bb8\u6b64\u64cd\u4f5c",
	4003: "\u65e0\u6cd5\u53d1\u5e03\u9501\u5b9a\u7684\u6307\u5357",
	4004: "\u4e0d\u5141\u8bb8\u5bf9\u5df2\u53d1\u5e03\u7684\u6587\u4ef6\u5939\u6267\u884c\u6b64\u64cd\u4f5c\u3002\u8bf7\u53d6\u6d88\u53d1\u5e03",
	4006: "\u5e94\u7528\u7a0b\u5e8f\u5fc5\u987b\u5c5e\u4e8e\u7ed9\u5b9a\u7ec4\u7ec7",
	4007: "\u60a8\u65e0\u6743\u6267\u884c\u6b64\u64cd\u4f5c",
	4008: "\u4e0d\u5141\u8bb8\u5bf9\u6b64\u5b50\u7c7b\u522b\u6267\u884c\u64cd\u4f5c",
	4009: "\u6307\u5357\u5fc5\u987b\u53d1\u5e03",
	4010: "\u65e0\u6cd5\u5728\u5177\u6709\u5b50\u7c7b\u522b\u7684\u6587\u4ef6\u5939\u4e2d\u521b\u5efa\u53c2\u8003\u7ebf",
	4011: "\u8981\u521b\u5efa\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4012: "\u8981\u7f16\u8f91\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4013: "\u8981\u5220\u9664\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	4014: "\u8981\u590d\u5236\u548c\u7c98\u8d34\u6b65\u9aa4\uff0c\u60a8\u9700\u8981\u89e3\u9501\u672c\u6307\u5357",
	3001: "\u6307\u5357\u5c06\u5f88\u5feb\u53ef\u4f9b\u5bfc\u51fa\u3002\u8981\u68c0\u67e5\u72b6\u6001\uff0c\u8bf7\u8f6c\u5230\u5e10\u6237\u83dc\u5355\u4e0b\u7684\u201c\u4efb\u52a1\u72b6\u6001\u201d",
	3002: "\u4e0a\u4f20\u5df2\u5f00\u59cb\u3002\u5728\u4e0a\u4f20\u5b8c\u6210\u4e4b\u524d\uff0c\u8bf7\u4e0d\u8981\u5237\u65b0\u6216\u5173\u95ed\u6d4f\u89c8\u5668\u3002\u60a8\u53ef\u4ee5\u5728\u5bfc\u5165\u5b8c\u6210\u540e\u68c0\u67e5\u5bfc\u5165\u72b6\u6001",
	3003: "\u7528\u6237\u5df2\u5b58\u5728",
	3004: "\u7535\u5b50\u90ae\u4ef6 ID \u5df2\u901a\u8fc7\u9a8c\u8bc1",
	3005: "\u6b64 URL \u4e0e\u5176\u4ed6\u5e94\u7528\u7a0b\u5e8f\u914d\u7f6e\u51b2\u7a81\uff0c\u8bf7\u5c1d\u8bd5\u6dfb\u52a0\u4efb\u4f55\u5176\u4ed6 URL",
	3006: "\u6587\u4ef6\u5939\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u5e94\u7528\u7a0b\u5e8f",
	3007: "\u57df\u5df2\u5b58\u5728",
	3008: "\u60a8\u5df2\u8fbe\u5230\u5df2\u521b\u5efa\u6307\u5357\u7684\u6700\u5927\u9650\u5236",
	3009: "\u8c03\u67e5\u5df2\u5b58\u5728\u4e8e\u7ed9\u5b9a\u7684\u6307\u5357\u4e2d",
	3010: "\u6b65\u9aa4\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u6307\u5357",
	3011: "\u672c\u7ec4\u7ec7\u6682\u505c\u8fd0\u4f5c\u3002\u8bf7\u8054\u7cfb\u60a8\u7684\u7ba1\u7406\u5458",
	3012: "\u6307\u5357\u5fc5\u987b\u5c5e\u4e8e\u540c\u4e00\u6587\u4ef6\u5939",
	3013: "\u672c\u6307\u5357\u5df2\u5b58\u5728\u7ed9\u5b9a\u7684\u5bf9\u8c61\u5bf9\u548c\u5b57\u6bb5\u540d\u79f0",
	3014: "\u7528\u6237\u5df2\u6682\u505c",
	3015: "\u7528\u6237\u5df2\u9a8c\u8bc1",
	3017: "\u4e00\u6b21\u6027\u5bc6\u7801\u5df2\u6210\u529f\u53d1\u9001\u5230\u60a8\u7684\u7535\u5b50\u90ae\u4ef6\u5730\u5740",
	3018: "\u89d2\u8272\u5df2\u5b58\u5728",
	3019: "\u56fd\u5bb6\/\u5730\u533a\u5df2\u5b58\u5728",
	3020: "\u57ce\u5e02\u5df2\u7ecf\u5b58\u5728",
	3023: "\u60a8\u7684\u7ec4\u7ec7\u672a\u901a\u8fc7\u9a8c\u8bc1\u3002\u5982\u9700\u5e2e\u52a9\uff0c\u8bf7\u8054\u7cfb support@csod.com",
	3024: "JSON \u6587\u4ef6\u4e0d\u9002\u7528\u4e8e\u6b64\u7ec4\u7ec7",
	3025: "\u6211\u4eec\u5728\u8eab\u4efd\u9a8c\u8bc1\u8fc7\u7a0b\u4e2d\u9047\u5230\u4e86\u95ee\u9898\u3002\u8bf7\u91cd\u8bd5\u3002\u5982\u679c\u95ee\u9898\u4ecd\u7136\u5b58\u5728\uff0c\u8bf7\u5237\u65b0\u9875\u9762\u5e76\u91cd\u8bd5",
	3026: "JSON \u6587\u4ef6\u4e0d\u9002\u7528\u4e8e\u672c\u6307\u5357",
	3027: "\u6ca1\u6709\u53ef\u7528\u7684\u6b65\u9aa4\u3002\u521b\u5efa\u81f3\u5c11\u4e00\u4e2a\u6b65\u9aa4\u6765\u53d1\u5e03\u6307\u5357",
	3028: "\u5df2\u8fbe\u5230\u6700\u5927\u5de1\u56de\u53d1\u5e03\u9650\u5236",
	3047: "\u7531\u4e8e\u767b\u5f55\u5931\u8d25\u8fc7\u591a\uff0c\u60a8\u7684\u5e10\u6237\u5df2\u88ab\u6682\u65f6\u9501\u5b9a\u3002\u6211\u4eec\u5df2\u5411\u60a8\u53d1\u9001\u4e00\u5c01\u7535\u5b50\u90ae\u4ef6\uff0c\u5176\u4e2d\u5305\u542b\u89e3\u9501\u6b65\u9aa4\u3002\u5982\u9700\u66f4\u591a\u5e2e\u52a9\uff0c\u8bf7\u901a\u8fc7\u4ee5\u4e0b\u65b9\u5f0f\u4e0e\u6211\u4eec\u8054\u7cfb support@csod.com",
	3033: "\u51ed\u636e\u65e0\u6548\u3002\u8bf7\u8054\u7cfb support@csod.com \u6216\u60a8\u7684\u7ba1\u7406\u5458\u4ee5\u83b7\u5f97\u8fdb\u4e00\u6b65\u7684\u5e2e\u52a9\u3002",
	4020: "\u672c\u6307\u5357\u7684\u8349\u6848\u5df2\u7ecf\u5b58\u5728\u3002\u4e0d\u5141\u8bb8\u591a\u6b21\u8d77\u8349\u6307\u5357\u3002",
	4021: "\u53c2\u6570 [envs] \u7684\u503c\u65e0\u6548",
	2054: "\u65b0\u65e7\u5bc6\u7801\u4e0d\u80fd\u76f8\u540c",
	playNextBotTour: "\u64AD\u653E\u4E0B\u4E00\u4E2A\u673A\u5668\u4EBA\u4E4B\u65C5",
	defaultBotEndingMessage: "\u6211\u4EEC\u5B8C\u6210\u4E86\uFF0C\u975E\u5E38\u611F\u8C22\uFF01\u5728\u6211\u5F00\u59CB\u4E4B\u524D\u8FD8\u6709\u4EC0\u4E48\u4E8B\u5417\uFF1F",
	loginNext: "\u4e0b\u4e00\u4e2a",
	3068: "\u60A8\u7684\u65E7\u5BC6\u7801\u5DF2\u8FC7\u671F\uFF0C\u8BF7\u8BBE\u7F6E\u65B0\u5BC6\u7801\u8FDB\u884C\u767B\u5F55\u3002",
	includeScreen: "\u5305\u62EC\u5C4F\u5E55\u622A\u56FE",
	feedbackPlaceholder: "\u6709\u53CD\u9988\u5417\uFF1F \u6211\u4EEC\u5F88\u60F3\u542C\u542C\uFF01",
	feedbackOptBtn: "\u5355\u51FB\u4EE5\u7A81\u51FA\u663E\u793A\u6216\u9690\u85CF\u4FE1\u606F",
	highlight: "\u5F3A\u8C03",
	send: "\u53D1\u9001",
	done: "\u5B8C\u6BD5",
	hide: "\u9690\u85CF"
};
GmCXt.getCreatorAppFeatures = function() {

	return {
		quickFilters: true,
		hasEmbedMenu: true,
		tourDownload: true,
		publish: true,
		copyTour: true,
		toolTips: true,
		branchStep: true,
		inlineStep: true,
		messageStep: true,
		imageStep: true,
		creatorApp: true,
		guideApp: true,
		onboardingGuide: true,
		showMe: true,
		audio: true,
		testme: GmCXt.conf.appConfig.testme,
		addSubCat: true,
		addTour: true,
		importTour: true,
		uploadTour: true,
		advancedFilter: true,
		tourUserInfo: true,
		manageAccount: true,
		analytics: true,
		userSettings: true,
		taskStatus: true,
		userDetails: true,
		defaultDomain: true
	};
};

GmCXt.getPlayerFeatures = function() {

	return {
		publishedGuides: true,
		publishedCat: true,
		isPlayer: true,
		showMe: true,
		audio: true,
		testme: GmCXt.conf.appConfig.testme
	};
};

GmCXt.isWB = function() {
	if (GmCXt.FT.isPlayer && GmCXt.conf.appConfig.customer === 'wb')
		return true;
	else
		return false;
};

GmCXt.isWestpac = function() {
	if (GmCXt.conf.appConfig.customer === 'westpac') return true;
	else return false;
};

GmCXt.isMyGuide = function() {
	if (GmCXt.conf.appConfig.customer === 'myguide') return true;
	else return false;
};

GmCXt.isPlayer = function() {
	if (GmCXt.conf.appName === GmCXt.conf.playerApp || GmCXt.showPlayer)
		return true;
	else
		return false;
};

GmCXt.isExtension = function() {
	if (GmCXt.conf.appType === GmCXt.conf.appTypeExt)
		return true;
	else
		return false;
};

GmCXt.isClientJs = function() {
	if (GmCXt.conf.appType === GmCXt.conf.appTypeScript)
		return true;
	else
		return false;
};

GmCXt.isMicroPlayer = function() {
	if (GmCXt.isPlayer() && !GmCXt.isWB() && GmCXt.isMiniPlayer) {
		return true;
	} else {
		return false;
	}
};

GmCXt.isWBMicroPlayer = function() {
	if (GmCXt.isPlayer() && GmCXt.isWB() && GmCXt.isMiniPlayer) {
		return true;
	} else {
		return false;
	}
};

GmCXt.isWBC = function() {
	if (GmCXt.isPlayer() && GmCXt.conf.appConfig.customer === 'wbc') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isEnt = function() {
	if (GmCXt.conf.appName === GmCXt.conf.creatorApp)
		return true;
	else
		return false;
};

GmCXt.onPrem = function() {
	if (GmCXt.conf.env === "OnPremise")
		return true;
	else
		return false;
};

GmCXt.isElectron = function() {
	if (GmCXt.conf.runEnv === GmCXt.conf.appTypeElectron)
		return true;
	else
		return false;
};

GmCXt.isHumana = function() {
	if (GmCXt.isPlayer() && GmCXt.conf.appConfig.customer === 'humana') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isMcKesson = function() {
	if (GmCXt.conf.appConfig.customer === 'mckesson') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isMcKessonClientJS = function() {
	if (GmCXt.isClientJs() && GmCXt.conf.appConfig.customer === 'mckesson') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSalesForcePopOutSide = function() {
	var url = GmCXt.getUrl();
	if (GmCXt.checkSalesForceSite() && url.indexOf('lightning/popout') !== -1)
		return true;
	else
		return false;
};

if (GmCXt.isEnt()) {
	GmCXt.FT = GmCXt.getCreatorAppFeatures();
} else {
	GmCXt.FT = GmCXt.getPlayerFeatures(); // Default is guide app
}

GmCXt.isAbbvie = function() {
	if (GmCXt.conf.appConfig.customer === 'abbvie') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isLXP = function() {
    if (GmCXt.conf.appConfig.customer === 'lxp')
        return true;
    else
        return false;
};

GmCXt.isAWS = function() {
	if (GmCXt.conf.env === "aws") {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSumtotal = function() {
	if (GmCXt.conf.appConfig.customer === 'sumtotal') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isGalaxy = function() {
	if (GmCXt.conf.appConfig.customer === 'galaxy') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isSbx = function() {
	if (GmCXt.conf.appConfig.customer === 'sbx') {
		return true;
	} else {
		return false;
	}
};

GmCXt.myGuideInternalCustomers = function() {
	if (GmCXt.conf.appConfig.customer === 'myguide' || GmCXt.conf.appConfig.customer === 'sumtotal' || GmCXt.conf.appConfig.customer === 'galaxy' || GmCXt.conf.appConfig.customer === 'sbx'|| GmCXt.conf.appConfig.customer === 'charter' || GmCXt.conf.appConfig.customer === 'mckesson') {
		return true;
	} else {
		return false;
	}
};

GmCXt.isDesktop = function() {
    if (GmCXt.playerI && GmCXt.playerI.source === GmCXt.sourceDesktop) {
        return true;
    } else {
        return false;
    }
};

GmCXt.ruleEngine = (function() {
	var pub = {};
	var jobs = {};
	var _queue = [];

	var queue = function(d) {

		if (d && d.rules && d.tour) {

			var tourId = d.tour.tour_id;
			var initiator = d.initiator ? d.initiator : 'init';
			var idStr = "rule_" + tourId + "_" + initiator;
			var jobId = idStr + "_" + GmCXt.getUUID();

			if (!GmCXt.isEmpty(d.rules)) {
				d.rules = updateVariableRule(d.rules);
			}
			// Check is only for guide level rules; does not apply for step level rules
			if (d.isTour && initiator !== 'currentPage' && initiator !== 'currPageSeg') {
				jobId = idStr;
				if (GmCXt.inArrayString(jobId, _queue)) unqueue(jobId);
			}

			GmCXt.log(5, "QUEUED " + initiator + " : " + GmCXt.tourLog(d.tour));
			_queue.push(jobId);

			d.jobId = jobId;
			jobs[jobId] = d;

			if (!d.rules.length) {
				sendResponse(true, jobId);
			} else {
				validate(jobId);
			}
		}
	};

	var unqueue = function(jobId) {
		if (_unqueue(jobId)) {
			delete jobs[jobId];
		}
	};

	function _unqueue(jid) {
		var i = _queue.indexOf(parseInt(jid));
		if (i >= 0) {
			_queue.splice(i, 1);
			return true;
		}
		return false;
	}

	var clearJobs = function(i) {
		GmCXt.log(5, "CLEARD RULES JOBS");
		if (i) {
			var inits = [i];
		} else {
			var inits = ['currentPage', 'beacon', 'smartTip', 'notif'];
		}

		for (var jobId in jobs) {
			if (GmCXt.inArrayString(jobs[jobId].initiator, inits)) {
				unqueue(jobId);
			}
		}
	};

	var updateVariableRule = function(rules) {
		var varData = GmCXt.getVariableData();

		for (var r = 0; r < rules.length; r++) {
			if (rules[r].type === "Variables") {
				for (var i = 0; i < varData.length; i++) {
					if (varData[i].name === rules[r].variableData) {
						rules[r].domRule = true;
						rules[r].element = varData[i].element;
						if (!GmCXt.isEmpty(varData[i].rules)) {
							for (var j = 0; j < varData[i].rules.length; j++) {
								var varRule = varData[i].rules[j];
								varRule.logical_condition = "&&";
								rules.push(varRule);
							}
						}
					}
				}

			}
		}
		return rules;
	};

	var validate = function(jobId) {

		var job = jobs[jobId];
		var rules = job.rules;
		var flag = false;

		job.domRuleRequests = [];

		if (rules) {
			var groups = getGroupedRules(rules);

			GmCXt.log(6, "VALIDATING, all groups" + GmCXt.tourLog(job.tour), groups);

			var tour = job.tour;
			var oldRegEx = false;

			if (tour) {
				var ts = tour.tour_settings;
				if (GmCXt.legacyWildChar(ts.version)) {
					oldRegEx = true;
				}
			}

			var domGroups = [];
			var apiGroups = [];

			// Rules are valid if there is a group having
			// all URL and Page title rules true
			for (var i = 0; i < groups.length; i++) {

				var group = groups[i];
				var rules = GmCXt.seggregateRules(group);

				var validGroup = false;

				if (rules.url.length) {
					validGroup = evaluateRuleGroup(group, oldRegEx);

					GmCXt.log(6, "URL rules status: " + validGroup);
				}

				if (validGroup || !rules.url.length) {

					if (!group.checkDom && !group.checkApi) {
						GmCXt.log(6, "GROUP MATCH", group);
						flag = true;
						break;
						// Since groups are validated with "OR" operator, any ONE group getting validated would satisfy the rules
					}

					group.index = i;
					if (group.checkDom) {
						domGroups.push(group);
					}
					if (group.checkApi) {
						apiGroups.push(group);
					}
				}
			}

			if (flag) {

				sendResponse(true, jobId);

			} else if (apiGroups.length) { // Validate rule groups having API rules and with URL rules true

				GmCXt.log(6, "Validating groups with API RULES" + GmCXt.tourLog(job.tour), domGroups);

				for (var j = 0; j < apiGroups.length; j++) {
					var group = apiGroups[j];
					var ruleIndex = group.findIndex(function(rule) {
						return rule.apiRule;
					});

					var rule = group[ruleIndex];

					if (rule.type !== 'Variables') {
						evaluateAPIRules(jobId, group, group.index, apiGroups.length, rule);
					} else {
						sendResponse(false, jobId);
					}
				}

			} else if (domGroups.length) { // Validate rule groups having DOM rules and with other rules true

				GmCXt.log(6, "Validating groups with DOM RULES" + GmCXt.tourLog(job.tour), domGroups);

				for (var k = 0; k < domGroups.length; k++) {
					var group = domGroups[k];
					evaluateElRules(jobId, group, group.index);
				}

			} else {
				sendResponse(false, jobId);
			}
		}
	};

	var getGroupedRules = function(rules) {

		var groups = [];
		var rulesKey = -1;

		rules.forEach(function(rule, key) {
			if (key === 0 || (rule.logical_condition === '||')) {
				groups[++rulesKey] = [];
				groups[rulesKey].push(rule);

			} else if (rule.logical_condition === '&&') {
				groups[rulesKey].push(rule);
			}
		});

		return groups;
	};

	var evaluateRules = function(rules, oldRegEx, urlParts) {

		if (rules) {
			// Flat to group structure
			var groups = getGroupedRules(rules);
			GmCXt.log(5, "RULE GROUPS", groups);

			for (var index = 0; index < groups.length; index++) {
				var group = groups[index];
				var valid = evaluateRuleGroup(group, oldRegEx, urlParts);

				if (valid) {
					GmCXt.log(5, "MATCHED group", group);
					return true;
				}
			}
		}
		return false;
	};

	var evaluateRuleGroup = function(group, oldRegEx, urlParts) {
		var validGroup;

		for (var i = 0; i < group.length; i++) {
			var rule = group[i];

			// Skip element & api rules
			if (rule.domRule || rule.apiRule) continue;

			var isValid = evaluateNonElRules(rule, oldRegEx, urlParts);

			group[i].isValid = isValid;

			if (validGroup === undefined) {
				validGroup = isValid;
			}

			validGroup = evaluateOperator(rule.logical_condition, isValid, validGroup);
		}

		return validGroup;
	};

	var validateRuleGroup = function(rules) {

		var valid = false;

		if (rules.length > 1) {
			for (var i = 0; i < rules.length; i++) {
				valid = evaluateOperator(rules[i].logical_condition, rules[i].isValid, valid);
				if (!valid) return valid;
			}
		} else if (rules.length === 1) {
			valid = rules[0].isValid;
		}

		return valid;
	};

	var evaluateOperator = function(operator, val1, val2) {
		if (operator === '') {
			return val1;
		} else {
			if (operator === '&&') {
				return val1 && val2;
			} else {
				return val1 || val2;
			}
		}
	};

	var evaluateNonElRules = function(rule, oldRegEx, urlParts) {

		urlParts = urlParts ? urlParts : GmCXt.urlParts;

		switch (rule.type) {

			case "URL Path":

				if (urlParts) var pathname = urlParts.pathname;

				if (GmCXt.browserApp === 'ie' && pathname) {
					var pathnameFirstCharactor = pathname.substring(0, 1);
					if (pathnameFirstCharactor.indexOf('/') !== 0) pathname = '/' + pathname;
				}

				return evaluateURLRule(rule.condition, rule.value, pathname, oldRegEx);

			case "URL":
				return evaluateURLRule(rule.condition, GmCXt.filterUrlScheme(rule.value), urlParts.href, oldRegEx);

			case "URL Hostname":
				return evaluateURLRule(rule.condition, rule.value, urlParts.host, oldRegEx);

			case "URL Parameters":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.getUrlParam(), oldRegEx);

			case "URL Hash":
				return evaluateURLRule(rule.condition, rule.value, urlParts.hash, oldRegEx);

			case "Page Title":
				return evaluateURLRule(rule.condition, rule.value, GmCXt.pageTitle, oldRegEx);

			case "Display Frequency":
				return validateFrequencyRule(rule.condition, rule.value);

			case "Creation Date":
				return checkUserCreationDate(rule.condition, rule.value);

			case "Date":
				return checkDate(rule.condition, rule.value);

			case "Time":
				return checkTime(rule.condition, rule.value);

			default:
				return true;
		}
	};

	var evaluateURLRule = function(condition, value, url, oldRegEx) {

		var retVal = false;

		var regexPattern = getRegex(GmCXt.filterUrlScheme(value), condition, oldRegEx);

		if (regexPattern) {
			retVal = validateURLRuleWithRegex(condition, regexPattern, url);
		} else {
			retVal = validateURLRule(condition, value, url);
		}

		return retVal;
	};

	var validateURLRuleWithRegex = function(condition, regexPattern, url) {

		if (regexPattern) {
			var regExValid = regexPattern.test(url);

			var retVal = false;

			switch (condition) {
				case GmCXt.EQUALS:
				case GmCXt.CONTAINS:
				case GmCXt.STARTS_WITH:
				case GmCXt.ENDS_WITH: {
					if (regExValid) {
						retVal = true;
					}
					break;
				}

				case GmCXt.NOT_EQUAL:
				case GmCXt.NOT_CONTAINS:
				case "Not Contains": {
					if (!regExValid) {
						retVal = true;
					}
					break;
				}
			}
			return retVal;
		} else {
			return false;

		}
	};

	var validateURLRule = function(condition, value, url) {

		var retval = false;

		try {
			var valueLo = decodeURIComponent(value).toLowerCase();
		} catch (e) {
			var valueLo = value.toLowerCase();
		}

		try {
			var urlLo = decodeURIComponent(url).toLowerCase();
		} catch (e) {
			var urlLo = url.toLowerCase();
		}

		switch (condition) {

			case GmCXt.EQUALS:
				if (valueLo === urlLo) {
					retval = true;
				}
				break;

			case GmCXt.NOT_EQUAL:
				if (valueLo !== urlLo) {
					retval = true;
				}
				break;

			case GmCXt.CONTAINS:
				if (urlLo.indexOf(valueLo) !== -1) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CONTAINS:
			case "Not Contains":
				if (urlLo.indexOf(valueLo) === -1) {
					retval = true;
				}
				break;

			case GmCXt.STARTS_WITH:
				if (urlLo.indexOf(valueLo) === 0) {
					retval = true;
				}
				break;

			case GmCXt.ENDS_WITH:
				valueLo = RegExp.escape(valueLo);
				retval = new RegExp(valueLo + "$").test(urlLo);
				break;
		}

		return retval;
	};

	var validateElRule = function(condition, value, element, elText, oldRegEx, varName) {
		var retval = false;

		var elExists = element && mg$(element).length;
		var elTagNameInput = elExists && mg$(element)[0].tagName === 'INPUT';
		var elTypeRadio = elTagNameInput && mg$(element).attr('type') === 'radio';
		var elTypeCheckbox = elTagNameInput && mg$(element).attr('type') === 'checkbox';

		try {
			var valueLo = decodeURIComponent(value).toLowerCase();
		} catch (e) {
			var valueLo = value.toLowerCase();
		}

		var elText = (elExists || varName) ? elText : '';
		elText = elText.substring(0, GmCXt.ruleTextLimit).trim().toLowerCase();

		var elAttrs = elExists ? GmCXt.createDeepCopy(GmCXt.getAttributeValues(element)) : {};
		if (elAttrs) {
			delete elAttrs.tagName;
		}

		switch (condition) {
			case GmCXt.EXISTS:
				if (elExists) {
					retval = true;
				}
				break;

			case GmCXt.NOT_EXISTS:
				if (!elExists) {
					retval = true;
				}
				break;

			case GmCXt.VISIBLE:
			case "Is Visible":
				if (elExists && GmCXt.getElVisibility(element) === 'visible') {
					retval = true;
				}
				break;

			case GmCXt.NOT_VISIBLE:
			case "Is Not Visible":
				if ((elExists && GmCXt.getElVisibility(element) === 'hidden') || !elExists) {
					retval = true;
				}
				break;

			case GmCXt.SELECTED:
				if (elTypeRadio && mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.NOT_SELECTED:
				if (elTypeRadio && !mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.CHECKED:
				if (elTypeCheckbox && mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CHECKED:
				if (elTypeCheckbox && !mg$(element).is(":checked")) {
					retval = true;
				}
				break;

			case GmCXt.TXT_EQUALS:
			case GmCXt.EQUALS:
				if (elText) {
					if (elText === valueLo) {
						retval = true;
					} else {
						retval = compareForOlderVersion(element, oldRegEx, true, valueLo);
					}
				}
				break;

			case GmCXt.NOT_TXT:
			case GmCXt.NOT_EQUAL:
				if (elText) {
					if (elText !== valueLo) {
						retval = true;
					} else {
						retval = compareForOlderVersion(element, oldRegEx, false, valueLo);
					}
				} else {
					retval = true;
				}
				break;

			case GmCXt.TXT_CONTAINS:
				if (elText && elText.includes(valueLo)) {
					retval = true;
				}
				break;

			case GmCXt.NOT_CONTAINS:
				if (elText.indexOf(valueLo) === -1) {
					retval = true;
				}
				break;

			case GmCXt.TXT_MATCHES:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum && valueLo.includes(':')) {
						elNum = parseFloat(elNum);
						var valArr = valueLo.split(':');
						var lower = parseFloat(valArr[0].match(/\d+/g));
						var upper = parseFloat(valArr[1].match(/\d+/g));
						if (lower <= elNum && upper >= elNum) {
							retval = true;
						}
					} else if (valueLo.includes('|')) {
						var valArr = valueLo.match(/(?=\S)[^|]+?(?=\s*(\||$))/g);
						if (valArr.includes(elText)) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.GREAT_THAN:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum) {
						elNum = parseFloat(elNum);
						valNum = parseFloat(valueLo.match(/\d+/g));
						if (elNum > valNum) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.LESS_THAN:
				if (elText) {
					var elNum = elText.match(/\d+/g);
					if (elNum) {
						elNum = parseFloat(elNum);
						valNum = parseFloat(valueLo.match(/\d+/g));
						if (elNum < valNum) {
							retval = true;
						}
					}
				}
				break;

			case GmCXt.CLASSES:
			case 'Must have Class(s)':
				if (elAttrs.class) {
					var valArr = value.split("|");
					for (var i = 0; i < valArr.length; i++) {
						var clsArr = valArr[i].split(",");
						var length = clsArr.length;
						var match = 0;
						for (var j = 0; j < length; j++) {
							var cls = clsArr[j].trim();
							if (elAttrs.class.includes(cls)) {
								match++;
							}
						}
						if (match === length) {
							retval = true;
							break;
						}
					}
				}
				break;

			case GmCXt.NOT_CLASSES:
				retval = true; // True if no classes present & true till any class matched
				if (!GmCXt.isEmpty(elAttrs.class)) {
					var clsArr = value.split(",");
					for (var i = 0; i < clsArr.length; i++) {
						var cls = clsArr[i].trim();
						if (elAttrs.class.includes(cls)) {
							retval = false;
							break;
						}
					}
				}
				break;

			case GmCXt.ATTRIBUTES:
			case 'Must have Attribute(s)':
				var attrs = Object.keys(elAttrs);
				if (attrs.length) {
					var valArr = value.split("|");
					for (var i = 0; i < valArr.length; i++) {
						var attributesArr = valArr[i].split(",");
						var length = attributesArr.length;
						var match = 0;
						for (var j = 0; j < length; j++) {
							var name = attributesArr[j].trim();
							if (attrs.includes(name)) {
								match++;
							}
						}
						if (match === length) {
							retval = true;
							break;
						}
					}
				}
				break;

			case GmCXt.NOT_ATTRIBUTES:
				retval = true; // True if no attributes present & true till any attribute matched
				var attrs = Object.keys(elAttrs);
				if (!GmCXt.isEmpty(attrs)) {
					var attributesArr = value.split(",");
					for (var i = 0; i < attributesArr.length; i++) {
						var name = attributesArr[i].trim();
						if (attrs.includes(name)) {
							retval = false;
							break;
						}
					}
				}
				break;

			case GmCXt.DISABLED:
				retval = element.disabled;
				break;

			case GmCXt.NOT_DISABLED:
				retval = !element.disabled;
				break;

		}

		return retval;
	};

	var validateFrequencyRule = function(condition, value) {
		var retVal = false;

		if (value) {
			var date = new Date();

			switch (condition) {
				case GmCXt.DAY_OF_WEEK:

					var day = date.getDay();

					var dayOfWeekMap = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];

					var valArr = value.replace(/\s/g, '').toLowerCase().split('|');
					for (var i = 0; i < valArr.length; i++) {
						var range = valArr[i].split('-');
						if (range.length === 1) {
							var val = range[0].slice(0, 3);
							if (dayOfWeekMap.indexOf(val) === day) {
								retVal = true;
								break;
							}
						} else if (range.length === 2) {
							var lower = range[0].slice(0, 3);
							var upper = range[1].slice(0, 3);
							if (dayOfWeekMap.indexOf(lower) <= day && day <= dayOfWeekMap.indexOf(upper)) {
								retVal = true;
								break;
							}
						}
					}
					break;

				case GmCXt.FIX_TIME:
					var time = parseInt(date.toTimeString().slice(0, 5).replace(':', ''));

					var valArr = value.replace(/\s/g, '').split('|');
					for (var i = 0; i < valArr.length; i++) {
						var range = valArr[i].split('-');
						var lower = range[0];
						if (lower.length === 5) { // 24-hour format time; eg: '11:30'
							lower = parseInt(lower.slice(0, 5).replace(':', ''));

							var upper = range[1];
							if (upper && upper.length === 5) {
								upper = parseInt(upper.slice(0, 5).replace(':', ''));
							} else {
								upper = 2359; // 23:59 - End of day
							}

							if ((lower <= time) && (time <= upper)) {
								retVal = true;
								break;
							}
						}
					}

					break;
				case GmCXt.DATE_RANGE:
					var valArr = value.split('-');
					var today = new Date(date.toDateString());
					var startDate = valArr[0].length ? new Date(valArr[0]) : null;
					if (startDate && startDate <= today) {
						var endDate = valArr[1].length ? new Date(valArr[1]) : null;
						if (endDate && startDate <= endDate && endDate >= today) {
							retVal = true;
						}
					}
					break;
			}
		}
		return retVal;
	};

	var evaluateAPIRules = function(jobId, group, groupIndex, noOfApiGroups, rule) {

		rule.isValid = false;

		var sendResponseIfJobValid = function(res, jobId) {
			var job = jobs[jobId];
			if (job && job.cb && job.tour) {
				if (res) {
					sendResponse(true, jobId);
				} else {
					if (!job.hasOwnProperty('failedApiRules')) {
						job.failedApiRules = 1;
					} else {
						job.failedApiRules++;
					}

					if (job.failedApiRules === noOfApiGroups) {
						// All API rules have been checked
						// each Group can have only One API rule
						sendResponse(false, jobId);
					}
				}
			}
		};

		var cb = function(res) {
			if (res) {
				rule.isValid = true;
				GmCXt.log(6, "API response: true");
				if (group.checkDom) {
					GmCXt.log(6, "Evaluating DOM rules in the group. . .", group);
					evaluateElRules(jobId, group, groupIndex);
				} else {
					GmCXt.log(6, "GROUP MATCH", group);
					sendResponseIfJobValid(true, jobId);
				}
			} else {
				GmCXt.log(6, "API response: false");
				GmCXt.log(6, "GROUP NOT MATCHED.", group);
				sendResponseIfJobValid(false, jobId);
			}
		};

		var url = rule.value;

		var promise = GmCXt.externalApiCall(url);
		promise.then(function(res) {
			cb(res);
		}).catch(function(e) {
			console.log("Error from Variable Validation API: " + e);
			cb(false);
		});
	};

	var evaluateElRules = function(jobId, group, groupIndex) {
		for (var i = 0; i < group.length; i++) {
			var rule = group[i];
			if (rule.domRule) {
				rule.isValid = false;
				sendSelectElementRequest(jobId, rule, i, groupIndex);
			}
		}
	};

	var sendSelectElementRequest = function(jobId, rule, rIndex, gIndex) {

		job = jobs[jobId];

		rule.ruleId = rIndex;
		rule.groupId = gIndex;

		var message = {
			data: {
				rule: rule,
				jobId: jobId,
				job: job,
				fromSidePanel: GmCXt.isSidePanelApp
			}
		};

		// From side panel, sends to the top/parent window
		// From top window, sends to the same window

		if (GmCXt.isSidePanelApp) {
			message.action = 'mgPlayerJSTest_action:init;task:select_dom_element_for_rules';
			GmCXt.sendToParentWindow(message);

		} else {
			GmCXt.sendMessageToAllWindows(
				'mgPlayerJSTest_action:started;task:select_dom_element_for_rules',
				message.data);
		}
	};

	var onSuccessDOMRuleMatch = function(data) {
		var jobId = data.jobId;
		var valid = data.valid;
		var job = jobs[jobId];
		var ruleId = data.ruleId;
		var groupId = data.groupId;

		if (job && job.cb && job.tour) {
			if(job.domRuleRequests[groupId]) {
				job.domRuleRequests[groupId]++;
			} else {
				job.domRuleRequests[groupId] = 1;
			}
			
			var groupedRules = getGroupedRules(job.rules);
			var count = GmCXt.numberOfDomRules(groupedRules[groupId]);
			var isValidGroup = false;

			if (groupedRules.length) {
				groupedRules[groupId][ruleId].isValid = valid;
				isValidGroup = validateRuleGroup(groupedRules[groupId]);
			}

			var printlog = "DOM rules checked.\nRule: " + valid + "; Group: " + isValidGroup;
			GmCXt.log(6, printlog, groupedRules[groupId]);

			if (isValidGroup || job.domRuleRequests[groupId] === count) {
				var isValid = isValidGroup || validateAllGroups(groupedRules);
				sendResponse(isValid, jobId);
			}
		}
	};

	function validateAllGroups(groupedRule) {

		var valid = false;
		for (var i = 0; i < groupedRule.length; i++) {
			valid = validateRuleGroup(groupedRule[i]);
			if (valid) {
				break;
			}
		}

		return valid;

	}

	var getStringPlusRegex = function(val, parentLen, oldRegEx) {
		var retStr = val;
		var splitArr = val.split(oldRegEx ? "+" : "{+}");

		if (splitArr.length === 1 && parentLen > 1) {
			retStr = RegExp.escape(retStr);
		} else {
			retStr = '';
			for (var i = 0; i < splitArr.length; i++) {

				retStr = retStr + RegExp.escape(splitArr[i]);

				if (i !== splitArr.length - 1)
					retStr = retStr + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]+)";
			}
		}

		return retStr;
	};

	var getStringStarRegex = function(splitArr, oldRegEx) {

		var retStr = '';
		for (var i = 0; i < splitArr.length; i++) {

			retStr = retStr + getStringPlusRegex(splitArr[i], splitArr.length, oldRegEx);

			if (i !== splitArr.length - 1)
				retStr = retStr + "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";
		}

		return retStr;
	};

	var getRegexString = function(val, oldRegEx) {

		var retStr = val;
		var splitArr = val.split(oldRegEx ? "*" : "{*}");

		if (splitArr.length === 1) {
			retStr = getStringPlusRegex(val, 1, oldRegEx);
		} else {
			retStr = getStringStarRegex(splitArr, oldRegEx);
		}
		return retStr;
	};

	var getRegex = function(val, condition, oldRegEx) {

		var indexOfStar = val.indexOf(oldRegEx ? "*" : "{*}");
		var indexOfPlus = val.indexOf(oldRegEx ? "+" : "{+}");
		var regexPattern = null;

		if ((indexOfStar !== -1) || (indexOfPlus !== -1)) {

			var regexStr = getRegexString(val, oldRegEx);
			var regPattern = "([a-zA-Z0-9:!+@#$&()?\\-_`.%+,=\\/]*)";

			switch (condition) {
				case GmCXt.CONTAINS:
					regexStr = regPattern + regexStr + regPattern;
					break;
				case GmCXt.STARTS_WITH:
					regexStr = regPattern + regexStr;
					break;
				case GmCXt.ENDS_WITH:
					regexStr = regexStr + regPattern;
					break;
			}

			regexPattern = new RegExp("^" + regexStr + '$');
		}

		return regexPattern;
	};

	RegExp.escape = function(s) {
		return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
	};

	function getValueForOldRules(el) {
		var valArr = [];

		var value = el.getAttribute('value');
		var placeholder = el.getAttribute('placeholder');
		if (value) {
			valArr.push(el.value);
		}
		if (placeholder) {
			valArr.push(placeholder);
		}
		if (el.textContent) {
			valArr.push(el.textContent);
		}
		if (el.tagName === 'SELECT') {
			valArr.push(el.options[el.selectedIndex].textContent);
		}

		return valArr.map(function(v) {
			return v.substring(0, GmCXt.ruleTextLimit).trim().toLowerCase();
		});
	}

	function compareForOlderVersion(el, oldRegEx, checkEquals, value) {
		if (oldRegEx) {
			var elValues = getValueForOldRules(el);
			if (checkEquals) {
				return elValues.indexOf(value) !== -1;
			} else {
				return elValues.indexOf(value) === -1;
			}
		}
		return false;
	}

	function sendResponse(valid, jobId) {

		var job = jobs[jobId];
		var cb = job.cb;

		var result = {
			valid: valid,
			tour: job.tour,
			branchIndex: job.branchIndex
		};

		if (job.segmentId) {
			result.segmentId = job.segmentId;
		}

		GmCXt.log(5, (valid ? "VALID" : "INVALID") + " " + job.initiator + " : " + GmCXt.tourLog(job.tour));

		pub.unqueue(jobId);
		cb(result);
	}

	GmCXt.isSidePanelFrame = (GmCXt._location() && GmCXt._location().href &&
		GmCXt._location().href.indexOf("side_panel") !== -1) ? true : false;

	// Following functions needed only in main content script not inside iframe
	if (window.self === window.top || GmCXt.isSidePanelFrame) {
		pub.queue = queue;
		pub.unqueue = unqueue;
		pub.clearJobs = clearJobs;
		pub.onSuccessDOMRuleMatch = onSuccessDOMRuleMatch;
	}

	pub.evaluateRules = evaluateRules;
	pub.evaluateURLRule = evaluateURLRule;
	pub.validateElRule = validateElRule;
	pub.getGroupedRules = getGroupedRules;

	pub.hasRuleType = function(rules, type) {

		if (rules) {

			var ruleGroups = getGroupedRules(rules);

			for (var i in ruleGroups) {
				var group = ruleGroups[i];
				for (var j in group) {
					var rule = group[j];
					if (type.includes(rule.type) || type.includes(rule.condition)) {
						return true;
					}
				}
			}
		}
		return false;
	};

	return pub;

})();

String.prototype.replaceAll = function(search, replacement) {
	var target = this;
	return target.split(search).join(replacement);
};

var checkUserCreationDate = function(condition, val) {
	var creationDateSeconds = val / 1000;
	var getCreationDate = GmCXt.getCombinedDateFromTimestamp(parseInt(creationDateSeconds));
	var getUserCreationDate = GmCXt.getCombinedDateFromTimestamp(parseInt(GmCXt.user.creation_date));
	var comparisonResult = GmCXt.compareDates(getUserCreationDate, getCreationDate);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};

var checkDate = function(condition, val) {
	var dateSeconds = val / 1000;
	var getDate = GmCXt.getCombinedDateFromTimestamp(parseInt(dateSeconds));
	var getCurrentDate = GmCXt.getCombinedDateFromTimestamp(parseInt(Date.now() / 1000));
	var comparisonResult = GmCXt.compareDates(getCurrentDate, getDate);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};

var checkTime = function(condition, val) {
	var currentTime = new Date();
	var currentHours = currentTime.getHours().toString().padStart(2, '0');
	var currentMinutes = currentTime.getMinutes().toString().padStart(2, '0');
	var formattedCurrentTime = currentHours + ":" + currentMinutes;
	var comparisonResult = GmCXt.compareTimes(formattedCurrentTime, val);

	switch (condition.toLowerCase()) {

		case GmCXt.EQUALS.toLowerCase():
			return comparisonResult === 0;

		case GmCXt.GREAT_THAN.toLowerCase():
			return comparisonResult > 0;

		case GmCXt.LESS_THAN.toLowerCase():
			return comparisonResult < 0;

		default:
			return false;
	}
};
GmCXt.model = {};

GmCXt.model.api = {
	code: {
		_type: "number",
		_required: true
	},
	data: {
		_type: "object",
		_required: true,
		_obj: {}
	},
	error: {
		_type: "bool",
		_required: true
	},
	message: {
		_type: "array",
		_required: true
	},
	version: {
		_type: "string"
	}
};

GmCXt.model.rule = {
	type: {
		_type: "string"
	},
	name: {
		_type: "string"
	},
	condition: {
		_type: "string"
	},
	value: {
		_type: "string"
	},
	logical_condition: {
		_type: "string"
	},
	showValueField: {
		_type: "bool"
	},
	isValid: {
		_type: "bool"
	}
};

GmCXt.model.langOption = {
	language: {
		_type: "string",
		_default: "en-US"
	},
	name: {
		_type: "string",
		_default: "English (United States)"
	},
	voice: {
		_type: "string",
		_default: "AriaNeural"
	}
};

GmCXt.model.segment = {
	id: {
		_type: "string"
	},
	key_name: {
		_type: "string"
	},
	data: {
		_type: "array",
		_obj: {
			_arrOf: 'string'
		},
	}
};

GmCXt.model.segmentGroup = {
	group_id: {
		_type: "string"
	},
	rules: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
	},
	segments: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.segment)
	},
	title: {
		_type: "string"
	},
	rule_check: {
		_type: "bool",
		_default: false
	}
};

GmCXt.model.segmentGroups = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.segmentGroup)
};

GmCXt.validate = function(data, prop, validation) {

	var input = data[prop];
	var val = 'a(1f2'; // added val as random string

	switch (validation._type) {
		case "array":
			var input = GmCXt.validateModelArray(input, validation._obj);
			if (input) val = input;
			break;

		case "object":
			var input = GmCXt.validateObject(input, validation);
			if (input) val = input;
			break;

		case "bool":
			if (typeof input === 'boolean') val = input;
			else {
				var i = parseInt(input);
				if (i === 1 || input === 'true') val = true;
				else val = false;
			}
			break;

		case "number":
			if (!input) val = 0;
			else if (!isNaN(input)) val = input;
			else if (isNaN(input)) val = 1; //For any value, convert it to number, default 1
			break;

		case "string":
			if (typeof input === 'string' && GmCXt.isEmpty(input) && GmCXt.isDefined(validation._default)) val = validation._default;
			else if (typeof input === 'string') val = input;
			else if (!input) val = "";
			else if (validation._default) val = validation._default;
			else if (!isNaN(input)) val = String(input);
			break;

		case "number_or_null":
			if (!isNaN(input)) val = input;
			else val = null;
			break;
	}

	return val;
};

GmCXt.getDefault = function(type, _default) {

	var def = {
		"array": [],
		//"object": {}, 
		//Do not initialise object. Because simply checking if(obj) is true. 
		//It has to be if(GmCXt.isEmpty(obj)). In code, at all places this change 
		//must be done, before initiating to default object.
		"bool": false,
		"number": 0,
		"string": ""
	};

	if (type) return (typeof _default !== "undefined") ? _default : def[type];
	else return null;
};

GmCXt.validateObject = function(data, validation) {
	data = GmCXt.parseJSON__(data);

	if (typeof data !== 'object') return false;

	if (validation._obj)
		return GmCXt.validateDataModel(data, validation._obj);
	else
		return true;
};

GmCXt.validateModelArray = function(data, model) {
	data = GmCXt.parseJSON__(data);

	if (!Array.isArray(data)) return false;

	for (var i = 0, j = data.length; i < j; i++) {
		var valid = true;
		if (model) {

			if (model._arrOf === 'string') {
				valid = data[i];
			} else {
				if (typeof data[i] === 'string') {
					data[i] = GmCXt.parseJSON__(data[i]);
				}
				valid = GmCXt.validateDataModel(data[i], model);
			}
		}

		if (!valid) return false;
		else data[i] = valid;
	}

	return data;
};

GmCXt.cloneObject = function(model) {
	var obj = {};

	if (!GmCXt.isEmpty(model)) {
		for (var prop in model) {
			if (model.hasOwnProperty(prop)) {
				obj[prop] = GmCXt.getDefault(model[prop]._type, model[prop]._default);
			}
		}
	}

	return obj;
};

GmCXt.validateLanguageData = function(data, model) {
	data = GmCXt.parseJSON__(data);
	for (var prop in data) {
		data[prop] = GmCXt.validateDataModel(data[prop], model._obj);
	}
	return data;
};

GmCXt.validateDataModel = function(data, model) {

	var isValid = true;

	if (!GmCXt.isEmpty(data)) {
		for (var prop in model) {

			if (model.hasOwnProperty(prop)) {

				if ((model[prop]._type === 'object' || model[prop]._type === 'array') && typeof data[prop] === 'string') {
					data[prop] = GmCXt.parseJSON__(data[prop]);
					if (data[prop] === null) {
						if (model[prop]._type === 'array') {
							data[prop] = [];
						} else {
							data[prop] = {};
						}
					}
				}

				if (prop === 'widget_icon_zindex' && !GmCXt.isEmpty(data[prop]) && typeof data[prop] !== 'string') {
					data[prop] = data[prop].toString();
				}

				if (prop === 'stepTitleFontWeight' && GmCXt.isEmpty(data[prop]) && !GmCXt.isEmpty(model[prop])) {
					if (model[prop]._type !== 'object') {
						data[prop] = GmCXt.getDefault(model[prop]._type, model[prop]._default);
					}
				}

				if (prop === 'language_data') {
					data[prop] = GmCXt.validateLanguageData(data[prop], model[prop]);
				} else if (typeof data[prop] === 'undefined' ||
					(typeof data[prop] !== 'boolean' && !data[prop] && model[prop]._inherit === true) ||
					(typeof data[prop] !== 'object' && model[prop]._type == 'object' && !GmCXt.isEmpty(data[prop])) ||
					(data[prop] && typeof data[prop] === 'object' && !Object.keys(data[prop]).length && model[prop]._clone)) {

					if (model[prop]._inherit === true) {
						if (model === GmCXt.model.application.settings._obj) {
							data[prop] = GmCXt.organization.settings[prop];

						} else if (model === GmCXt.model.application.settings._obj.popupDesign._obj) {
							data[prop] = GmCXt.organization.settings.popupDesign[prop];

						} else if (model === GmCXt.model.application.settings._obj.widget_icon_pos._obj) {
							data[prop] = GmCXt.organization.settings.widget_icon_pos[prop];

						} else if (model === GmCXt.model.application.settings._obj.selectorStyle._obj) {
							data[prop] = GmCXt.organization.settings.selectorStyle[prop];

						} else if (model === GmCXt.model.application.settings._obj.widgetIconSize._obj) {
							data[prop] = GmCXt.organization.settings.widgetIconSize[prop];

						} else if (model === GmCXt.model.application.settings._obj.notifications._obj) {
							data[prop] = GmCXt.organization.settings.notifications[prop];

						} else if (model === GmCXt.model.application.settings._obj.userLabels._obj) {
							data[prop] = GmCXt.organization.settings.userLabels[prop];
						}
						
					} else if (model[prop]._type !== 'object') {
						data[prop] = GmCXt.getDefault(model[prop]._type, model[prop]._default);
					
					} else if (model[prop]._type == 'object' && model[prop]._clone) {
						data[prop] = GmCXt.cloneObject(model[prop]._obj);
						GmCXt.validateDataModel(data[prop], model[prop]._obj);
					}

				} else if ((data[prop] === null || data[prop] === 'na' || data[prop] === '') && model[prop]._type === 'object') {
					data[prop] = {};

				} else if ((data[prop] === null || data[prop] === 'na' || data[prop] === '' || data[prop] === 0) && model[prop]._type === 'array') {
					data[prop] = [];
				} else {

					var valid = GmCXt.validate(data, prop, model[prop]);

					if (valid === 'a(1f2') {

						if (model[prop]._type == 'object' && model[prop]._clone) {
							data[prop] = GmCXt.cloneObject(model[prop]._obj);
							GmCXt.validateDataModel(data[prop], model[prop]._obj);
						} else {
							GmCXt.log(15, "Validation failed for prop: " + prop + "; invalid value: ", data[prop]);
							isValid = false;
						}

					} else {
						data[prop] = valid;
					}
				}

			}
		}
	}

	if (isValid) return data;
	else return false;

};

GmCXt.validateApiResp = function(cb, apiName, data, model, pin_tours) {

	if (Array.isArray(data))
		var valid = GmCXt.validateModelArray(data, model._obj);
	else
		var valid = GmCXt.validateDataModel(data, model);

	if (valid) {
		if (cb && pin_tours) cb(valid, pin_tours);
		else if (cb) cb(valid);
	} else {
		GmCXt.handleError(apiName);
	}
};
GmCXt.model.popupDesign_default = {
	bgColor: {
		_type: "string",
		_default: '#ffffff',
		_inherit: true
	},
	stepCountColor: {
		_type: "string",
		_default: "#505050",
		_inherit: true
	},
	borderColor: {
		_type: "string",
		_default: "#dfe0e7",
		_inherit: true
	},
	borderWidth: {
		_type: "number",
		_default: 1,
		_inherit: true
	},
	borderRadius: {
		_type: "number",
		_default: 3,
		_inherit: true
	},
	nextBtnBackground: {
		_type: "string",
		_default: "#005BF0",
		_inherit: true
	},
	nextBtnColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnColor: {
		_type: "string",
		_default: "#8e8fa6",
		_inherit: true
	},
	stepTitleColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	stepDescColor: {
		_type: "string",
		_default: "#8e8fa6",
		_inherit: true
	},
	audioIconColor: {
		_type: "string",
		_default: "#acadc1",
		_inherit: true
	},
	closeIconColor: {
		_type: "string",
		_default: "#acadc1",
		_inherit: true
	},
	stepDesFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepDesFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepTitleFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontWeight: {
		_type: "string",
		_default: "600",
		_inherit: true
	},
	padding: {
	    _type: "object",
	    _clone: true,
	    _obj: {
	        bottom: {
	            _type: "number",
	            _default: 0
	        },
	        left: {
	            _type: "number",
	            _default: 0
	        },
	        right: {
	            _type: "number",
	            _default: 0
	        },
	        top: {
	            _type: "number",
	            _default: 0
	        }
	    }
	}
};

GmCXt.model.userLabels = {
	guideMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	showMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	testMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	doItForMe: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	miniPlayerHelp: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	next: {
		_type: "string",
		_default: "",
		_inherit: true
	},
	btnPrev: {
		_type: "string",
		_default: "",
		_inherit: true
	}
};

GmCXt.model.defaultColorArray = {
	0: {
		_type: 'string',
		_default: '#FBEEB8'
	},
	1: {
		_type: 'string',
		_default: '#F8CAC6'
	},
	2: {
		_type: 'string',
		_default: '#ECCAFA'
	},
	3: {
		_type: 'string',
		_default: '#C2E0F4'
	},
	4: {
		_type: 'string',
		_default: '#2DC26B'
	},
	5: {
		_type: 'string',
		_default: '#F1C40F'
	},
	6: {
		_type: 'string',
		_default: '#E03E2D'
	},
	7: {
		_type: 'string',
		_default: '#B96AD9'
	},
	8: {
		_type: 'string',
		_default: '#3598DB'
	},
	9: {
		_type: 'string',
		_default: '#169179'
	}
};

GmCXt.model.popupDesign_classic = {
	bgColor: {
		_type: "string",
		_default: "#454560",
		_inherit: true
	},
	stepCountColor: {
		_type: "string",
		_default: "#505050",
		_inherit: true
	},
	borderColor: {
		_type: "string",
		_default: "#454560",
		_inherit: true
	},
	borderWidth: {
		_type: "number",
		_default: 1,
		_inherit: true
	},
	borderRadius: {
		_type: "number",
		_default: 0,
		_inherit: true
	},
	nextBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	nextBtnColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	prevBtnBackground: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	prevBtnColor: {
		_type: "string",
		_default: "#26273b",
		_inherit: true
	},
	stepTitleColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	stepDescColor: {
		_type: "string",
		_default: "#ffffff",
		_inherit: true
	},
	audioIconColor: {
		_type: "string",
		_default: "#cfd0dd",
		_inherit: true
	},
	closeIconColor: {
		_type: "string",
		_default: "#cfd0dd",
		_inherit: true
	},
	stepDesFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepDesFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontSize: {
		_type: "string",
		_default: "medium",
		_inherit: true
	},
	stepTitleFontFamily: {
		_type: "string",
		_default: "arial, sans-serif",
		_inherit: true
	},
	stepTitleFontWeight: {
		_type: "string",
		_default: "600",
		_inherit: true
	},
	padding: {
	    _type: "object",
	    _clone: true,
	    _obj: {
	        bottom: {
	            _type: "number",
	            _default: 0
	        },
	        left: {
	            _type: "number",
	            _default: 0
	        },
	        right: {
	            _type: "number",
	            _default: 0
	        },
	        top: {
	            _type: "number",
	            _default: 0
	        }
	    }
	}
};

GmCXt.model.tutorial_guide_default = {
	nextBtn: {
		_type: "object",
		_clone: true,
		_obj: {
			bgColor: {
				_type: "string",
				_default: "#005BF0"
			},
			border_color: {
				_type: "string",
				_default: "#005BF0"
			},
			border_radius: {
				_type: "number",
				_default: 4
			},
			border_width: {
				_type: "number",
				_default: 1
			},
			color: {
				_type: "string",
				_default: "#ffffff"
			},
			font_size: {
				_type: "string",
				_default: "medium"
			},
			padding: {
				_type: "object",
				_clone: true,
				_obj: {
					bottom: {
						_type: "number",
						_default: 5
					},
					left: {
						_type: "number",
						_default: 5
					},
					right: {
						_type: "number",
						_default: 5
					},
					top: {
						_type: "number",
						_default: 5
					}
				}
			}
		}
	},
	outerBox: {
		_type: "object",
		_clone: true,
		_obj: {
			border_color: {
				_type: "string",
				_default: "#454560"
			},
			border_radius: {
				_type: "number",
				_default: 0
			},
			border_width: {
				_type: "number",
				_default: 1
			},
			shadow: {
				_type: "object",
				_clone: true,
				_obj: {
					blur: {
						_type: "number",
						_default: 5				
					},
					color: {
						_type: "string",
						_default: "#00000080"				
					},
					horizontal: {
						_type: "number",
						_default: 2				
					},
					inset: {
						_type: "bool",
						_default: false				
					},
					spreadRadius: {
						_type: "number",
						_default: 0				
					},
					vertical: {
						_type: "number",
						_default: 2				
					}
				}
			}
		}
	},
	prevBtn: {
		_type: "object",
		_clone: true,
		_obj: {
			bgColor: {
				_type: "string",
				_default: "#005BF0"			
			},
			border_color: {
				_type: "string",
				_default: "#005BF0"			
			},
			border_radius: {
				_type: "number",
				_default: 4			
			},
			border_width: {
				_type: "number",
				_default: 1		
			},
			color: {
				_type: "string",
				_default: "#ffffff"			
			},
			font_size: {
				_type: "string",
				_default: "medium"				
			},
			padding: {
				_type: "object",
				_clone: true,
				_obj: {
					bottom: {
						_type: "number",
						_default: 5
					},
					left: {
						_type: "number",
						_default: 5
					},
					right: {
						_type: "number",
						_default: 5
					},
					top: {
						_type: "number",
						_default: 5				
					}
				}
			}
		}
	},
	titleBgColor: {
		_type: "string",
		_default: "#26273b"	
	}
};

GmCXt.model.notificationTheme_default = {
	width: {
		_type: "string",
		_default: "600"
	},
	height: {
		_type: "string",
		_default: "300"	
	},
	header: {
		_type: "object",
		_clone: true,
		_obj: {
			background: {
				_type: "string",
				_default: "#FF240A"			
			},
			color: {
				_type: "string",
				_default: "#FFFFFF"			
			},
			font: {
				_type: "string",
				_default: "Lato"			
			}
		}
	},
	body: {
		_type: "object",
		_clone: true,
		_obj: {
			action_button_background: {
				_type: "string",
				_default: "#005BF0"
			},
			action_button_border_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			action_button_font: {
				_type: "string",
				_default: "Lato"
			},
			action_button_text_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			action_button_url: {
				_type: "string",
				_default: ""
			},
			background_color: {
				_type: "string",
				_default: "#FFFFFF"
			},
			desc_color: {
				_type: "string",
				_default: "#555555"
			},
			desc_font_family: {
				_type: "string",
				_default: "Lato"
			},
			desc_font_size: {
				_type: "string",
				_default: "medium"
			},
			fill: {
				_type: "string",
				_default: "#707070"
			},
			padding_bottom: {
				_type: "string",
				_default: "20"
			},
			padding_left: {
				_type: "string",
				_default: "20"
			},
			padding_right: {
				_type: "string",
				_default: "20"
			},
			padding_top: {
				_type: "string",
				_default: "20"
			},
			title_color: {
				_type: "string",
				_default: "#000000"
			},
			title_font_family: {
				_type: "string",
				_default: "Lato"
			},
			title_font_size: {
				_type: "string",
				_default: "medium"
			}
		}
	},
	footer: {
		_type: "object",
		_clone: true,
		_obj: {
			primaryBtnTextColor: {
				_type: "string",
				_default: "#FFFFFF"
			},
			primaryBtnTextSize: {
				_type: "string",
				_default: "medium"
			},
			primaryBtnFont: {
				_type: "string",
				_default: "#Lato"
			},
			primaryBtnBackground : {
				_type: "string",
				_default: "#005BF0"
			},
			primaryBtnBorderColor: {
				_type: "string",
				_default: "#005BF0"
			},
			secondaryBtnTextColor: {
				_type: "string",
				_default: "#555555"
			},
			secondaryBtnTextSize: {
				_type: "string",
				_default: "#medium"
			},
			secondaryBtnFont: {
				_type: "string",
				_default: "#Lato"
			},
			secondaryBtnBackground : {
				_type: "string",
				_default: "#E6E6E6"
			},
			secondaryBtnBorderColor: {
				_type: "string",
				_default: "#555555"
			}
		}
	}
};

GmCXt.model.playerThemeDefault = {
	font: {
		_type: "string",
		_default: "Arial, sans-serif"
	},
	header: {
		_type: "object",
		_clone: true,
		_obj: {
			text_color: {
				_type: "string",
				_default: "#555555"			
			},
			icon_color: {
				_type: "string",
				_default: "#555555"			
			},
			color: {
				_type: "string",
				_default: "#FFFFFF"			
			}
		}
	},
	body: {
		_type: "object",
		_clone: true,
		_obj: {
			background: {
				_type: "string",
				_default: "#FFFFFF"
			},
			icon_color: {
				_type: "string",
				_default: "#005BF0"
			},
			text_color: {
				_type: "string",
				_default: "#000000"
			},
			title_font_size: {
				_type: "string",
				_default: "small"
			},
			desc_font_size: {
				_type: "string",
				_default: "small"
			}
		}
	}
};

GmCXt.model.organization = {
	about: {
		_type: "string",
		_default: "About"
	},
	admin_settings: {
		_type: "object",
		_clone: true,
		_obj: {
			language_settings: {
				_type: "object",
				_clone: true,
				_obj: {
					default: {
						_type: "object",
						_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
					},
					translations: {
						_type: "array",
						_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
					}
				}
			},
			insights: {
				_type: "object",
				_required: true,
				_clone: true,
				_obj: {
					enabled: {
						_type: "bool",
						_default: false
					},
					guide: {
						_type: "bool",
						_default: false
					}
				}
			},
			doitforme: {
				_type: "bool",
				_default: false
			},
			chatbot: {
				_type: "bool",
				_default: false
			},
			lms: {
				_type: "bool",
				_default: false
			},
			display_accept_cookie_popup: {
				_type: "bool",
				_default: true
			},
			api_player: {
				_type: "bool",
				_default: true
			},
			app_switcher: {
				_type: "bool",
				_default: false
			},
			cdn_player: {
				_type: "bool",
				_default: false
			},
			current_page: {
				_type: "bool"
			},
			current_page_beacon: {
				_type: "bool",
				_default: false
			},
			myteacher: {
				_type: "bool",
				_default: false
			},
			guide_segmentation: {
				_type: "bool",
				_default: false
			},
			guide_translation: {
				_type: "bool",
				_default: false
			},
			isPITrackingEnabled: {
				_type: "bool",
				_default: false
			},
			mediafile_creation: {
				_type: "bool",
				_default: true
			},
			create_tooltip_media_file: {
				_type: "bool",
				_default: false
			},
			maintenance_mode: {
				_type: "bool",
				_default: false
			},
			myBotEnabled: {
				_type: "bool",
				_default: false
			},
			task_list: {
				_type: "bool",
				_default: false
			},
			efficient_rule_mode: {
				_type: "bool",
				_default: false
			},
			enable_guideme_as_secondary_option: {
				_type: "bool",
				_default: false
			},
			show_tooltips_during_workflow_guide: {
				_type: "bool",
				_default: false
			},
		}
	},
	bucket: {
		_type: "string"
	},
	creation_date: {
		_type: "number"
	},
	domains: {
		_type: "string"
	},
	image_id: {
		_type: "number"
	},
	image_path: {
		_type: "string"
	},
	image_url: {
		_type: "string"
	},
	is_active: {
		_type: "bool"
	},
	is_suspend: {
		_type: "bool"
	},
	is_sync_complete: {
		_type: "bool"
	},
	is_verified: {
		_type: "bool"
	},
	modification_date: {
		_type: "number"
	},
	name: {
		_type: "string"
	},
	organization_id: {
		_type: "number"
	},
	orgkey: {
		_type: "string"
	},
	role: {
		_type: "string"
	},
	settings: {
		_type: "object",
		_clone: true,
		_obj: {
			popupDesign: {
				_type: "object",
				_clone: true,
				_obj: {
					type: {
						_type: "string",
						_default: 'default'
					},
					default: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_default)
					},
					classic: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_classic)
					},
					current: {
						_type: "object",
						_clone: true,
						_obj: GmCXt.createDeepCopy(GmCXt.model.popupDesign_default)
					}
				}
			},
			tutorialBgColor: {
				_type: "string",
				_default: "#45465F"
			},
			feedback_type: {
				_type: "string",
				_default: "email"
			},
			feedback_email: {
				_type: "string",
				_default: "support@csod.com"
			},
			feedback_url: {
				_type: "string",
				_default: ""
			},
			showWidgetIcon: {
				_type: "bool",
				_clone: true,
				_default: true
			},
			rules: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
			},
			widgetIconPos: {
				_type: "string",
				_default: 'bottom-right'
			},
			showWidgetIconRight: {
				_type: "bool",
				_default: true
			},
			showWidgetIconBottom: {
				_type: "bool",
				_default: true
			},
			widget_icon_pos: {
				_type: "object",
				_clone: true,
				_obj: {
					widget_icon_top_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_bottom_pos: {
						_type: "number",
						_default: 150
					},
					widget_icon_left_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_right_pos: {
						_type: "number",
						_default: 5
					},
					widget_icon_id: {
						_type: "number"
					},
					widget_icon_top_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_bottom_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_left_pos_unit: {
						_type: "string",
						_default: "px"
					},
					widget_icon_right_pos_unit: {
						_type: "string",
						_default: "px"
					}
				}
			},
			widget_icon_path: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + "myguide.png"
			},
			hide_widget_if_noguide: {
				_type: "bool",
				_default: false
			},
			widget_icon_zindex: {
				_type: "string",
				_default: "Default"
			},
			notificationDelay: {
				_type: "number",
				_default: 0
			},
			guide_count_on_widget: {
				_type: "bool",
				_default: true
			},
			keep_player_panel_open: {
				_type: "bool",
				_default: false
			},
			defaultGuideView: {
				_type: "bool",
				_default: false
			},
			enable_send_feedback: {
				_type: "bool",
				_default: true
			},
			guide_count_widget_color: {
				_type: "string",
				_default: '#FF0000'
			},
			notificationsTime: {
				_type: "string",
				_default: "24 hours"
			},
			playAudio: {
				_type: "bool",
				_default: true
			},
			hideBrandLogo: {
				_type: "bool",
				_default: false
			},
			hideBrandLogo: {
				_type: "bool",
				_default: false
			},
			first_slide_text: {
				_type: "string",
				_default: 'Welcome'
			},
			last_slide_text: {
				_type: "string",
				_default: 'Thank you'
			},
			userLabels: {
				_type: "object",
				_obj: GmCXt.createDeepCopy(mg$.extend(GmCXt.model.userLabels, {
					userNotFollowingGuideMessage: {
						_type: "string",
						_default: ""
					},
					maintenanceMessage: {
						_type: "string",
						_default: ""
					},
					serviceErrorMessage: {
						_type: "string",
						_default: ""
					},
					resumeGuideMessage: {
						_type: "string",
						_default: ""
					}
				})),
				_clone: true
			},
			selectorStyle: {
				_type: "object",
				_clone: true,
				_obj: {
					borderColor: {
						_type: "string",
						_default: '#00a6d9'
					},
					borderWidth: {
						_type: "number",
						_default: 2
					}
				}
			},
			tooltipColor: {
				_type: "string",
				_default: "#005BF0"
			},
			stepPopupWidth: {
				_type: "number",
				_default: 300
			},
			logo_id: {
				_type: "number"
			},
			logo: {
				_type: "string"
			},
			guideMeSetting: {
				_type: "bool",
				_default: true
			},
			showMeSetting: {
				_type: "bool",
				_default: true
			},
			testMeSetting: {
				_type: "bool",
				_default: true
			},
			doitforme: {
				_type: "bool",
				_default: false
			},
			giphy: {
				_type: "bool",
				_default: true
			},
			video: {
				_type: "bool",
				_default: true
			},
			slideshow: {
				_type: "bool",
				_default: true
			},
			dual_auth: {
				_type: "bool"
			},
			first_slide: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + "default_first_slide.png"
			},
			last_slide: {
				_type: "string",
				_default: GmCXt.conf.staticContentPath + "default_last_slide.png"
			},
			fqdn: {
				_type: "bool",
				_default: false
			},
			notifications: {
				_type: "object",
				_clone: true,
				_obj: {
					content: {
						_type: "string"
					},
					enable: {
						_type: "bool",
						_default: false
					},
					enforce: {
						_type: "bool",
						_default: false
					},
					rules: {
						_type: "array",
						_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
					},
					notifThemeColor: {
						_type: "string",
						_default: "#26273b"
					}
				}
			},
			exitSurvey: {
				_type: "bool",
				_default: false
			},
			survey: {
				_type: "array",
				_obj: []
			},
			defaultPlayAction: {
				_type: "string",
				_default: "guideMe"
			},
			isMiniPlayer: {
				_type: "bool",
				_default: false
			},
			add_watermark: {
				_type: "bool",
				_default: true
			},
			stepDefaultColorArray: {
				_type: "object",
				_obj: GmCXt.createDeepCopy(GmCXt.model.defaultColorArray),
				_clone: true
			},
			sentiment: {
				_type: "object",
				_clone: true,
				_obj: {
					sentimentCode: {
						_type: "string"
					}
				}
			},
			tooltipTheme: {
				_type: "bool",
				_default: false
			},
			widgetIconType: {
				_type: "string",
				_default: 'circular'
			},
			widgetIconSize: {
				_type: "object",
				_clone: true,
				_obj: {
					widgetIconWidth: {
						_type: "number",
						_default: 50
					},
					widgetIconHeight: {
						_type: "number",
						_default: 50
					}
				}
			},
			all_guide: {
				_type: "bool",
				_default: false
			},
			tutorial_guide: {
				_type: "object",
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.tutorial_guide_default)
			},
			helpUrl: {
				_type: "string",
				_default: "https://help.csod.com/MyGuide/"
			},
			autoProceedStep: {
				_type: "bool",
				_default: false
			},
			autoStepDelay: {
				_type: "number",
				default: 4
			},
			notificationTheme: {
				_type: "object",
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.notificationTheme_default)
			},
			tooltip_img: {
				_type: "string",
				_clone: true,
				_default: "gstart_tour2_old.png"
			},
			playerTheme: {
				_type: "object",
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.playerThemeDefault)
			}
		}
	},
	segment_groups: GmCXt.model.segmentGroups
};
GmCXt.model.stepSettings = {
	screenBlackout: {
		_type: "bool",
		_default: true
	},
	displayPreview: {
		_type: "bool",
		_default: true
	},
	mandatoryStep: {
		_type: "bool",
		_default: false
	},
	optional: {
		_type: "bool",
		_default: false
	},
	removeElement: {
		_type: "bool",
		_default: false
	},
	headerNext: {
		_type: "bool",
		_default: false
	},
	onCopyNext: {
		_type: "bool",
		_default: false
	},
	keepNext: {
		_type: "bool",
		_default: false
	},
	hoverNext: {
		_type: "bool",
		_default: false
	},
	clickNext: {
		_type: "bool",
		_default: false
	},
	onRightClickNext: {
		_type: "bool",
		_default: false
	},
	onKeyupNext: {
		_type: "bool",
		_default: false
	},
	onEnterPressNext: {
		_type: "bool",
		_default: false
	},
	onChangeNext: {
		_type: "bool",
		_default: false
	},
	closeAfterDelay: {
		_type: "bool",
		_default: false
	},
	onClickAnywhere: {
		_type: "bool",
		_default: false
	},
	inlineBranch: {
		_type: "bool",
		_default: false
	},
	customAudioText: {
		_type: "bool",
		_default: false
	},
	recordedAudio: {
		_type: "bool",
		_default: false
	},
	triggerEvent: {
		_type: "bool",
		_default: false
	},
	overlayOpacity: {
		_type: "number",
		_default: 0
	},
	smartTip: {
		_type: "object",
		_obj: {},
		_clone: true
	},
	completionTime: {
		_type: "number",
		_default: 4
	},
	completionEvent: {
		_type: "string"
	},
	stepPopupWidth: {
		_type: "number",
		_default: 300
	},
	stepPopupHeight: {
		_type: "number",
		_default: 0
	},
	stepDelayTime: {
		_type: "number",
		_default: 0
	},
	pageReloadOption: {
		_type: "string",
		_default: 'neither'
	},
	autoPlayStep: {
		_type: "bool",
		_default: false
	},
	stickTargetElement: {
		_type: "bool",
		_default: false
	},
	element: {
		_type: "object",
		_required: false,
		_obj: {
			//version: { _type: "string" },
			//selector: {
			// js, js1, js2, js3 are either array or null
			// hence require no validation
			//},
			meta: {
				_type: "object",
				_required: false,
				_obj: {
					elAttributes: {
						_type: "object",
						_obj: {}
					},
					inTopWindow: {
						_type: "bool"
					},
					iframeUrl: {
						_type: "string"
					},
					iframePath: {
						_type: "string"
					},
					iframeScheme: {
						_type: "string",
						_val: ["http", "https"]
					},
					jqueryInfo: {
						_type: "object",
						_obj: {}
					},
					path: {
						_type: "object",
						_required: false,
						_obj: {
							fromDocument: {
								_type: "array"
							},
							fromParent: {
								_type: "array"
							},
							parentId: {
								_type: "string"
							}
						}
					},
					score: {
						_type: "number"
					},
					selectorAttributes: {
						_type: "object",
						_obj: {}
					},
					textPropertyValue: {
						_type: "string"
					},
					textPropertyName: {
						_type: "string"
					},
					isUniqueText: {
						_type: "bool"
					}
				}
			},
			criteria: {
				_type: "object",
				_required: false,
				_obj: {
					precision_type: {
						_type: "string"
					},
					enforce_identify_by_text: {
						_type: "bool"
					},
					ignoreText: {
						_type: "bool"
					},
					jquery_selector: {
						_type: "string"
					},
					precision_level: {
						_type: "string"
					}
				}
			},
			position: {
				_type: "object",
				_required: false,
				_obj: {
					left: {
						_type: "number"
					},
					top: {
						_type: "number"
					},
					width: {
						_type: "number"
					},
					height: {
						_type: "number"
					},
					windowWidth: {
						_type: "number"
					},
					windowHeight: {
						_type: "number"
					}
				}
			},
			cssPosition: {
				_type: "bool"
			},
			appName: {
				_type: "string"
			},
			xpath: {
				_type: "string"
			},
			elOptions: {
				_type: "array",
				_obj: {}
			}
		}
	},
	alignment: {
		_type: "string"
	},
	onPageClickNext: {
		_type: "bool",
		_default: false
	},
	onPageRefresh: {
		_type: "bool"
	},
	rules: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
	},
	area_of_interest: {
		_type: "object",
		_clone: true,
		_obj: {
			left: {
				_type: "number"
			},
			top: {
				_type: "number"
			},
			width: {
				_type: "number"
			},
			height: {
				_type: "number"
			}
		}
	},
	automation: {
		_type: "object",
		_clone: true,
		_obj: {
			enableDefaultData: {
				_type: "bool",
				_default: false
			},
			enableAutomationWindow: {
				_type: "bool",
				_default: false
			},
			hasHumanInteraction: {
				_type: "bool",
				_default: false
			},
			xpath: {
				_type: "string"
			},
			muteNarration: {
				_type: "bool",
				_default: false
			},
			afterXSeconds: {
				_type: "number",
				_default: 4
			},
			manualAutoTimer: {
				_type: "bool",
				_default: false
			},
			enableBot: {
				_type: "bool",
				_default: false
			},
			botQuestion: {
				_type: "string",
				_default: ""
			}
		}
	},
	scheme: {
		_type: "string",
		_val: ["http", "https"]
	},
	showPreviousStep: {
		_type: "bool",
		_default: false
	},
	hidePreviousStep: {
		_type: "bool",
		_default: false
	},
	tutorialHeight: {
		_type: "number",
		_default: 80
	},
	tutorialWidth: {
		_type: "number",
		_default: 40
	},
	tutorialUploadMode: {
		_type: "string",
		_default: 'new_tab'
	},
	tutorialUploadUrl: {
		_type: "string"
	},
	branch: {
		_type: "array",
		_required: false,
		_obj: {
			tail: {
				_type: "string"
			},
			branchName: {
				_type: "string"
			},
			isDefault: {
				_type: "bool"
			},
			rulesEngine: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
			}
		}
	},
	branch_type: {
		_type: "string",
		_required: false,
		_default: "Rule Based"
	},
	matchByText: {
		_type: "bool",
		_default: false
	},
	matchVertically: {
		_type: "bool",
		_default: false
	},
	matchHorizontally: {
		_type: "bool",
		_default: false
	},
	matchPositionSetting: {
		_type: "string",
		_default: "Both"
	},
	groupTitle: {
		_type: "string",
		_required: false
	},
	showFullScreen: {
		_type: "bool",
		_default: false
	},
	dynamicPositioning: {
		_type: "bool",
		_default: false
	},
	transport_url : {
		_type: "string",
		_required: true
	},
};

GmCXt.model.step = {
	application_id: {
		_type: "number",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: false
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_image_processed: {
		_type: "bool",
		_required: true
	},
	is_screen_url_processed: {
		_type: "bool",
		_required: true
	},
	is_thumbnail_processed: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: false
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	screen_path: {
		_type: "string",
		_required: true
	},
	screen_url: {
		_type: "string",
		_required: true
	},
	step_audio: {
		_type: "string",
		_required: true,
		_val: ".mp3"
	},
	step_audio_text: {
		_type: "string",
		_required: true,
		_default: " "
	},
	step_description: {
		_type: "string",
		_required: true
	},
	step_id: {
		_type: "string",
		_required: true
	},
	step_image: {
		_type: "number",
		_required: true,
		_default: 0
	},
	step_order: {
		_type: "number",
		_required: true
	},
	step_screen: {
		_type: "string",
		_required: true,
		_default: 0
	},
	step_settings: {
		_type: "object",
		_clone: true,
		_obj: GmCXt.createDeepCopy(GmCXt.model.stepSettings)
	},
	step_thumbnail: {
		_type: "number",
		_required: true
	},
	step_title: {
		_type: "string",
		_required: true
	},
	step_type: {
		_type: "string",
		_required: true
	},
	step_url: {
		_type: "string",
		_required: true
	},
	step_video: {
		_type: "number",
		_required: true
	},
	step_video_url: {
		_type: "string",
		_required: true
	},
	thumbnail_path: {
		_type: "string",
		_required: true
	},
	thumbnail_url: {
		_type: "string",
		_required: true
	},
	tour_id: {
		_type: "string",
		_required: true
	},
	video_path: {
		_type: "string",
		_required: true
	},
	language_data: {
		_type: "object",
		_required: false,
		_obj: {
			step_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			step_description: {
				_type: "string"
			}
		}
	}
};

GmCXt.model.steps = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.step)
};
GmCXt.model.token = {
	token: {
		_type: "string"
	}
};

GmCXt.model.userToken = {
	refreshtoken: {
		_type: "string",
		_required: true
	},
	accesstoken: {
		_type: "string",
		_required: true
	},
	app_access: {
		_type: "array",
		_obj: {}
	}
};

GmCXt.model.user = {
	accesstoken: {
		_type: "string",
		_required: true
	},
	app_access: {
		_type: "array",
		_obj: {}
	},
	cdn_signature: {
		_type: "string",
		_required: true
	},
	cdn_signature_expiry: {
		_type: "number"
	},
	creation_date: {
		_type: "number"
	},
	first_name: {
		_type: "string",
		_required: true
	},
	image_id: {
		_type: "number"
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_paid: {
		_type: "bool"
	},
	is_suspend: {
		_type: "bool"
	},
	is_verified: {
		_type: "bool"
	},
	keep_login: {
		_type: "bool"
	},
	last_name: {
		_type: "string"
	},
	mandatory_pass_change: {
		_type: "bool"
	},
	modification_date: {
		_type: "number"
	},
	org_role_id: {
		_type: "number"
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	profile: {
		_type: "string",
		_default: "{}"
	},
	refreshtoken: {
		_type: "string",
		_required: true
	},
	relation_id: {
		_type: "number"
	},
	role: {
		_type: "string"
	},
	settings: {
		_type: "object",
		_clone: true,
		_obj: {
			showToolbarTooltip: {
				_type: "bool",
				_default: true
			},
			showCaptureTagsInfo: {
				_type: "bool",
				_default: true
			},
			toolbarPosition: {
				_type: "string"
			},
			edcastTermsAccepted: {
				_type: "bool"
			},
			viewed_guide_notifications: {
				_type: "object",
				_obj: {},
			},
			surveyCompleted: {
				_type: "object",
				_obj: {},
			},
			guide_view: {
				_type: "object",
				_obj: {}
			},
		}
	},
	user_email: {
		_type: "string",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	user_key: {
		_type: "string"
	}
};

GmCXt.model.users = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.user)
};
GmCXt.model.guide = {
	application_id: {
		_type: "number",
		_required: true
	},
	category_id: {
		_type: "number",
		_required: true
	},
	category_title: {
		_type: "string",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	creator_id: {
		_type: "number",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_locked: {
		_type: "bool",
		_required: true
	},
	is_private: {
		_type: "bool",
		_required: true
	},
	is_published: {
		_type: "bool",
		_required: true,
		_default: false
	},
	media_files: {
		_type: "array",
		_obj: {
			gify: {
				_type: "string"
			},
			pdf: {
				_type: "string"
			},
			ppt: {
				_type: "string"
			},
			video: {
				_type: "string"
			},
			blog: {
				_type: "string"
			},
			doc: {
				_type: "string"
			},
			text: {
				_type: "string"
			}
		}
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	step_count: {
		_type: "number",
		_required: true
	},
	steps: {
		_type: "array",
		_obj: GmCXt.createDeepCopy(GmCXt.model.step)
	},
	thumbnail_path: {
		_type: "string",
		_required: true
	},
	thumbnail_url: {
		_type: "string",
		_required: true
	},
	tour_description: {
		_type: "string",
		_required: true
	},
	tour_id: {
		_type: "number",
		_required: true
	},
	tour_image: {
		_type: "number",
		_required: true,
		_default: "0"
	},
	tour_order: {
		_type: "number",
		_required: true
	},
	tour_settings: {
		_type: "object",
		_clone: true,
		_obj: {
				ruleCheckOnClick: {
					_type: "bool",
					default: false
				},
				beacon: {
					_type: "object",
					_clone: true,
					_obj: {
						beaconPreviewImagePath: {
							_type: "string"
						},
						beaconIcon: {
							_type: "string"
						},
						stickTargetElement: {
							_type: "bool",
							default: false
						}
					}
				},
				process_ppt: {
					_type: "object",
					_clone: true,
					_obj: {
						file_id: {
							_type: "number"
						},
						url: {
							_type: "string"
						}
					}
				},
				slideshow_mode: {
					_type: "bool"
				},
				enableBot: {
					_type: "bool",
					default: false
				},
				isAutolaunch: {
					_type: "bool",
					default: false
				},
				videoNotification: {
					_type: "bool",
					default: false
				},
				oneTimeNotification: {
					_type: "bool",
					default: false
				},
				stepDelayTime: {
					_type: "number",
					_default: 0
				},
				ruleDelayTime: {
					_type: "number",
					_default: 0
				},
				defaultPlayAction: {
					_type: "string",
					_default: 'Default'
				},
				rules: {
					_type: "array",
					_obj: GmCXt.createDeepCopy(GmCXt.model.rule)
				},
				overlay_rules: {
					_type: "array",
					_obj: {}
				},
				enableKeyboardInput: {
					_type: "bool",
					default: false
				},
				keyboardKeyInput: {
					_type: "string",
					_default: ''
				},
				video_settings: {
					_type: "object",
					_required: "false",
					_clone: true,
					_obj: {
						first_slide_text: {
							_type: "string"
						},
						first_slide_recorded_audio: {
							_type: "bool",
							_default: false
						},
						first_slide_recorded_audio_url: {
							_type: "string"
						},
						first_slide_id: {
							_type: "number"
						},
						first_slide_img: {
							_type: "string",
							_default: GmCXt.conf.staticContentPath + "default_first_slide.png"
						},
						last_slide_text: {
							_type: "string"
						},
						last_slide_recorded_audio: {
							_type: "bool",
							_default: false
						},
						last_slide_recorded_audio_url: {
							_type: "string"
						},
						last_slide_id: {
							_type: "number"
						},
						last_slide_img: {
							_type: "string",
							_default: GmCXt.conf.staticContentPath + "default_last_slide.png"
						}
					}
				},
				show_title_slide: {
					_type: "bool",
					_default: true
				},
				show_slide: {
					_type: "bool",
					_default: true
				},
				show_video_subtitle: {
					_type: "bool",
					_default: true
				},
			add_video_animation: {
				_type: "string",
				_default: ''
			},
			translationEnable: {
				_type: "bool",
				_default: true
			},
			disableRedirect: {
				_type: "bool",
				_default: false
			},
			language_settings: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.langOption)
			},
			step_settings: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: {
					hideStepIcon: {
						_type: "bool",
						_default: false
					},
					doNotShowPopup: {
						_type: "bool",
						_default: false
					},
					forceGuideMe: {
						_type: "bool",
						_default: false
					}
				}
			},
			play_structure: {
				_type: "array",
				_obj: {
					"id": {
						_type: "number"
					},
					"tail": {
						_type: "number_or_null"
					}
				}
			},
			downloadGuideFiles: {
				_type: "object",
				_required: false,
				_clone: true,
				_obj: {
					video_file: {
						_type: "bool",
						_default: true
					},
					pdf_file: {
						_type: "bool",
						_default: true
					},
					pptx_file: {
						_type: "bool",
						_default: true
					},
					gif_file: {
						_type: "bool",
						_default: true
					},
					text_file: {
						_type: "bool",
						_default: true
					},
					word_file: {
						_type: "bool",
						_default: true
					},
					blog_file: {
						_type: "bool",
						_default: true
					}
				}
			},
			tour_type: {
				_type: "string",
				_default: 'default'
			},
			version: {
				_type: "string"
			},
			enableAudio: {
				_type: "bool",
				default: false
			},
			disableAudio: {
				_type: "bool",
				default: false
			},
			hidePrevBtn: {
				_type: "bool",
				default: false
			},
			guideHideForP: {
				_type: "bool",
				default: false
			},
			watchRulesElement: {
				_type: "bool",
				default: false
			},
			segments: {
				_type: "array",
				_obj: GmCXt.createDeepCopy(GmCXt.model.segment)
			},
			removeBeaconRulesInvalid: {
				_type: "bool",
				default: false
			},
			segment_groups: {
				_type: "array",
				_obj: {
					_arrOf: 'string'
				}
			},
			tutorial_tour_type: {
				_type: "string",
				_default: 'tutorial'
			},
			sentiment: {
				_type: "object",
				_clone: true,
				_obj: {
					sentimentCode: {
						_type: "string"
					}
				}
			},
			conversation: {
				_type: "object",
				_clone: true,
				_obj: {
					conversationCode: {
						_type: "string"
					}
				}
			}
			// publish_env: {
			// 	_type: "array",
			// 	_obj: {}
			// },
		}
	},
	tour_thumbnail: {
		_type: "number",
		_required: true
	},
	tour_title: {
		_type: "string",
		_required: true
	},
	tour_type: {
		_type: "string",
		_required: true
	},
	tour_url: {
		_type: "string",
		_required: true
	},
	user_email: {
		_type: "string",
		_required: true
	},
	user_first_name: {
		_type: "string",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	user_last_name: {
		_type: "string",
		_required: true
	},
	keywords: {
		_type: "string",
		_required: true
	},
	language_data: {
		_type: "object",
		_obj: {
			tour_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			tour_description: {
				_type: "string"
			}
		}
	},
	version: {
		_type: "number",
		_required: true
	}
};

GmCXt.model.guides = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.guide)
};
GmCXt.model.category = {
	application_id: {
		_type: "number",
		_required: true
	},
	category_description: {
		_type: "string",
		_required: true
	},
	category_id: {
		_type: "number",
		_required: true
	},
	category_image: {
		_type: "number",
		_required: true
	},
	category_order: {
		_type: "number",
		_required: true
	},
	category_title: {
		_type: "string",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	has_child: {
		_type: "bool",
		_required: true
	},
	has_tour: {
		_type: "bool",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_published: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	parent_id: {
		_type: "number",
		_required: true
	},
	settings: {
		_type: "string",
		_required: true
	},
	total_publish_tour: {
		_type: "number",
		_required: true
	},
	total_sub_category: {
		_type: "number",
		_required: true
	},
	total_unpublish_tour: {
		_type: "number",
		_required: true
	},
	user_id: {
		_type: "number",
		_required: true
	},
	language_data: {
		_type: "object",
		_required: "false",
		_obj: {
			category_title: {
				_type: "string"
			},
			voice: {
				_type: "string"
			},
			name: {
				_type: "string"
			},
			category_description: {
				_type: "string"
			}
		}
	}
};

GmCXt.model.categories = {
	_type: "array",
	_obj: GmCXt.createDeepCopy(GmCXt.model.category)
};
GmCXt.model.domain = {
	id: {
		_type: "string"
	},
	url: {
		_type: "string"
	},
	isDefault: {
		_type: "bool"
	},
	env: {
		_type: "string",
		_default: "prod"
	},
	appName: {
		_type: "string"
	}
};

GmCXt.model.application = {
	application_id: {
		_type: "number",
		_required: true
	},
	creation_date: {
		_type: "number",
		_required: true
	},
	description: {
		_type: "string",
		_required: true
	},
	image_id: {
		_type: "number",
		_required: true
	},
	image_path: {
		_type: "string",
		_required: true
	},
	image_url: {
		_type: "string",
		_required: true
	},
	is_active: {
		_type: "bool",
		_required: true
	},
	is_default: {
		_type: "bool",
		_required: true
	},
	modification_date: {
		_type: "number",
		_required: true
	},
	name: {
		_type: "string",
		_required: true
	},
	organization_id: {
		_type: "number",
		_required: true
	},
	app_url: {
		_type: "array",
		_required: true
	},
	categories: {
		_type: "array",
		_obj: mg$.extend({}, GmCXt.model.category)
	},
	settings: {
		_type: "object",
		_obj: {
			domains: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.domain)
			},
			first_slide_text: {
				_type: "string",
				_inherit: true
			},
			last_slide_text: {
				_type: "string",
				_inherit: true
			},
			copyright_text: {
				_type: "string",
				_inherit: true
			},
			first_slide: {
				_type: "string",
				_inherit: true
			},
			last_slide: {
				_type: "string",
				_inherit: true
			},
			widget_icon: {
				_type: "number",
				_inherit: true
			},
			fqdn: {
				_type: "bool",
				_inherit: true
			},
			popupDesign: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					type: {
						_type: "string",
						_inherit: true
					},
					default: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_default)
					},
					classic: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_classic)
					},
					current: {
						_type: "object",
						_clone: true,
						_obj: mg$.extend({}, GmCXt.model.popupDesign_default)
					}
				}
			},
			tutorialBgColor: {
				_type: "string",
				_inherit: true
			},
			showWidgetIcon: {
				_type: "bool",
				_clone: true,
				_inherit: true
			},
			rules: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.rule)
			},
			widgetIconPos: {
				_type: "string",
				_inherit: true
			},
			showWidgetIconRight: {
				_type: "bool",
				_inherit: true
			},
			keep_player_panel_open: {
				_type: "bool",
				_inherit: true
			},
			defaultGuideView: {
				_type: "bool",
				_inherit: true
			},
			enable_send_feedback: {
				_type: "bool",
				_inherit: true
			},
			showWidgetIconBottom: {
				_type: "bool",
				_inherit: true
			},
			feedback_type: {
				_type: "string",
				_inherit: true
			},
			feedback_email: {
				_type: "string",
				_inherit: true
			},
			feedback_url: {
				_type: "string",
				_inherit: true
			},
			enable_chatbot: {
				_type: "bool",
				_inherit: true
			},
			chatIconPos: {
				_type: "string",
				_inherit: true
			},
			chat_icon_pos: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					chat_icon_top_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_bottom_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_left_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_right_pos: {
						_type: "number",
						_inherit: true
					},
					chat_icon_id: {
						_type: "number"
					},
					chat_icon_top_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_bottom_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_left_pos_unit: {
						_type: "string",
						_inherit: true
					},
					chat_icon_right_pos_unit: {
						_type: "string",
						_inherit: true
					}
				}
			},
			chat_icon_path: {
				_type: "string",
				_inherit: true
			},
			chatIconType: {
				_type: "string",
				_inherit: true
			},
			chatIconSize: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					chatIconWidth: {
						_type: "number",
						_inherit: true
					},
					chatIconHeight: {
						_type: "number",
						_inherit: true
					}
				}
			},
			showChatIconRight: {
				_type: "bool",
				_inherit: true
			},
			showChatIconBottom: {
				_type: "bool",
				_inherit: true
			},
			widget_icon_pos: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					widget_icon_top_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_bottom_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_left_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_right_pos: {
						_type: "number",
						_inherit: true
					},
					widget_icon_id: {
						_type: "number"
					},
					widget_icon_top_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_bottom_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_left_pos_unit: {
						_type: "string",
						_inherit: true
					},
					widget_icon_right_pos_unit: {
						_type: "string",
						_inherit: true
					}
				}
			},
			widget_icon_path: {
				_type: "string",
				_inherit: true
			},
			hide_widget_if_noguide: {
				_type: "bool",
				_inherit: true
			},
			widget_icon_zindex: {
				_type: "string",
				_inherit: true
			},
			guide_count_on_widget: {
				_type: "bool",
				_inherit: true
			},
			guide_count_widget_color: {
				_type: "string",
				_inherit: true
			},
			selectorStyle: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					borderColor: {
						_type: "string",
						_inherit: true
					},
					borderWidth: {
						_type: "number",
						_inherit: true
					}
				}
			},
			stepPopupWidth: {
				_type: "number",
				_inherit: true
			},
			hideBrandLogo: {
				_type: "bool",
				_inherit: true
			},
			logo_id: {
				_type: "number",
				_inherit: true
			},
			logo: {
				_type: "string",
				_inherit: true
			},
			variables: {
				_type: "array",
				_obj: mg$.extend({}, GmCXt.model.variables)
			},
			widgetIconType: {
				_type: "string",
				_inherit: true
			},
			guideMeSetting: {
				_type: "bool",
				_inherit: true
			},
			showMeSetting: {
				_type: "bool",
				_inherit: true
			},
			testMeSetting: {
				_type: "bool",
				_inherit: true
			},
			doitforme: {
				_type: "bool",
				_inherit: true
			},
			giphy: {
				_type: "bool",
				_inherit: true
			},
			video: {
				_type: "bool",
				_inherit: true
			},
			slideshow: {
				_type: "bool",
				_inherit: true
			},
			defaultPlayAction: {
				_type: "string",
				_inherit: true
			},
			isMiniPlayer: {
				_type: "bool",
				_inherit: true
			},
			widgetIconSize: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					widgetIconWidth: {
						_type: "number",
						_inherit: true
					},
					widgetIconHeight: {
						_type: "number",
						_inherit: true
					}
				}
			},
			notificationDelay: {
				_type: "number",
				_inherit: true
			},
			notificationsTime: {
				_type: "string",
				_inherit: true
			},
			userLabels: {
				_type: "object",
				_obj: mg$.extend({}, GmCXt.model.userLabels),
				_clone: true,
				_inherit: true
			},

			chatLabels: {
				_type: "object",
				_obj: mg$.extend({}, GmCXt.model.chatLabels),
				_clone: true
			},
			notifications: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: {
					notifThemeColor: {
						_type: "string",
						_inherit: true
					}
				}
			},
			all_guide: {
				_type: "bool",
				_default: false,
				_inherit: true
			},
			playAudio: {
				_type: "bool",
				_inherit: true
			},
			tutorial_guide: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.tutorial_guide_default)
			},
			tooltipTheme: {
				_type: "bool",
				_inherit: true
			},
			tooltipColor: {
				_type: "string",
				_inherit: true
			},
			autoProceedStep: {
				_type: "bool",
				_inherit: true
			},
			autoStepDelay: {
				_type: "number",
				_inherit: true
			},
			notificationTheme: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.notificationTheme_default)
			},
			tooltip_img: {
				_type: "string",
				_inherit: true
			},
			playerTheme: {
				_type: "object",
				_clone: true,
				_inherit: true,
				_obj: GmCXt.createDeepCopy(GmCXt.model.playerThemeDefault)
			}
		},
		_clone: true
	},
	title: {
		_type: "string",
		_required: true
	}
};

GmCXt.model.chatLabels = {
	greetingMessage: {
		_type: "string",
		_default: ""
	},
	botEndingMessage: {
		_type: "string",
		_default: ""
	},
	errorMessage: {
		_type: "string",
		_default: ""
	}
};

GmCXt.model.variables = {
	name: {
		_type: "string",
	},
	element: {
		_type: "object",
		_obj: mg$.extend({}, GmCXt.model.stepSettings.element)
	},
	value: {
		_type: "string"
	},
	previewImage: {
		_type: "string"
	},
	url: {
		_type: "string"
	},
	rules: {
		_type: "array",
		_obj: mg$.extend({}, GmCXt.model.rule)
	}
};

GmCXt.model.applications = {
	_type: "array",
	_obj: mg$.extend({}, GmCXt.model.application)
};
/**
 * @author Nilesh Pachpande
 */

GmCXt.domainInApp = false;

GmCXt.sendMessageToTheTopWindow = function(type, data) {
	GmCXt.sendMsgUp(type, data, true);
};

GmCXt.sendMessageToParentWindow = function(type, data) {
	GmCXt.sendMsgUp(type, data);
};

GmCXt.sendMsgUp = function(type, data, toTop) {

	data = data || {};

	if (GmCXt.playerI || GmCXt.playerI === null) {
		data.playerInstance = GmCXt.playerI;
	}

	var send = false;

	if (window.self === window.top) {
		switch (type) {
			case 'mgPlayerJSTest_action:close_step':
				GmCXt.requestHandler.closeStep();
				break;

			case 'mgPlayerJSTest_action:enable_next_button':
				GmCXt.requestHandler.enableNextButton();
				break;

			case 'mgPlayerJSTest_action:record_event;testMe':
				GmCXt.requestHandler.recordEventTestMe(data);
				break;

			case "mgPlayerJSTest_action:play_next_step":
				GmCXt.requestHandler.playTourNextStep();
				break;

			case "mgPlayerJSTest_action:update_PI_PS":
				GmCXt.requestHandler.updatePIPS(data);
				break;

			case 'mgPlayerJSTest_action:update_PI_steps':
				GmCXt.requestHandler.updatePISteps(data);
				break;

			default:
				send = true;
		}
	} else {
		send = true;
	}

	if (send) {
		var message = {
			action: type,
			data: data
		};
		
		if ( window.self.location.origin.indexOf("linkedin.com")>0 ) {
			return;
		}
		if (toTop)
			GmCXt.msgChannel.port1.postMessage(GmCXt.formatMsg(message));
		else
			GmCXt.sendToParentWindow(message);
	}
};

GmCXt.getIframesFromShadowDom = function() {
	if(document && document.body) {
		var elList = document.body.querySelectorAll('*');
		var frames = [];
		for (var i = 0; i < elList.length; i++) {
			if (elList[i].shadowRoot) {
				mg$.merge(frames, mg$(elList[i].shadowRoot).find('iframe'));
			}
		}
		return frames;
	}
	return false;
};

GmCXt.sendToContentIframes = function(msg) {

	for (let iframeId in GmCXt.iframePorts) {
   		if (GmCXt.iframePorts.hasOwnProperty(iframeId)) {

   			var frame = GmCXt.iframeEls[iframeId];
   			
   			if (msg.data && msg.data.frame && !GmCXt.isEmpty(msg.data.frame)) {
				msg.data.frame.iframeTitle = frame.frameElement.getAttribute("title");
				msg.data.frame.attributes = GmCXt.getIframeAttributes(mg$(frame));
				msg.data.frame.pos = frame.frameElement.getBoundingClientRect();

				if (msg.mgdata && msg.mgdata.frame && !GmCXt.isEmpty(msg.mgdata.frame)) {
					msg.data.frame.pos.x += msg.mgdata.frame.pos.left;
					msg.data.frame.pos.y += msg.mgdata.frame.pos.top;
				}
			}

			GmCXt.iframePorts[iframeId].postMessage(GmCXt.formatMsg(msg));
   		}
	}
};

GmCXt.forwardToContentWindows = function(message) {

	var msg = mg$.extend(true, {}, message);

	if (msg.data)
		msg.data.frame = {};

	if (window.top === window.self) {
		return;
	}

	GmCXt.sendToContentIframes(msg);
};

GmCXt.requestHandler.findElementToCheckDomRule = function(data) {

	var callback = function(result) {

		var obj = {
			valid: result.valid,
			jobId: data.jobId,
			ruleId: data.rule.ruleId,
			groupId: data.rule.groupId,
			fromSidePanel: data.fromSidePanel,
			initiator: data.job.initiator
		};

		var message = {
			action: "mgPlayerJSTest_action:completed;task:select_dom_element_for_rules",
			data: obj
		};

		if (window.self === window.top) {
			GmCXt.requestHandler.onElementFoundForDomSelectRule(message);
		} else {
			GmCXt.sendMessageToParentWindow(message.action, message.data);
		}
	};

	var request = {
		data: {
			requestId: Math.random(),
			element: data.rule.element,
			frame: data.frame,
			job: data.job,
			rule: data.rule
		},
		cb: callback,
	};

	GmCXt.highlighter.queueRuleElement(request);
};

GmCXt.requestHandler.startWatcherTestMe = function(data) {
	GmCXt.testMeInstance = GmCXt.testMeWatcher({
		frame: data.frame
	});
	GmCXt.testMeInstance.start();
};

GmCXt.requestHandler.stopWatcherTestMe = function() {
	if (GmCXt.testMeInstance) {
		GmCXt.testMeInstance.stop();
	}
};

GmCXt.requestHandler.removeExistingDomElement = function(request) {
	GmCXt.highlighter.removeActiveEvents();
};

GmCXt.requestHandler.selectExistingDomElementIframe = function(d) {

	if (!GmCXt.currentIframeId &&
		d.req && d.req.settings &&
		!d.req.settings.element.meta.inTopWindow) {
		d.req.frame = d.frame;
		GmCXt.requestHandler.selectExistingDomElement(d.req);
	}

	var ruleReqs = d.rules;
	var totalReqs = ruleReqs.length;
	for (var i = 0; i < totalReqs; i++) {
		ruleReqs[i].job.timeout = Date.now() + (ruleReqs[i].job.timeoutVal || GmCXt.t.ruleTimeOut10s);
		GmCXt.log(6, "QUEUED IN IFRAME rules", ruleReqs[i]);
		GmCXt.requestHandler.findElementToCheckDomRule(ruleReqs[i]);
	}
};

GmCXt.requestHandler.selectDomElement = function(request) {

	var actionName = "mgPlayerJSTest_action:completed;task:select_dom_element_tooltips";

	var data = request.data;
	var elems = data.settings.domElems;
	var i = 0;
	if (data.findOther) {
		i = 1;
	}

	var cb = function(data) {
		delete data.he;
		var message = {
			action: actionName,
			status: data.status,
			data: data
		};

		if (GmCXt.playerI) {
			GmCXt.playerI.iframeIdentifier = GmCXt.id;
		}

		if (window.self === window.top) {
			GmCXt.requestHandler.handleEventSelectDOMElTooltip(null, message);
		} else {
			GmCXt.sendMessageToParentWindow(actionName, message);
		}
	};

	var optionalStepCb = function(opData) {
		cb(opData);
		if (!opData.watch && opData.status === GmCXt.ELEMENT_FOUND && elems.length > 1) {

			if (window.self === window.top) {
				GmCXt.requestHandler.findOtherTooltips(request);
			} else {
				GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:find_other_msg_step_tooltips', request);
			}
		}
	};

	if (data.isOptional) {

		data.tooltipId = elems[0].id;
		data.tooltip = 0;
		var _data = GmCXt.createDeepCopy(data);
		GmCXt.highlighter.queue({
			data: _data,
			element: elems[0].element,
			cb: optionalStepCb
		});

	} else {
		for (j = elems.length; i < j; i++) {

			data.tooltipId = elems[i].id;
			data.tooltip = i;
			var _data = GmCXt.createDeepCopy(data);
			if (request.data.settings) {
				GmCXt.highlighter.queue({
					data: _data,
					element: elems[i].element,
					cb: cb
				});
			}
		}
	}
};

GmCXt.requestHandler.searchStartPoint = function(data) {

	var cb = function(d) {
		if (d.status === GmCXt.ELEMENT_FOUND) {
			GmCXt.sendMessageToTheTopWindow("mgPlayerJSTest_action:start_point_found", {
				step: data.startPoint
			});
		} else {
			GmCXt.sendMessageToApp('mgPlayerJSTest_action:start_point_not_found');
		}
	};
	var step = data.startPoint;
	GmCXt.highlighter.queue({
		data: {
			tour_id: data.tour_id,
			requestId: step.step_id,
			settings: step.step_settings,
			windowHost: GmCXt.getPageDomain(),
			task: 'findStep',
			findOnly: true,
			noOutline: true,
			timeout: Date.now() + 1000,
			log_stepInfo: GmCXt.getStepInfoLog(step)
		},
		cb: cb
	});
};

GmCXt.requestHandler.searchDomElement = function(d) {

	GmCXt.highlighter.queue({
		data: d,
		cb: function(r) {
			if (r.status === GmCXt.ELEMENT_FOUND) {
				GmCXt.sendMessageToTheTopWindow("mgPlayerJSTest_action:next_step_found");
			}
		}
	});
};

GmCXt.requestHandler.selectExistingDomElement = function(d) {

	if (d.settings) {
		if (d.task === 'playTour') {
			GmCXt.highlighter.queue({
				data: d,
				cb: GmCXt.onFindExistingEl
			});
		}
	}
};

GmCXt.onFindExistingEl = function(data) {

	var actionName = "mgPlayerJSTest_action:completed;task:select_existing_dom_element";
	delete data.he;

	var message = {
		action: actionName,
		status: data.status,
		data: data
	};

	if (GmCXt.playerI) {
		GmCXt.playerI.iframeIdentifier = GmCXt.id;
	}

	if (window.self === window.top) {
		GmCXt.requestHandler.handleEventSelectDOMElement(null, message);
	} else {
		GmCXt.sendMessageToParentWindow(actionName, message);
	}
};

GmCXt.requestHandler.triggerElementClick = function(request) {
	if (request.data)
		GmCXt.highlighter.triggerDomClick(request.data);
};

GmCXt.isMyGuideAction = function() {
	if (GmCXt.isAutomationRunning() && GmCXt.isAutomationStepRunning()) {
		return false;
	}

	if (GmCXt.selectorTool && GmCXt.selectorTool.status !== 'inactive')
		return true;
	else if (GmCXt.playerI)
		return true;

	return false;
};

GmCXt.getElOptions = function(he) {

	var elOptions = [];

	if (he.tagName.toLowerCase() === 'select') {

		for (var i = 0; i < he.options.length; i++) {
			var obj = {
				value: he.options[i].value,
				name: he.options[i].innerText,
				type: 'select'
			};
			elOptions.push(obj);
		}
	} else {

		var allRadio = mg$(he).find("input[type=radio]");
		var allCheckbox = mg$(he).find("input[type=checkbox]");

		var allChildElems = mg$.merge(allRadio, allCheckbox);
		var parentPos = he.getBoundingClientRect();

		for (var i = 0; i < allChildElems.length; i++) {
			var childPos = allChildElems[i].getBoundingClientRect();
			var obj = {
				top: childPos.top - parentPos.top,
				left: childPos.left - parentPos.left,
				width: childPos.width,
				height: childPos.height,
				name: allChildElems[i].name,
				type: allChildElems[i].type
			};
			elOptions.push(obj);
		}
	}

	return elOptions;
};

GmCXt.updateFrameOffsetsForSmarttip = function(message) {
	// forward to contentwindow only when message is comming from top window
	// sendToParentWindow when message in coming from iframe's highlighter
	if (window.self !== window.top && message.rect && message.highlightedArea) {
		var obj = {};
		obj.left = message.rect.left;
		obj.top = message.rect.top;

		obj = GmCXt.addFrameOffset(event, obj);
		message.highlightedArea.left = message.rect.left = obj.left;
		message.highlightedArea.top = message.rect.top = obj.top;

		GmCXt.sendToParentWindow(message);
	} else {
		GmCXt.forwardToContentWindows(message);
	}
};

/**
 * @function
 * If receiving window is not the top window, it adds
 * offset of the frame embedding event window, to the element offset
 * and sends element offset to its parent window
 */
GmCXt.requestHandler.updateElementOffset = function(event, message) {
	if (window.self !== window.top) {
		if (message.data.status === GmCXt.ELEMENT_FOUND) {
			var pos = message.data.data.element.position;
			message.data.data.element.position = GmCXt.addFrameOffset(event, pos);
		}
		GmCXt.sendToParentWindow(message);
	}
};

GmCXt.requestHandler.removeSmarttipBeacon = function(idList) {
	if (GmCXt.highlighter) {
		GmCXt.highlighter.clearBeacons();
		GmCXt.highlighter.clearTooltips(idList);
	}
};

GmCXt.requestHandler.removeToolip = function(data) {
	if (GmCXt.highlighter) {
		GmCXt.highlighter.removeToolTipIcons(data);
		GmCXt.highlighter.clearJob(data.step_id);
	}
};

GmCXt.requestHandler.hideAllSmartTip = function(msg) {
	GmCXt.forwardToContentWindows(msg);
	mg$('.mgPlayerJSTest_smarttip-icon').hide();
	GmCXt.smarttipAreHidden = true;
};

GmCXt.processIframePlayer = function(event) {

	var message = event.data;
	var messageCopy = mg$.extend(true, {}, message);

	switch (message.action) {

		case 'mgPlayerJSTest_action:domain_in_active_app':
			GmCXt.domainInApp = message.data.domainInApp;
			break;

		case 'mgPlayerJSTest_action:page_url':
			GmCXt.urlParts = message.data.urlParts;
			GmCXt.elAppName = message.data.elAppName;
			GmCXt.pageTitle = message.data.title;
			break;

		case 'mgPlayerJSTest_action:started; task:remove_intel_events':
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.removeExistingDomElement(messageCopy);
			break;

		case 'mgPlayerJSTest_action:clear_outline;action:do':
			if (message.data.scriptId !== GmCXt.id) {
				mg$('.mgPlayerJSTest_new-outline').hide();
				mg$('.mgPlayerJSTest_select-outline').hide();
			}
			break;

		case 'mgPlayerJSTest_action:set_iframe_id:do':
			GmCXt.currentIframeId = message.data.currentIframeId;
			break;

		case 'mgPlayerJSTest_action:started;task:select_existing_dom_element':
			if (GmCXt.visibleWindow(message.data)) {
				GmCXt.forwardToContentWindows(message);
				GmCXt.requestHandler.selectExistingDomElement(messageCopy.data);
			}
			break;

		case 'mgPlayerJSTest_action:started;task:select_existing_dom_element:target_frame_only':
			GmCXt.forwardToContentWindows(message);
			if (GmCXt.validateTargetFrame(message.data.iframeAttrs, message.data.frame.attributes)) {
				GmCXt.requestHandler.selectExistingDomElement(messageCopy.data);
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:set_iframe_id', {
					currentIframeId: GmCXt.id
				});
			}
			break;

		case 'mgPlayerJSTest_action:started;task:search_next_step':
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.searchDomElement(messageCopy.data);
			break;

		case 'mgPlayerJSTest_action:started;task:search_start_point':
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.searchStartPoint(messageCopy.data);
			break;

		case 'mgPlayerJSTest_action:started;task:select_dom_element_tooltips':
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.selectDomElement(messageCopy);
			break;

		case 'mgPlayerJSTest_action:task:init_new_iframe':

			if (!GmCXt.isEmpty(message.data.org)) {
				GmCXt.updateGlobalOrg(message.data.org);
			}

			if (message.data.featureTracking) GmCXt.trackerUtil.featureTracking = message.data.featureTracking;

			if (message.data.pageTracking) GmCXt.trackerUtil.pageTracking = message.data.pageTracking;

			if (message.data.sessionInfo) GmCXt.sessionInfo = message.data.sessionInfo;

			if (message.data.domainInApp) GmCXt.domainInApp = message.data.domainInApp;

			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:update_variables');

			if (message.data.activeAppSettings) {
				GmCXt.activeAppSettings = message.data.activeAppSettings;
			}
			GmCXt.requestHandler.selectExistingDomElementIframe(messageCopy.data);
			break;

		case "mgPlayerJSTest_action:command; task:trigger_step_click":
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.triggerElementClick(message);
			break;

		case 'mgPlayerJSTest_action:show_beacon_on_dom_element':
			GmCXt.forwardToContentWindows(message);

			GmCXt.highlighter.queueBeacon(messageCopy);
			break;

		case 'mgPlayerJSTest_action:show_beacon_on_dom_element:target_frame_only':
			GmCXt.forwardToContentWindows(message);
			if (GmCXt.validateTargetFrame(message.data.stepData.iframeAttrs, message.data.frame.attributes)) {
				GmCXt.highlighter.queueBeacon(messageCopy);
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:set_iframe_id:beacon', {
					tour_id: message.data.tourId,
					frameId: GmCXt.id
				});
			}
			break;

		case 'mgPlayerJSTest_action:clear_dom_outline':
			GmCXt.forwardToContentWindows(message);
			GmCXt.highlighter.removeOutline(message.data.id);
			break;

		case 'mgPlayerJSTest_action:stop_dom_highlighter':
			GmCXt.forwardToContentWindows(message);
			GmCXt.highlighter.unqueue(messageCopy.data);
			break;

		case 'mgPlayerJSTest_action:completed;task:select_dom_element_tooltips':
		case 'mgPlayerJSTest_action:completed;task:select_existing_dom_element':
		case 'mgPlayerJSTest_action:completed;task:select_dom_element_for_rules':
			if (!GmCXt.isSidePanelApp) {
				GmCXt.requestHandler.updateElementOffset(event, message);
			}
			break;

		case 'mgPlayerJSTest_action:close_step':
			// pass to the top window if current window is not the top window
			if (window.parent !== window.top) {
				GmCXt.sendToParentWindow(message);
			}
			break;

		case 'mgPlayerJSTest_action:started;task:select_dom_element_to_show_tooltip':
			GmCXt.forwardToContentWindows(message);
			GmCXt.highlighter.queueSmarttip(messageCopy);
			break;

		case 'mgPlayerJSTest_action:started;task:select_dom_element_to_show_tooltip:target_frame_only':
			GmCXt.forwardToContentWindows(message);
			if (GmCXt.validateTargetFrame(message.data.iframeAttrs, message.data.frame.attributes)) {
				GmCXt.highlighter.queueSmarttip(messageCopy);
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:set_iframe_id:tooltip', {
					step_id: message.data.step.step_id,
					frameId: GmCXt.id
				});
			}
			break;

		case 'mgPlayerJSTest_action:started;task:find_tag_elm':
			GmCXt.forwardToContentWindows(message);
			GmCXt.highlighter.queueTag(messageCopy);
			break;

		case 'mgPlayerJSTest_action:started;task:find_tag_elm:target_frame_only':
			GmCXt.forwardToContentWindows(message);
			if (GmCXt.validateTargetFrame(message.data.iframeAttrs, message.data.frame.attributes)) {
				GmCXt.highlighter.queueTag(messageCopy);
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:set_iframe_id:tag', {
					step_id: message.data.step.step_id,
					frameId: GmCXt.id
				});
			}
			break;

		case 'mgPlayerJSTest_action:bring_element_in_viewport':
		case 'mgPlayerJSTest_action:bring_element_in_viewport_edit_step':
			GmCXt.highlighter.bringElementInViewport(messageCopy.data);
			break;

		case 'mgPlayerJSTest_action:start_watcher;testMe':
			GmCXt.requestHandler.startWatcherTestMe(message.data);
			break;

		case 'mgPlayerJSTest_action:stop_watcher;testMe':
			GmCXt.requestHandler.stopWatcherTestMe();
			break;

		case 'mgPlayerJSTest_action:started;task:select_dom_element_for_rules':
			GmCXt.forwardToContentWindows(message);
			GmCXt.requestHandler.findElementToCheckDomRule(messageCopy.data);
			break;

		case 'mgPlayerJSTest_action:save_org_in_iframes':
			if (!GmCXt.isEmpty(message.data.org)) {
				GmCXt.updateGlobalOrg(message.data.org);
			}
			break;

		case 'mgPlayerJSTest_action:save_user_in_iframes':
			if (!GmCXt.isEmpty(message.data.user)) {
				GmCXt.updateGlobalUser(message.data.user);
			}
			break;

		case 'mgPlayerJSTest_action:hide_beacons':
			GmCXt.forwardToContentWindows(message);
			mg$('.mgPlayerJSTest_beacon-icon').addClass('mgPlayerJSTest_hidden');
			GmCXt.beaconsAreHidden = true;
			break;

		case 'mgPlayerJSTest_action:show_beacons':
			GmCXt.forwardToContentWindows(message);
			mg$('.mgPlayerJSTest_beacon-icon').removeClass('mgPlayerJSTest_hidden');
			GmCXt.beaconsAreHidden = false;
			break;

		case 'mgPlayerJSTest_action:remove_preview':
			GmCXt.removePreviewFrame();
			break;

		case "mgPlayerJSTest_action:clear_session":
			GmCXt.clearSession();
			break;

		case 'mgPlayerJSTest_action:hide_all_smarttip':
			GmCXt.requestHandler.hideAllSmartTip(message);
			break;

		case 'mgPlayerJSTest_action:clear_message_tooltip':
			GmCXt.forwardToContentWindows(message);
			GmCXt.highlighter.clearJob(message.data.id);
			break;

		case 'mgPlayerJSTest_action:remove_tooltip':
			GmCXt.requestHandler.removeToolip(message.data);
			break;

		case 'mgPlayerJSTest_action:show_all_smarttip':
			GmCXt.updateFrameOffsetsForSmarttip(message);
			mg$('.mgPlayerJSTest_smarttip-icon').show();
			GmCXt.smarttipAreHidden = false;
			break;

		case 'mgPlayerJSTest_action:hide_smarttip_delay':
			if (window.self !== window.top) {
				GmCXt.sendToParentWindow(message);
			}
			break;

		case 'mgPlayerJSTest_action:show_preview_smarttip':
			mg$('.mgPlayerJSTest_smarttip-icon-wrapper-' + message.data.id).removeClass('tooltip-hidden');
			break;

		case 'mgPlayerJSTest_action:show_preview_beacon':
			mg$('.mgPlayerJSTest_beacon-icon-tour-' + message.data.id).show();
			break;

		case 'mgPlayerJSTest_action:forward;remove_active_smarttip_beacon':
			GmCXt.requestHandler.removeSmarttipBeacon(message.data.idList);
			break;

		case 'mgPlayerJSTest_action:smarttip_preview_on':
			GmCXt.forwardToContentWindows(message);
			GmCXt.smartTipPreviewOn = true;
			break;

		case 'mgPlayerJSTest_action:insert_power_html':
			GmCXt.highlighter.insertPowerForm(message.data);
			break;

		case 'mgPlayerJSTest_action:update_tracking_info:frames':
			GmCXt.forwardToContentWindows(message);

			GmCXt.trackerUtil = GmCXt.trackerUtil || {};
			GmCXt.trackerUtil.trackPI = message.data.trackPI;
			GmCXt.trackerUtil.featureTracking =  message.data.featureTracking;
			GmCXt.trackerUtil.pageTracking =  message.data.pageTracking;
			break;

		case 'mgPlayerJSTest_action:remove_beacon_job':
			GmCXt.highlighter.removeBeaconJob(message.data.tourId);
			break;

		case 'mgPlayerJSTest_action:clear_rule_jobs':
			GmCXt.forwardToContentWindows(message);

			var init = message.data.initiator || '';
			var triggerSource = message.data.trigger || '';

			GmCXt.highlighter.clearRuleJobs(init, triggerSource);
			break;

		case "mgPlayerJSTest_action:update_app_settings":
			GmCXt.activeAppSettings = message.data.activeAppSettings;
			break;

		case 'mgPlayerJSTest_action:sync_playerinstance_for_automation':
			GmCXt.playerI = message.data.playerInstance;
			break;

		case 'mgPlayerJSTest_action:request_dom_tracker_info':
			GmCXt.shareDomTrackerInfo();
			break;

		case 'mgPlayerJSTest_action:reset_dom_tracker':
			GmCXt.resetElTrackerVariable();
			break;

		case 'mgPlayerJSTest_action:empty_user_on_logout_in_iframes':
			
			GmCXt.user = false;
			break;

		default:
	}
};

GmCXt.listenIframePlayer = function(event) {
	event = mg$.extend({}, event);
	if (GmCXt.verifyMsg(event))
		GmCXt.processIframePlayer(event);
};
function domFinder(elem, elemPath) {

	var de = null;

	// Find element by id

	if (elem.id) {

		if (elem.id.indexOf(":") !== -1) {
			de = document.getElementById(elem.id);

		} else {

			de = mg$('#' + elem.id);

			//pull a native DOM element from a jQuery object
			if (de) {
				de = de[0];
			}
		}

		if (!(de && de.title === elem.title &&
				de.name === elem.name &&
				de.type === elem.type &&
				de.tagName === elem.tagName)) {
			de = null;
		}
	}

	if (de === null) {

		// Find element by its tag and classname and match its innerHTML

		var elements = [];

		if (elem.origClassName && typeof(elem.origClassName) !== 'object') {

			elem.origClassName = elem.origClassName.trim();
			if (elem.origClassName) {
				var arr = elem.origClassName.split(' ');
				var newArr = [];
				for (var i = 0; i < arr.length; i++) {
					var str = arr[i].trim();
					if (str.length) {
						newArr[newArr.length] = str;
					}
				}
				var classString = newArr.join('.');
				elements = mg$(elem.tagName + "." + classString);
			}
		}

		if (elements.length === 0 && elem.className && typeof(elem.className) !== 'object') {

			elem.className = elem.className.trim();
			if (elem.className) {
				var arr = elem.className.split(' ');
				var newArr = [];
				for (var i = 0; i < arr.length; i++) {
					var str = arr[i].trim();
					if (str.length) {
						newArr[newArr.length] = str;
					}
				}
				var classString = newArr.join('.');
				elements = mg$(elem.tagName + "." + classString);
			}
		}

		var count_ = 0;
		var selectedElements = [];

		if (elements.length) {
			for (var i = 0, j = elements.length; i < j; i++) {
				var einnerHTML = elements[i].innerHTML;
				var title = elements[i].title;
				var href = elements[i].getAttribute("href");
				var src = elements[i].getAttribute("src");
				var name = elements[i].name;
				var type = elements[i].type;
				var innerText = elements[i].innerText;

				if (elem.href === undefined || elem.href === '') {
					elem.href = null;
				}
				if (elem.src === undefined || elem.src === '') {
					elem.src = null;
				}

				if (einnerHTML.replace(/\s/g, '') == elem.innerHTML.replace(/\s/g, '') &&
					title === elem.title &&
					href === elem.href &&
					src === elem.src &&
					name === elem.name &&
					type === elem.type
				) {
					de = elements[i];
					selectedElements.push(de);
					count_++;
				} else if (innerText && elem.innerText &&
					(innerText.trim() == elem.innerText.trim()) &&
					title === elem.title &&
					href === elem.href &&
					src === elem.src &&
					name === elem.name &&
					type === elem.type
				) {
					de = elements[i];
					selectedElements.push(de);
					count_++;
				}
			}
		}
	}

	if (elemPath && (de === null)) {

		// Find element at level specified by jsPath

		if (de === null) {
			var jsPath = elemPath.jsPath,
				parent = document;
			if (parent && jsPath.length) {
				de = getSelectedDOMElement(elem, parent, jsPath);
			}
		}

		if (de === null) {
			if (elemPath.jsFromNearestParentHavingId &&
				elemPath.jsFromNearestParentHavingId.length) {

				var jsPath = elemPath.jsFromNearestParentHavingId,
					parent = document.getElementById(elemPath.nearestParentId);
				if (parent && jsPath.length) {
					de = getSelectedDOMElement(elem, parent, jsPath);
				}
			}
		}

	}

	return de;
}

function getSelectedDOMElement(elem, parent, jsPath) {

	var de = null,
		i, k, len;

	if (parent) {
		for (k = 0; k < jsPath.length; ++k) {
			for (i = 0, len = parent.childNodes.length; i < len; ++i) {
				if (parseInt(jsPath[k]) == i) {
					parent = parent.childNodes[i];
					break;
				}
			}
		}
	}

	if (parent instanceof Element) {

		var elementClassName = "";
		if ((typeof(elem.className) === 'object')) {
			elementClassName = "";
		} else if ((typeof(elem.className) === 'string')) {
			elementClassName = elem.className.trim();
		} else {
			elementClassName = elem.className;
		}

		var parentClassName = "";
		if ((typeof(parent.className) === 'object')) {
			parentClassName = "";
		} else if ((typeof(parent.className) === 'string')) {
			parentClassName = parent.className.trim();
		} else {
			parentClassName = parent.className;
		}

		if (de === null &&
			elem.title == parent.title &&
			elem.name == parent.name &&
			elem.type == parent.type &&
			elem.tagName == parent.tagName &&
			elementClassName == parentClassName) {

			de = parent;
		}
	}

	return de;
}

function checkAttributes(element1, element2) {
	var returnValue = false;
	if (
		(element1.tagName == element2.tagName) &&
		(element1.title == element2.title) &&
		(element1.src == element2.getAttribute("src")) &&
		(element1.href == element2.getAttribute("href")) &&
		(element1.name == element2.name) &&
		(element1.type == element2.type)
	) {
		if ((element1.tagName == 'input') &&
			((element1.type == 'submit') || (element1.type == 'button') || (element1.type == 'hidden'))
		) {

			if (element1.value == element2.value)
				returnValue = true;
			else
				returnValue = false;
		} else {
			returnValue = true;
		}
	}

	return returnValue;
}

function findElementByLabel(elem) {
	var labelText = "";
	var placeholder = "";
	var de = null;
	var matchedElements = [];

	if (elem && elem.innerText && elem.innerText.trim().length) {
		labelText = elem.innerText.trim();
	}

	if (elem && elem.placeholder && elem.placeholder.trim().length) {
		placeholder = elem.placeholder.trim();
	}

	if (labelText.length || placeholder.length) {
		var elements = document.body.getElementsByTagName("*");
		var len = elements.length;
		for (var i = 0; i < len; i++) {
			var element = elements[i];
			if (element && element.innerText) {
				var elementLabelText = element.innerText.trim();
				if ((elementLabelText == labelText) && checkAttributes(elem, element)) {
					matchedElements.push(element);
				}
			} else if (element && element.placeholder) {
				var elementPlaceholder = element.placeholder.trim();
				if ((placeholder == elementPlaceholder) && checkAttributes(elem, element)) {
					matchedElements.push(element);
				}
			}
		}
	}

	if (matchedElements.length && (matchedElements.length == 1)) {
		de = matchedElements[0];
	}

	return de;
}

function findElementByParentLabel(elem, parentData) {

	var de = null;
	var matchedElements = [];

	var elements = document.body.getElementsByTagName("*");
	var len = elements.length;
	for (var i = 0; i < len; i++) {
		var element = elements[i];
		if (element && element.textContent) {
			var elementLabelText = element.textContent.trim();
			if ((elementLabelText == parentData.innerText) && checkAttributes(parentData, element)) {
				matchedElements.push(element);
			}
		}
	}

	if (matchedElements.length && matchedElements.length == 1) {
		de = matchedElements[0];
		de = findElementUsingParentElement(elem, de);
	}

	return de;
}

function findElementUsingParentElement(elem, parentElement) {
	var de = null;
	var elements = [];

	//Match Element using id
	if (elem.id) {
		elements = mg$(parentElement).find(elem.tagName + "#" + elem.id);
		if (elements.length) {

			if (elements.length == 1) {
				de = elements[0];
			}

			if (!(de && (de.title == elem.title) &&
					(de.type == elem.type) &&
					(de.src == elem.src) &&
					(de.placeholder == elem.placeholder)
				)) {
				de = null;
			}
		}
	}

	if (elem.origClassName && typeof(elem.origClassName) !== 'object') {

		elem.origClassName = elem.origClassName.trim();
		if (elem.origClassName) {
			var arr = elem.origClassName.split(' ');
			var newArr = [];
			for (var i = 0; i < arr.length; i++) {
				var str = arr[i].trim();
				if (str.length) {
					newArr[newArr.length] = str;
				}
			}
			var classString = newArr.join('.');
			elements = mg$(parentElement).find(elem.tagName + "." + classString);
		}
	}

	if (elements.length === 0 && elem.className && typeof(elem.className) !== 'object') {

		elem.className = elem.className.trim();
		if (elem.className) {
			var arr = elem.className.split(' ');
			var newArr = [];
			for (var i = 0; i < arr.length; i++) {
				var str = arr[i].trim();
				if (str.length) {
					newArr[newArr.length] = str;
				}
			}
			var classString = newArr.join('.');
			elements = mg$(parentElement).find(elem.tagName + "." + classString);
		}
	}

	if (elements.length) {
		if (elements.length == 1) {
			de = elements[0];
		} else {
			var selectedElements = [];
			for (var i = 0, j = elements.length; i < j; i++) {
				var einnerHTML = elements[i].innerHTML;
				var title = elements[i].title;
				var href = elements[i].getAttribute("href");
				var src = elements[i].getAttribute("src");
				var name = elements[i].name;
				var type = elements[i].type;
				var innerText = elements[i].innerText;

				if (einnerHTML.replace(/\s/g, '') == elem.innerHTML.replace(/\s/g, '') &&
					title === elem.title &&
					href === elem.href &&
					src === elem.src &&
					name === elem.name &&
					type === elem.type
				) {
					selectedElements.push(elements[i]);
				} else if (innerText && elem.innerText &&
					(innerText.trim() == elem.innerText.trim()) &&
					title === elem.title &&
					href === elem.href &&
					src === elem.src &&
					name === elem.name &&
					type === elem.type
				) {
					selectedElements.push(elements[i]);
				}
			}

			if (selectedElements.length == 1) {
				de = selectedElements[0];
			}
		}
	}

	if (de == null || de === undefined) {
		selectedElements = [];
		var elements = mg$(parentElement).find(elem.tagName);
		if (elements.length) {
			for (var j = 0; j < elements.length; j++) {
				var element = elements[j];
				if (checkAttributes(elem, element)) {
					selectedElements.push(element);
				}
			}

			if (selectedElements.length && selectedElements.length == 1) {
				de = selectedElements[0];
			}
		}
	}

	return de;
}

GmCXt.dom1334 = {};
GmCXt.dom1334.matchDepth = 10;
GmCXt.dom1334.skipMatchAttributes = null;

GmCXt.dom1334.setDefaultCriteria = function() {
	GmCXt.dom1334.matchCriteria = {
		precision_type: GmCXt.DOM_CRITERIA_DEFAULT,
		jquery_selector: null,
		matchAttributes: null
	};
};

GmCXt.dom1334.reset = function() {
	GmCXt.dom1334.setDefaultMatchAttributes();

	GmCXt.dom1334.matchDepth = 10;
	GmCXt.dom1334.he = null;
	GmCXt.dom1334.elementpath = null;
	GmCXt.dom1334.idMatchFound = false;
	GmCXt.dom1334.textPropertyName = '';
	GmCXt.dom1334.textPropertyValue = ''; // When found it is element's placeholder or value or textContent
};

GmCXt.dom1334.setSkipMatchAttributes = function(skipAttributes) {

	// Skips dynamic attributes
	GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchAttributes.filter(function(attribute) {
		return !skipAttributes.includes(attribute);
	});
};

GmCXt.dom1334.addSalesforceAttibutes = function(attrs) {
	if (GmCXt.checkSalesForceSite())
		GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchAttributes.concat(attrs);
};

GmCXt.dom1334.addWorkdayAttibutes = function() {
	var attrs = ["data-automation-id"];

	if (GmCXt.checkWorkdaySite())
		GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchAttributes.concat(attrs);
};

GmCXt.dom1334.addGmailAttributes = function() {
	var attrs = ["role", "aria-label", "data-tooltip"];

	if (GmCXt.checkGmailSite())
		GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchAttributes.concat(attrs);
};

GmCXt.dom1334.setDefaultMatchAttributes = function() {

	GmCXt.dom1334.matchAttributes = ["id", "class", "title", "href", "src", "name", "type", "alt", "text"];

	var salesforceAttibutes = ["data-type", "data-feed-type", "data-aura-class", "data-ngname", "data-href", "data-src"];

	GmCXt.dom1334.addWorkdayAttibutes();
	GmCXt.dom1334.addSalesforceAttibutes(salesforceAttibutes);
	GmCXt.dom1334.addGmailAttributes();
	GmCXt.dom1334.addHtml5Attributes();

	if (GmCXt.dom1334.skipMatchAttributes !== null && GmCXt.dom1334.skipMatchAttributes.js !== null) {
		GmCXt.dom1334.setSkipMatchAttributes(GmCXt.dom1334.skipMatchAttributes.js);
	}
};

GmCXt.dom1334.setJs1MatchAttributes = function() {

	GmCXt.dom1334.matchAttributes = ["class", "name", "type", "alt", "text"];

	var salesforceAttibutes = ["data-type", "data-feed-type", "data-aura-class", "data-ngname"];

	GmCXt.dom1334.addSalesforceAttibutes(salesforceAttibutes);
	GmCXt.dom1334.addHtml5Attributes();

	if (GmCXt.dom1334.skipMatchAttributes !== null && GmCXt.dom1334.skipMatchAttributes.js1 !== null) {
		GmCXt.dom1334.setSkipMatchAttributes(GmCXt.dom1334.skipMatchAttributes.js1);
	}
};

GmCXt.dom1334.setJs2MatchAttributes = function() {

	GmCXt.dom1334.matchAttributes = ["id", "title", "href", "src", "name", "type", "alt", "text"];

	var salesforceAttibutes = ["data-type", "data-aura-class", "data-href", "data-src"];

	GmCXt.dom1334.addSalesforceAttibutes(salesforceAttibutes);
	GmCXt.dom1334.addGmailAttributes();
	GmCXt.dom1334.addHtml5Attributes();

	if (GmCXt.dom1334.skipMatchAttributes !== null && GmCXt.dom1334.skipMatchAttributes.js2 !== null) {
		GmCXt.dom1334.setSkipMatchAttributes(GmCXt.dom1334.skipMatchAttributes.js2);
	}
};

GmCXt.dom1334.setJs3MatchAttributes = function() {

	GmCXt.dom1334.matchAttributes = ["title", "href", "src", "name", "type", "alt", "text"];

	var salesforceAttibutes = ["data-type", "data-feed-type", "data-ngname", "data-href", "data-src"];

	GmCXt.dom1334.addWorkdayAttibutes();
	GmCXt.dom1334.addSalesforceAttibutes(salesforceAttibutes);
	GmCXt.dom1334.addHtml5Attributes();

	if (GmCXt.dom1334.skipMatchAttributes !== null && GmCXt.dom1334.skipMatchAttributes.js3 !== null) {
		GmCXt.dom1334.setSkipMatchAttributes(GmCXt.dom1334.skipMatchAttributes.js3);
	}
};

/*
    This function sets any attributes configured by user in user settings,
    for matching purpose
*/
GmCXt.dom1334.addHtml5Attributes = function() {
	if (GmCXt.orgSettings) {
		var setting_data = GmCXt.parseJSON(GmCXt.orgSettings);

		if (setting_data && setting_data.matchAlgo &&
			setting_data.matchAlgo.html5Attributes != "") {

			var html5Attributes = setting_data.matchAlgo.html5Attributes.split(",");
			GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchAttributes.concat(html5Attributes);
		}
	}
};

GmCXt.dom1334.getElementPos = function(he) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getElementPos', arguments);

	var rect = he.getBoundingClientRect();
	rect = GmCXt.dom1334.getElementOffset(rect);
	var cssPosition = GmCXt.dom1334.getElementFixedPosition(he);

	var returnValue = {
		position: rect,
		cssPosition: cssPosition
	};

	return GmCXt.l.return(returnValue);
};

/*
    This functions is used to create element data including meta data and  js selectors
    Called from following locations:
     - Step element
     - Tooltip element
     - SmartTip element
     - Becaon element
*/

GmCXt.dom1334.getElement = function(he, criteria, frame) {

	GmCXt.l.reset();
	GmCXt.l.start('function', 'GmCXt.dom1334.getElement', arguments);

	GmCXt.dom1334.reset();

	GmCXt.dom1334.he = he;

	if (!criteria) {
		GmCXt.dom1334.setDefaultCriteria();
	} else {
		GmCXt.dom1334.matchCriteria = criteria;
	}

	var precisionType = GmCXt.dom1334.matchCriteria.precision_type;

	var selector = {
		js: null,
		js1: null,
		js2: null,
		js3: null,
		css: null
	};

	var meta = {
		inTopWindow: (window.self === window.top) ? true : false,
		iframeUrl: GmCXt._location().hostname + GmCXt._location().pathname,
		iframePath: GmCXt._location().pathname,
		iframeTitle: frame.iframeTitle,
		iframeScheme: GmCXt.getUrlScheme(),
		attributes: {}
	};

	GmCXt.dom1334.setTextProperties(he);

	if (precisionType === GmCXt.DOM_CRITERIA_JQUERY) {

		GmCXt.l.add('getElement > jQuery Selector');

		var nodes = GmCXt.dom1334.query(null, GmCXt.dom1334.matchCriteria.jquery_selector);
		meta.score = GmCXt.isOne(nodes) ? 5 : 0;

	} else if (precisionType === GmCXt.DOM_CRITERIA_CUSTOM) {

		GmCXt.l.add('getElement > Custom Selector');

		GmCXt.dom1334.matchAttributes = GmCXt.dom1334.matchCriteria.matchAttributes;

		meta.path = GmCXt.dom1334.getElemPaths(he);
		selector.js = GmCXt.dom1334.getJsSelector(he, meta, true, 'js');

		if (GmCXt.dom1334.matchAttributes.length > 0) {
			meta.score = GmCXt.dom1334.getScore();
		} else {
			meta.score = 0;
		}

	} else if (precisionType === GmCXt.DOM_CRITERIA_DEFAULT) {

		GmCXt.l.add('getElement > Default Selector');

		meta.path = GmCXt.dom1334.getElemPaths(he);

		selector.js = GmCXt.dom1334.getJsSelector(he, meta, true, 'js');

		GmCXt.dom1334.setJs1MatchAttributes();
		selector.js1 = GmCXt.dom1334.getJsSelector(he, meta, false, 'js1');

		GmCXt.dom1334.setJs2MatchAttributes();
		selector.js2 = GmCXt.dom1334.getJsSelector(he, meta, false, 'js2');

		GmCXt.dom1334.setJs3MatchAttributes();
		selector.js3 = GmCXt.dom1334.getJsSelector(he, meta, false, 'js3');

		var selectorCount = GmCXt.dom1334.removeDuplicates(selector);

		meta.score = GmCXt.dom1334.revaluateScore(selectorCount);

	} else {
		GmCXt.l.add('getElement > Identify by Text');

		meta.score = 5;
		// Rest of the processing for identify by text is done by default, 
		// irrespective of the selection of precision type
	}

	// Processing for Identify by text
	GmCXt.dom1334.setIdentifyByTextInfo(he, meta);

	var customSettings = GmCXt.dom1334.getCustomSettings(he);

	var rect = he.getBoundingClientRect();
	rect = GmCXt.dom1334.getElementOffset(rect);

	rect.windowWidth = mg$(window).width();
	rect.windowHeight = mg$(window).height();

	var cssPosition = GmCXt.dom1334.getElementFixedPosition(he);
	// Resets GmCXt.dom1334.skipMatchAttributes
	GmCXt.dom1334.skipMatchAttributes = null;

	var returnValue = {
		version: GmCXt.conf.version,
		selector: selector,
		meta: meta,
		criteria: GmCXt.dom1334.matchCriteria,
		customSettings: customSettings,
		position: rect,
		cssPosition: cssPosition,
		appName: GmCXt.conf.appName,
		xpath: GmCXt.dom1334.getXPath(he)
	};

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.getCustomSettings = function(he) {
	var settings = {};
	var tempHe = he;
	if (GmCXt.checkSalesForceSite()) {
		var salesforce = {};
		var level = 7; // Check for thead upto 7 levels up
		for (var i = 0; i < level; i++) {

			if (tempHe.tagName === 'BODY') break;

			if (tempHe.tagName === 'THEAD') {
				salesforce.tableCategory = 1;

				if (tempHe.parentNode.childNodes.length === 1) {
					salesforce.tableCategory = 2;
					break;
				}
				break;
			} else if (tempHe.tagName === 'TBODY') {
				if (mg$(tempHe).children().first().hasClass('headerRow')) {
					salesforce.tableCategory = 3;
					break;
				}
			}
			tempHe = tempHe.parentNode;
		}

		var rows = GmCXt.getTableRowsFromHeader(tempHe, salesforce.tableCategory);

		if (rows && mg$(rows).length) {
			settings.salesforce = GmCXt.dom1334.checkColumn(rows, he, salesforce);
		}
	}

	return settings;
};

GmCXt.dom1334.checkColumn = function(rows, he, salesforce) {

	while (he.tagName !== 'TH' && he.tagName !== 'TD') {

		if (he.tagName === 'BODY') break;

		he = he.parentNode;
	}

	if (he && he.tagName !== 'BODY') {
		var columnIndex = mg$(he).parent().children().index(mg$(he));

		for (var i = 0; i < rows.length; i++) {
			var columns = mg$(rows[i]).children();
			if (columns.eq(columnIndex).find('a').length) {
				salesforce.columnIndex = columnIndex;
				salesforce.isClickable = true;
				break;
			}
		}
	}

	return salesforce;
};

GmCXt.dom1334.removeDuplicates = function(selector) {
	var count = 4;

	if (GmCXt.dom1334.isEqual(selector.js3, selector.js) ||
		GmCXt.dom1334.isEqual(selector.js3, selector.js1) ||
		GmCXt.dom1334.isEqual(selector.js3, selector.js2)) {
		selector.js3 = null;
		count--;
	}

	if (GmCXt.dom1334.isEqual(selector.js2, selector.js) ||
		GmCXt.dom1334.isEqual(selector.js2, selector.js1)) {
		selector.js2 = null;
		count--;
	}

	if (GmCXt.dom1334.isEqual(selector.js1, selector.js)) {
		selector.js1 = null;
		count--;
	}

	return count;
};

GmCXt.dom1334.revaluateScore = function(selectorCount) {

	var score = GmCXt.dom1334.getScore();

	if (selectorCount === 2)
		score -= 1;
	else if (selectorCount === 1)
		score -= 2;

	if (score < 1) score = 1;

	return score;
};

GmCXt.dom1334.isEqual = function(a1, a2) {
	if (a1 && a2) {
		if (JSON.stringify(a1) === JSON.stringify(a2))
			return true;
	}
	return false;
};

GmCXt.dom1334.setTextProperties = function(he) {
	if (!GmCXt.dom1334.textPropertyName && he.textContent) {
		GmCXt.dom1334.textPropertyName = 'textContent';
		GmCXt.dom1334.textPropertyValue = he.textContent;
	}

	if (he.tagName === 'INPUT' || he.tagName === 'BUTTON') {
		var value = he.getAttribute('value');
		var placeholder = he.getAttribute('placeholder');

		if (value && (he.type === 'submit' || he.type === 'button')) {
			GmCXt.dom1334.textPropertyName = 'value';
			GmCXt.dom1334.textPropertyValue = value;
		} else if (placeholder) {
			GmCXt.dom1334.textPropertyName = 'placeholder';
			GmCXt.dom1334.textPropertyValue = placeholder;
		}
	}
};

GmCXt.dom1334.getXPath = function(element) {
	if (element.id)
		return '//*[@id="' + element.id + '"]';
	if (element === document.body)
		return element.tagName + '/';

	var ix = 0;

	if (element.parentNode) {
		var siblings = element.parentNode.childNodes;
		for (var i = 0; i < siblings.length; i++) {
			var sibling = siblings[i];
			if (sibling === element)
				return GmCXt.dom1334.getXPath(element.parentNode) + '/' + element.tagName + '[' + (ix + 1) + ']';
			if (sibling.nodeType === 1 && sibling.tagName === element.tagName)
				ix++;
		}
	}
};

GmCXt.dom1334.calculateScore = function(depth) {

	GmCXt.l.start('function', 'GmCXt.dom1334.calculateScore', arguments);

	GmCXt.dom1334.score = 0;

	if (depth > 0) {

		if (depth === GmCXt.dom1334.matchDepth) {
			GmCXt.dom1334.score = 5;

		} else if (depth > 7) {
			GmCXt.dom1334.score = 4;

		} else if (depth > 4) {
			GmCXt.dom1334.score = 3;

		} else if (depth > 2) {
			GmCXt.dom1334.score = 2;

		} else {
			GmCXt.dom1334.score = 1;
		}
	}

	GmCXt.l.end(GmCXt.dom1334.score);
};

GmCXt.dom1334.getScore = function() {
	return GmCXt.dom1334.score;
};

/*
    This function is used to find/select any element matching selectors and criteria configured while creating step.
    This is called from highlighter to select following element:
     - Step element
     - SmartTip element
     - Tooltip element
     - Becaon element     
*/

GmCXt.dom1334.migrateCustomSelectorCriteria = function(criteria) {
	if (criteria.precision_type === GmCXt.DOM_CRITERIA_JQUERY && criteria.jquery_selector_builder) {
		criteria.precision_type = GmCXt.DOM_CRITERIA_CUSTOM;
		criteria.jquery_selector = null;
		delete criteria.jquery_selector_builder;
	}
};

GmCXt.dom1334.finder = function(de, frame, log_stepInfo) {

	GmCXt.l.start('function', 'GmCXt.dom1334.finder', arguments);

	var he = null;
	var nodes = null;

	/*if (window.self !== window.top &&
		(typeof de.meta.iframePath !== 'undefined' && de.meta.iframePath !== GmCXt._location().pathname) &&
		(typeof de.meta.iframeTitle !== 'undefined' && de.meta.iframeTitle !== frame.iframeTitle)) {
		return null;
	}*/

	// If element is not in top window then do not find it in top window 
	if (window.self === window.top && de.meta.inTopWindow === false) {
		return null;
	}
	if (log_stepInfo) GmCXt.l.add(log_stepInfo, true);

	GmCXt.dom1334.migrateCustomSelectorCriteria(de.criteria);

	GmCXt.dom1334.matchCriteria = de.criteria;
	var selector = mg$.extend(true, {}, de.selector);
	var c = GmCXt.dom1334.matchCriteria;

	if (c.precision_type === GmCXt.DOM_CRITERIA_JQUERY) {

		GmCXt.l.add('Selector: jQuery – ' + c.jquery_selector, true);

		nodes = GmCXt.dom1334.query(null, c.jquery_selector);

		if (GmCXt.isOne(nodes)) he = nodes[0];
	} else if (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM) {

		GmCXt.l.add('Selector: Custom – ' + GmCXt.dom1334.matchCriteria.matchAttributes.join(', '), true);

		he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Strict_Unique_NoTextMatch);
	} else if (c.precision_type === GmCXt.DOM_CRITERIA_DEFAULT) {

		GmCXt.l.add('Selector: Default; Precision: ' + c.precision_level + (c.ignoreText ? 'Ignore Text is checked' : ''), true);

		if (!c.ignoreText)
			he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Unique_TextMatch);

		if (he === null)
			he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Strict_Unique_NoTextMatch);

		if (c.precision_level === "Low") {
			if (he === null)
				he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Flex_Unique_NoTextMatch);

			if (he === null)
				he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Flex_NotUnique_NoTextMatch);
		}
	}

	// Run identifyByText in all cases if element not found for elements with text Content.
	// Check if meta has the property 'textNode' (For steps created after the property was introduced)

	if (c.precision_type === GmCXt.DOM_CRITERIA_TEXT || !c.ignoreText) {
		if (he === null && de.meta.textPropertyValue) {
			if (de.meta.hasOwnProperty('textNode')) {

				GmCXt.l.add("Executing 'Identify By Text' for – " + de.meta.textPropertyValue, true);

				if (de.meta.textNode.position) {
					he = GmCXt.dom1334.identifyByTextNodePosition(de.meta);
				}

				if (he === null && de.meta.textNode.jquery_selector) {
					he = GmCXt.dom1334.executeTextBasedJquery(de.meta.textNode.jquery_selector, de.meta.textPropertyValue);
				}

			} else {

				GmCXt.l.add('Identify By Text (old Method) – ' + de.meta.textPropertyValue, true);

				he = GmCXt.dom1334.identifyByText(de, selector);

				if (he === null && c.precision_type === GmCXt.DOM_CRITERIA_TEXT)
					he = GmCXt.dom1334.findElem(de, selector, GmCXt.dom1334.findElem_Unique_TextMatch);
			}
		}
	}

	var returnValue = he;
	if (he === null) {
		GmCXt.l.addRCA(c.precision_type, de.meta);

		if (de.selector1) {

			GmCXt.l.add('Not found using the current selector, trying another selector . . .');

			var tempDe = mg$.extend(true, {}, de);
			tempDe.selector = de.selector1;
			delete tempDe.selector1;

			returnValue = GmCXt.dom1334.finder(tempDe, frame, log_stepInfo);
		}
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.findElem = function(de, selector, cb) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findElem', arguments);

	GmCXt.l.add('Finding using function: ' + cb.name, true);

	var he = null;

	for (var jsSelectorKey in selector) {

		if (jsSelectorKey !== 'css' && selector[jsSelectorKey]) {

			he = cb(de, selector[jsSelectorKey]);

			var logStr = (he ? "> ELEMENT FOUND" : "> Element not found") + " by selector '" + jsSelectorKey + "'";

			// Older steps will not have the key 'attributes' in meta
			if (de.meta.attributes) {
				var attr = de.meta.attributes[jsSelectorKey];
				if (attr) {
					logStr += ' containing attributes: ' + attr.join(', ');
				} else {
					logStr += ' with no attributes; only path as the reference';
				}
			}

			GmCXt.l.add(logStr, true);

			if (he) break;
		}
	}

	return GmCXt.l.return(he);
};

GmCXt.dom1334.identifyByText = function(de, selector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.identifyByText', arguments);

	var he = null;
	var textProperty = de.meta.textPropertyName;

	var newSelector = GmCXt.dom1334.getIdByTextSelector(selector, textProperty);

	he = GmCXt.dom1334.identifyByTextGetEl(de, newSelector, true);

	if (he === null) he = GmCXt.dom1334.identifyByTextGetEl(de, newSelector, false);

	return GmCXt.l.return(he);
};

GmCXt.dom1334.identifyByTextGetEl = function(de, newSelector, visible) {

	GmCXt.l.start('function', 'GmCXt.dom1334.identifyByTextGetEl', arguments);

	if (visible) newSelector += ":visible";

	var he = null;
	var nodes = mg$(document).find(newSelector);
	var prop = de.meta.textPropertyName;

	if (nodes) {

		if (nodes.length && prop === 'textContent') {
			nodes = GmCXt.dom1334.filterTextNodes(nodes, de.meta.textPropertyValue);
		}

		nodes = GmCXt.dom1334.filterParentTextEl(nodes, de.meta.textPropertyValue);

		if (GmCXt.isMany(nodes)) he = nodes[0];
	}

	return GmCXt.l.return(he);
};

// This function remove all parent elements with same text for intentify by text elements.
GmCXt.dom1334.filterParentTextEl = function(nodes, text) {

	GmCXt.l.start('function', 'GmCXt.dom1334.filterParentTextEl', arguments);

	var text = text.trim().toLowerCase();

	nodes.filter(function(index, node) {
		mg$(node).parents().addClass('mgPlayerJSTest_dummy-class');
	});

	nodes = nodes.filter(function(index, node) {
		if (node.innerText) {
			var nodeText = node.innerText.trim().toLowerCase();
			return nodeText === text && !mg$(node).hasClass('mgPlayerJSTest_dummy-class');
		}
	});

	mg$('.mgPlayerJSTest_dummy-class').removeClass('mgPlayerJSTest_dummy-class');

	return GmCXt.l.return(nodes);
};

GmCXt.dom1334.getIdByTextSelector = function(jsSelector, prop) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getIdByTextSelector', arguments);

	var newSel = "";

	if (jsSelector.js) {

		var selector = jsSelector.js.slice(0, 1);

		var attributes = GmCXt.dom1334.getAttributes(selector);
		attributes = attributes[0];

		switch (prop) {

			case "value":
				newSel = attributes.tagName + "[value=" + attributes.value + "]";
				break;

			case "placeholder":
				newSel = attributes.tagName + "[placeholder=" + attributes.placeholder + "]";
				break;

			case "textContent":
				newSel = attributes.tagName;
				break;
		}

		if (attributes.type)
			newSel = newSel + "[type=" + attributes.type + "]";
	}

	return GmCXt.l.return(newSel);
};

GmCXt.dom1334.findElem_Unique_TextMatch = function findElem_Unique_TextMatch(de, jsSelector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findElem_Unique_TextMatch', arguments);

	var he = null;
	var nodes = null;
	var uniquePI = GmCXt.dom1334.getUniqueParentIndex(jsSelector);

	GmCXt.l.add('Unique Parent Index: ' + uniquePI);

	nodes = GmCXt.dom1334.strictTraverse(de, jsSelector, uniquePI);

	if (GmCXt.isMany(nodes))
		he = GmCXt.dom1334.filterByText(de, nodes);

	if (he === null) {

		var o = GmCXt.dom1334.flexibleTraverse(de, jsSelector, uniquePI);

		if (o) {

			if (GmCXt.isMany(o.nodes))
				he = GmCXt.dom1334.filterByText(de, o.nodes);

			if (he === null) {

				nodes = GmCXt.dom1334.removeEqAndQuery(o.parentEl, jsSelector[0]);

				if (GmCXt.isMany(nodes))
					he = GmCXt.dom1334.filterByText(de, nodes);
			}
		}
	}

	if (he === null)
		he = GmCXt.dom1334.findInUniqueParents(de, jsSelector, 'text');

	return GmCXt.l.return(he);
};

GmCXt.dom1334.removeEqAndQuery = function(el, selector, children) {
	var nodes;
	selector = GmCXt.dom1334.removeEq(selector);

	if (selector) {
		GmCXt.l.add('Removed eq & querying.');
		nodes = GmCXt.dom1334.query(el, selector, children);
	}
	return nodes;
};

GmCXt.dom1334.findElem_Strict_Unique_NoTextMatch = function findElem_Strict_Unique_NoTextMatch(de, jsSelector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findElem_Strict_Unique_NoTextMatch', arguments);

	var returnValue = null;

	var uniquePI = GmCXt.dom1334.getUniqueParentIndex(jsSelector);

	GmCXt.l.add('Unique Parent Index: ' + uniquePI);

	nodes = GmCXt.dom1334.strictTraverse(de, jsSelector, uniquePI);

	if (GmCXt.isOne(nodes))
		returnValue = nodes[0];

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.findElem_Flex_Unique_NoTextMatch = function findElem_Flex_Unique_NoTextMatch(de, jsSelector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findElem_Flex_Unique_NoTextMatch', arguments);

	var he = null;
	var nodes = null;
	var uniquePI = GmCXt.dom1334.getUniqueParentIndex(jsSelector);

	GmCXt.l.add('Unique Parent Index: ' + uniquePI);

	var o = GmCXt.dom1334.flexibleTraverse(de, jsSelector, uniquePI);

	if (o) {
		nodes = o.nodes;

		nodes = GmCXt.dom1334.beforeQuery(jsSelector);

		if (GmCXt.isZero(nodes)) {
			nodes = GmCXt.dom1334.removeEqAndQuery(o.parentEl, jsSelector[0]);
		}

		if (GmCXt.isOne(nodes)) he = nodes[0];
	}

	if (he === null) {
		GmCXt.l.add('Finding in unique parents.');
		he = GmCXt.dom1334.findInUniqueParents(de, jsSelector, 'unique');
	}

	return GmCXt.l.return(he);
};

GmCXt.dom1334.findElem_Flex_NotUnique_NoTextMatch = function findElem_Flex_NotUnique_NoTextMatch(de, jsSelector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findElem_Flex_NotUnique_NoTextMatch', arguments);

	// Pick first if there was only one at the time of element selection, 
	// but found many later.
	// Pick last if element at specified index is not found. 
	// It happens when there are less number of matching elements at find time. 

	var he = null;
	var nodes = null;
	var uniquePI = GmCXt.dom1334.getUniqueParentIndex(jsSelector);

	GmCXt.l.add('Unique Parent Index: ' + uniquePI);

	var o = GmCXt.dom1334.flexibleTraverse(de, jsSelector, uniquePI);

	if (o) {
		nodes = o.nodes;

		if (GmCXt.isMoreThanOne(nodes)) {
			nodes = GmCXt.dom1334.query(null, jsSelector[0]);

			if (GmCXt.isMany(nodes)) nodes = nodes.first();

		} else if (GmCXt.isZero(nodes)) {

			nodes = GmCXt.dom1334.removeEqAndQuery(o.parentEl, jsSelector[0]);

			if (GmCXt.isMany(nodes)) nodes = nodes.last();
		}

		if (GmCXt.isOne(nodes)) he = nodes[0];
	}

	if (he === null)
		he = GmCXt.dom1334.findInUniqueParents(de, jsSelector, 'notUnique');

	return GmCXt.l.return(he);
};

GmCXt.dom1334.filterByText = function(de, nodes) {

	var he = null;
	GmCXt.l.add('FilterByText, number of nodes: ' + nodes.length);

	if (GmCXt.isMany(nodes) && de.meta.textPropertyName === 'textContent') {
		nodes = GmCXt.dom1334.filterTextNodes(nodes, de.meta.textPropertyValue);
	}

	if (GmCXt.isOne(nodes)) {
		he = nodes[0];
		GmCXt.l.add('Found one node.');
	}

	return he;
};

GmCXt.dom1334.strictTraverse = function(de, jsSelector, uniquePI) {

	GmCXt.l.start('function', 'GmCXt.dom1334.strictTraverse', arguments);

	var returnValue = null;
	var nodes = null;
	var he = null;
	var jsSelector = GmCXt.reverse(jsSelector);
	var tot = jsSelector.length;

	for (var i = uniquePI; i < tot; i++) {
		nodes = GmCXt.dom1334.query(he, jsSelector[i], true);

		if (GmCXt.isOne(nodes)) he = nodes[0];
		else break;
	}

	var exitedInLast = (i === (tot - 1));
	var completed = (i === tot);

	if (exitedInLast && GmCXt.isZero(nodes)) {
		nodes = GmCXt.dom1334.removeEqAndQuery(he, jsSelector[i], true);
		if (nodes) nodes = nodes.first();
	}

	if (completed || exitedInLast) {
		if (nodes) {
			returnValue = nodes;
			GmCXt.l.add('Number of nodes found: ' + nodes.length);
		} else {
			GmCXt.l.add('No nodes found.');
		}
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.flexibleTraverse = function(de, jsSelector, uniquePI) {

	GmCXt.l.start('function', 'GmCXt.dom1334.flexibleTraverse', arguments);

	var returnValue = null;
	var nodes = null;
	var parentEl = null;
	var jsSelector = GmCXt.reverse(jsSelector);
	var tot = jsSelector.length;

	for (var i = uniquePI; i < tot; i++) {

		nodes = GmCXt.dom1334.query(parentEl, jsSelector[i], true);

		if (GmCXt.isOne(nodes)) {
			parentEl = nodes[0];
		} else if (parentEl !== null) {

			if (GmCXt.isZero(nodes)) {
				nodes = GmCXt.dom1334.removeEqAndQuery(parentEl, jsSelector[i], true);

				if (nodes) nodes = nodes.last();
			}

			if (GmCXt.isMany(nodes)) parentEl = nodes[0];
		} else {
			break;
		}
	}

	if (nodes && (i === tot || i === (tot - 1))) {
		GmCXt.l.add('Number of nodes found: ' + nodes.length);

		returnValue = {
			nodes: nodes,
			parentEl: parentEl
		};
	} else {
		GmCXt.l.add('No nodes found.');
	}

	return GmCXt.l.return(returnValue);
};

// Returns index of first unique parent of a step element from a selector array
GmCXt.dom1334.getUniqueParentIndex = function(jsSelector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getUniqueParentIndex', arguments);

	var depth = jsSelector.length;
	var start = 0;
	var uniquePI = null;

	while (start < depth) {

		// If unique selector OR if it is last selector
		if (jsSelector[start].indexOf(":eq(") === -1 || start === (depth - 1)) {

			uniquePI = depth - start - 1; // Calculate index in reversed selector array
			break;
		}
		start++;
	}

	return GmCXt.l.return(uniquePI);
};

GmCXt.dom1334.findInUniqueParents = function(de, jsSelector, criteria) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findInUniqueParents', arguments);

	var depth = jsSelector.length;
	var start = 0;
	var uniquePI = null;
	var nodes = null;
	var he = null;

	while (start < depth) {

		// If unique selector OR if it is last selector
		if (jsSelector[start].indexOf(":eq(") === -1 || start === (depth - 1)) {

			uniquePI = depth - start - 1; // Calculate index in reversed selector array
			nodes = GmCXt.dom1334.findInParent(de, jsSelector, uniquePI);

			if (criteria === 'unique') {
				if (GmCXt.isOne(nodes)) he = nodes[0];

			} else if (criteria === 'notUnique') {

				if (GmCXt.isMoreThanOne(nodes)) nodes = nodes.splice(0, 1);

				if (GmCXt.isOne(nodes)) he = nodes[0];

			} else if (criteria === 'text') {
				he = GmCXt.dom1334.filterByText(de, nodes);
			}

			if (he) break;
		}
		start++;
	}

	return GmCXt.l.return(he);
};

GmCXt.dom1334.findInParent = function(de, jsSelector, uniquePI) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findInParent', arguments);

	var jsSelector = GmCXt.reverse(jsSelector);
	var parent = jsSelector[uniquePI];
	var child = jsSelector[jsSelector.length - 1];

	var child_ = GmCXt.dom1334.removeEq(child);
	if (child_) child = child_;

	var returnValue = mg$(parent).find(child);

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.removeEq = function(selector) {

	var returnValue = null;

	var str = selector.match(/^(.*?):eq/g);
	if (str !== null) {
		str = str[0].replace(/:eq/g, '');
		returnValue = str;
	}

	return returnValue;
};

GmCXt.dom1334.query = function(parent, selector, childrenSearch) {

	GmCXt.l.start('function', 'GmCXt.dom1334.query', arguments);

	var returnValue = null;

	// This is only needed in IE
	var isIncludes = selector.indexOf("javascript:");
	if (isIncludes !== -1) {
		selector = selector.replace(/\[href(.*?)'\]/, '');
	}

	if (parent) {
		if (childrenSearch)
			returnValue = mg$(parent).contents(selector);
		else
			returnValue = mg$(parent).find(selector);
	} else
		returnValue = mg$(selector);

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.selectorScore = function(arr) {
	var scoreObj = {};

	for (var i = 0; i < arr.length; i++) {

		var str = arr[i];
		var score = 3;
		str = str.replace(':visible', '');

		if (str.indexOf('SPAN') !== -1 || str.indexOf('DIV') !== -1) {
			str = str.replace('DIV', '');
			str = str.replace('SPAN', '');
			score--;
		}

		if (str.indexOf(':eq') !== -1) {
			str = str.split(':eq')[0];
			score--;
		}

		if (!str) {
			score--;
		}

		scoreObj[arr[i]] = score;
	}

	return scoreObj;
};

GmCXt.dom1334.beforeQuery = function(selector) {

	var uniquePI = GmCXt.dom1334.getUniqueParentIndex(selector);
	var arr = selector.slice(0, uniquePI);
	var scoreObj = GmCXt.dom1334.selectorScore(arr);
	var nodes = null;
	var he = null;

	arr = arr.filter(function(item) {
		if (scoreObj[item] === 0) {
			return false;
		}
		return true;
	});

	var nodes = GmCXt.dom1334.query(null, selector[uniquePI]);
	if (GmCXt.isOne(nodes)) {
		he = nodes[0];
	}
	var returnValue = null;

	for (var i = arr.length - 1; i >= 0; i--) {

		nodes = GmCXt.dom1334.query(he, arr[i]);

		if (GmCXt.isOne(nodes)) {
			he = nodes[0];
			returnValue = nodes;
		}

	}

	return returnValue;
};

GmCXt.dom1334.filterTextNodes = function(nodes, text) {

	GmCXt.l.start('function', 'GmCXt.dom1334.filterTextNodes', arguments);

	text = text.trim().toLowerCase();
	var returnValue = nodes.filter(function(index, node) {
		return mg$(node).text().trim().toLowerCase() === text;
	});

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.getJsSelector = function(he, meta, calculateScore, jsSelectorKey) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getJsSelector', arguments);

	var el = null;
	var index = null;
	var data = [];
	var depth = GmCXt.dom1334.matchDepth;

	while (depth > 0) {

		if (!el) {
			el = he;
		} else {
			el = el.parentNode;
			if (el === document) break;
		}

		if (el) {
			var selector = GmCXt.dom1334.getElementSelector(el, meta, jsSelectorKey);

			var nodes = GmCXt.dom1334.query(null, selector);

			if (GmCXt.isMoreThanOne(nodes)) {
				if (depth === 1) {
					selector += ':eq(' + mg$(el).index(selector) + ')';
				} else {
					index = GmCXt.dom1334.getElementIndex(el, selector);
					if (index !== null) {
						selector += ':eq(' + index + ')';
					}
				}
			}

			data.push(selector);

			if (GmCXt.isOne(nodes) && calculateScore) {
				GmCXt.dom1334.calculateScore(depth);
				calculateScore = false;
			}

			depth--;
		}
	}

	return GmCXt.l.return(data);
};

GmCXt.dom1334.getElementIndex = function(el, selector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getElementIndex', arguments);

	var index = null;
	var nodes = GmCXt.dom1334.query(el.parentNode, selector, true);
	for (var i = 0, j = nodes.length; i < j; i++) {
		if (el === nodes[i]) {
			index = i;
			break;
		}
	}

	return GmCXt.l.return(index);
};

GmCXt.dom1334.addAttributeForSelector = function(attr, meta, jsSelectorKey) {
	var attrList = meta.attributes;
	if (attrList) {
		if (!attrList.hasOwnProperty(jsSelectorKey)) {
			attrList[jsSelectorKey] = [attr];
		} else if (attrList[jsSelectorKey].indexOf(attr) < 0) {
			attrList[jsSelectorKey].push(attr);
		}
	}
};

GmCXt.filterValidClasses = function(val) {

	var avoidClassList = ['hide', 'show', 'ascending', 'descending', 'has-focus'];

	if (val && typeof val === 'string') {

		var classes = val.split(' ');

		classes = classes.filter(function(className) {

			className = className.trim();

			if (!className || className.match(/\d+/g) || className.match(/[[\]{}():*+?.,\\^$|#]/g))
				return false;

			for (var i = 0, tot = avoidClassList.length; i < tot; i++) {
				if (className.includes(avoidClassList[i]))
					return false;
			}

			return true;
		});

		if (classes.length)
			return classes.join('.');
	}
	return '';
};

// This function creator selector string based on matchAttributes
GmCXt.dom1334.getElementSelector = function(el, meta, jsSelectorKey) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getElementSelector', arguments);

	var selector = el.tagName;
	var attr = "";
	var attrs = GmCXt.dom1334.matchAttributes;
	var criteria = GmCXt.dom1334.matchCriteria;

	for (var i = 0, tot = attrs.length; i < tot; i++) {
		attr = attrs[i];
		var validAttr = false;

		switch (attr) {
			case "text":
				var textSelector = GmCXt.dom1334.getTextSelector(el);

				if (textSelector && criteria.precision_type === GmCXt.DOM_CRITERIA_TEXT) {
					selector += textSelector;
					validAttr = true;
				}
				break;
			case "id":
				value = el.getAttribute(attr);

				if (value && !value.match(/\d+/g)) {
					GmCXt.dom1334.idMatchFound = true;
					selector += GmCXt.dom1334.getAttrSelector(attr, value);
					validAttr = true;
				}
				break;
			case "class":
				value = el.getAttribute(attr);

				var classes = GmCXt.filterValidClasses(value);
				if (!GmCXt.isEmpty(classes)) {
					selector += '.' + classes;
					validAttr = true;
				}
				break;
			default:
				value = el.getAttribute(attr);

				if (value) {
					selector += GmCXt.dom1334.getAttrSelector(attr, value);
					validAttr = true;
				}

		}
		if (validAttr) GmCXt.dom1334.addAttributeForSelector(attr, meta, jsSelectorKey);
	}

	var returnValue = selector + ":visible";

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.getElemPaths = function(he) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getElemPaths', arguments);

	var elemId = he.id,
		fromDocument = "",
		fromParent = "",
		parentId = "",
		flag = false,
		parent = "";

	while (he !== document) {
		parent = he.parentNode;

		for (var i = 0, len = parent.childNodes.length; i < len; ++i) {
			if (parent.childNodes[i] === he) {
				fromDocument = i + "," + fromDocument;

				if (!elemId && !flag) {
					if (parent.id && parent.id.length) {
						flag = true;
						fromParent = i + "," + fromParent;
						parentId = parent.id;
					}
				}
				break;
			}
		}

		he = he.parentNode;
	}

	var result = {
		fromDocument: fromDocument.slice(0, -1).split(','),
		fromParent: fromParent.slice(0, -1).split(','),
		parentId: parentId
	};

	GmCXt.dom1334.elementpath = result;

	return GmCXt.l.return(result);
};

GmCXt.dom1334.getAttrSelector = function(attr, value) {
	return "[" + attr + "='" + value.replace(/'/g, "\\'") + "']";
};

GmCXt.dom1334.getTextSelector = function(el) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getTextSelector', arguments);

	var value = el.getAttribute('value');
	var placeholder = el.getAttribute('placeholder');
	var selector = null;

	if ((el.tagName === 'INPUT' || el.tagName === 'BUTTON') &&
		(el.type === 'submit' || el.type === 'button')
	) {
		if (value) {
			GmCXt.dom1334.textPropertyName = 'value';
			GmCXt.dom1334.textPropertyValue = value;
			selector = GmCXt.dom1334.getAttrSelector('value', value);
		}
	}

	if (!selector && el.tagName === 'INPUT' && placeholder) {
		GmCXt.dom1334.textPropertyName = 'placeholder';
		GmCXt.dom1334.textPropertyValue = placeholder;
		selector = GmCXt.dom1334.getAttrSelector('placeholder', placeholder);
	}

	return GmCXt.l.return(selector);
};

GmCXt.dom1334.getElementOffset = function(rect) {
	return {
		left: rect.left,
		top: rect.top,
		width: rect.width,
		height: rect.height
	};
};

GmCXt.dom1334.getElementFixedPosition = function(he) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getElementFixedPosition', arguments);

	var el = mg$(he);
	var all = el.add(el.parents());

	var cssPosition = all.filter(function() {
		return mg$(this).css("position") === "fixed";
	}).length > 0;

	return GmCXt.l.return(cssPosition);
};

GmCXt.dom1334.getElementZindex = function(he) {
	var el = mg$(he);
	var all = el.add(el.parents());

	for (var i = 0; i < all.length; i++) {
		if (mg$(all[i]).css("zIndex") > 0) {
			return mg$(all[i]).css("zIndex");
		}
	}

	return false;
};

// Returns attributes of a element selector in key,value pair
GmCXt.dom1334.getAttributes = function(selector) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getAttributes', arguments);

	var attrList = [];

	selector.forEach(function(selec) {

		var attrObj = {};

		//Get tag name
		var tag = getTagName(selec);
		attrObj.tagName = tag;

		//Gets key value pair of attributes
		var selecAttr = selec.match(/\[(.*?)\]/g);
		if (selecAttr !== null) {
			selecAttr = selecAttr.map(function(val) {
				var temp = val.replace(/\[|\]/g, '');
				return temp.split('=');
			});
		}

		//Adds key value pairs in attrObj
		if (selecAttr !== null) {
			for (var i = 0; i < selecAttr.length; i++) {
				attrObj[selecAttr[i][0]] = selecAttr[i][1];
			}
		}
		attrList.push(attrObj);
	});

	//Gets Tag name
	function getTagName(selec) {
		var tag = selec.match(/^(.*?)\[/g);
		if (tag === null) {
			tag = selec.match(/^(.*?)(:visible|:eq)/g);
			tag = tag[0].replace(/:visible|:eq/g, '');
			return tag;
		} else {
			tag = tag[0].replace(/\[/g, '');
			return tag;
		}
	}

	return GmCXt.l.return(attrList);
};

GmCXt.dom1334.findTargetInputElement = function(he, pathFromLabel, targetTag) {

	GmCXt.l.start('function', 'GmCXt.dom1334.findTargetInputElement', arguments);

	if (pathFromLabel[0] === -1) {
		// Label in child nodes
		while (he.tagName !== targetTag) {
			he = he.parentNode;
			children = mg$(he).find(mg$(targetTag));
			if (children.length > 0) {
				he = children[0];
				break;
			}
		}
	} else {
		if (mg$(he).siblings().length > 0 && he.nextElementSibling) {
			he = he.nextElementSibling;
		}

		var path = GmCXt.reverse(pathFromLabel);
		var i = 0;
		var tot = path.length;

		if (he) {
			while (i < tot) {
				var index = (he.childNodes.length > path[i]) ? path[i] : (he.childNodes.length - 1);
				he = he.childNodes[index];
				i++;
			}
		}

		// TODO: Add a tag check to crosscheck.
		// If not matched, we should jump to target tag in nextElementSibling
		// And pick if found unique

		if (i !== tot) he = null;
	}

	if (he && he.nodeType !== 1) he = null;

	return GmCXt.l.return(he);
};

// ********* IDENTIFY BY TEXT FUNCTIONS **********
// Save Element Info
GmCXt.dom1334.setIdentifyByTextInfo = function(he, meta) {

	GmCXt.l.start('function', 'GmCXt.dom1334.setIdentifyByTextInfo', arguments);

	meta.textPropertyValue = GmCXt.dom1334.textPropertyValue;
	meta.textPropertyName = GmCXt.dom1334.textPropertyName;
	var uniqueTextFlag = false;

	if (meta.textPropertyValue) {

		GmCXt.l.add('Check uniqueness & validity of the detected text – "' + meta.textPropertyValue + '"');

		meta.textNode = {};

		var textType = GmCXt.dom1334.classifyElementText(meta);
		var queryString = GmCXt.dom1334.getQueryString(he.tagName, textType, meta);
		var matches = GmCXt.dom1334.getTextMatches(queryString);
		meta.textNode.jquery_selector = GmCXt.dom1334.generateTextBasedjQuery(he, matches, queryString);

		var filteredMatches = textType ? GmCXt.dom1334.filterParentNodes(matches, meta.textPropertyValue) : matches;
		var length = filteredMatches.length;

		if (length) {
			filteredMatches.each(function(index, node) {
				if (node === he) {
					meta.tagName = he.tagName;
					meta.textNode.position = {
						index: index,
						length: length
					};
					uniqueTextFlag = true;
				}
			});
		}
	}

	GmCXt.l.end(uniqueTextFlag);
};

GmCXt.dom1334.classifyElementText = function(meta) {
	var textProperty = meta.textPropertyName;

	var textType = false;
	if (textProperty === 'textContent' || textProperty === 'text') {
		textType = true;
	}

	return textType;
};

GmCXt.dom1334.getQueryString = function(tagName, textType, meta) {
	var queryString = null;
	var textProperty = meta.textPropertyName;
	var text = meta.textPropertyValue;

	if (text && text.length < 201) {

		// Replace occurences of single quotes & double quotes
		text = text.replace(/\'/g, "\\'").replace(/\"/g, '\\"');

		if (textType) {
			queryString = tagName + ":contains('" + text + "')";
		} else {
			queryString = tagName + "[" + textProperty + "='" + text + "']";
		}
	}

	return queryString;
};

GmCXt.dom1334.getTextMatches = function(queryString) {

	GmCXt.l.start('function', 'GmCXt.dom1334.getTextMatches', arguments);

	var matches = [];

	if (queryString) {
		try {
			matches = mg$(queryString);
		} catch (e) {
			matches = [];
		}
	}

	return GmCXt.l.return(matches);
};

GmCXt.dom1334.filterParentNodes = function(nodes, text) {

	GmCXt.l.start('function', 'GmCXt.dom1334.filterParentNodes', arguments);

	var text = text.trim().toLowerCase();

	nodes = nodes.filter(function(index, node) {
		if (node.innerText && node.innerText.trim().toLowerCase() === text) {
			mg$(node).parents().addClass('mgPlayerJSTest_dummy-class');
			return true;
		}
		return false;
	});

	var childNodes = nodes.filter(function(index, node) {
		return !mg$(node).hasClass('mgPlayerJSTest_dummy-class');
	});

	mg$('.mgPlayerJSTest_dummy-class').removeClass('mgPlayerJSTest_dummy-class');

	var returnValue;
	if (childNodes.length === 1) { // All nodes are hierachichally linked (parent-child)
		returnValue = nodes;
	} else {
		GmCXt.l.add('Text is present at multiple places on the screen');
		returnValue = [];
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.dom1334.generateTextBasedjQuery = function(he, matches, queryString) {

	GmCXt.l.start('function', 'GmCXt.dom1334.generateTextBasedjQuery', arguments);

	var returnValue = null;

	if (matches.length) {
		matches.each(function(index, node) {
			if (node === he) {
				queryString += ':eq(' + index + ')';
				returnValue = queryString;
			}
		});
	}

	return GmCXt.l.return(returnValue);
};

// Find element
GmCXt.dom1334.identifyByTextNodePosition = function(meta) {

	GmCXt.l.start('function', 'GmCXt.dom1334.identifyByTextNodePosition', arguments);

	var textType = GmCXt.dom1334.classifyElementText(meta);
	var queryString = GmCXt.dom1334.getQueryString(meta.tagName, textType, meta);
	var matches = GmCXt.dom1334.getTextMatches(queryString);
	var filteredMatches = textType ? GmCXt.dom1334.filterParentNodes(matches, meta.textPropertyValue) : matches;
	var length = filteredMatches.length;

	var el = null;

	if (length) {

		var pos = meta.textNode.position;

		if (pos.length === length) {
			el = filteredMatches[pos.index];
		} else {
			var indexFromChild = pos.length - pos.index;
			if (length > indexFromChild)
				el = filteredMatches[length - indexFromChild];
		}
	}

	return GmCXt.l.return(el);
};

GmCXt.dom1334.executeTextBasedJquery = function(queryString, text) {

	GmCXt.l.start('function', 'GmCXt.dom1334.executeTextBasedJquery', arguments);

	var returnValue = null;

	var nodes = mg$(queryString);
	var length = nodes.length;

	if (!length || nodes.is(':hidden')) {
		queryString = queryString.split(':eq')[0];
		queryString += ':visible';
		nodes = mg$(queryString);
	}

	nodes = nodes.filter(function(index, node) {
		return node.textContent === text;
	});

	length = nodes.length;

	if (length) {
		returnValue = nodes[length - 1];
	}
	if (returnValue == null) {
		GmCXt.l.add('Could not find element using text based jQuery selector', true);
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.getPosition = function(cssPos) {
	if (cssPos) {
		return 'mgPlayerJSTest_fixed-position';
	} else {
		return 'mgPlayerJSTest_absolute-position';
	}
};
GmCXt.dom = {};

GmCXt.dom.setDefaultCriteria = function() {
	GmCXt.dom.matchCriteria = {
		precision_type: GmCXt.DOM_CRITERIA_DEFAULT,
		ignoreText: false,
		jquery_selector: null,
		matchAttributes: [],
		precision_level: GmCXt.ELEMENT_PRECISION_MEDIUM
	};
};

GmCXt.dom.reset = function() {
	GmCXt.dom.matchDepth = 10;
	GmCXt.dom.score = {};
	GmCXt.dom.textPropertyName = '';
	GmCXt.dom.textPropertyValue = ''; // When found it is element's placeholder or value or textContent
	GmCXt.dom.currentEl = null;
	GmCXt.dom.attributeNames = [];
	GmCXt.dom.selectorAttributes = [];
	GmCXt.dom.uniqueSelectors = [];
	GmCXt.dom.shadowRootIndex = [];
	GmCXt.dom.currentElTag = '';
};

GmCXt.dom.getMatchAttributes = function(jsSelectorKey) {
	var attrList;
	var salesforceAttibutes;
	var gmailAttributes;
	switch (jsSelectorKey) {
		case 'js':
			attrList = ["class", "id", "title", "href", "src", "name", "type", "alt"];
			salesforceAttibutes = ["data-type", "data-feed-type", "data-aura-class", "data-ngname", "data-href", "data-src"];
			gmailAttributes = ["role", "aria-label", "data-tooltip"];

			if (GmCXt.checkWorkdaySite()) attrList.push("data-automation-id");
			break;

		case 'js1':
			attrList = ["class", "name", "type", "alt"];
			salesforceAttibutes = ["data-type", "data-feed-type", "data-aura-class", "data-ngname"];

			break;

		case 'js2':
			attrList = ["id", "title", "href", "src", "name", "type", "alt"];
			salesforceAttibutes = ["data-type", "data-aura-class", "data-href", "data-src"];
			gmailAttributes = ["role", "aria-label", "data-tooltip"];
			break;

		case 'js3':
			attrList = ["title", "href", "src", "name", "type", "alt"];
			salesforceAttibutes = ["data-type", "data-feed-type", "data-ngname", "data-href", "data-src"];
			break;

		case 'custom':
			attrList = GmCXt.dom.getElAttributeNames();
			break;
	}

	if (attrList && jsSelectorKey !== 'custom') {

		if (GmCXt.checkSalesForceSite())
			attrList = attrList.concat(salesforceAttibutes);

		if (GmCXt.checkGmailSite() && gmailAttributes) {
			attrList = attrList.concat(gmailAttributes);
		}

		attrList = GmCXt.dom.removeDynamicAttrs(attrList, jsSelectorKey);
	}

	return attrList;
};

GmCXt.dom.removeDynamicAttrs = function(attrList, jsSelectorKey) {

	// Dynamic attributes are checked when editing a step.
	// Attributes whose value is changed, are not considered in new selector.
	// TODO: Risk of loosing if there is actual change of HTML, so attr does not dynamic value.

	if (GmCXt.dom.dynamicAttrs && GmCXt.dom.dynamicAttrs[jsSelectorKey]) {
		var attrs = GmCXt.dom.dynamicAttrs[jsSelectorKey];
		attrList = attrList.filter(function(attr) {
			return !attrs.includes(attr);
		});
	}
	return attrList;
};

GmCXt.dom.getElAttributeNames = function() {

	// A: List of default attributes in js, js1, js2, js3 selectors 
	GmCXt.dom.selectorAttributes.concat(['placeholder', 'value']); // Text selector also exists in addition to js selectors

	// B: List of all attributes present on element upto 10 levels up
	// Return B minus A
	return GmCXt.dom.attributeNames
		.filter(function(value, index, self) {
			return self.indexOf(value) === index &&
				!GmCXt.dom.selectorAttributes.includes(value) &&
				!value.match(/[[\]{}():*+?.,\\^$|#]/g) &&
				value.indexOf('gm') !== 0;
		})
		.sort();
};

/*
    This functions is used to create element data including meta data and js selectors
    Called from following locations:
     - Step element
     - Tooltip element
     - SmartTip element
     - Beacon element
*/

GmCXt.dom.getElement = function(he, criteria, frame, hoverEl) {

	GmCXt.dom.reset();
	GmCXt.dom.currentEl = he;

	// Set matchCriteria
	if (!criteria) {
		GmCXt.dom.setDefaultCriteria();
	} else {
		GmCXt.dom.matchCriteria = criteria;
	}
	var c = GmCXt.dom.matchCriteria;

	// Set meta
	var meta = {
		inTopWindow: (window.self === window.top) ? true : false,
		iframeUrl: GmCXt._location().hostname + GmCXt._location().pathname,
		iframePath: GmCXt._location().pathname,
		iframeTitle: frame ? frame.iframeTitle : undefined,
		iframeScheme: GmCXt.getUrlScheme(),
		selectorAttributes: {}
	};

	meta.elAttributes = GmCXt.getAttributeValues(he);

	// Text info in meta
	GmCXt.dom.getIdentifyByTextInfo(he, meta);

	// Generate selectors
	var selector = {
		js: null,
		js1: null,
		js2: null,
		js3: null,
		custom: null
	};

	var selectorKeys = Object.keys(selector);

	selectorKeys.forEach(function(key) {
		GmCXt.dom.matchAttributes = GmCXt.dom.getMatchAttributes(key);

		if (GmCXt.dom.matchAttributes.length)
			selector[key] = GmCXt.dom.getJsSelector(key, he, meta);
	});

	var selectorCount = GmCXt.dom.removeDuplicates(selector, meta.selectorAttributes);

	meta.score = GmCXt.dom.revaluateScore(selectorCount, GmCXt.isTextExecutable(c, meta));

	if (!hoverEl) {
		meta.executionPriority = GmCXt.getSelectorExecutionPriority(meta.selectorAttributes);

		// Custom settings (by client url)
		var customSettings = GmCXt.dom.getCustomSettings(he);

		if (GmCXt.isEmpty(GmCXt.dom.shadowRootIndex)) {
			// Available attributes for custom selector
			c.availableAttr = GmCXt.getCustomMatchAttributes(he, meta);

			if (!criteria) {
				c.jquery_selector = GmCXt.dom.generateJQueryFromElAttributes(he, c.availableAttr);
				c.auto_jquery = c.jquery_selector;
			}

			if (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM) {
				meta.jqueryInfo = GmCXt.dom.getJqueryEqInfo(he, c.jquery_selector);
				meta.score = GmCXt.dom.getCustomQueryScore(meta.jqueryInfo);
			}
		}

		var iframeAttrs = null;
		if (frame && !meta.inTopWindow) {
			iframeAttrs = GmCXt.dom.validateIframeAttributes(frame.attributes);
		}

		var childElements = he.childElementCount;
		if (childElements === 1 && GmCXt.isSvgTag(he.children[0].tagName)) {
			childElements = 0;
		}
		// Resets GmCXt.dom.dynamicAttrs
		GmCXt.dom.dynamicAttrs = null;
	}

	var element = {
		version: GmCXt.conf.version,
		selector: selector,
		meta: meta,
		criteria: c,
		customSettings: customSettings,
		position: GmCXt.dom.getElPosition(he),
		cssPosition: GmCXt.dom.getElementFixedPosition(he),
		appName: GmCXt.conf.appName,
		childElements: childElements,
		xpath: GmCXt.dom.getXPath(he),
		iframeAttrs: iframeAttrs
	};

	if (!hoverEl) {
		GmCXt.log(12, "DOM element", element);
	}

	return element;
};

GmCXt.dom.validateIframeAttributes = function(attrs) {
	var filteredAttrs = {};
	var skipAttributes = ['height', 'width', 'style'];
	for (var key in attrs) {
		var val = attrs[key];
		if (skipAttributes.indexOf(key) < 0 && !GmCXt.isEmpty(val)) {
			if (key === 'id' && val.match(/\d+/g)) {
				continue;
			}
			filteredAttrs[key] = val;
		}
	}
	return filteredAttrs;
};

GmCXt.dom.getElPosition = function(he) {
	var rect = he.getBoundingClientRect();
	rect = GmCXt.dom.getElementOffset(rect);
	rect.windowWidth = mg$(window).width();
	rect.windowHeight = mg$(window).height();
	return rect;
};

GmCXt.dom.removeDuplicates = function(selector, attrList) {
	var count = 4;

	if (GmCXt.dom.isEqual(selector.js3, selector.js) ||
		GmCXt.dom.isEqual(selector.js3, selector.js1) ||
		GmCXt.dom.isEqual(selector.js3, selector.js2)) {
		delete selector.js3;
		delete attrList.js3;
		count--;
	}

	if (GmCXt.dom.isEqual(selector.js2, selector.js) ||
		GmCXt.dom.isEqual(selector.js2, selector.js1)) {
		delete selector.js2;
		delete attrList.js2;
		count--;
	}

	if (GmCXt.dom.isEqual(selector.js1, selector.js)) {
		delete selector.js1;
		delete attrList.js1;
		count--;
	}

	return count;
};

GmCXt.dom.revaluateScore = function(selectorCount, validTextQuery) {

	var score = GmCXt.dom.getScore();

	if (selectorCount === 2)
		score -= 1;
	else if (selectorCount === 1)
		score -= 2;

	if (score < 5 && validTextQuery)
		score += 1;

	if (score < 1) score = 1;

	return score;
};

GmCXt.dom.isEqual = function(a1, a2) {
	if (a1 && a2) {
		if (JSON.stringify(a1) === JSON.stringify(a2))
			return true;
	}
	return false;
};

GmCXt.dom.getXPath = function(element) {
	if (element.id)
		return '//*[@id="' + element.id + '"]';
	if (element === document.body)
		return element.tagName + '/';

	var ix = 0;

	if (element.parentNode) {
		var siblings = element.parentNode.childNodes;
		for (var i = 0; i < siblings.length; i++) {
			var sibling = siblings[i];
			if (sibling === element)
				return GmCXt.dom.getXPath(element.parentNode) + '/' + element.tagName + '[' + (ix + 1) + ']';
			if (sibling.nodeType === 1 && sibling.tagName === element.tagName)
				ix++;
		}
	}
};

GmCXt.dom.getJqueryEqInfo = function(el, selector) {

	var info = {};

	try {
		if (!selector) info.invalid = true;
		else {
			if (selector.includes(':eq('))
				selector = selector.split(':eq(')[0];

			var nodes = mg$(selector);

			if (GmCXt.isZero(nodes)) {
				info.invalid = true;
			} else if (GmCXt.isOne(nodes)) {
				info.unique = true;
			} else {

				var length = nodes.length;
				nodes.each(function(index, node) {
					if (node === el) {
						info.index = index;
						info.length = length;
						return false;
					}
				});

				// If el is not found in nodes
				if (isNaN(info.index)) {
					info.invalid = true;
				}
			}
		}
	} catch (e) {
		info.invalid = true;
	} finally {
		return info;
	}
};

GmCXt.dom.getCustomQueryScore = function(info) {

	if (!info || info.invalid) return 0;

	if (info.unique) return 5;

	return 3;
};

GmCXt.dom.generateJQueryFromElAttributes = function(he, attrList) {
	var filteredAttr = attrList.filter(function(attr) {
		var val = he.getAttribute(attr);

		if (attr === 'text')
			return true;

		if (typeof value === 'string' && val.length > 250)
			return false;

		return true;
	});

	filteredAttr.sort(function(a, b) {
		return GmCXt.getAttributePriority(a, he) - GmCXt.getAttributePriority(b, he);
	});

	var selectorArr = [];
	var selector = '';
	for (var i = 0; i < filteredAttr.length; i++) {
		selector = GmCXt.dom.getElementSelector(null, he, null, filteredAttr.slice(0, i + 1));
		var selectorInfo = GmCXt.dom.getJqueryEqInfo(he, selector);

		if (selectorInfo.unique) return selector;
		else {

			if (selectorInfo.length) {
				selectorArr.push({
					selector: selector,
					matches: selectorInfo.length
				});
			}

			selector = GmCXt.dom.getElementSelector(null, he, null, [filteredAttr[i]]);
			var selectorInfo = GmCXt.dom.getJqueryEqInfo(he, selector);

			if (selectorInfo.unique) return selector;
			else if (selectorInfo.length) {
				selectorArr.push({
					selector: selector,
					matches: selectorInfo.length
				});
			}
		}
	}

	// No unique selector found by attributes, attempting to find by ref queries
	if (!GmCXt.isEmpty(GmCXt.dom.uniqueSelectors) && !GmCXt.isEmpty(selectorArr)) {

		selectorArr.sort(function(a, b) {
			return a.matches - b.matches;
		});

		GmCXt.dom.uniqueSelectors.sort(function(a, b) {
			return a.depth - b.depth;
		});

		for (var j = 0; j < GmCXt.dom.uniqueSelectors.length; j++) {
			selector = GmCXt.dom.uniqueSelectors[j].selector + " " + selectorArr[0].selector;

			var selectorInfo = GmCXt.dom.getJqueryEqInfo(he, selector);

			if (selectorInfo.unique) return selector;
		}
	}

	return null;
};

GmCXt.dom.calculateScore = function(depth, key) {

	GmCXt.dom.score[key] = 0;
	if (depth > 0) {

		if (depth === GmCXt.dom.matchDepth) {
			GmCXt.dom.score[key] = 5;

		} else if (depth > 7) {
			GmCXt.dom.score[key] = 4;

		} else if (depth > 4) {
			GmCXt.dom.score[key] = 3;

		} else if (depth > 2) {
			GmCXt.dom.score[key] = 2;

		} else if (depth > 0) {
			GmCXt.dom.score[key] = 1;
		}
	}
};

GmCXt.dom.getScore = function() {

	if (GmCXt.isEmpty(GmCXt.dom.score)) return 0;

	var sum = 0;
	var ctr = 0;
	for (var key in GmCXt.dom.score) {
		sum += GmCXt.dom.score[key];
		ctr++;
	}

	return Math.round(sum / ctr);
};

GmCXt.dom.tFinder = function(de, frame, log_stepInfo) {

	var he = null;
	
	// If element is not in top window then do not find it in top window 
	if (window.self === window.top && de.meta.inTopWindow === false) {
		return null;
	}

	GmCXt.dom.matchCriteria = de.criteria;
	var c = GmCXt.dom.matchCriteria;

	if (!GmCXt.isEmpty(c.jquery_selector)) {
		he = GmCXt.dom.findElByCustomQuery(c, de.meta);
	}

	return he;
};

GmCXt.dom.finder = function(de, frame, log_stepInfo, strictOnly) {

	GmCXt.l.start('function', 'finder', arguments);

	GmCXt.dom.trackFinderRequest(log_stepInfo);

	var he = null;
	GmCXt.dom.tempHe = null;

	// If element is not in top window then do not find it in top window 
	if (window.self === window.top && de.meta.inTopWindow === false) {
		return null;
	}

	if (log_stepInfo && !log_stepInfo.includes('[El Rule]')) GmCXt.l.add(log_stepInfo, true);

	de = GmCXt.migrateMatchAlgoSetting(de);

	var selector = mg$.extend(true, {}, de.selector);

	GmCXt.dom.matchCriteria = de.criteria;
	var c = GmCXt.dom.matchCriteria;

	GmCXt.l.add('Selector: ' + c.precision_type + '; Precision: ' + c.precision_level + (c.ignoreText ? '; Ignore Text is checked' : ''), true);

	if (c.precision_level === 'High' && de.meta.inTopWindow) {
		strictOnly = true;
	}

	var skipDefault = false;
	if (c.precision_type === GmCXt.DOM_CRITERIA_CUSTOM || (de.isQuickFindEl && !GmCXt.isEmpty(c.jquery_selector))) {
		he = GmCXt.dom.findElByCustomQuery(c, de.meta);

		// If custom query has been specified, find ONLY by custom query in the 'strictOnly' cycles
		skipDefault = c.precision_level === 'High' ? true : strictOnly; // custom query with High will not go with default selector

		if (c.precision_level === 'Medium') {
			strictOnly = true; // custom query with Medium level will only do strict traverse on default selectors;
		}
	}

	if (!skipDefault) {
		if (!he) {
			he = GmCXt.dom.findElementBySelector(de, selector, strictOnly);
		}

		if (!he && de.meta.textPropertyValue && !de.meta.hasOwnProperty('textNode')) {
			GmCXt.l.add('Identify By Text (Old Method) – ' + de.meta.textPropertyValue, true);
			he = GmCXt.dom.identifyByText(de, selector);
		}
	}

	var returnValue = he;
	if (!he) {
		GmCXt.l.addRCA(c, de.meta);

		if (de.selector1) {

			GmCXt.l.add('Not found using the current selector, trying another selector . . .');

			var tempDe = mg$.extend(true, {}, de);
			tempDe.selector = de.selector1;
			delete tempDe.selector1;

			returnValue = GmCXt.dom.finder(tempDe, frame, log_stepInfo, strictOnly);
		}
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.dom.findElByCustomQuery = function(criteria, meta) {

	GmCXt.l.start('function', 'findElByCustomQuery', arguments);

	var he = null;
	var jquerySelector = criteria.jquery_selector;

	var removeEq = false;
	if ((criteria.precision_type === GmCXt.DOM_CRITERIA_DEFAULT && criteria.precision_level !== "High") &&
		(meta.jqueryInfo && !meta.jqueryInfo.unique)) {
		querySplit = criteria.jquery_selector.split(":eq(");
		if (querySplit[1].length < 3) { // eq is at the end of the selector, not in the middle
			removeEq = true;
			jquerySelector = querySplit[0] + ":eq(" + meta.jqueryInfo.index + ")";
		}
	}
	
	GmCXt.l.add("Finding using Custom jQuery Selector - " + jquerySelector, true);
	var nodes = GmCXt.dom.query(null, jquerySelector);

	if (GmCXt.isOne(nodes)) {
		he = nodes[0];
		GmCXt.l.add("> ELEMENT FOUND by custom selector", true);
	} else if (removeEq) {
		GmCXt.l.add("> Could not find unique element on executing the query", true);

		nodes = GmCXt.dom.removeEqAndQuery(null, jquerySelector);
		var noOfNodes = nodes.length;

		if (noOfNodes) {
			if (meta.jqueryInfo) {
				var indexFromChild = meta.jqueryInfo.length - meta.jqueryInfo.index;
				if (indexFromChild < noOfNodes) {
					he = nodes[noOfNodes - indexFromChild];
					GmCXt.l.add("> ELEMENT FOUND by picking closest index in resulting nodes", true);
				}
			}
			if (!he) {
				he = nodes[noOfNodes - 1];
				GmCXt.l.add("> ELEMENT FOUND by picking last index in resulting nodes", true);
			}
		}
	}

	return GmCXt.l.return(he);
};

GmCXt.dom.flexFind = function(selector, key, c, m, workdayInput) {

	var jsSelector = selector[key];
	var he = null;
	var nodes = null;

	if (jsSelector) {

		var o = GmCXt.dom.flexibleTraverse(jsSelector);
		if (o) {
			nodes = o.nodes;

			he = GmCXt.filterEl(nodes, c, m);

			if (!he && c.precision_level === "Low") {

				nodes = GmCXt.dom.beforeQuery(jsSelector);
				he = GmCXt.filterEl(nodes, c, m);

				if (!he) {
					nodes = GmCXt.dom.removeEqAndQuery(o.parentEl, jsSelector[0]);
					he = GmCXt.filterEl(nodes, c, m);
				}

				if (!he) {
					he = o.parentEl;
				}
			}
		}

	} else if (key === 'text' && GmCXt.isTextExecutable(c, m)) {

		he = GmCXt.dom.executeTextBasedJquery(m.textNode.jquery_selector, m.textPropertyValue, workdayInput);
	}

	return he;
};

GmCXt.dom.strictFind = function(selector, key, c, m, workdayInput) {

	var jsSelector = selector[key];
	var he = null;

	if (jsSelector) {

		nodes = GmCXt.dom.strictTraverse(jsSelector);
		he = GmCXt.filterEl(nodes, c, m);

		if (!he && GmCXt.isOne(nodes) && GmCXt.isTextExecutable(c, m)) {
			GmCXt.dom.tempHe = nodes[0];
			if (GmCXt.dom.tempHe.className.includes('gss')) {
				GmCXt.dom.tempHe = null;
			}
		}

	} else if (key === 'text' && GmCXt.isTextExecutable(c, m)) {
		he = GmCXt.dom.identifyByTextNodePosition(m, workdayInput);
	}

	if (he && workdayInput && !GmCXt.dom.checkOpaque(he)) {
		return null;
	}

	return he;
};

GmCXt.dom.executeSelectors = function(de, selector, cb) {

	var he = null;
	var c = de.criteria;
	var m = de.meta;
	var priority = m.executionPriority;

	if (de.hasOwnProperty('customSettings'))
		var workdayInput = GmCXt.dom.isWorkdayInputType(de.customSettings.workday);

	for (var i = 0; i < priority.length; i++) {
		var key = priority[i];

		he = cb(selector, key, c, m, workdayInput);

		GmCXt.logSelectorOutcome(he, m, key);

		if (he) break;
	}

	return he;
};

GmCXt.dom.findElementBySelector = function(de, selector, strictOnly) {

	GmCXt.l.start('function', 'findElementBySelector', arguments);

	GmCXt.l.add('Finding using strict traverse. . .', true);

	var he = GmCXt.dom.executeSelectors(de, selector, GmCXt.dom.strictFind);

	if (!strictOnly) {
		if (!he) {
			GmCXt.l.add('Finding using flexible traverse. . .', true);
			he = GmCXt.dom.executeSelectors(de, selector, GmCXt.dom.flexFind);
		}

		if (!he) {
			GmCXt.l.add('Finding in parent nodes. . .', true);
			he = GmCXt.dom.executeSelectors(de, selector, GmCXt.dom.findInUniqueParents);
		}
	}

	if (!he && GmCXt.dom.tempHe && de.criteria.precision_level === 'Low') {
		he = GmCXt.dom.tempHe;
	}

	return GmCXt.l.return(he);
};

GmCXt.filterEl = function(nodes, criteria, meta) {

	GmCXt.l.start('function', 'filterEl', arguments);

	var he = null;

	if (GmCXt.isMany(nodes) && GmCXt.isTextExecutable(criteria, meta) && meta.textPropertyName === 'textContent')
		nodes = GmCXt.dom.filterByText(nodes, meta.textPropertyValue);

	if (GmCXt.isOne(nodes))
		he = nodes[0];

	return GmCXt.l.return(he);
};

GmCXt.isTextExecutable = function(criteria, meta) {
	return (!criteria.ignoreText && !GmCXt.isEmpty(meta.textPropertyValue) && meta.hasOwnProperty('textNode'));
};

GmCXt.dom.filterByText = function(nodes, text) {

	GmCXt.l.start('function', 'filterByText', arguments);

	text = text.trim().toLowerCase();
	var returnValue = nodes.filter(function(index, node) {
		return mg$(node).text().trim().toLowerCase() === text;
	});

	return GmCXt.l.return(returnValue);
};

GmCXt.logSelectorOutcome = function(he, meta, jsSelectorKey) {

	var logStr = (he ? "> ELEMENT FOUND" : "> Element not found") + " by selector '" + jsSelectorKey + "'";

	// Older steps will not have the key 'selectorAttributes' in meta
	if (jsSelectorKey !== 'text' && meta.selectorAttributes) {
		var attr = meta.selectorAttributes[jsSelectorKey];
		if (attr) {
			logStr += ' containing attributes: ' + attr.join(', ');
		} else {
			logStr += ' with no attributes; only path as the reference';
		}
	}

	GmCXt.l.add(logStr, true);
};

// ******************* TRAVERSAL ********************
// Returns index of first unique parent of a step element from a selector array
GmCXt.dom.getUniqueParentIndex = function(jsSelector) {

	GmCXt.l.start('function', 'getUniqueParentIndex', arguments);

	var uniquePI = null;
	var length = jsSelector.length;
	var i = 0;
	if (jsSelector.indexOf('shadowRoot') !== -1) {
		i = jsSelector.lastIndexOf("shadowRoot") + 1;
	}

	for (; i < length; i++) {
		var selector = jsSelector[i];

		// If unique selector OR if it is last selector
		if (selector.indexOf(":eq(") === -1 || i === (length - 1)) {
			uniquePI = i;
			break;
		}
	}

	return GmCXt.l.return(uniquePI);
};

GmCXt.dom.strictTraverse = function(jsSelector) {

	GmCXt.l.start('function', 'strictTraverse', arguments);

	var returnValue = null;
	var nodes = null;
	var he = null;
	var uniquePI = GmCXt.dom.getUniqueParentIndex(jsSelector);

	GmCXt.l.add('Unique Parent Index: ' + uniquePI, true);

	for (var i = uniquePI; i >= 0; i--) {
		nodes = GmCXt.dom.query(he, jsSelector[i], true);

		if (GmCXt.isOne(nodes)) {
			he = nodes[0];
			GmCXt.l.add("At index " + i + " in the selector, found an unique element by querying – " + jsSelector[i]);
		} else {
			if (i === 0 && GmCXt.isZero(nodes)) {
				// Flexible for last index
				nodes = GmCXt.dom.removeEqAndQuery(he, jsSelector[i], true);

				if (nodes) nodes = nodes.last();

			} else break;
		}
	}

	if (nodes && i <= 1)
		returnValue = nodes;

	return GmCXt.l.return(returnValue);
};

GmCXt.dom.flexibleTraverse = function(jsSelector, uniquePI) {

	GmCXt.l.start('function', 'flexibleTraverse', arguments);

	var returnValue = null;
	var nodes = null;
	var he = null;
	var uniquePI = GmCXt.dom.getUniqueParentIndex(jsSelector);

	for (var i = uniquePI; i >= 0; i--) {
		nodes = GmCXt.dom.query(he, jsSelector[i], true);

		if (GmCXt.isOne(nodes)) {
			he = nodes[0];
			GmCXt.l.add("At index " + i + " in the selector, found an unique element by querying – " + jsSelector[i]);
		} else if (!he) {

			if (GmCXt.isMany(nodes)) {
				he = nodes[0];
				GmCXt.l.add("At index " + i + " in the selector, picking 1st of " + nodes.length + " resulting nodes on querying – " + jsSelector[i]);
			}

			if (GmCXt.isZero(nodes)) {
				nodes = GmCXt.dom.removeEqAndQuery(he, jsSelector[i], true);

				if (nodes) {
					GmCXt.l.add("At index " + i + " in the selector, picking last of " + nodes.length + " resulting nodes on querying (without eq) – " + jsSelector[i]);
					nodes = nodes.last();
				}
			}

		} else break;
	}

	if (nodes && i <= 1)
		returnValue = {
			nodes: nodes,
			parentEl: he
		};

	return GmCXt.l.return(returnValue);
};

GmCXt.dom.findInUniqueParents = function(selector, key, criteria, meta) {

	GmCXt.l.start('function', 'findInUniqueParents', arguments);

	var he = null;
	var nodes = null;
	var jsSelector = selector[key];

	if (jsSelector) {
		var length = jsSelector.length;

		for (var i = 0; i < length; i++) {
			var selector = jsSelector[i];

			// If unique selector OR if it is last selector
			if (selector.indexOf(":eq(") === -1 || i === (length - 1)) {

				nodes = GmCXt.dom.findInParent(jsSelector, i);

				he = GmCXt.filterEl(nodes, criteria, meta);

				if (!he && criteria.precision_level === "Low" && GmCXt.isMoreThanOne(nodes)) {
					he = nodes[0];
				}

				if (he) break;
			}
		}
	}

	return GmCXt.l.return(he);
};

// ******************* QUERYING ********************
GmCXt.dom.query = function(parent, selector, childrenSearch) {

	GmCXt.dom.trackQueryRequest();

	var nodes = null;

	// This is only needed in IE
	var isIncludes = selector.indexOf("javascript:");
	if (isIncludes !== -1) {
		selector = selector.replace(/\[href(.*?)'\]/, '');
	}

	if (parent) {
		if (selector === 'shadowRoot') {
			return [parent.shadowRoot];
		}
		if (parent.nodeName === '#document-fragment') {
			return [parent.children];
		}
		if (childrenSearch)
			nodes = mg$(parent).contents(selector);
		else
			nodes = mg$(parent).find(selector);
	} else
		nodes = mg$(selector);

	return nodes;
};

GmCXt.dom.removeEq = function(selector) {
	return selector.split(':eq')[0];
};

GmCXt.dom.removeEqAndQuery = function(parent, selector, childrenSearch) {
	selector = GmCXt.dom.removeEq(selector);

	var nodes = GmCXt.dom.query(parent, selector, childrenSearch);

	return nodes;
};

GmCXt.dom.findInParent = function(jsSelector, uniquePI) {

	GmCXt.l.start('function', 'findInParent', arguments);

	var parent = jsSelector[uniquePI];
	var child = jsSelector[0];

	var child_ = GmCXt.dom.removeEq(child);
	if (child_) child = child_;

	var returnValue = mg$(parent).find(child);

	return GmCXt.l.return(returnValue);
};

GmCXt.dom.selectorScore = function(arr) {
	var scoreObj = {};

	for (var i = 0; i < arr.length; i++) {

		var str = arr[i];
		var score = 3;
		str = str.replace(':visible', '');

		if (str.indexOf('SPAN') !== -1 || str.indexOf('DIV') !== -1) {
			str = str.replace('DIV', '');
			str = str.replace('SPAN', '');
			score--;
		}

		if (str.indexOf(':eq') !== -1) {
			str = str.split(':eq')[0];
			score--;
		}

		if (!str) {
			score--;
		}

		scoreObj[arr[i]] = score;
	}

	return scoreObj;
};

GmCXt.dom.beforeQuery = function(selector) {

	var uniquePI = GmCXt.dom.getUniqueParentIndex(selector);
	var arr = selector.slice(0, uniquePI);
	var scoreObj = GmCXt.dom.selectorScore(arr);
	var nodes = null;
	var he = null;

	arr = arr.filter(function(item) {
		if (scoreObj === 0) {
			return false;
		}
		return true;
	});

	var nodes = GmCXt.dom.query(null, selector[uniquePI]);
	if (GmCXt.isOne(nodes)) {
		he = nodes[0];
	}
	var returnValue = null;

	for (var i = arr.length - 1; i >= 0; i--) {
		nodes = GmCXt.dom.query(he, arr[i]);

		if (GmCXt.isOne(nodes)) {
			he = nodes[0];
			returnValue = nodes;
		} else break;
	}

	return returnValue;
};
// ******************* FIND ACTUAL EL FROM LABEL ********************
GmCXt.dom.findTargetInputElement = function(he, pathFromLabel, targetInfo, de, ruleEl) {

	GmCXt.l.start('function', 'findTargetInputElement', arguments);

	var wdCustomSelect = false;

	if (!Array.isArray(pathFromLabel)) {
		for (var i = 0; i < pathFromLabel; i++) {
			he = he.parentNode;
		}
	} else {
		var str = '';
		if (targetInfo) {
			str = targetInfo.tagName;
			if (targetInfo.tagName === 'INPUT' && targetInfo.type) {
				str += "[type='" + targetInfo.type + "']";
			}
		}

		if (he.tagName === 'LABEL') {
			if (GmCXt.checkWorkdayTextfield(de)) {
				if (de.customSettings.workday.isWDCustomSelect) {
					wdCustomSelect = true;
					str = 'DIV[data-automation-id="multiselectInputContainer"]';
				}
				he = he.parentNode;
			} else if (GmCXt.dom.sfTextArea(de)) {
				he = he.parentNode;
			}
		}

		if (pathFromLabel[0] === -1 && str) {
			// Label in child nodes
			while (he && (he.tagName !== targetInfo.tagName || wdCustomSelect)) {
				he = he.parentNode;
				children = mg$(he).find(mg$(str));
				if (children.length > 0) {
					he = children[0];
					break;
				}
			}
		} else {
			if (mg$(he).siblings().length > 0 && he.nextElementSibling) {
				he = he.nextElementSibling;
			}

			var path = GmCXt.reverse(pathFromLabel);
			var i = 0;
			var tot = path.length;

			if (he) {
				while (he && i < tot) {
					var index = (he.childNodes.length > path[i]) ? path[i] : (he.childNodes.length - 1);
					he = he.childNodes[index];
					if (GmCXt.checkWorkdaySite() && he &&
						mg$(he).children('[data-automation-id*="errorWidget"]').length && he.nextElementSibling) {
						he = he.nextElementSibling;
					}
					i++;
				}
			}

			if (!ruleEl && GmCXt.checkWorkdayTextfield(de) && he) {
				var wd = de.customSettings.workday;
				if (wd && (wd.isInput || wd.isSelectBox)) {
					if (he.tagName !== 'INPUT' && !mg$(he).find('input').length &&
						mg$(he).attr('data-automation-id') !== 'selectWidget')
						he = null;
				}
			}

			// TODO: Add a tag check to crosscheck.
			// If not matched, we should jump to target tag in nextElementSibling
			// And pick if found unique

			if (i !== tot) he = null;
		}

		if (he && GmCXt.dom.isWDTextArea(de)) {
			var expandedHe = GmCXt.dom.checkForExpandedTextBox(he, de.meta);
			if (expandedHe) {
				he = expandedHe;
			}
		}
	}

	return GmCXt.l.return(he);
};

GmCXt.dom.isWDTextArea = function(de) {
	if (de.hasOwnProperty('customSettings')) {
		var s = de.customSettings.workday;
		return s && s.isTextarea;
	}
	return false;
};

// ******************* GENERATE SELECTOR ********************

GmCXt.dom.getJsSelector = function(jsSelectorKey, he, meta) {

	var calculateScore = true;

	var el = null;
	var index = null;
	var data = [];
	var depth = GmCXt.dom.matchDepth;
	var shadowRoot = false;
	var uniqueElIndex = [];

	while (depth > 0 || shadowRoot) {

		if (!el) {
			el = he;
		} else {
			el = el.parentNode;
			if (el instanceof ShadowRoot) {
				shadowRoot = true;
				data.push('shadowRoot');
				GmCXt.dom.shadowRootIndex.push(data.length - 1);
				el = el.host;
			}
			if (el === document) break;
		}

		if (el) {
			var selector = GmCXt.dom.getElementSelector(jsSelectorKey, el, meta);

			var nodes = GmCXt.dom.query(null, selector);

			if (!GmCXt.isOne(nodes)) {
				if (depth === 1 && !shadowRoot) {
					// find eq when queried in document – for outermost selector
					selector += ':eq(' + mg$(el).index(selector) + ')';
				} else {
					// find eq when queried in parent node - for all intermediate selectors
					index = GmCXt.dom.getElementIndex(el, selector);
					if (index !== null) {
						selector += ':eq(' + index + ')';
					}
				}
			}

			data.push(selector);

			if (GmCXt.isOne(nodes)) {
				if (shadowRoot) {
					uniqueElIndex.push(data.length - 1);
				} else if (calculateScore) {
					GmCXt.dom.uniqueSelectors.push({
						selector: selector,
						depth: (10 - depth)
					});

					GmCXt.dom.calculateScore(depth, jsSelectorKey);

					calculateScore = false;
				}
			}

			if (jsSelectorKey === 'js') {
				// Add to global attribute list for all 10 parents
				var attributes = el.getAttributeNames();
				GmCXt.dom.attributeNames = GmCXt.dom.attributeNames.concat(attributes);
			}

			depth--;
		}
	}

	if (shadowRoot) {
		var lastIndex = data.lastIndexOf("shadowRoot");
		var index = data.length - 1;

		// uniqueElIndex cannot be empty
		// It will either point to a unique parent closer to the el or point to the body tag (which is always unique)
		for (var i = 0; i < uniqueElIndex.length; i++) {
			if (uniqueElIndex[i] > lastIndex) {
				index = uniqueElIndex[i];
				break;
			}
		}

		depth = 10 - (index - lastIndex); // Depth of outermost shadow-root to the unique el closest to it
		depth = (depth < 1) ? 1 : depth;
		GmCXt.dom.calculateScore(depth, jsSelectorKey); // max score will be 4 as depth will always be less than 10

		index = Math.max(9, index); // Length of the selector – greater than 10 aswell as the uniqueEl outside the outermost shadow-root
		data = data.splice(0, index + 1); // splice at uniqueEl - therefore no eq adjustment required
	}

	return data;
};

// This function creates a selector string based on attributes
GmCXt.dom.getElementSelector = function(jsSelectorKey, el, meta, customAttributes) {

	var isCustom = el ? false : true;
	var attributes = customAttributes || GmCXt.dom.matchAttributes;
	var i = attributes.indexOf('class');

	if (i >= 0) {
		var l = attributes.length;
		attributes[i] = attributes[l - 1];
		attributes[l - 1] = 'class';
	}

	var attrObj = isCustom ? meta.elAttributes : GmCXt.getAttributeValues(el, attributes);

	var selector = attrObj.tagName;
	var attrCtr = 0;
	attributes.forEach(function(attr) {
		var validAttr = false;

		switch (attr) {
			case "text":
				var textSelector = GmCXt.dom.getTextSelector(attr, attrObj[attr], !isCustom);

				if (textSelector) {
					selector += textSelector;
					validAttr = true;
					attrCtr++;
				}
				break;

			case "id":
				var idSelector = GmCXt.dom.getIdSelector(attr, attrObj[attr], !isCustom);

				if (idSelector) {
					selector += idSelector;
					validAttr = true;
					attrCtr++;
				}
				break;

			case "class":
				value = attrObj[attr];

				if (value) {

					value = GmCXt.dom.getClassSelector(attr, attrObj[attr], !isCustom, attrCtr);

					if (!GmCXt.isEmpty(value)) {
						selector += '.' + value;
						validAttr = true;
					}
				}
				break;

			default:
				value = attrObj[attr];

				if (value) {
					if (jsSelectorKey === 'custom') {
						value = GmCXt.dom.skipSpecialCharValue(value);
					}
					if (!GmCXt.isEmpty(value)) {
						var textAttr = ['placeholder', 'value', 'title', 'name'];

						var attrSelector = '';
						if (attr.includes('Id') || attr.toLowerCase().indexOf('id') === 0 ||
							attr.toLowerCase().includes('_id') || attr.toLowerCase().includes('-id')) {
							attrSelector = GmCXt.dom.getIdSelector(attr, value, !isCustom);
						} else if (textAttr.includes(attr)) {
							attrSelector = GmCXt.dom.getTextSelector(attr, value, !isCustom);
						} else {
							attrSelector = GmCXt.dom.getAttrSelector(attr, value);
						}

						if (!GmCXt.isEmpty(attrSelector)) {
							selector += attrSelector;
							validAttr = true;
							attrCtr++;
						}
					}
				}

		}

		if (!isCustom && validAttr && jsSelectorKey)
			GmCXt.dom.addAttributeForSelector(attr, meta, jsSelectorKey);

	});

	if (!GmCXt.checkSalesForceSite() || attrObj.tagName !== 'SLOT') {
		selector += ":visible";
	}

	if (isCustom && GmCXt.isEmpty(attributes))
		selector = "";

	return selector;
};

GmCXt.dom.getClassSelector = function(attr, value, filter, attrCtr) {
	var selector = null;
	var operator = null;
	if (!GmCXt.isEmpty(value)) {
		if (filter) {
			selector = GmCXt.dom.filterValidClasses(value);
		}

		if (!filter || (!selector && !attrCtr)) {
			// Assuming class is always last in the list of attributes, if counter is 0, add classes without filtering
			var classes = value.split(/\s+/);
			classes = classes.filter(function(className) {
				className = className.trim();
				if (!className || className.match(/[[\]{}()<>%:*+?.,"'/\\^$|#=]/g)) {
					return false;
				}
				return true;
			});
			selector = classes.filter(Boolean).join(".");
		}
	}
	return selector;
};

GmCXt.dom.getIdSelector = function(attr, value, filter) {
	var selector = null;
	var operator = null;
	if (!GmCXt.isEmpty(value)) {
		if (filter) {
			var temp = value;
			value = GmCXt.dom.getAlphabeticalSubstr(value);
			if (!value) return null;

			if (value[0] !== temp) {
				operator = 'contains';
			}
		}

		selector = GmCXt.dom.getAttrSelector(attr, value, operator);
	}
	return selector;
};

GmCXt.dom.getTextSelector = function(attr, value, filter) {

	var selector = null;
	var operator = null;

	if (!GmCXt.isEmpty(value)) {
		if (filter) {
			var temp = value;
			value = GmCXt.dom.getAlphabeticalSubstr(value);
			if (!value) return null;

			if (value[0] !== temp) {
				operator = 'contains';
			}

		}

		if (attr === 'text') {
			if (!filter) { // Value is a string if not passed through the filter function
				value = [value];
			}

			selector = '';
			var length = value.length > 3 ? 3 : value.length;

			for (var i = 0; i < length; i++) {
				selector += ":contains('" + value[i].trim() + "')";
			}

		} else {
			selector = GmCXt.dom.getAttrSelector(attr, value, operator);
		}
	}

	return selector;
};

GmCXt.dom.getAttrSelector = function(attr, value, operator) {

	var buildSelectorBlock = function(attr, value, operator) {
		var sel = "[" + attr + "='" + value.replace(/'/g, "\\'") + "']";

		switch (operator) {
			case undefined:
			case null:
				break;
			case 'contains': {
				sel = sel.replace('=', '*=');
				break;
			}

			case 'startsWith': {
				sel = sel.replace('=', '^=');
				break;
			}

			case 'endsWith': {
				sel = sel.replace('=', '$=');
				break;
			}
		}

		return sel;
	};

	if (typeof value === 'string') { // Single value
		var selector = buildSelectorBlock(attr, value, operator);
	} else { // Array of values
		var selector = '';
		var length = value.length > 3 ? 3 : value.length;

		for (var i = 0; i < length; i++) {
			selector += buildSelectorBlock(attr, value[i], operator);
		}
	}

	return selector;
};

GmCXt.dom.skipSpecialCharValue = function(text) {
	if (text.match(/[[\]{}():*+?.,\\^$|#]/g)) {
		return '';
	}
	return value;
};

GmCXt.dom.getAlphabeticalSubstr = function(text) {
	// Returns array of substrings if alphanumeric
	// Returns the string as is at index 0, if no digits present
	// Returns null if a proper length aphabetical substr not present
	var value = text;
	var valueArr = [];
	var temp = text;

	var num = value.match(/\d+/g); // Array of digits present in the string
	if (GmCXt.isEmpty(num)) {
		return [value];
	}

	if (num.length < 4) {
		var numIndex = [];
		for (var i = 0; i <= num.length; i++) {

			if (i === num.length) {
				value = temp;
			} else {
				numIndex[i] = temp.indexOf(num[i]);
				value = temp.substring(0, numIndex[i]);
				temp = temp.slice(numIndex[i] + num[i].length);
			}

			if (!GmCXt.isEmpty(value) && value.length > 3) {
				valueArr.push(value.trim());
			}
		}
	}

	if (!GmCXt.isEmpty(valueArr)) {
		return valueArr.sort(function(a, b) {
			return b.length - a.length;
		});
	}

	return null;
};

GmCXt.dom.filterValidClasses = function(val) {

	if (val && typeof val === 'string') {

		var classes = val.split(/\s+/);

		classes = classes.filter(function(className) {

			className = className.trim();

			if (!className || className.match(/\d+/g) || className.match(/[[\]{}()<>%:*+?.,"'/\\^$|#=]/g))
				return false;

			if (GmCXt.dom.invalidClass(className))
				return false;

			return true;
		});

		if (classes.length)
			return classes.join('.');
	}
	return '';
};

GmCXt.dom.invalidClass = function(cl) {

	var list = ['hide', 'show', 'ascending', 'descending', 'has-focus', 'over', 'doitforme-'];

	for (var i = 0; i < list.length; i++) {
		if (cl.includes(list[i]))
			return true;
	}
	return false;
};

GmCXt.dom.addAttributeForSelector = function(attr, meta, jsSelectorKey) {
	var attrList = meta.selectorAttributes;
	if (attrList) {
		if (!attrList.hasOwnProperty(jsSelectorKey)) {
			attrList[jsSelectorKey] = [attr];
		} else if (attrList[jsSelectorKey].indexOf(attr) < 0) {
			attrList[jsSelectorKey].push(attr);
		}
	}

	// Add to global selector Attributes variable
	if (GmCXt.dom.selectorAttributes.indexOf(attr) < 0) {
		GmCXt.dom.selectorAttributes.push(attr);
	}
};

GmCXt.dom.getElementIndex = function(el, selector) {

	var index = null;
	var nodes = GmCXt.dom.query(el.parentNode, selector, true);
	for (var i = 0, j = nodes.length; i < j; i++) {
		if (el === nodes[i]) {
			index = i;
			break;
		}
	}

	return index;
};

// Returns attributes of a element selector in key,value pair
GmCXt.dom.getAttributes = function(selectorArr) {

	var attrList = [];

	selectorArr.forEach(function(selector) {
		var attrObj = {};
		var splitByColon = selector.split(':');

		var splitBySqBracket = splitByColon[0].split(/\[(.*?)\]/g).filter(Boolean);
		for (var i in splitBySqBracket) {
			var attr = splitBySqBracket[i];

			if (attr.includes('.')) { // Check class
				var temp = attr.split('.').filter(Boolean);
				attrObj.class = temp;

				if (i == 0) attrObj.tagName = attrObj.class.shift(); // 1st part of the string is the tagname

				attrObj.class.sort();

			} else {
				if (i == 0) attrObj.tagName = attr;
				else {
					var temp = attr.replace(/\'/g, '').split('=');
					attrObj[temp[0]] = temp[1];
				}
			}
		}

		splitByColon.shift();
		splitByColon.forEach(function(part) {
			if (part.includes('contains')) {
				attrObj.text = part.split("\'")[1];
			}
		});

		attrList.push(attrObj);

	});

	return attrList;
};

// ******************* SALESFORCE TABLES SPECIAL HANDLING ********************

GmCXt.dom.checkAllProp = function(obj) {
	if (!Object.keys(obj).some(function(k) {
			return obj[k];
		})) {
		return true;
	}
	return false;
};

GmCXt.isSfSelectEl = function(he) {
	var type = 0;

	if (he.tagName === 'INPUT') {

		if (he.matches('.slds-combobox__input[role="textbox"]')) {
			type = 1;

		} else if (he.matches('.inputDate.input[type="text"]')) {
			type = 2;

		} else if (he.matches('.uiInput--default.uiInput--input[type="text"]')) {
			type = 4;
		}

	} else if (mg$(he).find('A.select[aria-haspopup="true"]').length ||
		he.matches('A.select[aria-haspopup="true"]')) {
		type = 3;

	} else if (mg$(he).find('input.uiAutocomplete[aria-haspopup="true"]').length ||
		mg$(he).find('input.uiInput--default.uiInput--input[type="text"]').length ||
		mg$(he).find('span.slds-pill__label').length ||
		mg$(he).find('span.pillText').length) {
		type = 4;
	}

	if (type) {
		return type;
	}
};

GmCXt.dom.getCustomSettings = function(he) {
	var settings = {};

	if (GmCXt.checkSalesForceSite()) {

		var salesforce = {};
		var inputType = ['text', 'password', 'email', 'search'];

		salesforce.customSelect = GmCXt.isSfSelectEl(he);

		if (salesforce.customSelect === 4) {
			salesforce.customInput = true;
		}

		if (!salesforce.customSelect) {
			salesforce.globalSearch = he.className.includes('uiInput--{remove}');

			if (!salesforce.globalSearch) {
				salesforce.isInput = (he.tagName === 'INPUT' && inputType.includes(he.type));

				if (!salesforce.isInput) {
					salesforce.isTextarea = GmCXt.dom.checkSFTextarea(he);

					if (!salesforce.isTextarea) {
						salesforce = GmCXt.dom.salesForceHeader(he);
					}
				}
			}
		}

		if (he.tagName === 'TD' && he.hasAttribute('data-label') && mg$(he).find('input.uiInputText').length) {
			salesforce.customInput = true;
		}

		settings.salesforce = salesforce;

	} else if (GmCXt.checkWorkdaySite()) {

		var workday = {};
		workday = GmCXt.dom.checkInput(he);

		if (!workday.isCheckbox) {
			workday.isWDCustomSelect = GmCXt.dom.checkCustomSelect(he);
		}

		if (!workday.isInput && !workday.isWDCustomSelect) {
			workday.isTextarea = GmCXt.dom.checkTextarea(he);
		}

		if (GmCXt.dom.checkAllProp(workday)) {
			workday.isSelectBox = (he.getAttribute('data-automation-id') === 'selectWidget');
		}

		if (GmCXt.dom.checkAllProp(workday)) {
			workday = GmCXt.dom.workdayHeader(he);
		}
		settings.workday = workday;

	} else if (GmCXt.checkUBS()) {

		settings.ubs = GmCXt.dom.checkUBSHeader(he);
	} else {
		settings.table = GmCXt.dom.checkTableHeader(he);
	}

	return settings;
};

GmCXt.dom.checkInput = function(he) {
	var inputNode = mg$(he).find('input');

	var isInput = (he.tagName === 'INPUT');

	if (!isInput && GmCXt.isOne(inputNode)) {
		var tempHe = inputNode[0];
		for (var i = 0; i < 8 && tempHe; i++) {
			if (tempHe === he) {
				isInput = true;
				break;
			}
			tempHe = tempHe.parentNode;
		}
	}

	if (isInput) {
		var elem = GmCXt.isOne(inputNode) ? inputNode[0] : he;
	}

	var isCheckbox = ((isInput && elem.type === 'checkbox') ||
		(he.previousElementSibling && he.previousElementSibling.type === 'checkbox'));

	var returnObj = {
		isInput: isInput,
		isCheckbox: isCheckbox
	};

	return returnObj;
};

GmCXt.dom.workdayHeader = function(he) {
	var workday = {};
	var head = false;
	var rows = [];
	var tempHe = he;
	var level = 7;
	var isHead = false;

	if (tempHe.tagName) {
		for (var i = 0; i < level; i++) {
			if (tempHe.tagName === 'BODY' || tempHe instanceof ShadowRoot) break;
	
			if (tempHe.tagName === 'TR') {
				isHead = true;
				break;
			}
	
			if (tempHe.tagName === 'TD') {
				var columnIndex = mg$(tempHe).parent().children().index(mg$(tempHe));
			}
	
			tempHe = tempHe.parentNode;
		}
	}

	if (isHead) {
		rows = mg$(tempHe).parent().children();
	}

	if (rows.length && columnIndex) {
		for (i = 0; i < rows.length; i++) {
			var columns = mg$(rows[i]).children();
			if (columns.eq(columnIndex).find("textarea, .textArea").length) {
				workday.columnIndex = columnIndex;
				workday.isTableHeader = true;
			}
		}
	}

	return workday;
};

GmCXt.dom.checkCustomSelect = function(he) {
	var multiSelect = mg$(he).parents("[data-automation-id='multiselectInputContainer']");
	if (multiSelect.length === 1) {
		multiSelect = multiSelect[0];
	} else if (mg$(he).attr('data-automation-id') === 'multiselectInputContainer') {
		multiSelect = he;
	} else {
		multiSelect = null;
	}

	var selectedItemList = mg$(he).parent().siblings("ul[data-automation-id='selectedItemList'][role='listbox']");
	if (selectedItemList.length === 1) {
		selectedItemList = selectedItemList[0];
	} else if (mg$(he).attr('data-automation-id') === 'selectedItemList' && mg$(he).attr('role') === 'listbox') {
		selectedItemList = he;
	} else {
		selectedItemList = null;
	}

	if (he.tagName === 'INPUT' && multiSelect && selectedItemList) {
		return true;
	} else if (selectedItemList) {
		return true;
	} else if (multiSelect) {
		var node = mg$(multiSelect).find("ul[data-automation-id='selectedItemList'][role='listbox']")[0];

		if (node) {
			return GmCXt.dom.levelCheck(multiSelect, node, 9);
		}
	}

	return false;
};

GmCXt.dom.levelCheck = function(he, node, level) {
	for (var i = 0; i < level && node; i++) {
		if (node === he) {
			return true;
		}
		node = node.parentNode;
	}
	return false;
};

GmCXt.dom.checkSFTextarea = function(he) {
	var tempHe = he;
	var level = 3;

	if (!he) {
		return false;
	}

	if (he.matches('DIV[role="toolbar"]') ||
		(he.parentElement && he.parentElement.matches('DIV[role="toolbar"]'))) {
		return false;
	}

	if (he.children.length && he.children[0].tagName === 'LIGHTNING-INPUT-RICH-TEXT') {
		return true;
	}

	for (i = 0; i < level, tempHe; i++) {
		if (tempHe.parentElement && tempHe.parentElement.tagName === 'LIGHTNING-INPUT-RICH-TEXT') {
			return true;
		}
		tempHe = tempHe.parentNode;
	}
	return false;
};

GmCXt.dom.checkTextarea = function(he) {
	var tempHe = he;
	var level = 5;
	for (i = 0; i < level, tempHe; i++) {
		if (tempHe.previousElementSibling && tempHe.previousElementSibling.tagName === 'TEXTAREA') {
			return true;
		}
		tempHe = tempHe.parentNode;
	}
	return false;
};

GmCXt.dom.isWorkdayInputType = function(settings) {
	if (settings && GmCXt.checkWorkdaySite()) {
		if (settings.isTextarea || settings.isSelectBox || settings.isInput || settings.isCheckbox)
			return true;
	}
	return false;
};

GmCXt.dom.isOuterEl = function(he) {
	if (he.getAttribute('data-automation-id') === 'richTextEditor')
		return true;
	if (mg$(he).find("DIV[data-automation-id='richTextEditor']").length)
		return true;

	var tempHe = he.parentNode;
	for (var i = 0; i < 3; i++) {
		if (tempHe.getAttribute('data-automation-id') === 'richTextEditor') {
			return true;
		}
		tempHe = tempHe.parentNode;
	}
	return false;
};

GmCXt.dom.isInnerEl = function(he) {
	if (he.getAttribute('data-automation-id') === 'richTextContent')
		return true;
	if (mg$(he).find("DIV[data-automation-id='richTextContent']").length)
		return true;

	return false;
};

GmCXt.dom.checkForExpandedTextBox = function(he, meta) {

	var label = mg$('DIV.wd-popup').find("H1[data-automation-id='dialogLabel']")[0];
	if (label && meta.textPropertyValue !== label.textContent) return;

	var expandedTextArea = mg$('DIV.wd-popup').find("DIV[data-automation-id='richTextEditor']");

	if (expandedTextArea.length) {

		if (GmCXt.dom.isOuterEl(he))
			return expandedTextArea[0];

		if (GmCXt.dom.isInnerEl(he)) {
			var innerEl = expandedTextArea.find("DIV[data-automation-id='richTextContent']");

			if (innerEl.length)
				return innerEl[0];
		}
	}
	return null;
};

GmCXt.dom.checkUBSHeader = function(he) {
	var ubs = {};
	var tempHe = he;
	var level = 5;

	for (var i = 0; i < level; i++) {

		if (!tempHe || tempHe.tagName === 'BODY' || tempHe.tagName === 'HTML' || tempHe instanceof ShadowRoot) break;

		if (mg$(tempHe).hasClass('datagrid-header-column')) {
			ubs.tableCategory = 1;
			ubs.columnDataKey = tempHe.getAttribute('data-key');
			break;
		}

		if (tempHe.tagName && tempHe.tagName.toLowerCase() === 'th') {
			ubs.tableCategory = 2;
			break;
		}

		tempHe = tempHe.parentNode;
	}

	if (ubs.tableCategory) {
		ubs.columnIndex = mg$(tempHe).parent().children().index(mg$(tempHe));

		var rows = GmCXt.dom.getUBSTableRows(tempHe, ubs.tableCategory);
		if (rows.length) {
			ubs.isClickable = GmCXt.dom.checkColumnClickable(rows, ubs.columnIndex, ubs.columnDataKey);
		}

	}

	return ubs;
};

GmCXt.dom.getUBSTableRows = function(columnHeaderEl, tableCategory) {
	var rows = [];

	var header = false;
	var headerEl = columnHeaderEl;
	for (var i = 0; i < 5; i++) {
		if (mg$(headerEl).hasClass('datagrid-header') || headerEl.tagName.toLowerCase() === 'table') {
			header = true;
			break;
		}

		headerEl = columnHeaderEl.parentNode;
	}

	if (header) {
		switch (tableCategory) {
			case 1:
				var bodyEl = mg$(headerEl).parent().find('[class=datagrid-grid]')[0];
				rows = mg$(bodyEl).find('.datagrid-row');
				break;

			case 2:

				while (headerEl.parentNode.childElementCount === 1) {
					headerEl = headerEl.parentNode;
				}

				var bodyEl = mg$(headerEl).parent().find('table').find('tbody')[0];
				rows = mg$(bodyEl).find('tr');
				break;
		}
	}

	return rows;
};

GmCXt.dom.checkColumnClickable = function(rows, index, dataKey) {
	var isClickable = false;

	for (var i = 0; i < rows.length; i++) {
		if (dataKey) {
			var cell = mg$(rows[i]).find('[data-key=' + dataKey + ']')[0];
		} else {
			var cell = mg$(rows[i]).find('td')[index];
		}

		if (cell) {
			var aTag = mg$(cell).find('a');
			var button = mg$(cell).find('button');
			if (aTag.length || button.length) {
				isClickable = true;
				break;
			}
		}
	}

	return isClickable;
};

GmCXt.dom.salesForceHeader = function(he) {
	var salesforce = {};
	var tempHe = he;
	var level = 7; // Check for thead upto 7 levels up
	for (var i = 0; i < level; i++) {

		if (!tempHe.tagName || tempHe.tagName === 'BODY' || tempHe instanceof ShadowRoot) break;

		if (tempHe.tagName === 'THEAD') {
			salesforce.tableCategory = 1;

			if (tempHe.parentNode.childNodes.length === 1)
				salesforce.tableCategory = 2;

			break;

		} else if (tempHe.tagName === 'TBODY') {
			if (mg$(tempHe).children().first().hasClass('headerRow')) {
				salesforce.tableCategory = 3;
				break;
			}
		}
		tempHe = tempHe.parentNode;
	}

	if (salesforce.tableCategory) {
		var rows = GmCXt.dom.getTableRowsFromHeader(tempHe, salesforce.tableCategory);

		if (rows && mg$(rows).length) {
			salesforce = GmCXt.dom.checkColumn(rows, he, salesforce);
		}
	}

	return salesforce;
};

GmCXt.dom.getTableRowsFromHeader = function(headerEl, tableCategory) {
	var rows = null;
	if (headerEl) {
		switch (tableCategory) {
			case 1:
				rows = mg$(headerEl).siblings('tbody').children();
				break;

			case 2:
				tempHe = headerEl;
				headerEl = null;
				for (var ctr = 0; ctr < 6; ctr++) {

					if (tempHe.tagName === 'BODY' || tempHe instanceof ShadowRoot) break;

					if (mg$(tempHe).hasClass('x-grid3-header')) {
						headerEl = tempHe;
						break;
					}
					tempHe = tempHe.parentNode;
				}

				if (headerEl) {
					tbody = mg$(headerEl).siblings().find('tbody');
					rows = mg$(tbody).find('tr');
				}
				break;

			case 3:
				rows = mg$(headerEl).children();
		}
	}
	return rows;
};

GmCXt.dom.checkColumn = function(rows, he, salesforce) {

	while (he.tagName !== 'TH' && he.tagName !== 'TD') {

		if (he.tagName === 'BODY' || he instanceof ShadowRoot) break;

		he = he.parentNode;
	}

	if (he && he.tagName !== 'BODY') {
		var columnIndex = mg$(he).parent().children().index(mg$(he));

		for (var i = 0; i < rows.length; i++) {
			var columns = mg$(rows[i]).children();
			if (columns.eq(columnIndex).find("a, input[type='checkbox']").length) {
				salesforce.columnIndex = columnIndex;
				salesforce.isClickable = true;
				break;
			}
		}

		if (he.offsetHeight) {
			salesforce.tableHeight = he.offsetHeight * rows.length;
		} else {
			while (he.tagName !== 'TABLE') {
				if (he.tagName === 'BODY' || he instanceof ShadowRoot) break;
				he = he.parentNode;
			}
			if (he.tagName === 'TABLE') {
				salesforce.tableHeight = he.offsetHeight + he.offsetHeight / rows.length;
			}
		}
	}

	return salesforce;
};

GmCXt.dom.checkTableHeader = function(he) {
	var table = {};
	var tempHe = he;
	var level = 5;

	for (var i = 0; i < level && tempHe; i++) {

		if (tempHe.tagName === 'BODY' || tempHe.tagName === 'HTML' || tempHe instanceof ShadowRoot) break;

		if (tempHe.tagName && tempHe.tagName.toLowerCase() === 'th') {
			table.tableCategory = 1;
			break;
		}

		if (tempHe.tagName && tempHe.tagName.toLowerCase() === 'td') {
			var headerRow = tempHe.parentNode;
			if (headerRow.tagName.toLowerCase() === 'tr' && headerRow.parentNode.tagName.toLowerCase() === 'thead') {
				table.tableCategory = 2;
				break;
			}
		}

		tempHe = tempHe.parentNode;
	}

	if (table.tableCategory) {
		table.columnIndex = mg$(tempHe).parent().children().index(mg$(tempHe));

		var rows = GmCXt.dom.getTableRows(tempHe, table.tableCategory);
		if (rows.length) {
			table.isClickable = GmCXt.dom.checkColumnClickable(rows, table.columnIndex);
		}

	}

	return table;
};

GmCXt.dom.getTableRows = function(el, tableCategory) {
	var rows = [];

	var header = false;
	var headerEl = el;
	for (var i = 0; i < 5; i++) {
		if (headerEl.tagName.toLowerCase() === 'thead') {
			header = true;
			break;
		}

		headerEl = headerEl.parentNode;
	}

	if (header) {
		switch (tableCategory) {
			case 1:
			case 2: {
				while (headerEl.parentNode.childElementCount === 1) {
					headerEl = headerEl.parentNode;
				}

				var bodyEl = mg$(headerEl).parent().find('tbody')[0];

				if (bodyEl) {
					rows = mg$(bodyEl).find('tr');
				}
				break;
			}
		}
	}

	return rows;
};

GmCXt.dom.sfTextArea = function(el) {
	if (el && el.customSettings && el.customSettings.salesforce) {
		return el.customSettings.salesforce.isTextarea;
	}
	return false;
};

// ******************* CSS/POSITION RELATED FUNCTIONS ********************
GmCXt.dom.getElementPos = function(he) {

	var rect = he.getBoundingClientRect();
	rect = GmCXt.dom.getElementOffset(rect);
	var cssPosition = GmCXt.dom.getElementFixedPosition(he);

	var pos = {
		position: rect,
		cssPosition: cssPosition
	};

	return pos;
};

GmCXt.dom.getElementOffset = function(rect) {
	return {
		left: rect.left,
		top: rect.top,
		width: rect.width,
		height: rect.height
	};
};

GmCXt.dom.getElementFixedPosition = function(he) {

	var el = mg$(he);
	var all = el.add(el.parents());

	var cssPosition = all.filter(function() {

		return (mg$(this).css("position") === 'fixed' || mg$(this).css("position") === 'sticky');
	}).length > 0;

	return cssPosition;
};

GmCXt.dom.getElementZindex = function(he) {
	var el = mg$(he);
	var all = el.add(el.parents());

	for (var i = 0; i < all.length; i++) {
		if (mg$(all[i]).css("zIndex") > 0) {
			return mg$(all[i]).css("zIndex");
		}
	}

	return false;
};

// ******************* IDENTIFY BY TEXT FUNCTIONS ********************
// Save Element Info
GmCXt.dom.getIdentifyByTextInfo = function(he, meta) {

	GmCXt.dom.readElText(he);

	meta.textPropertyValue = GmCXt.dom.textPropertyValue;
	meta.textPropertyName = GmCXt.dom.textPropertyName;

	if (meta.textPropertyValue) {

		meta.textNode = {};

		var textType = GmCXt.dom.classifyElementText(meta);
		var queryString = GmCXt.dom.getQueryString(he.tagName, textType, meta);
		var matches = GmCXt.dom.getTextMatches(queryString);
		meta.textNode.jquery_selector = GmCXt.dom.generateTextBasedjQuery(he, matches, queryString);

		var filteredMatches = textType ? GmCXt.filterParentNodes(matches, meta.textPropertyValue) : matches;
		var length = filteredMatches.length;

		if (length) {
			filteredMatches.each(function(index, node) {
				if (node === he) {
					meta.tagName = he.tagName;
					meta.textNode.position = {
						index: index,
						length: length
					};
				}
			});
		}
	}
};

GmCXt.dom.getElText = function(he) {
	var name, value;

	if (!GmCXt.dom.textPropertyName && he.textContent && /\S/.test(he.textContent)) {
		name = 'textContent';
		value = he.textContent.trim();
	}

	if (he.tagName === 'INPUT' || he.tagName === 'BUTTON') {
		var value = he.getAttribute('value');
		var placeholder = he.getAttribute('placeholder');

		if (value && (he.type === 'submit' || he.type === 'button')) {
			name = 'value';
			value = value;
		} else if (placeholder) {
			name = 'placeholder';
			value = placeholder;
		}
	}

	return {
		name: name,
		value: value
	};
};

GmCXt.dom.readElText = function(he) {

	var elTextDeatils = GmCXt.dom.getElText(he);
	GmCXt.dom.textPropertyName = elTextDeatils.name;
	GmCXt.dom.textPropertyValue = elTextDeatils.value;

};

GmCXt.dom.classifyElementText = function(meta) {
	var textProperty = meta.textPropertyName;

	var textType = false;
	if (textProperty === 'textContent' || textProperty === 'text') {
		textType = true;
	}

	return textType;
};

GmCXt.dom.getQueryString = function(tagName, textType, meta) {
	var queryString = null;
	var textProperty = meta.textPropertyName;
	var text = meta.textPropertyValue;

	if (text && text.length < 201) {

		// Replace occurences of single quotes & double quotes
		text = text.replace(/\'/g, "\\'").replace(/\"/g, '\\"');

		if (textType) {
			queryString = tagName + GmCXt.dom.getTextSelector('text', text, true) + ":visible";
		} else {
			queryString = tagName + "[" + textProperty + "='" + text + "']" + ":visible";
		}
	}

	return queryString;
};

GmCXt.dom.getTextMatches = function(queryString) {

	var matches = [];

	if (queryString) {
		try {
			matches = mg$(queryString);
		} catch (e) {
			matches = [];
		}
	}

	return matches;
};

GmCXt.dom.generateTextBasedjQuery = function(he, matches, queryString) {

	var query = null;

	if (matches.length) {
		matches.each(function(index, node) {
			if (node === he) {
				queryString += ':eq(' + index + ')';
				query = queryString;
			}
		});
	}

	return query;
};

// Find element
GmCXt.dom.identifyByTextNodePosition = function(meta, workdayInput) {

	if (GmCXt.isEmpty(meta.textNode.position)) return null;

	GmCXt.l.start('function', 'identifyByTextNodePosition', arguments);

	var textType = GmCXt.dom.classifyElementText(meta);
	var queryString = GmCXt.dom.getQueryString(meta.tagName, textType, meta);
	var matches = GmCXt.dom.getTextMatches(queryString);
	var filteredMatches = textType ? GmCXt.filterParentNodes(matches, meta.textPropertyValue) : matches;
	var length = filteredMatches.length;
	var el = null;

	if (length) {

		var pos = meta.textNode.position;

		if (pos.length === length) {
			el = filteredMatches[pos.index];
		} else {
			var indexFromChild = pos.length - pos.index;
			if (length > indexFromChild)
				el = filteredMatches[length - indexFromChild];
		}
	}

	if (workdayInput && el && !GmCXt.dom.checkOpaque(el)) {
		filteredMatches = GmCXt.dom.filterByOpacity(filteredMatches);
		if (filteredMatches.length === 1)
			el = filteredMatches[0];
		else
			el = null;
	}

	return GmCXt.l.return(el);
};

GmCXt.dom.executeTextBasedJquery = function(queryString, text, workdayInput) {

	if (GmCXt.isEmpty(queryString)) return null;

	GmCXt.l.start('function', 'executeTextBasedJquery', arguments);

	var returnValue = null;

	var nodes = mg$(queryString);

	var length = nodes.length;

	if (!length || nodes.is(':hidden') || workdayInput) {
		queryString = queryString.split(':eq')[0];
		if (!queryString.includes(':visible')) {
			queryString += ':visible';
		}
		nodes = mg$(queryString);
	}

	nodes = nodes.filter(function(index, node) {
		return node.textContent === text;
	});

	if (workdayInput) {
		nodes = GmCXt.dom.filterByOpacity(nodes);
	}

	length = nodes.length;

	if (length) {
		returnValue = nodes[length - 1];
	}

	return GmCXt.l.return(returnValue);
};

GmCXt.dom.filterByOpacity = function(nodes) {
	return nodes.filter(function(index, node) {
		return GmCXt.dom.checkOpaque(node);
	});
};

GmCXt.dom.checkOpaque = function(node) {
	var visible = true;
	var tempHe = node;
	for (var i = 0; i < 15; i++) {
		var opacity = window.getComputedStyle(tempHe).opacity;
		if (GmCXt.isNumeric(opacity) && opacity < 0.5) {
			visible = false;
			break;
		}
		tempHe = tempHe.parentNode;
		if (tempHe.tagName === 'BODY' || tempHe instanceof ShadowRoot) break;
	}
	return visible;
};

// ******************* IDENTIFY BY TEXT FUNCTIONS - OLD METHOD ********************
GmCXt.dom.identifyByText = function(de, selector) {

	GmCXt.l.start('function', 'identifyByText', arguments);

	var he = null;
	var textProperty = de.meta.textPropertyName;

	var newSelector = GmCXt.dom.getIdByTextSelector(selector, textProperty);

	he = GmCXt.dom.identifyByTextGetEl(de, newSelector, true);

	if (he === null) he = GmCXt.dom.identifyByTextGetEl(de, newSelector, false);

	return GmCXt.l.return(he);
};

GmCXt.dom.identifyByTextGetEl = function(de, newSelector, visible) {

	GmCXt.l.start('function', 'identifyByTextGetEl', arguments);

	if (visible) newSelector += ":visible";

	var he = null;
	var nodes = mg$(document).find(newSelector);
	var prop = de.meta.textPropertyName;

	if (nodes) {

		if (nodes.length && prop === 'textContent') {
			nodes = GmCXt.dom.filterByText(nodes, de.meta.textPropertyValue);
		}

		nodes = GmCXt.dom.filterParentTextEl(nodes, de.meta.textPropertyValue);

		if (GmCXt.isMany(nodes)) he = nodes[0];
	}

	return GmCXt.l.return(he);
};

// This function remove all parent elements with same text for intentify by text elements.
GmCXt.dom.filterParentTextEl = function(nodes, text) {

	GmCXt.l.start('function', 'filterParentTextEl', arguments);

	var text = text.trim().toLowerCase();

	nodes.filter(function(index, node) {
		mg$(node).parents().addClass('mgPlayerJSTest_dummy-class');
	});

	nodes = nodes.filter(function(index, node) {
		if (node.innerText) {
			var nodeText = node.innerText.trim().toLowerCase();
			return nodeText === text && !mg$(node).hasClass('mgPlayerJSTest_dummy-class');
		}
	});

	mg$('.mgPlayerJSTest_dummy-class').removeClass('mgPlayerJSTest_dummy-class');

	return GmCXt.l.return(nodes);
};

GmCXt.dom.getIdByTextSelector = function(jsSelector, prop) {

	GmCXt.l.start('function', 'getIdByTextSelector', arguments);

	var newSel = "";

	if (jsSelector.js) {

		var selector = jsSelector.js.slice(0, 1);

		var attributes = GmCXt.dom.getAttributes(selector);
		attributes = attributes[0];

		switch (prop) {

			case "value":
				newSel = attributes.tagName + "[value=" + attributes.value + "]";
				break;

			case "placeholder":
				newSel = attributes.tagName + "[placeholder=" + attributes.placeholder + "]";
				break;

			case "textContent":
				newSel = attributes.tagName;
				break;
		}

		if (attributes.type)
			newSel = newSel + "[type=" + attributes.type + "]";
	}

	return GmCXt.l.return(newSel);
};

GmCXt.dom.trackFinderRequest = function(stepInfo) {

	if (GmCXt.isEmpty(GmCXt.domSelectorTracker) || !GmCXt.domSelectorTracker.hasOwnProperty(GmCXt.id)) {
		GmCXt.domSelectorTracker[GmCXt.id] = {};
	}
	var current = GmCXt.domSelectorTracker[GmCXt.id];

	if (!stepInfo) stepInfo = 'untracked';

	GmCXt.dom.currentElTag = stepInfo;

	if (current.hasOwnProperty(stepInfo)) {
		current[stepInfo].finder++;
	} else {
		current[stepInfo] = {
			finder: 1,
			query: 0
		};
	}
};

GmCXt.dom.trackQueryRequest = function() {
	if (!GmCXt.isEmpty(GmCXt.dom.currentElTag)) {
		GmCXt.domSelectorTracker[GmCXt.id][GmCXt.dom.currentElTag].query++;
	}
};
/**
	* @file DOM finder module
	* @author Nilesh Pachpande
	*/

GmCXt.highlighter = (function() {

	var pub = {};
	var jobs = {};
	var beaconJobs = [];
	var smarttipJobs = [];
	var tagJobs = [];
	var editJob = {};
	var intervalId = null;
	var onChangeNextInterval = null;
	var onKeyupEventJobId = "";
	var tracker = {};
	var deletedDuctTape = [];
	var onElem = false;
	var autoTriggered = {};
	var disableFocus = false;
	var gmjobId = 'gmjobId';
	GmCXt.domElStore = [];
	var beaconHe = {};

	function getDefaultWait() {
		return Date.now() + GmCXt.t.highlighterDefautWT;
	}

	function notInTopWindow(de) {
		if (window.self === window.top && de && de.meta && de.meta.inTopWindow === false)
			return true;
		else
			return false;
	}

	pub.queue = function(req) {

		GmCXt.l.start('function', 'GmCXt.highlighter.queue', arguments);

		if (notInTopWindow(req.data.settings.element)) {
			GmCXt.l.add("Element is NOT present in top window", true);
			return;
		}

		var task, state = "find";
		if (req.data.findOnly && req.data.stepType === GmCXt.STEP_TYPE_MESSAGE) task = "findAndKeep";
		else if (req.data.findOnly) task = "findOnly";
		else if (req.data.requestId) task = "findAndWatch";
		else task = "findAndKeep";

		var jobId = "_" + req.data.requestId;

		if (req.data.tooltipId) {
			jobId += "_" + req.data.tooltipId;
		}

		req.startTime = Date.now();
		req.timeout = req.data.timeout;

		// task: findAndWatch(player) / findAndKeep(edit step)
		// state: find(if element not found) / 
		// watch ( element found and keep watching) 

		var resp = {
			data: {
				requestId: req.data.requestId,
				tooltipId: req.data.tooltipId
			}
		};

		jobs[jobId] = {
			id: jobId,
			req: req,
			resp: resp,
			task: task,
			state: state,
			outline: {}
		};

		if (req.data.task === "workFlowTour") {
			resp.data.tourId = req.data.tourId;
		} else if (req.identifier !== "blackout-request" && !req.data.noOutline) {
			createOutline(jobId, req.data.tooltipId, req.data.identifier);
		}

		findJob(jobId);

		setJobInterval();
	};

	pub.unqueue = function(data) {
		if (data) {
			var jobId = "_" + data.jobId;

			for (var id in jobs) {
				if (id.indexOf(jobId) !== -1) {
					var rmJobId = id;
					hideOutline(rmJobId);
					delete jobs[rmJobId];
				}
			}
		}

		if (onChangeNextInterval) {
			clearInterval(onChangeNextInterval);
		}

		pub.removeOutline();
		mg$('.mgPlayerJSTest_selector-blackout').remove();
		mg$(".mgPlayerJSTest_user-tip-guide-container").remove();
	};

	pub.queueVariable = function(req) {

		if (notInTopWindow(req.data.varElem)) return;

		var jobId = "_" + req.data.varId;

		var resp = {
			requestId: req.data.varId
		};

		jobs[jobId] = {
			id: jobId,
			req: req,
			resp: resp,
			task: '',
			state: "findVariable",
			startTime: Date.now(),
			timeout: req.data.timeout || getDefaultWait()
		};

		findVariable(jobId);

		setJobInterval();
	};

	pub.queueBeacon = function(req) {

		if (notInTopWindow(req.data.stepData)) return;

		var jobId = "_" + req.data.tourId;
		var isPreview = req.data.isPreview;

		if (jobs[jobId]) {
			if (isPreview) jobs[jobId] = {};
			else return;
		}

		var resp = {
			requestId: req.data.tourId
		};

		jobs[jobId] = {
			id: jobId,
			req: req,
			resp: resp,
			task: '',
			state: "findBeacon",
			startTime: Date.now(),
			timeout: req.data.timeout || getDefaultWait()
		};

		beaconJobs.push(jobId);

		findBeacon(jobId);

		setJobInterval();
	};

	pub.clearBeacons = function() {
		for (var index = 0; index < beaconJobs.length; index++) {
			var job = jobs[beaconJobs[index]];
			if (job) {
				pub.clearJob(job.req.data.tourId);
			}
		}
		beaconJobs = [];
		mg$(".mgPlayerJSTest_beacon-icon").remove();
	};

	pub.queueTag = function(req) {

		var step = req.data.step;

		if (notInTopWindow(step.step_settings.element)) return;

		var jobId = "_" + step.step_id;

		if (jobs[jobId]) return;

		GmCXt.log(16, "QUEUE TAG: " + GmCXt.stepLog(step.step_id, step.tour_id));

		var resp = {
			requestId: step.step_id
		};

		jobs[jobId] = {
			id: jobId,
			req: req,
			resp: resp,
			task: '',
			state: "findTag",
			startTime: Date.now(),
			timeout: req.data.timeout || getDefaultWait()
		};

		findTag(jobId);

		tagJobs.push(jobId);

		setJobInterval();
	};

	function findTag(jobId) {
		var job = jobs[jobId];
		var rd = job.req.data;
		var de = rd.step.step_settings.element;
		var he = null;
		var elemPos = null;
		var step = rd.step;

		if (Date.now() > job.timeout) {
			GmCXt.log(16, "NOT FOUND TAG: " + GmCXt.stepLog(step.step_id, step.tour_id));
			delete jobs[jobId];
			return;
		}

		if (de) {
			he = GmCXt.dom.tFinder(de, rd.frame);

			if (he) {
				GmCXt.log(16, "FOUND TAG: " + GmCXt.stepLog(step.step_id, step.tour_id));
				elemPos = he.getBoundingClientRect();

				if (elemPos) {
					mg$(he).addClass('mg-ft-tag').addClass(GmCXt.tagClassName(step));
				}
			}
		}
	}

	pub.queueSmarttip = function(req) {

		var step = req.data.step;

		if (notInTopWindow(step.step_settings.element)) return;

		var jobId = "_" + step.step_id;
		var isPreview = req.data.isPreview;

		if (deletedDuctTape.indexOf(jobId) === -1 || isPreview) {

			if (jobs[jobId]) {
				if (isPreview) jobs[jobId] = {};
				else return;
			}

			var resp = {
				requestId: step.step_id
			};

			jobs[jobId] = {
				id: jobId,
				req: req,
				resp: resp,
				task: '',
				state: "findSmarttip",
				startTime: Date.now(),
				timeout: req.data.timeout || getDefaultWait()
			};

			findSmarttip(jobId);

			smarttipJobs.push(jobId);

			setJobInterval();
		}
	};

	pub.clearAll = function() {
		jobs = {};
	};

	pub.clearJob = function(jobId) {
		var jobId = "_" + jobId;

		if (jobs[jobId]) {
			var he = jobs[jobId].resp.he;
			mg$(he).off('focus blur keyup click mouseover mouseout');
			delete jobs[jobId];
		}
	};

	pub.removeToolTipIcons = function(d) {
		mg$('.mgPlayerJSTest_smarttip-icon-wrapper-' + d.step_id).remove();
		mg$('.mgPlayerJSTest_smarttip-valid-' + d.step_id).remove();
		mg$('#mgPlayerJSTest_smarttip-' + d.step_id).remove();
		mg$('.gssSmarttip-form-submit-' + d.tour_id).removeClass('gssSmarttip-form-submit');
		mg$('.gssSmarttip-form-submit-' + d.tour_id).removeClass('gssSmarttip-form-submit-' + d.tour_id);
	};

	pub.clearTooltips = function(list) {
		for (var index = 0; index < smarttipJobs.length; index++) {
			var job = jobs[smarttipJobs[index]];
			if (job) {
				var d = {};

				d.step_id = job.req.data.step.step_id;
				d.tour_id = job.req.data.tour.tour_id;
				if (list) {
					if (list.indexOf(d.tour_id) !== -1) {
						pub.removeToolTipIcons(d);
						pub.clearJob(d.step_id);
					}
				} else {
					pub.removeToolTipIcons(d);
					pub.clearJob(d.step_id);
				}

			}
		}
		smarttipJobs = [];
	};

	pub.getElementPrecision = function(criteria) {
		var el = null;
		if (editJob && editJob.resp) {
			if (editJob.resp.labelHe) {
				el = GmCXt.dom.getElement(editJob.resp.labelHe, criteria, editJob.req.data.frame);
				if (el) {
					el.pathFromLabel = editJob.resp.de.pathFromLabel;
					el.targetInfo = editJob.resp.de.targetInfo;
					el.customSettings = editJob.resp.de.customSettings;
				}

			} else {
				el = GmCXt.dom.getElement(editJob.resp.he, criteria, editJob.req.data.frame);
			}
		}

		return el;
	};

	pub.getCurrentHe = function() {
		if (editJob && editJob.resp) {
			return editJob.resp.he;
		}
	};

	pub.bringElementInViewport = function(data, selector, isFrame) {

		if (selector) {
			try {
				var he = mg$(selector);
			} catch (e) {
				console.log('Error executing jquery; iframe not found to scroll');
			}

			if (he && he.length) {
				bringElementInViewport_(he[0], isFrame); // Bring iframe in viewport
			}
		} else {
			if (data.stepType === GmCXt.STEP_TYPE_MESSAGE && data.tooltip) {
				return; // align 1st tooltip only
			}

			var jobId = "_" + data.requestId;

			var resp = null;
			if (!GmCXt.isEmpty(jobs) && !GmCXt.isEmpty(jobs[jobId])) {
				resp = jobs[jobId].resp;
			}

			if (!GmCXt.isEmpty(editJob)) {
				resp = editJob.resp;
			}

			if (resp && resp.he) {
				var scrollParent = GmCXt.getScrollParent(resp.he);
				scrollPage(resp.he, scrollParent);
			}
		}
	};

	pub.queueRuleElement = function(req) {
		var elemInIFrame = notInTopWindow(req.data.element);

		if (elemInIFrame && GmCXt.iframeCount > 1) {
			return;
		}

		var jobId = "_" + req.data.requestId;
		var resp = {
			requestId: req.data.requestId
		};

		if (req.data.job) {

			jobs[jobId] = {
				id: jobId,
				req: req,
				resp: resp,
				task: '',
				state: "findRuleElement",
				startTime: Date.now(),
				timeout: (Date.now() + req.data.job.timeout) || getDefaultWait(),
				initiator: req.data.job.initiator
			};

			if (elemInIFrame && GmCXt.iframeCount === 1) {
				jobs[jobId].timeout = Date.now();
			}

			findRuleElement(jobId);

			setJobInterval();
		}
	};

	pub.clearRuleJobs = function(i, triggerSource) {

		if (i) {
			var inits = [i];
		} else {
			var inits = ['currentPage', 'beacon', 'smartTip', 'notif'];
		}

		GmCXt.log(5, "CLEARED RULES ELEMENT FINDER JOBS source:  " + triggerSource + " for initiator: ", inits);

		for (var jobId in jobs) {
			if (GmCXt.inArrayString(jobs[jobId].initiator, inits)) {
				deleteJob(jobId);
			}
		}

		clearDomElStore();
	};

	function clearDomElStore() {
		var domElArr = [];

		for (var i = 0; i < GmCXt.domElStore.length; i++) {
			if (mg$.contains(window.document, mg$(GmCXt.domElStore[i].he)[0])) {
				if (GmCXt.getElVisibility(GmCXt.domElStore[i].he) === "visible") {
					domElArr.push(GmCXt.domElStore[i]);
				}
			}
		}

		GmCXt.domElStore = domElArr;
	}

	pub.queueMatchingAlgoElement = function(req) {

		GmCXt.log(12, "FIND matching algo element");

		var jobId = "_" + req.data.requestId;
		var resp = {
			requestId: req.data.requestId
		};

		var waitTime = 2000;

		jobs[jobId] = {
			id: jobId,
			req: req,
			resp: resp,
			task: '',
			state: "findMatchingAlgoElement",
			startTime: Date.now(),
			timeout: Date.now() + waitTime
		};

		findMatchingAlgoElement(jobId);
		setJobInterval();
	};

	pub.clear = function() {
		jobs = {};
	};

	pub.insertPowerForm = function(data) {

		var job = jobs[data.jobId];
		if (!job) return;

		var he = job.resp.he;

		insertPowerHtml(he, data.tag, data.formHtml, data.forceInsert);
		mg$(he).blur();
	};

	function insertPowerHtml(he, tag, value, forceInsert) {
		if (tag === 'input' || tag === 'textarea' || tag === 'select') {

			if (mg$(he).val() && !forceInsert) return;

			var t = GmCXt.getText(value);

			mg$(he).val(t);
			triggerKeyUp(he);
			triggerChange(he);
			addNoWatch(he);

		} else if (mg$(he).attr('contenteditable')) {

			var t = GmCXt.getText(he.innerHTML);
			if (t && !forceInsert) return;

			he.innerHTML = value;
			disableFocus = true;
			mg$(he).focus();
			triggerAllEvent(he);
			addNoWatch(he);

			GmCXt.timeout(function() {
				disableFocus = false;
			}, 10);
		}
	}

	function deleteJob(jobId) {

		if (!jobs[jobId]) return;

		GmCXt.log(6, "DELETED RULE JOB :  ", jobs[jobId]);
		delete jobs[jobId];
	}

	var jobNumber = 0;

	function setJobInterval() {
		// Start interval when at least one elem in queue. 
		// Stop when no elems in queue.
		if (Object.keys(jobs).length === 1) {
			clearInterval(intervalId);
			jobNumber = 0;
			intervalId = setInterval(processJobs, 300);
		}
	}

	function checkJobsQueue() {
		if (Object.keys(jobs).length === 0) {
			clearInterval(intervalId);
		}
	}

	function processJobs() {
		jobNumber++;
		checkJobsQueue();
		for (var jobId in jobs) {
			var job = jobs[jobId];

			if (job.state === 'watchBeacon') watchBeaconJob(jobId);
			else if (job.state === 'watchSmarttip') watchSmartTip(jobId);

			if (jobNumber % 3 === 0) {
				if (job.state === 'find') findJob(jobId);
				else if (job.state === 'watch') watchJob(jobId);
				else if (job.state === 'findBeacon') findBeacon(jobId);
				else if (job.state === 'findSmarttip') findSmarttip(jobId);
				else if (job.state === 'findRuleElement') findRuleElement(jobId);
				else if (job.state === 'findMatchingAlgoElement') findMatchingAlgoElement(jobId);
				else if (job.state === 'findVariable') findVariable(jobId);
				else if (job.state === 'findTag') findTag(jobId);
			}
		}
	}

	function watchJob(jobId) {

		var req = jobs[jobId].req;
		var resp = jobs[jobId].resp;

		// To handle element keyUp event
		if (req.data.task !== "workFlowTour") {
			if (jobId === onKeyupEventJobId) {
				onUserEvent.call(this, null, false, jobId);
				onKeyupEventJobId = "";
				return;
			}
		}

		if (resp.he) {
			var rect = GmCXt.getBoundingRect(resp.he);
			if (!rect) rect = {};
		} else return;

		if (GmCXt.currentIframeId && GmCXt.currentIframeId !== GmCXt.id) {
			return;
		}

		// Find element again,
		// if DOM is refreshed and resp.he instance is cleared 

		if (!rect.top && !rect.left && !rect.width && !rect.height || !resp.he.getAttribute(gmjobId)) {

			var strictOnly = false;

			if (!req.pageRefreshed) strictOnly = true;

			req.pageRefreshed = true; // for second time onward; as popup was already present on the screen before refresh, cannot delay >1s for it to reappear

			var elems = getDOMElement(resp.de, req.data.frame, req.data.log_stepInfo, strictOnly, req.data);

			if (elems.he) {
				if (resp.de.pathFromLabel && elems.targetHe) {
					resp.he = elems.targetHe;
					resp.labelHe = elems.he;
				} else {
					resp.he = elems.he;
				}

				if (resp.he) {
					if (req.data.settings.headerNext) {
						recheckColumnAttributes(resp.he, resp.de.customSettings);
					}

					rect = resp.he.getBoundingClientRect();
					resp.he.setAttribute(gmjobId, jobId);
					removeActiveEvents(resp.he);

					if (!req.data.beaconSetting && !req.data.isElem) bindEvents(req, resp);

				}
			}
		}

		if (req.data.task === "workFlowTour") return;

		hideErrorMessage(jobId);

		var visibility = GmCXt.getElVisibility(resp.he);

		if (rect.width === 0 && rect.height === 0) visibility = 'hidden';

		var posChanged = resp.elPos &&
			(resp.elPos.top !== rect.top ||
				resp.elPos.left !== rect.left ||
				resp.elPos.height !== rect.height ||
				resp.elPos.width !== rect.width);

		if (visibility == 'visible') {

			resp.hiddenAt = null;
			resp.elPos = mg$.extend(true, {}, rect);

			setOutline(jobId);

			resp.data.posChanged = posChanged;
			resp.data.watch = true;
			resp.data.element.position = GmCXt.dom.getElementOffset(rect);

			req.cb(resp.data);

		} else {

			GmCXt.log(33, "STEP ELEMENT HIDDEN from view");

			hideOutline(jobId);

			if (!doNotHideStep(req)) {
				if (req.data.tooltipId) {
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:hide_inline_step_popup_tootip', {
						id: req.data.tooltipId
					});
				} else {
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:hide_inline_step_popup');
				}

			} else {
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:step_element_hidden');
			}
		}
	}

	function doNotHideStep(req) {
		var stepSetting = req.data.settings;
		if (stepSetting.doNotHide === true)
			return true;
		else
			return false;
	}

	function findJob(jobId) {

		var job = jobs[jobId];
		var req = job.req;
		var resp = job.resp;

		if (req.data.tooltipId && jobId.indexOf(req.data.tooltipId) < 0) {
			return;
		}

		function notFound() {

			GmCXt.log(33, "NOT FOUND STEP ELEMENT: " + req.data.log_stepInfo, 1);
			GmCXt.printMatchingAlgoLogs();
			resp.data.status = GmCXt.ELEMENT_NOT_FOUND;
			resp.data.rca = GmCXt.l.primaryInfo[GmCXt.l.primaryInfo.length - 1];

			delete jobs[jobId];

			if (req.cb) {
				if (req.isHighlightEl) {
					req.cb(req.data.originalRequest);
				} else {
					req.cb(resp.data);
				}
			}
		}

		if (req.data.timeout) {
			var now = Date.now();
			if (now > req.timeout) {
				notFound();
				return;
			}
		}

		if (req.data.tooltipId && req.identifier !== "blackout-request") {
			resp.de = req.element;
		} else {
			resp.de = req.data.settings.element;
		}

		var strictOnly = false;
		if (strictMatch(req, 4000) && !req.data.tooltipId) {
			strictOnly = true;
		}

		var elems = getDOMElement(resp.de, req.data.frame, req.data.log_stepInfo, strictOnly, req.data);

		if (resp.de.pathFromLabel && elems.targetHe) {
			resp.he = elems.targetHe;
			resp.labelHe = elems.he;
		} else {
			resp.he = elems.he;
		}

		if (!resp.he) {

			if (req.data.waitTime === 0) {
				notFound();
				return;

			} else if (req.data.showLogs === false && req.startTime + 5000 < Date.now()) {
				GmCXt.printMatchingAlgoLogs();
				req.data.showLogs = true;
			}
		}

		if (resp.he) {

			if (req.data.settings.headerNext) {
				recheckColumnAttributes(resp.he, resp.de.customSettings);
			}

			if (job.task === "findAndKeep") {
				var el = GmCXt.dom.getElement(elems.he, getCriteria(req), req.data.frame);

				// In case of target elem path from Label element, 
				// get position of target elem
				if (resp.de.pathFromLabel) {
					el.position = GmCXt.dom.getElementPos(resp.he).position;
					el.pathFromLabel = resp.de.pathFromLabel;
					el.targetInfo = resp.de.targetInfo;
					el.customSettings = resp.de.customSettings;
				}
			} else {
				var el = GmCXt.dom.getElementPos(resp.he);
			}

			if (el.position.width === 0 && el.position.height === 0) {
				if (resp.de.version && GmCXt.decodeVersion(resp.de.version) >= 10000) {
					var rect = resp.he.parentNode.getBoundingClientRect();
					var pos = resp.de.position;

					if (pos.width === rect.width && pos.height === rect.height) {
						el.position = rect;
					}
				}
			}

			if (el.position.width > 0 && el.position.height > 0) {

				if (GmCXt.checkWorkdaySite() && mg$(resp.he).parents("[data-automation-id*='ActiveListRow']")[0]) {
					var parentStr = "[data-automation-id*='ActiveListRow']";
					resp.data.workdayEdit = {
						isTrue: true,
						index: mg$(parentStr).index(mg$(resp.he).parents(parentStr)[0])
					};
				}

				GmCXt.log(33, "FOUND STEP ELEMENT: " + req.data.log_stepInfo, 1);
				GmCXt.printMatchingAlgoLogs();

				resp.cssPosition = GmCXt.dom.getElementFixedPosition(resp.he);

				resp.elPos = mg$.extend(true, {}, el.position);

				resp.data.status = GmCXt.ELEMENT_FOUND;

				resp.data.element = el;
				resp.data.he = resp.he;

				resp.data.element.elOptions = GmCXt.getElOptions(resp.he);

				resp.data.cssPosition = resp.cssPosition;

				resp.data.elTag = mg$(resp.he)[0].tagName.toLowerCase();
				resp.data.isEditableEl = mg$(resp.he).attr('contenteditable');
				resp.data.id = GmCXt.id;

				if (req.data.tagId) {
					resp.data.tagId = req.data.tagId;
				}

				// addBlackoutOverlay(req, resp);
				resp.userEventFlag = false;
				resp.he.setAttribute(gmjobId, jobId);
				var existingClasses = mg$(resp.he).attr('class') || '';
				mg$(resp.he).attr('class', existingClasses + ' doitforme-' + jobId.slice(1));

				removeActiveEvents(resp.he);

				if (!req.data.beaconSetting && !req.data.isElem && req.type != 'tag') {
					bindEvents(req, resp);
				}

				if (req.data.task === "workFlowTour") {
					addAttrsForIntel(resp.he, req);
				} else if (!req.data.noOutline) {
					setOutline(jobId);
				}

				if (job.task === "findAndWatch") {
					job.state = "watch";
				} else if (job.task === "findAndKeep") {
					editJob = mg$.extend(true, {}, job);
				}

				if (job.task === "findOnly" || job.task === "findAndKeep") {
					delete jobs[jobId];
				}

				if (req.cb) {
					req.cb(resp.data);
				}
			}
		}
	}

	function findVariable(jobId) {
		var job = jobs[jobId];
		var requestData = job.req.data;
		var de = requestData.varElem;
		var he = null;
		var elemValue = null;

		var varlog = GmCXt.tourLog({
			tour_id: requestData.varId,
			tour_title: requestData.varTitle
		});

		if (Date.now() > job.timeout) {
			GmCXt.log(67, "NOT FOUND VARIABLE " + varlog);
			GmCXt.printMatchingAlgoLogs();
			job.resp.value = false;
			job.resp.name = requestData.varTitle;
			job.req.cb(job.resp);
			pub.clearJob(requestData.varId);
			return;
		}

		if (de) {
			var log_stepInfo = "[VARIABLE] " + requestData.varTitle;

			he = getDOMElementForRule(de, requestData.frame, log_stepInfo);

			if (he) {

				GmCXt.log(67, "FOUND VARIABLE " + varlog);
				GmCXt.printMatchingAlgoLogs();
				job.resp.value = GmCXt.getElementText(he) || GmCXt.dom.getElText(he).value;
				job.resp.name = requestData.varTitle;
				job.resp.he = he;
				if (job.req.cb) {
					job.req.cb(job.resp);
					pub.clearJob(requestData.varId);
				}
			}
		}
	}

	function recheckColumnAttributes(he, customSettings) {
		var sf = GmCXt.dom.salesForceHeader(he);
		var ubs = GmCXt.dom.checkUBSHeader(he);
		var table = GmCXt.dom.checkTableHeader(he);

		for (var key in customSettings.salesforce) {
			if (sf.hasOwnProperty(key)) {
				customSettings.salesforce[key] = sf[key];
			}
		}

		for (var key in customSettings.ubs) {
			if (ubs.hasOwnProperty(key)) {
				customSettings.ubs[key] = ubs[key];
			}
		}

		for (var key in customSettings.table) {
			if (table.hasOwnProperty(key)) {
				customSettings.table[key] = table[key];
			}
		}
	}

	function findBeacon(jobId) {

		var job = jobs[jobId];
		var requestData = job.req.data;
		var de = requestData.stepData;
		var he = null;
		var elemPos = null;
		var tourlog = GmCXt.tourLog({
			tour_id: requestData.tourId,
			tour_title: requestData.tourTitle
		});

		if (Date.now() > job.timeout) {
			GmCXt.log(48, "NOT FOUND BEACON " + tourlog);
			GmCXt.printMatchingAlgoLogs();

			GmCXt.trackElNotFound({
				source: "beacon",
				tour_id: requestData.tourId
			});

			delete jobs[jobId];
			return;
		}

		var strictOnly = strictMatch(job);

		if (de) {
			var log_stepInfo = "[BEACON] " + requestData.tourTitle;
			he = getDOMElementForRule(de, requestData.frame, log_stepInfo, strictOnly);

			if (he) {

				GmCXt.log(48, "FOUND BEACON " + tourlog);
				GmCXt.printMatchingAlgoLogs();

				elemPos = he.getBoundingClientRect();

				if (elemPos) {
					job.resp.he = he;
					job.resp.elemPos = elemPos;
					setBeaconPosition(jobId);
					job.state = "watchBeacon";
				}
			}
		}
	}

	function strictMatch(job, duration) {

		if (!duration) duration = 3000;

		if (job.startTime + duration > Date.now()) {
			return true;
		}

		return false;
	}

	function isTargetFrame(de, frame, startTime) {
		var waitTime = GmCXt.t.tragetFrameWT;

		if (de.criteria.precision_level === "High" &&
			!GmCXt.isEmpty(de.iframeAttrs) &&
			(startTime + waitTime) > Date.now()) { // Target frame check not required in these cases

			if (!GmCXt.isEmpty(frame) && GmCXt.validateTargetFrame(de.iframeAttrs, frame.attributes)) {
				return true;
			} else {
				return false;
			}
		}
		return true;
	}

	function findSmarttip(jobId) {
		var job = jobs[jobId];
		var rd = job.req.data;
		var de = rd.step.step_settings.element;
		var he = null;
		var elemPos = null;
		var step = rd.step;

		if (Date.now() > job.timeout) {
			GmCXt.log(43, "NOT FOUND SMARTTIP: " + GmCXt.stepLog(step.step_id, step.tour_id));
			GmCXt.printMatchingAlgoLogs();

			GmCXt.trackElNotFound({
				source: "smartTip",
				tour_id: job.req.data.step.tour_id,
				step_id: step.step_id
			});

			delete jobs[jobId];
			return;
		}

		var strictOnly = strictMatch(job);

		if (de) {

			he = getDOMElementForRule(de, rd.frame, GmCXt.getStepInfoLog(step), strictOnly);

			if (he) {

				removePrevTooltip(he, jobId, rd, step);

				GmCXt.log(43, "FOUND SMARTTIP: " + GmCXt.stepLog(step.step_id, step.tour_id));
				GmCXt.printMatchingAlgoLogs();

				elemPos = he.getBoundingClientRect();

				if (elemPos) {
					mg$(he).addClass('mg-smarttip-' + jobId);
					job.resp.he = he;
					job.resp.elemPos = elemPos;
					job.resp.de = de;
					job.resp.text = he.textContent;
					positionSmartTip(jobId, he);
					job.state = "watchSmarttip";
				}
			}
		}
	}

	// Checks if element is in visible area of parent container
	// which has scrollbar.
	// Parent container can be any html element or window object.
	// If element is not in parent elements visible area, it brings it in
	// viewport.
	// Sometimes it may happen that element is inside parent container's
	// boundaries, but it's NOT visible in top window's viewport.
	// pub.bringElementInViewport handles this last scenario.

	function bringElementInViewport_(he, isFrame) {

		GmCXt.l.start('function', 'bringElementInViewport_', arguments);

		var scrollParent = GmCXt.getScrollParent(he);
		var pos = he.getBoundingClientRect();

		if (!checkVisible(scrollParent, pos) || GmCXt.getElVisibility(he, isFrame) === 'hidden') {
			scrollPage(he, scrollParent);
		}

		GmCXt.l.end(he);
	}

	function scrollPage(he, scrollParent) {

		var scrollBySF = 0;
		if (GmCXt.checkSalesForceSite()) {
			var containerSF = mg$('DIV.oneCenterStage');
			if (containerSF.length) {
				containerSF = containerSF[0];
				if (containerSF.scrollHeight > (containerSF.clientHeight + 5)) {
					scrollBySF = sfdcHeaderHeight();
				}
			}
		}

		if (mg$(he).height() < screen.height) {

			he.scrollIntoView(false);

			pos = he.getBoundingClientRect();

			// To vertically center align the selected element
			if (scrollParent) {
				var parentPos = scrollParent.getBoundingClientRect();

				var scrollBy = (mg$(scrollParent).height() - pos.height) / 2.5;
				if (scrollBy > 0 && (pos.top - parentPos.top) > mg$(scrollParent).height() / 2) {
					scrollBy = mg$(scrollParent).scrollTop() + scrollBy;
					mg$(scrollParent).scrollTop(scrollBy);
				}
			} else {
				var scrollBy = (screen.height - pos.height) / 2.5;

				if (scrollBy > 0 && scrollBy < pos.top) {
					scrollBy = mg$(window).scrollTop() + scrollBy - scrollBySF;
					mg$(window).scrollTop(scrollBy);
				} else if (pos.top < 0) {
					scrollBy = mg$(window).scrollTop() + pos.top - scrollBySF;
					mg$(window).scrollTop(scrollBy);
				}
			}
		} else {
			he.scrollIntoView(true);

			if (scrollBySF) {
				mg$(window).scrollTop(mg$(window).scrollTop() - scrollBySF - 20); // buffer 20px
			}
		}
	}

	function sfdcHeaderHeight() {

		var headerHeight = 0;
		var header = mg$('header#oneHeader');
		if (header.length) {
			headerHeight += header[0].offsetHeight;
		}

		var navPanel = mg$('one-appnav');
		if (navPanel.length && !mg$(header).find(mg$('one-appnav')).length) {
			headerHeight += navPanel[0].offsetHeight;
		}

		var highlights = mg$('DIV.highlights');
		if (highlights.length) {
			headerHeight += highlights[0].offsetHeight;
		}
		return headerHeight;
	}

	function checkVisible(scrollParent, pos_) {
		var containerHeight = mg$(window).height();
		var containerWidth = mg$(window).width();
		var pos = mg$.extend(true, {}, pos_);
		var inViewport = false;

		if (scrollParent) {

			var inTopWindow = GmCXt.visibleInViewport(pos, containerHeight, containerWidth);

			var scrollParentPos = scrollParent.getBoundingClientRect();
			containerHeight = scrollParentPos.height;
			containerWidth = scrollParentPos.width;

			pos.top = (pos.top - scrollParentPos.top);
			pos.left = (pos.left - scrollParentPos.left);

			var inChildWindow = GmCXt.visibleInViewport(pos, containerHeight, containerWidth);

			inViewport = inTopWindow && inChildWindow;

		} else {
			inViewport = GmCXt.visibleInViewport(pos, containerHeight, containerWidth);
		}

		return inViewport;
	}

	function getCriteria(req) {
		var data = req.data.settings;
		if (data && data.element) return data.element.criteria;
		else return null;
	}

	function checkVisisbilityForSalesForce(el) {
		// This function added for input elements in salesforce
		if (el.tagName == 'INPUT') {
			var level = 5;
			var tempEl = el;
			for (var ctr = 0; ctr < level; ctr++) {
				if (tempEl.getRootNode() instanceof ShadowRoot) break;

				if (tempEl.classList.contains('slds-hide')) {
					el = tempEl.parentNode;
					break;
				}

				tempEl = tempEl.parentNode;
			}
		}
		return el;
	}

	function checkVisibilityForWorkday(el) {
		// This function is for input elements in relx workday
		var returnValue = el;
		if (el.tagName === 'INPUT' && el.placeholder === 'search' && mg$(el).css('display') === 'none') {
			el = el.parentNode;
		}
		if (mg$(el).is("[data-automation-hiddensearch]")) {
			return el.parentNode;
		}
		return returnValue;
	}

	function checkVisibility(el) {

		GmCXt.l.start('function', 'checkVisibility', arguments);

		var returnValue = el;

		if (el && GmCXt.checkSalesForceSite()) {
			el = checkVisisbilityForSalesForce(el);
			returnValue = el;
		}

		if (el && GmCXt.checkWorkdaySite()) {
			el = checkVisibilityForWorkday(el);
			returnValue = el;
		}

		if (el && GmCXt.getElVisibility(el) === 'hidden') {
			GmCXt.l.add('Element is hidden.', true);
			returnValue = null;
		}

		return GmCXt.l.return(returnValue);
	}

	function bringInViewport(d) {
		return !(d && ((d.stepType === GmCXt.STEP_TYPE_MESSAGE && d.tooltip > 0) || d.task === "workFlowTour"));
	}

	function isFrameInViewPort(frame) {
		if (!GmCXt.isEmpty(frame.attributes)) {
			var attributes = frame.attributes;
			var s = '';
			Object.keys(attributes).forEach(function(key) {
				var val = attributes[key];
				if (typeof val === 'string') {
					val = val.replace(/'/g, "\\'");
				}
				if (val !== null && val !== undefined) {
					s += "[" + key + "='" + val + "']";
				}

			});
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:check_iframe_visible', {
				selector: s
			});
		}
	}

	function isVisible_(he, de, data) {
		if (!de.meta.inTopWindow && data && data.requestId && data.frame) {
			isFrameInViewPort(data.frame);
		}

		if (bringInViewport(data)) {
			bringElementInViewport_(he);
		}

		return checkVisibility(he);
	}

	function getDOMElement(de, frame, log_stepInfo, strictOnly, data) {
		try {
			GmCXt.l.reset();
			GmCXt.l.start('function', 'getDOMElement', arguments);

			var he, targetHe = null;

			if (de.version && GmCXt.decodeVersion(de.version) >= 10000) {

				he = GmCXt.dom.finder(de, frame, log_stepInfo, strictOnly);

				if (he) {

					he = checkTableArrow(he);

					if (de.pathFromLabel) { // if he is label then find input element
						GmCXt.l.add('Finding the corresponding input element to the label. . .', true);

						migrateTargetTag(de);
						targetHe = GmCXt.dom.findTargetInputElement(he, de.pathFromLabel, de.targetInfo, de);

						if (targetHe) {
							targetHe = isVisible_(targetHe, de, data);
						}

						if (!targetHe) {
							he = null;
						}
					} else {
						he = isVisible_(he, de, data);
					}
				}

				var returnObj = {
					he: he,
					targetHe: targetHe
				};

			} else if (de) {
				he = legacyMethod(de);
				var returnObj = {
					he: checkVisibility(he)
				};
			}

			return GmCXt.l.return(returnObj);
		} catch (e) {
			console.error(e);
			return {};
		}
	}

	function checkTableArrow(he) {
		var tempHe = he;
		var columnIndex, rowIndex, nodes;

		if (GmCXt.checkSalesForceSite()) {
			while (tempHe && tempHe.tagName !== 'TBODY') {
				if (tempHe.tagName === 'BODY') {
					break;
				}

				if (tempHe.tagName === 'TD') {
					columnIndex = mg$(tempHe).parent().children().index(mg$(tempHe));
				}

				if (tempHe.tagName === 'TR') {
					rowIndex = mg$(tempHe).parent().children().index(mg$('tr.selected'));
				}

				tempHe = tempHe.parentNode;
			}

			if (columnIndex >= 0 && rowIndex >= 0 && tempHe.tagName === 'TBODY') {
				nodes = mg$(tempHe).children().eq(rowIndex).children().eq(columnIndex).find(he.tagName);
			}
		}

		if (nodes && nodes.length) {
			he = nodes[0];
		}

		return he;
	}

	function migrateTargetTag(de) {
		if (de.targetTag) {
			de.targetInfo = {
				tagName: de.targetTag
			};
			delete de.targetTag;
		}
	}

	function getDOMElementForRule(de, frame, log_stepInfo, strictOnly, ruleEl) {

		GmCXt.l.reset();
		GmCXt.l.start('function', 'getDOMElementForRule', arguments);

		var he = null;

		if (de.version && GmCXt.decodeVersion(de.version) >= 10000) {

			// 1.3.34 westpac
			if (GmCXt.decodeVersion(de.version) <= 5033401) {
				he = GmCXt.dom1334.finder(de, frame, log_stepInfo);

				// if he is label then find input element  
				if (he) {
					GmCXt.l.add('Element found in the document', true);
					if (de.pathFromLabel) {
						GmCXt.l.add('Finding the corresponding input element to the label. . .', true);
						he = GmCXt.dom1334.findTargetInputElement(he, de.pathFromLabel, de.targetTag);
					}
				}
			} else {

				he = GmCXt.dom.finder(de, frame, log_stepInfo, strictOnly);

				// if he is label then find input element  
				if (he) {
					if (de.pathFromLabel) {
						GmCXt.l.add('Finding the corresponding input element to the label. . .', true);

						migrateTargetTag(de);
						he = GmCXt.dom.findTargetInputElement(he, de.pathFromLabel, de.targetInfo, de, ruleEl);
					}
				}
			}

		} else if (de) {
			he = legacyMethod(de);
		}

		var returnValue = null;

		if (he)
			returnValue = he;
		else
			GmCXt.l.add('Element not found', true);

		return GmCXt.l.return(returnValue);
	}

	function legacyMethod(de) {
		var path = req.data.settings.path;

		if (req.data.settings && req.data.settings.matchLabel) {
			return matchByLabel(de);
		} else {
			return domFinder(de, path);
		}
	}

	function matchByLabel(elem) {
		var he = findElementByLabel(elem);

		if ((he == null) && elem.parentData && elem.parentData.innerText.length) {
			he = findElementByParentLabel(elem, elem.parentData);
		}

		return he;
	}

	pub.onDocumentClick = function(e) {

		var r = {
			onElem: false,
			inColumn: false,
			onRightClickElem: false
		};

		for (var jobId in jobs) {

			var job = jobs[jobId];
			var req = job.req;
			var resp = job.resp;

			if (req && req.data && req.data.task === 'playTour') {
				r.state = job.state;

				if (checkIfClickOnElem(e, jobId)) {
					GmCXt.log(33, "Event: Click on element");
					r.onElem = true;
				}
				if (checkIfRightClickOnElem(e, jobId)) {
					GmCXt.log(33, "Event: Right click on element");
					r.onRightClickElem = true;
				}
				if (checkIfClickInColumn(e.target, resp.he, resp.de.customSettings)) {
					GmCXt.log(33, "Event: Click in column");
					r.inColumn = true;
				}
			} else {
				r.onElem = onElem;
			}
		}
		if (GmCXt.isEmpty(jobs)) {
			r.onElem = onElem;
		}

		onElem = false;
		return r;
	};

	pub.onDocumentClickForTooltip = function(e) {

		for (var jobId in jobs) {

			var job = jobs[jobId];
			var req = job.req;
			var resp = job.resp;

			if (req && req.data) {
				var step = req.data.step;
				if (step) {
					var el = step.step_settings.element;
					if (el && el.applyToColumn) {
						if (GmCXt.checkWorkdaySite()) {
							checkCol(jobId);
						}
					}
				}
			}
		}

		function checkCol(jobId) {
			checkWorkdayColumn(e.target, resp.de)
				.then(function(he) {

					var job = jobs[jobId];
					var req = job.req;
					var step = req.data.step;

					if (!GmCXt.isEmpty(he)) {

						if (job) {
							job.resp.he = he;

							showPowerForm(he, jobId, step, req.data.isPreview);
						} else {
							// Caution: Do NOT change this else block
							// This is because sometimes jobs[jobId] comes undefined
							// Some very strange javascript problem detected in Workday
							GmCXt.timeout(function() {
								job.resp.he = he;
								showPowerForm(he, jobId, step, req.data.isPreview);
							}, 1000);
						}
					}
				});
		}
	};

	function getElementHtml(he) {
		var html = mg$(he).html();
		return "<p>" + html + "</p>";
	}

	function showPowerForm(he, jobId, step, isPreview) {

		var job = jobs[jobId];
		var rd = job.req.data;
		var tag = mg$(he)[0].tagName.toLowerCase();
		var value = rd.settings.smartTip.htmlContent;

		var data = {
			he: getElementHtml(he),
			tag: tag,
			value: value,
			oldHe: getFormOldValue(he, value),
			jobId: jobId,
			step: step,
			isPreview: isPreview
		};

		GmCXt.openPowerForm(data);
		mg$(he).blur();
	}

	function isForceMode(req) {
		if (req.data.settings.doNotForceGuide !== true &&
			req.data.playerInstance &&
			req.data.playerInstance.forceGuideMe === true)
			return true;
		else
			return false;
	}

	function checkIfClickInColumn(target, he, customSettings) {

		if (customSettings) {

			var customTable = false;
			for (var key in customSettings) {
				if (!GmCXt.isEmpty(customSettings[key])) {
					var s = customSettings[key];

					if (key === 'ubs' && s.tableCategory === 1) {
						customTable = true;
					}

					break;
				}
			}

			if (s) {
				if (customTable) {
					target = findCell(target, 'datagrid-cell');
				} else {
					target = findCell(target);
				}

				if (target && mg$.inArray(he, mg$(target).find(he)) === -1) { // Check if click is not in the header itself

					if (customTable) {
						return s.columnDataKey === target.getAttribute('data-key');
					} else {
						var targetColumnIndex = mg$(target).parent().children().index(mg$(target));
						return s.columnIndex === targetColumnIndex;
					}
				}
			}
		}
		return false;
	}

	function findCell(target, className) {
		while (condition(target, className)) {
			if (target.tagName === 'BODY' || target.tagName === 'HTML') {
				target = null;
				break;
			}

			target = target.parentNode;
		}

		return target;
	}

	function condition(target, className) {
		if (target) {
			if (className)
				return !mg$(target).hasClass(className);
			else
				return target.tagName.toLowerCase() !== 'td' && target.tagName.toLowerCase() !== 'th';
		}
		return false;
	}

	function checkWorkdayColumn(target, de) {
		return new Promise(function(resolve, reject) {
			var he = null;
			var button = null;
			if (!de) return;

			while (target && target.tagName !== 'TD') {
				if (target.tagName === 'BODY') {
					target = null;
					break;
				}

				target = target.parentNode;
			}

			if (target && de.customSettings && de.applyToColumn) {
				var customSettings = de.customSettings;
				if (customSettings && customSettings.workday && customSettings.workday.isTableHeader) {
					var workday = customSettings.workday;
					var targetColumnIndex = mg$(target).parent().children().index(mg$(target));
					if (targetColumnIndex === workday.columnIndex) {
						var textarea = mg$(target).find('textarea')[0];
						he = mg$(textarea).parent().find('[role=textbox]')[0];
						button = mg$(target).find('button')[0];
						if (textarea && button) {
							button.disabled = true;
						}
						if (he) {
							resolve(he);
						} else {
							GmCXt.timeout(function() {
								he = mg$(textarea).parent().find('[role=textbox]')[0];
								resolve(he);
							}, 250);
						}
					}
				}
			}
		});
	}

	function checkIfClickOnElem(e, jobId) {
		var resp = jobs[jobId].resp;
		var pos = resp.elPos;
		var isRightClick = e && e.button && e.button === 2;

		if (pos && isRightClick !== true &&
			(Math.floor(pos.left) <= e.clientX && e.clientX <= pos.left + pos.width) &&
			(Math.floor(pos.top) <= e.clientY && e.clientY <= pos.top + pos.height)
		) {
			return true;
		} else {
			return false;
		}
	}

	function checkIfRightClickOnElem(e, jobId) {
		var resp = jobs[jobId].resp;
		var pos = resp.elPos;
		var isRightClick = e && e.button && e.button === 2;

		if (pos && isRightClick === true &&
			(Math.floor(pos.left) <= e.clientX && e.clientX <= pos.left + pos.width) &&
			(Math.floor(pos.top) <= e.clientY && e.clientY <= pos.top + pos.height)
		) {
			return true;
		} else {
			return false;
		}
	}

	function setOutline(jobId) {

		var job = jobs[jobId];

		if (job.req.identifier === "blackout-request") return;

		var b = 2;
		var resp = job.resp;
		var pos = mg$.extend(true, {}, resp.elPos);
		var outline = job.outline;
		var backgroundColor = '';

		var os = GmCXt.getStepSettings();

		if (os) {
			b = os.selectorStyle.borderWidth;
			backgroundColor = os.selectorStyle.borderColor;
		}

		pos.top = pos.top - b;
		pos.left = pos.left - b;
		pos.width = pos.width + (b * 2);
		pos.height = pos.height + (b * 2);

		if (resp.cssPosition !== true) {
			pos.top += mg$(window).scrollTop();
			pos.left += mg$(window).scrollLeft();
		}

		if (resp.cssPosition) {
			position = "fixed";
		} else {
			position = "absolute";
		}

		var isElectron = (GmCXt.conf.runEnv === "electron");

		if (pos) {
			outline.top.css({
				top: isElectron ? Math.max(0, pos.top) : pos.top,
				left: pos.left,
				width: pos.width,
				height: b,
				background: backgroundColor,
				position: position
			});
			outline.bottom.css({
				top: pos.top + pos.height - b,
				left: pos.left,
				width: pos.width,
				height: b,
				background: backgroundColor,
				position: position
			});
			outline.left.css({
				top: pos.top,
				left: isElectron ? Math.max(0, pos.left) : pos.left,
				width: b,
				height: pos.height,
				background: backgroundColor,
				position: position
			});
			outline.right.css({
				top: pos.top,
				left: pos.left + pos.width - b,
				width: b,
				height: pos.height,
				background: backgroundColor,
				position: position
			});
		}

		showOutline(jobId);
	}

	function hideOutline(jobId) {
		mg$('.mgPlayerJSTest_select-outline.' + jobId).hide();
	}

	function showOutline(jobId) {
		mg$('.mgPlayerJSTest_select-outline.' + jobId).show();
	}

	function editStep(e) {
		GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:execute_edit_step_activerequest');
	}

	function getNextDomain(nextStep) {
		var domain = '';

		if (nextStep && nextStep.step_url) {
			domain = GmCXt.getDomain("https://" + nextStep.step_url);
		}

		return domain;
	}

	function checkReload(s) {

		//if(e && checkForNewTab) {
		//   flag = mg$(this).attr("target") !== "_blank" && !e.ctrlKey && !e.shiftKey;
		//}

		if (GmCXt.playerI.testAutomation) {
			var nextStep = GmCXt.getNextStep();
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:automation_check_reload', {
				pageReloadOption: s.pageReloadOption,
				isNextStep: nextStep ? true : false
			});
		}

		if (s.nextStepOpensInNewTab ||
			s.pageGetsReloaded ||
			s.pageReloadOption === "new_tab" ||
			s.pageReloadOption === "reload" ||
			s.pageReloadOption === "restart_parent") {
			GmCXt.log(33, "Step settings, page reloads or new tab opens.");
			return false;
		} else
			return true;
	}

	function hideErrorMessage(jobId) {

		if (checkForError(jobId)) {
			var id = GmCXt.getHostErrorId();
			if (id && mg$(id).length === 0) {
				GmCXt.toastMsgPersistent().hide();
			}
		}
	}

	function checkForError(jobId) {
		var job = jobs[jobId];
		var c = false;
		if (job) {
			var setting = job.req.data.settings;
			if (setting.checkOnScreenError) {
				c = true;
			}
		}
		return c;
	}

	function onUserEvent(e, checkForNewTab, jobId) {

		if (checkForError(jobId)) {

			GmCXt.timeout(function() {
				if (GmCXt.checkForErrorOnScreen()) return;
				onUserEventIn(e, checkForNewTab, jobId);
			}, 3000);

		} else {
			onUserEventIn(e, checkForNewTab, jobId);
		}
	}

	function onUserEventIn(e, checkForNewTab, jobId) {

		GmCXt.log(33, "onUserEventIn");

		var job = jobs[jobId];
		var PI = GmCXt.playerI;

		var currentStepDomainName = '';
		var nextStepDomainName = '';

		if (PI && job && job.resp.userEventFlag === false) {

			var setting = job.req.data.settings;

			if (setting.clickNext === true || setting.onClickTooltip === true) {
				mg$(job.resp.he).off('mousedown touchstart').on("mousedown touchstart", onMouseUpElement);
				mg$(job.resp.he).off('mouseup touchend').on("mouseup touchend", onMouseUpElement);
			}

			if (setting.onCopyNext) {
				mg$(job.resp.he).unbind('copy', onCopyText);
			}

			job.resp.userEventFlag = true;
			onElem = true;

			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:close_step');

			// TODO: 
			if (PI.tour && PI.tour.steps && mg$.isArray(PI.tour.steps)) {

				var currentStep = GmCXt.getStepFromPlayerI(PI.currentStepId);
				var currentStepUrl = "https://" + currentStep.step_url;
				currentStepDomainName = GmCXt.getDomain(currentStepUrl);
			}

			if (!(setting.pageReloadOption === "new_tab" || setting.pageReloadOption === "reload") &&
				!GmCXt.isLooping()
			) {
				GmCXt.getSurveyScreen(GmCXt.createDeepCopy(PI));
			}

			if (job.req.data.nextStep) {

				nextStepDomainName = getNextDomain(job.req.data.nextStep);

				if (currentStepDomainName === nextStepDomainName && checkReload(setting)) {

					GmCXt.log(33, "On user event, send message to play next step.");
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_next_step');

				} else if (setting.pageReloadOption === "restart_parent") {
					GmCXt.restartInParent();
				}
			} else if (GmCXt.playerI.testAutomation) {
				checkReload(setting);
			}

			if (PI.loops && PI.completeEventTracked) {

				GmCXt.log(33, 'Tour Loop: ' + (PI.currentLoop + 1) + ' completed.');

				if (!(setting.pageReloadOption === "new_tab" || setting.pageReloadOption === "reload")) {
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:tour_loop_completed');
				}
			} else if ((!(GmCXt.isPlayer() && PI.tour.tour_settings.enableSentiment) || PI.testAutomation) &&
				GmCXt.isLastStep(PI.currentStepId, PI.playStructure) && !GmCXt.isLooping()) {

				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:close_guide');
			}

			hideOutline(jobId);
			delete jobs[jobId];

			if (GmCXt.isDesktop() && !PI.isLastStep) {
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_next_step');
			}
		}
	}

	function createOutline(jobId, tooltipId, identifier) {
		var cname = 'mgPlayerJSTest_select-outline ' + jobId;
		if (identifier === "editStep") {
			cname = 'mgPlayerJSTest_select-tool-outline ' + jobId;
		}

		if (tooltipId)
			cname += ' mgPlayerJSTest_msg-tooltip-' + tooltipId;

		var div = '<div class="' + cname + '"></div>';

		jobs[jobId].outline = {
			top: mg$(div).prependTo('html'),
			bottom: mg$(div).prependTo('html'),
			left: mg$(div).prependTo('html'),
			right: mg$(div).prependTo('html')
		};
	}

	function clickOnHighlightedArea(e, aoi, framePos) {
		if (!GmCXt.isEmpty(aoi)) {
			var left = e.clientX;
			var top = e.clientY;

			if (!GmCXt.isEmpty(framePos)) {
				left += framePos.x;
				top += framePos.y;
			}

			if ((left > aoi.left && left < (aoi.left + aoi.width)) &&
				(top > aoi.top && top < (aoi.top + aoi.height))) {
				return true;
			}
		}
		return false;
	}

	pub.removeOutline = function(tooltipId) {

		if (tooltipId) {
			mg$('.mgPlayerJSTest_msg-tooltip-' + tooltipId).remove();
		} else
			mg$('.mgPlayerJSTest_select-outline').remove();
		mg$('.mgPlayerJSTest_select-tool-outline').remove();
	};

	// Bind events on the element

	function bindEvents(req, resp) {

		if (req.data.tooltipId && checkGuideLink(req, resp)) {
			mg$(resp.he).one("mouseup", onClickEl);
		} else {
			// completionEvent property is defined in new step creator only
			if (req.data.settings.completionEvent || req.data.settings.keepNext) {

				bindNewEvents(req, resp);

				if (req.data.triggerEvent) {

					if (GmCXt.autoTrigger) {
						clearTimeout(GmCXt.autoTrigger);
					}
					triggerEvents(req, resp.he);
				}

			} else {
				bindLegacyEvents(req, resp);
			}
		}
	}

	var onClickEl = function(e) {
		var jobId = e.currentTarget.getAttribute(gmjobId);
		var resp = jobs[jobId].resp;

		if (GmCXt.playerI && resp.userEventFlag === false) {
			resp.userEventFlag = true;

			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:close_step');

			var data = {
				tourId: resp.guideLinkId
			};

			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_linked_tour', data);

			hideOutline(jobId);
			delete jobs[jobId];
		}
	};

	var checkGuideLink = function(req, resp) {
		var d = req.data.settings;

		if (!d.domElems) return false;

		for (var i = 0, j = d.domElems.length; i < j; i++) {
			var el = d.domElems[i];

			if (el.id === req.data.tooltipId && el.linkedGuideId) {
				resp.guideLinkId = el.linkedGuideId;
				return true;
			}
		}
		return false;
	};

	var onKeyupElement = function(e) {
		if (mg$(this).val().length) {
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:enable_next_button');
		}
	};

	var onCopyText = function(e) {
		GmCXt.timeout(function() {

			GmCXt.log(33, "onCopyElement");

			var jobId = null;
			var isRightClick = e && e.button && e.button === 2;
			if (e.data && e.data.he) {
				jobId = e.data.he.getAttribute(gmjobId);
			} else {
				jobId = e.currentTarget.getAttribute(gmjobId);
			}
			var el = e.currentTarget;
			var job = jobs[jobId];

			if (!job) return;

			var data = job.req.data;

			GmCXt.log(33, "Event: copy - " + data.task);

			onUserEvent.call(this, e, true, jobId);

		}, 500);
	};

	GmCXt.keyupTimer = null;

	var onKeyupElementNew = function(e, task, waitTime) {
		var jobId = e.currentTarget.getAttribute(gmjobId);
		var job = jobs[jobId];
		if (job && job.resp) var resp = job.resp;
		if (!job) return;

		waitTime = (typeof waitTime === 'number') ? waitTime * 1000 : 1000;
		var timer = (task === 'workFlowTour') ? 100 : waitTime;

		clearTimeout(GmCXt.keyupTimer);

		GmCXt.keyupTimer = GmCXt.timeout(function() {

			var inp = String.fromCharCode(e.keyCode);

			if (/[a-zA-Z0-9-_ `!@#$%^&*(){}|]/.test(inp) || GmCXt.playerI.automate) {

				GmCXt.log(33, "Event: key up");
				GmCXt.log(27, "Event: key up");

				mg$(resp.he).off("keyup paste", onKeyupElementNew);

				onKeyupEventJobId = jobId;
			}
		}, timer);
	};

	var onMouseUpRightClickElement = function(e) {
		if (e && e.button === 2) {
			var jobId = e.currentTarget.getAttribute(gmjobId);

			if (!jobs[jobId]) return;

			var data = jobs[jobId].req.data;
			var el = e.currentTarget;
			var ids = e.currentTarget.getAttribute('wfId');

			GmCXt.log(33, "Event: mouse up for right click");
			GmCXt.log(27, "Event: mouse up for right click");

			onUserEvent.call(this, e, true, jobId);
		}
	};

	var onMouseUpElement = function(e) {

		GmCXt.log(33, "onMouseUpElement");

		if (GmCXt.clickEventFlag) {
			return;
		} else {
			GmCXt.clickEventFlag = true;
		}

		var jobId = null;

		if (e.data && e.data.he) {
			jobId = e.data.he.getAttribute(gmjobId);
			var ids = e.data.he.getAttribute('wfId');
		} else {
			jobId = e.currentTarget.getAttribute(gmjobId);
			var ids = e.currentTarget.getAttribute('wfId');
		}
		var el = e.currentTarget;
		var job = jobs[jobId];

		if (!job) return;

		var data = job.req.data;

		GmCXt.log(33, "Event: mouse up - " + data.task);
		GmCXt.log(27, "Event: mouse up");

		onUserEvent.call(this, e, true, jobId);
	};

	var onEnterPressNext = function(e) {

		GmCXt.log(33, "onMouseUpElement");
		var jobId = null;

		if (e.data && e.data.he) {
			jobId = e.data.he.getAttribute(gmjobId);
			var ids = e.data.he.getAttribute('wfId');
		} else {
			jobId = e.currentTarget.getAttribute(gmjobId);
			var ids = e.currentTarget.getAttribute('wfId');
		}
		var el = e.currentTarget;
		var job = jobs[jobId];

		if (!job) return;

		var data = job.req.data;

		GmCXt.log(33, "Event: mouse up - " + data.task);
		GmCXt.log(27, "Event: mouse up");

		onUserEvent.call(this, e, true, jobId);
	};

	var onChangeValue = function(he) {
		var jobId = he.getAttribute(gmjobId);

		if (!jobs[jobId]) return;

		var data = jobs[jobId].req.data;

		var ids = he.getAttribute('wfId');

		GmCXt.log(33, "Event: change value for text field");
		GmCXt.log(27, "Event: change value for text field");

		onUserEvent.call(this, null, false, jobId);
	};

	var onChangeElement = function(e) {
		var jobId = e.currentTarget.getAttribute(gmjobId);
		var job = jobs[jobId];

		var ids = e.currentTarget.getAttribute('wfId');

		if (!job) return;

		var data = job.req.data;

		GmCXt.log(33, "Event: change value for radio/checkbox");
		GmCXt.log(27, "Event: change value for radio/checkbox");

		onUserEvent.call(this, e, false, jobId);
	};

	var onMouseOverElement = function(e) {
		var jobId = e.currentTarget.getAttribute(gmjobId);
		var el = e.currentTarget;
		var req;

		var ids = e.currentTarget.getAttribute('wfId');

		if (jobs[jobId]) req = jobs[jobId].req;
		else if (editJob) req = editJob.req;

		GmCXt.log(33, "Event: mouse over");
		GmCXt.log(27, "Event: mouse over");

		if (req && req.data.inlineStepEditRequest === true)
			editStep(e);
		else
			onUserEvent.call(this, e, false, jobId);
	};

	function addNoWatch(he) {
		mg$(he).addClass('mgPlayerJSTest_no-watch');
	}

	function removeNoWatch(he) {
		mg$(he).removeClass('mgPlayerJSTest_no-watch');
	}

	function triggerRightClick(he) {
		GmCXt.log(33, "Event trigger: right-click");
		GmCXt.log(27, "Event trigger: right-click");

		var d = {
			bubbles: true,
			cancelable: false
		};
		var clientRect = GmCXt.getBoundingRect(he);
		if (clientRect) {
			d.clientX = clientRect.x;
			d.clientY = clientRect.y;
		}
		d.button = 2;
		he.dispatchEvent(new MouseEvent('mouseup', d));
	}

	function triggerEnterKey(he) {
		GmCXt.log(33, "Event trigger: Enter key");
		GmCXt.log(27, "Event trigger: Enter key");

		var e = mg$.Event("keypress");
		e.which = 13;
		e.keyCode = 13;
		mg$(he).trigger(e);
	}

	function triggerKeyUp(he) {
		GmCXt.log(33, "Event trigger: keyup");
		GmCXt.log(27, "Event trigger: keyup");

		//entering a random char "A" to trigger next step
		var d = {
			bubbles: true,
			cancelable: false,
			keyCode: 65
		};
		he.dispatchEvent(new KeyboardEvent('keyup', d));
	}

	function triggerAllEvent(he) {
		var d = {
			bubbles: false,
			cancelable: true
		};

		he.dispatchEvent(new Event('keydown', d));
		he.dispatchEvent(new Event('keyup', d));
		he.dispatchEvent(new Event('textInput', d));
		he.dispatchEvent(new Event('input', d));
		he.dispatchEvent(new Event('change', d));
		he.dispatchEvent(new KeyboardEvent('keydown', d));
		he.dispatchEvent(new KeyboardEvent('keyup', d));
		he.dispatchEvent(new KeyboardEvent('textInput', d));
		he.dispatchEvent(new KeyboardEvent('input', d));
	}

	function triggerChange(he) {
		GmCXt.log(33, "Event trigger: change");
		GmCXt.log(27, "Event trigger: change");

		var d = {
			bubbles: true,
			cancelable: false
		};
		he.dispatchEvent(new Event('change', d));
	}

	function checkElToContinue(he, stepSettings) {
		var continueNext = false;

		if (stepSettings.elDetails) {

			var hasClass = false;
			var hasAttr = false;

			if (stepSettings.elDetails === "classes" && GmCXt.isDefined(stepSettings.classVal)) {

				//check if he has the class
				var classArray = stepSettings.classVal.split(',');

				classArray.forEach(function(c) {
					if (mg$(he).hasClass(c)) {
						hasClass = true;
					}
				});
			} else if (stepSettings.elDetails === "attributes" && GmCXt.isDefined(stepSettings.attrVal)) {

				var attrArray = stepSettings.attrVal.split(',');

				attrArray.forEach(function(a) {
					if (he.hasAttribute(a)) {
						hasAttr = true;
					}
				});
			}

			if (hasClass || hasAttr) {
				continueNext = true;
			}

		} else {
			continueNext = true;
		}

		return continueNext;
	}

	function triggerNextBtnClick(he, req) {
		GmCXt.log(33, "Event trigger: Next Button");

		if (window.self === window.top) {
			var currentStep = GmCXt.getCurrentStep(GmCXt.playerI.currentStepId);
			if (GmCXt.playerI.testAutomation) {
				// As step preview for automation steps are not shown.
				GmCXt.tourPlayerI.playNextStep();
			} else {

				var continueNext = true;

				if (continueNext) {
					var nxtBtn = GmCXt.getNextBtnElem();
					if (nxtBtn) GmCXt.triggerClick(nxtBtn, req);
				}
			}
		} else {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:trigger_next_click');
		}
	}

	function getTextEl(he, type) {
		var elem = null;
		var elems = null;

		if (type === 'input') {
			elems = mg$(he).find('input:not([type=image],[type=button],[type=submit],[type=radio],[type=checkbox])');
		} else if (type === 'textarea') {
			elems = mg$(he).find('textarea');
		} else if (type === 'textbox') {
			elems = mg$(he).find("div.WIY-[role='textbox'][aria-multiline='false']");
		}

		if (elems.length) {
			for (var i = 0; i < elems.length; i++) {
				if (GmCXt.getElVisibility(mg$(elems)[i]) === 'visible') {
					elem = mg$(elems)[i];
					break;
				}
			}
			return elem;
		}
	}

	function getRadioEl(he, val) {
		var elem = null;
		var elems = mg$(he).find("input[type=radio]");
		if (elems.length) {
			for (var i = 0; i < elems.length; i++) {
				if (mg$(elems)[i].value === val) {
					elem = mg$(elems)[i];
					break;
				}
			}
			return elem;
		}
	}

	function getSelectEl(he, val) {
		var elem = null;
		var elems = mg$(he).find("option");
		if (elems.length) {
			for (var i = 0; i < elems.length; i++) {
				if (mg$(elems)[i].value === val.value) {
					elem = mg$(elems)[i];
					break;
				}
			}
			return elem;
		}
	}

	function getcheckboxEl(he, val) {
		var elem = null;
		var elems = mg$(he).find("input[type=checkbox]");
		if (elems.length) {
			for (var i = 0; i < elems.length; i++) {
				elem = mg$(elems)[i];

				if (val && val.toLowerCase().indexOf(elem.value.toLowerCase()) !== -1) {
					mg$(elem).prop("checked", true);
				} else {
					mg$(elem).prop("checked", false);
				}
			}
			return true;
		}
	}

	function readFromCsv(auto, data) {

		var val = null;
		var list = data.csvData || null;
		var rowNo = (data.currentLoop + 1) || null;
		var column = auto.csvParam;

		if (list && rowNo && list[rowNo])
			val = list[rowNo][column];

		return val;
	}

	function getDefaultValue(auto, data) {
		if (auto && auto.enableDefaultData) {
			if (auto.inputType && auto.inputType === 'csv') {

				GmCXt.log(33, 'Reading CSV data', 1);
				var val = readFromCsv(auto, data);

				GmCXt.log(33, 'Value from CSV:  ' + val, 1);
				return val;
			} else {
				return auto.defaultData;
			}
		}
	}

	function enterDefaultValue(he, enabled, val, data) {

		if (enabled) {

			GmCXt.log(33, 'Value entered: ' + val);

			var tag = mg$(he)[0].tagName.toLowerCase();


			if (tag === 'input' || tag === 'textarea') {

				enterValue(data, he, val);

			} else if (tag === 'select') {
				var selectE1 = getSelectEl(he, val);
				if (selectE1) {
					mg$(selectE1).prop("selected", true);
				}

			} else {
				var el = getTextEl(he, 'input') || getTextEl(he, 'textarea');
				if (el) {
					enterValue(data, el, val);
					return;
				}

				var radioEl = getRadioEl(he, val);
				if (radioEl) {
					mg$(radioEl).prop("checked", true);
					return;
				}

				var checkboxEl = getcheckboxEl(he, val);
				if (checkboxEl) return;

				he.innerHTML = val;
			}
		}
	}

	function enterValue(data, he, val) {

		GmCXt.timeout(function() {

			mg$(he).val(val);

			var s = data.settings;

			// Use the default value and trigger keyup events while guide automation, instead of waiting for the user.
			// Only keyup event here will cause issues on insights portal forms.
			if (data.testAutomation) {
				triggerAllEvent(he);
			} else if (!s.automation.hasHumanInteraction) {
				triggerAllEvent(he);
			}

			if (GmCXt.checkSalesForceSite()) {
				triggerSearch(he);
			}
		}, 1000);
	}

	function triggerSearch(he) {
		if (he.type === 'search') {
			GmCXt.log(33, "Event trigger: search");
			var d = {
				bubbles: true,
				cancelable: false
			};
			he.dispatchEvent(new Event('search', d));
		}
	}

	function getFormOldValue(he, v) {
		var oldBulLength = mg$(he).find('li').length;
		var newBulLength = mg$(v).find('li').length;

		if (oldBulLength !== newBulLength) {
			return mg$(he).html();
		}
	}

	function bindSmartipHtml(he, opt, rd, jobId) {
		var value = opt.htmlContent;
		var isFormInjector = opt.formInjector;
		var isPreview = rd.isPreview;
		var tag = mg$(he)[0].tagName.toLowerCase();

		if (isFormInjector) {
			mg$(he).off('click focus keyup').on('click focus keyup', function() {

				var step = rd.step;
				var tourId = rd.step.tour_id;
				mg$(he).addClass(getGuidenceMessageElmClass(step.step_id, tourId));

				if (!disableFocus) {
					showPowerForm(he, jobId, step, rd.isPreview);
				}
			});
		} else {
			insertPowerHtml(he, tag, value);
		}

		if (isPreview) mg$(he).addClass('mgPlayerJSTest_preview-smarttip-pwr-html');

		if (!isPreview) {
			GmCXt.updateOnScreenTooltipGuideInfo(rd.tour, rd.tour.tour_id, rd.step.step_id, true, opt, GmCXt.urlParts.fullUrl);
		}
	}

	function copyToClipboad(he) {
		try {
			navigator.clipboard.writeText(he.innerText);
			GmCXt.log(33, 'Text copied to clipboard');
		} catch (err) {
			console.error('Failed to copy: ', err);
		}
		mg$(he).trigger("copy");
	}

	function pasteFromClipBoard(he) {
		he.focus();
		navigator.clipboard.readText()
			.then(function(text) {
				if (typeof he.value === 'string') {
					he.value = text;
				} else {
					he.innerText = text;
				}
				triggerKeyUp(he);
			})
			.catch(function(err) {
				console.log('Something went wrong', err);
			});
	}

	function enterBotInput(he, botInfo, data) {
		var inputs = botInfo.split('_'); // ['name', 'type'] type can be USERNAME or PASSWORD
		var bot_title = inputs[0].toLowerCase().trim();
		var key = inputs[1].toLowerCase();
		var val = '';
		if (data && data.botUsers) {
			var users = data.botUsers;
			var len = data.botUsers.length;
			for (var i = 0; i < len; i++) {
				if (users[i].bot_title.toLowerCase().trim() === bot_title) {
					val = users[i]["bot_" + key];
					break;
				}
			}
			enterValue(data, he, val);
		}
	}

	function removeElement(he) {
		GmCXt.log(33, "Removing Element");
		// This option is present only in automation step so it will not effect the guide
		he.remove();
		GmCXt.tourPlayerI.playNextStep();
	}

	function triggerEvents(req, he) {
		var s = req.data.settings;
		var autoProceedStep = GmCXt.getStepSettings().autoProceedStep;
		var auto = s.automation;

		if (!GmCXt.playerI) {
			return;
		}

		var nextStep = GmCXt.getNextStep();
		var val = getDefaultValue(auto, req.data);

		if (auto.inputType !== 'filePath') {
			setTimeout(function() {
				enterDefaultValue(he, auto.enableDefaultData, val, req.data);
			}, 500);
		}

		if (auto.getfromBot && auto.botUserInput) {
			enterBotInput(he, auto.botUserInput, req.data);
		}

		if (s.stepType === GmCXt.STEP_TYPE_EXTERNAL_AUTOMATION) {
			// Electron app should trigger events instead.
			return;
		}

		if (window.self === window.top) {
			GmCXt.rotateGear();
		} else {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:rotate_gear');
		}

		if (s.headerNext && GmCXt.isAutomationStep(nextStep) && GmCXt.playerI) {
			GmCXt.tourPlayerI.playNextStep();
			return;
		}

		var tm = 3000;

		if (GmCXt.deskReq && GmCXt.deskReq.isAutomatorExists) {
			tm = 3000;
		} else if (GmCXt.playerI.automate) {
			tm = 5000;
			if (s.automation.manualAutoTimer) {
				tm = s.automation.afterXSeconds * 1000;
			} else if (autoProceedStep) {
				tm = GmCXt.getStepSettings().autoStepDelay * 1000;
			}
			if (tm < 1000) {
				tm = 600;
			}
		}

		if (GmCXt.playerI.source === "bot") {
			tm = 1000;
		}

		if (GmCXt.playerI.keyShorts === true) {
			tm = 1000;
		}

		GmCXt.autoTrigger = GmCXt.timeout(function() {

			if (GmCXt.playerI && !GmCXt.playerI.pauseAutomate) {
				if (s.clickNext || s.onClickTooltip) {
					GmCXt.triggerClick(he, req);
				} else if (s.onRightClickNext) {
					triggerRightClick(he);
				} else if (s.onEnterPressNext) {
					triggerEnterKey(he);
				} else if (s.onKeyupNext) {
					if (auto.getFromClipboard) {
						pasteFromClipBoard(he);
					} else {
						triggerKeyUp(he);
					}
				} else if (s.onCopyNext) {
					copyToClipboad(he);
				} else if (s.keepNext) {
					triggerNextBtnClick(he, req);
				} else if (s.onClickAnywhere) {
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_next_step');
				} else if (s.onPageClickNext === true && (GmCXt.playerI.testAutomation || !auto.hasHumanInteraction)) {
					GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_next_step');
				} else if (s.removeElement) {
					removeElement(he);
				}
			}
		}, tm);
	}

	function bindNewEvents(req, resp) {
		var reqData = req.data;
		var setting = reqData.settings;
		var humanInteraction = setting.automation.hasHumanInteraction;

		if (reqData.stepType === GmCXt.STEP_TYPE_MESSAGE && setting.completionEvent !== 'clickNext') {
			setting.clickNext = false;
		}

		var he = resp.he;
		if (setting.clickNext === true || setting.onClickTooltip === true) {
			GmCXt.clickEventFlag = false;
			mg$(he).on("mousedown touchstart", onMouseUpElement);
			mg$(he).on("mouseup touchend", onMouseUpElement);
			mg$(he).on("click", onMouseUpElement);
		} else if (setting.onRightClickNext === true) {
			mg$(he).on("mouseup", onMouseUpRightClickElement);

		} else if (setting.hoverNext === true) {
			mg$(he).one("mouseover", onMouseOverElement);

		} else if (setting.onChangeNext === true) {

			clearInterval(onChangeNextInterval);

			var checkRadioInput = mg$(mg$(he)[0]).find("input[type=radio]").length;
			var checkCheckboxInput = mg$(mg$(he)[0]).find("input[type=checkbox]").length;
			var tagName = mg$(he)[0].tagName.toLowerCase();

			if (resp.de.hasOwnProperty('customSettings')) {
				var s = resp.de.customSettings.salesforce;
				var wd = resp.de.customSettings.workday;
			}

			if (s && s.globalSearch) {
				var url = GmCXt.getUrl();
				watchUrlChange(resp, url);

			} else if (s && s.customInput) {
				watchOnChange(resp, he, null, humanInteraction);

			} else if (wd && (wd.isWDCustomSelect || wd.isSelectBox || he.getAttribute('data-automation-id') === 'selectWidget')) {
				var prop = '';
				if (wd.isWDCustomSelect) {
					if (he.tagName === 'INPUT') {
						he = mg$(he).parent().parent()[0];
					}
				} else if (wd.isSelectBox || he.getAttribute('data-automation-id') === 'selectWidget') {
					he = mg$(he).find("div.gwt-Label[data-automation-id='selectSelectedOption']")[0];
					if (he) {
						prop = "innerHTML";
					}
				}
				watchOnChange(resp, he, prop, humanInteraction);

			} else if (tagName === 'input' || tagName === 'textarea' || tagName === 'select') {
				watchOnChange(resp, resp.he, 'value', humanInteraction);

			} else if (checkRadioInput || checkCheckboxInput) {

				mg$(he).off("change")
					.on("change", function(e) {
						onChangeElement(e);
					});
			} else {
				findInputElem(resp, humanInteraction);
			}

		} else if (setting.onKeyupNext === true) {
			mg$(he).off("keyup paste", onKeyupElementNew).on("keyup paste", function(e) {
				if (e.keyCode !== 16) {
					onKeyupElementNew(e, req.data.task, setting.typingCompletionTime);
				}
			});
		} else if (setting.onCopyNext) {
			mg$(he).bind('copy', onCopyText);

		} else if (setting.onEnterPressNext) {
			mg$(he).off("keypress", onEnterPressNext).on("keypress", function(e) {
				if (e.keyCode === 13) {
					onEnterPressNext(e);
				}
			});
		}

		if (req.data.task === "workFlowTour") {
			GmCXt.log(27, "EVENT ADDED:" + GmCXt.stepLog(req.data.requestId, req.data.tourId));
		}
	}

	function findInputElem(resp, humanInteraction) {

		var el = getTextEl(resp.he, 'input') || getTextEl(resp.he, 'textarea');

		if (el) {
			watchOnChange(resp, el, 'value', humanInteraction);
		} else {
			if (GmCXt.checkWorkdaySite()) {
				el = getTextEl(resp.he, 'textbox');
			}

			if (el) {
				watchOnChange(resp, el, 'innerHTML', humanInteraction);
			} else
				watchOnChange(resp, resp.he, 'innerHTML', humanInteraction);
		}
	}

	function watchUrlChange(resp, initialUrl) {
		onChangeNextInterval = setInterval(function() {
			if (!GmCXt.playerI) {
				clearInterval(onChangeNextInterval);
			}
			var url = GmCXt.getUrl();

			if (initialUrl !== url && (url.includes('/view'))) {
				clearInterval(onChangeNextInterval);
				onChangeValue(resp.he);
			}
		}, 1000);
	}

	function watchOnChange(resp, elem, prop, humanInteraction) {
		if (GmCXt.playerI) {
			// Do not wait for user to change the value on the input 
			// during automation runs if there is an automation step next
			var nextStep = GmCXt.getNextStep();
			if (GmCXt.isAutomationStep(nextStep) &&
				(GmCXt.playerI.testAutomation || GmCXt.playerI.initiator === 'doitforme')) {
				GmCXt.timeout(function() {
					onChangeValue(resp.he);
				}, 2000);
				return;
			}
		}

		var newValue = null;
		var cs = resp.de.customSettings;

		function clearIntervalAndProceed() {
			if (newValue && newValue !== initialValue) {
				clearInterval(onChangeNextInterval);
				onChangeValue(resp.he);
			}
		}

		function getElVal() {

			var val = null;

			if (prop) {

				if (prop === 'innerHTML') val = mg$(elem)[0].innerHTML;
				if (prop === 'value') val = mg$(elem)[0].value;

			} else if (cs) {

				if (!GmCXt.isEmpty(cs.salesforce) && cs.salesforce.customInput) { // Salesforce custom

					val = mg$(elem).parent().find("span.pillText").text() || mg$(elem).find('span.slds-pill__label').text();

				} else if (!GmCXt.isEmpty(cs.workday) && cs.workday.isWDCustomSelect) { // Workday custom

					val = mg$(elem).find("p").text();
				}
			}

			return val;
		}

		function watchChangeEve() {

			clearInterval(onChangeNextInterval);

			onChangeNextInterval = setInterval(function() {

				if (!GmCXt.playerI) {
					clearInterval(onChangeNextInterval);
					return;
				}
				newValue = getElVal();
				clearIntervalAndProceed();
			}, 1000);
		}

		if (GmCXt.playerI && (GmCXt.playerI.testAutomation || (GmCXt.playerI.automate && !humanInteraction))) {
			initialValue = getElVal();
			watchChangeEve();
		} else {
			mg$(resp.he.parentNode).one('click', function() {
				initialValue = getElVal();
				watchChangeEve();
			});
		}
	}

	function bindLegacyEvents(req, resp) {

		// TODO: Need to discuss with Nilesh P, This is incorrect code.

		var inputField = (
				elem.tagName.toLowerCase() === 'input' &&
				elem.type !== 'button' &&
				elem.type !== 'submit'
			) ||
			elem.tagName.toLowerCase() === 'textarea';

		var selectField = elem.tagName.toLowerCase() === 'select';
		var setting = req.data.settings;

		if (!(inputField || selectField) &&
			(setting.keepNext === 0 || setting.keepNext === false)
		) {

			mg$(resp.he).one("mouseup", onMouseUpElement);
		}

		if (inputField && setting.mandatoryStep === true) {
			mg$(resp.he).one("keyup", onKeyupElement);
		}

		if (selectField && setting.mandatoryStep === true) {
			mg$(resp.he).one("change", onChangeElement);
		}

		if (!(inputField || selectField) && setting.hoverNext === true) {
			mg$(resp.he).one("mouseover", onMouseOverElement);
		}
	}

	function addBlackoutOverlay(req, resp) {

		var data = req.data.settings;

		if (data && mg$.isArray(data.blackoutElements)) {
			var list = data.blackoutElements;
			for (var j = 0; j < list.length; j++) {
				var rect = list[j];
				mg$('<div class="mgPlayerJSTest_selector-blackout ' + req.data.requestId + '"></div>')
					.appendTo('body')
					.css({
						'width': rect.width,
						'height': rect.height,
						'left': rect.left,
						'top': rect.top
					});
			}
		}
	}

	function getBeaconLeftTop(pos, beaconSettings, beaconIcon) {
		var alignment = beaconSettings.beaconPosition;
		var stickTargetElement = beaconSettings.stickTargetElement;
		var parentPos = beaconSettings.parentPos;
		var stickTargetEl = beaconSettings.stickTargetElement;

		var beaconLeft = 0,
			beaconTop = 0;

		switch (alignment) {

			case 'top-left':
				if (stickTargetEl) {
					beaconLeft = (parentPos.left - pos.left) + beaconIcon.width;
					beaconTop = (parentPos.top - pos.top) - beaconIcon.height - 5;
				} else {
					beaconLeft = pos.left + beaconIcon.width;
					beaconTop = pos.top - beaconIcon.height - 5;
				}
				break;

			case 'top-middle':
				if (stickTargetEl) {
					beaconLeft = ((parentPos.left - pos.left) + pos.width / 2) - beaconIcon.width / 2;
					beaconTop = (parentPos.top - pos.top) - beaconIcon.height - 5;
				} else {
					beaconLeft = (pos.left + pos.width / 2) - beaconIcon.width / 2;
					beaconTop = pos.top - beaconIcon.height - 5;
				}
				break;

			case 'top-right':
				if (stickTargetEl) {
					beaconLeft = (parentPos.left - pos.left) + pos.width - beaconIcon.width;
					beaconTop = (parentPos.top - pos.top) - beaconIcon.height - 5;
				} else {
					beaconLeft = pos.left + pos.width - beaconIcon.width;
					beaconTop = pos.top - beaconIcon.height - 5;
				}
				break;

			case 'right-top':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) + pos.width;
					beaconTop = (parentPos.top - pos.top);
				} else {
					beaconLeft = pos.left + pos.width;
					beaconTop = pos.top;
				}
				break;

			case 'right-middle':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) + pos.width;
					beaconTop = ((parentPos.top - pos.top) + pos.height / 2) - (beaconIcon.height / 2);
				} else {
					beaconLeft = pos.left + pos.width;
					beaconTop = (pos.top + pos.height / 2) - (beaconIcon.height / 2);
				}
				break;

			case 'right-bottom':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) + pos.width;
					beaconTop = ((parentPos.top - pos.top) + pos.height) - beaconIcon.height;
				} else {
					beaconLeft = pos.left + pos.width;
					beaconTop = (pos.top + pos.height) - beaconIcon.height;
				}
				break;

			case 'left-top':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) - beaconIcon.width - 5;
					beaconTop = (parentPos.top - pos.top);
				} else {
					beaconLeft = pos.left - beaconIcon.width - 5;
					beaconTop = pos.top;
				}
				break;

			case 'left-middle':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) - beaconIcon.width - 5;
					beaconTop = ((parentPos.top - pos.top) + (pos.height / 2)) - (beaconIcon.height / 2);
				} else {
					beaconLeft = pos.left - beaconIcon.width - 5;
					beaconTop = (pos.top + (pos.height / 2)) - (beaconIcon.height / 2);
				}
				break;

			case 'left-bottom':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) - beaconIcon.width - 5;
					beaconTop = (parentPos.top - pos.top) + pos.height - beaconIcon.height;
				} else {
					beaconLeft = pos.left - beaconIcon.width - 5;
					beaconTop = pos.top + pos.height - beaconIcon.height;
				}
				break;

			case 'bottom-left':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left);
					beaconTop = (parentPos.top - pos.top) + pos.height + 5;
				} else {
					beaconLeft = pos.left;
					beaconTop = pos.top + pos.height + 5;
				}
				break;

			case 'bottom-middle':
				if (stickTargetEl) {
					beaconLeft = ((pos.left - parentPos.left) + pos.width / 2) - beaconIcon.width / 2;
					beaconTop = (parentPos.top - pos.top) + pos.height + 5;
				} else {
					beaconLeft = (pos.left + pos.width / 2) - beaconIcon.width / 2;
					beaconTop = pos.top + pos.height + 5;
				}
				break;

			case 'bottom-right':
				if (stickTargetEl) {
					beaconLeft = (pos.left - parentPos.left) + pos.width - beaconIcon.width;
					beaconTop = (parentPos.top - pos.top) + pos.height + 5;
				} else {
					beaconLeft = pos.left + pos.width - beaconIcon.width;
					beaconTop = pos.top + pos.height + 5;
				}
				break;

			case 'custom':

				beaconLeft = pos.left;
				beaconTop = pos.top;
				break;
				//backward Compatibility
			case 'top_left':
				if (stickTargetEl) {
					beaconLeft = pos.left - parentPos.left;
					beaconTop = parentPos.top - pos.top;
				} else {
					beaconLeft = pos.left;
					beaconTop = pos.top;
				}
				break;

			case 'top_right':
				if (stickTargetEl) {
					beaconLeft = pos.left - parentPos.left + pos.width - beaconIcon.width;
					beaconTop = parentPos.top - pos.top;
				} else {
					beaconLeft = pos.left + pos.width - beaconIcon.width;
					beaconTop = pos.top;
				}
				break;

			case 'center':
				if (stickTargetEl) {
					beaconLeft = pos.left - parentPos.left + (pos.width / 2);
					beaconTop = parentPos.top - pos.top + (pos.height / 2);
				} else {
					beaconLeft = pos.left + (pos.width / 2);
					beaconTop = pos.top + (pos.height / 2);
				}
				if (beaconLeft > 6) {
					beaconLeft = beaconLeft - 6;
				}
				if (beaconTop > 6) {
					beaconTop = beaconTop - 6;
				}
				break;

			case 'bottom_left':
				if (stickTargetEl) {
					beaconLeft = pos.left - parentPos.lef;
					beaconTop = parentPos.top - pos.top + pos.height - beaconIcon.height;
				} else {
					beaconLeft = pos.left;
					beaconTop = pos.top + pos.height - beaconIcon.height;
				}
				break;

			case 'bottom_right':
				if (stickTargetEl) {
					beaconLeft = parentPos.left - pos.left + pos.width - beaconIcon.width;
					beaconTop = parentPos.top - pos.top + pos.height - beaconIcon.height;
				} else {
					beaconLeft = pos.left + pos.width - beaconIcon.width;
					beaconTop = pos.top + pos.height - beaconIcon.height;
				}
				break;
		}

		return {
			left: beaconLeft,
			top: beaconTop
		};
	}

	function removeBeacon(jobId, rd, beaconImg, tourTitle, tourId) {
		GmCXt.log(48, "REMOVED beacon [" + tourId || tourTitle + "]");
		mg$(beaconImg).remove();
		var m = {
			action: "mgPlayerJSTest_action:toggle_beacon_visibility",
			remove: true,
			tourId: tourId || rd.tourId
		};
		GmCXt.sendToParentWindow(m);

		if (!rd || !rd.isPreview) {
			GmCXt.updateBeaconsOnScreen(jobId.slice(1), false);
		}

		deleteJob(jobId);
	}

	function watchBeaconJob(jobId) {

		var job = jobs[jobId];

		if (!job) return;

		var resp = job.resp;
		var he = resp.he;
		var pos = resp.elemPos;
		var rd = job.req.data;
		var tourTitle = rd.tourTitle;
		var beaconImg = mg$(".mgPlayerJSTest_beacon-icon.mgPlayerJSTest_beacon-icon-tour-" + rd.tourId);
		var rect = GmCXt.getBoundingRect(he);

		if (!rect) {
			removeBeacon(jobId, rd, beaconImg, tourTitle);
			return;
		}

		var visibility = GmCXt.getElVisibility(he);

		if (rect.width === 0 && rect.height === 0) visibility = 'hidden';
		var m = {
			action: "mgPlayerJSTest_action:toggle_beacon_visibility",
			show: true,
			tourId: rd.tourId
		};

		if (visibility === 'hidden') {
			m.show = false;

			if (job.elVisible !== "hidden" && !rd.beaconSettings.stickTargetElement) {
				GmCXt.sendToParentWindow(m);
			}
			job.elVisible = 'hidden';
			// If element is removed from DOM 
			// rect.width && rect.height will always be 0 if element get removed from webpage and get recreate by javascript 
			// So removing watch job, new job will initiated on page click. 
			if (!he.parentNode || (rect.width === 0 && rect.height === 0)) {
				removeBeacon(jobId, rd, beaconImg, tourTitle);
				return;
			}

		} else {
			if (job.elVisible !== "visible" && !rd.beaconSettings.stickTargetElement) {
				GmCXt.sendToParentWindow(m);
			}
			job.elVisible = 'visible';
			if (pos && (pos.top !== rect.top || pos.left !== rect.left || pos.height !== rect.height || pos.width !== rect.width) && !rd.beaconSettings.stickTargetElement) {
				GmCXt.log(48, "POS CHANGE beacon [" + tourTitle + "]", pos);

				setBeaconPosition(jobId);
			}
		}
	}

	function setBeaconPosition(jobId) {

		var job = jobs[jobId];
		if (!job) return;

		var resp = job.resp;
		var he = resp.he;
		var pos = he.getBoundingClientRect();
		var requestData = job.req.data;

		var customPos = requestData.beaconSettings.customPosition;

		if (requestData.beaconSettings.stickTargetElement) {
			var parentEl = mg$(he).parent()[0];
			var parentPos = parentEl.getBoundingClientRect();
			requestData.beaconSettings.parentPos = parentPos;
		}

		var obj = getBeaconLeftTop(pos, requestData.beaconSettings, customPos);
		var beaconLeft = obj.left;
		var beaconTop = obj.top;

		var isPositionFixed = GmCXt.dom.getElementFixedPosition(he);

		var css_ = {
			left: beaconLeft,
			top: beaconTop
		};

		if (requestData.beaconSettings.beaconPosition === 'custom') {

			var left = customPos.left;
			var top = customPos.top;

			if (customPos.left_pos === "%") {
				left = ((pos.width * customPos.left) / 100) - (requestData.beaconSettings.customPosition.width / 2);
			}

			if (customPos.top_pos === "%") {
				top = ((pos.height * customPos.top) / 100) - (requestData.beaconSettings.customPosition.height / 2);
			}

			css_ = {
				left: beaconLeft + parseInt(left),
				top: beaconTop + parseInt(top)
			};
		}

		if (customPos) {
			css_.width = parseInt(customPos.width);
			css_.height = parseInt(customPos.height);
		} else {
			css_.width = 20;
			css_.height = 20;
		}

		if (!GmCXt.isEmpty(requestData.beaconSettings.zIndex)) {
			css_.zIndex = requestData.beaconSettings.zIndex;
		} else {
			var zIndex = GmCXt.dom.getElementZindex(he);
			if (zIndex) css_.zIndex = zIndex;
		}


		if (requestData.beaconSettings.stickTargetElement) {
			mg$(he).parent().addClass('mgPlayerJSTest_relative-position');
		}

		css_.position = 'absolute';

		if (isPositionFixed && !requestData.beaconSettings.stickTargetElement) {
			css_.position = 'fixed';
		}

		if (GmCXt.getElVisibility(he) === 'hidden' && !requestData.beaconSettings.stickTargetElement) {
			css_.display = 'none';
		}

		var align = getBeaconTitleAlignment(he, requestData.beaconSettings.beaconPosition);

		if (requestData.beaconSettings.stickTargetElement) {
			addBeaconHtml(jobId, css_, align);
		} else {
			var m = {
				action: "mgPlayerJSTest_action:show_beacon",
				jobId: jobId,
				requestData: requestData,
				isPreview: requestData.isPreview,
				tour: requestData.tour,
				tourId: requestData.tourId,
				tourTitle: requestData.tourTitle,
				userKey: requestData.userKey,
				beaconIcon: requestData.beaconSettings.beaconIcon,
				css_: css_,
				align: align,
				reqId: GmCXt.id,
				isPositionFixed
			};

			GmCXt.sendToParentWindow(m);
		}

		job.resp.elemPos = pos;
	}

	function addBeaconHtml(jobId, css_, align) {
		var job = jobs[jobId];
		var requestData = job.req.data;
		var settings = requestData.beaconSettings;
		var beaconObj = mg$("#mgPlayerJSTest_beacon-icon-" + requestData.tourId);
		var he = job.resp.he;

		if (beaconObj.length) {
			beaconObj.css(css_);

			if (requestData.isPreview) {
				GmCXt.previewBeacons(requestData.tourId);
			}
		} else {
			var beaconIcon = settings.beaconIcon;
			var beaconImgUrl = beaconIcon;

			if (beaconImgUrl.indexOf('default_beacon') === -1) {
				beaconImgUrl = GmCXt.restoreAssetSrc(beaconIcon);
			} else {
				beaconImgUrl = GmCXt.conf.staticContentPath + "default_beacon.png";
			}

			var beaconClass = "mgPlayerJSTest_beacon-icon mgPlayerJSTest_beacon-icon-tour-" + requestData.tourId;
			if (GmCXt.beaconsAreHidden && !requestData.isPreview) {
				beaconClass += " mgPlayerJSTest_hidden";
			}

			if (requestData.isPreview) beaconClass += " mgPlayerJSTest_preview-beacon";

			var titleAlign = align;
			if (requestData.beaconSettings.beaconMsgPosition) {
				titleAlign = requestData.beaconSettings.beaconMsgPosition;
			}

			var t = GmCXt.escapeHtml(requestData.tourTitle);
			var c = GmCXt.singleLineTitle(t);

			var html_ = "<wmgPlayerJSTest_ id='mgPlayerJSTest_beacon-icon-" + requestData.tourId +
				"' class='" + beaconClass + "'>" +
				"   <img src='" + beaconImgUrl + "' class='mgPlayerJSTest_custom-image' />" +
				"   <div class='mgPlayerJSTest_tour-title-on-beacon " + c + " mgPlayerJSTest_tour-title-on-beacon-" +
				titleAlign + "'>" +
				t +
				"</div>" +
				"</wmgPlayerJSTest_>";
			var m = {
				tour: requestData.tour,
				action: 'mgPlayerJSTest_action:track_beacon_feature'
			};

			mg$(html_)
				.css(css_)
				.insertAfter(he)
				.on('click', function() {
					if (!requestData.isPreview) {
						GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:play_tour;event:beacon_click', {
							tourId: requestData.tourId,
							userKey: requestData.userKey
						});

						m.eventType = 'click';
						GmCXt.sendToParentWindow(m);
					}
				})
				.on('mouseover', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex, true); // passing true for incrementing z-index
					if (!m.isPreview) {
						m.eventType = 'hover';
						GmCXt.sendToParentWindow(m);
					}
				})
				.on('mouseout', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex);
				});

			if (!requestData.isPreview) {
				GmCXt.updateBeaconsOnScreen(jobId.slice(1), true);
				m.eventType = 'display';
				GmCXt.sendToParentWindow(m);
			}
		}
	}

	function getBeaconTitleAlignment(he, align) {

		var spaceToLeft = mg$(he).offset().left;
		var spaceToRight = mg$(window).width() - (mg$(he).offset().left + mg$(he).outerWidth());
		var spaceOnTop = mg$(he).offset().top;
		var spaceAtBottom = mg$(window).height() - (mg$(he).offset().top + mg$(he).outerHeight());
		var msgBoxWidth = 238;
		var msgBoxHeight = 70;

		switch (align) {
			case "top_left":
				if ((spaceToLeft - msgBoxWidth) < 0) {
					align = "right";
				}
				break;
			case "top_right":
				if ((spaceToRight - msgBoxWidth) < 0) {
					align = "left";
				}
				break;
			case "bottom_left":
				if ((spaceOnTop - msgBoxHeight) < 0) {
					align = "bottom";
				}
				break;
			case "bottom_right":
				if ((spaceAtBottom - msgBoxHeight) < 0) {
					align = "top";
				}
				break;
			case "custom":
				if ((spaceToRight - msgBoxWidth) < 0) {
					align = "left";
				}
				if ((spaceToLeft - msgBoxWidth) < 0) {
					align = "right";
				}
				break;
			case "center":
				if ((spaceToRight - msgBoxWidth) < 0) {
					align = "left";
				}
				if ((spaceToLeft - msgBoxWidth) < 0) {
					align = "right";
				}
				break;
			default:
				align = "center";
				break;
		}
		return align;
	}

	function removePrevTooltip(he, jobId, rd, step) {
		if (he.classList.length) {
			var prevJobId = null;
			var prevStepId = null;
			var prevTourId = null;

			for (var i = 0; i < he.classList.length; i++) {
				var className = he.classList[i];
				if (className.startsWith('mg-smarttip-')) {
					prevStepId = className.replace(/[^\d.]/g, '');
					prevJobId = '_' + prevStepId;
					break;
				}
			}

			for (var i = 0; i < he.classList.length; i++) {
				var className = he.classList[i];

				if (className.startsWith(getGuidenceClsPrefix())) {

					var c = className.split('-');

					if (c[4] !== step.step_id) {
						prevStepId = c[4];
						prevTourId = c[5];
						prevJobId = '_' + prevStepId;
						break;
					}
				}
			}

			if (prevJobId && prevJobId !== jobId) {

				var tooltip = mg$(".mgPlayerJSTest_smarttip-icon-wrapper-" + prevStepId);
				var validationMessage = mg$("#mgPlayerJSTest_smarttip-valid-" + prevStepId);
				var ductTapeTooltip = mg$("#mgPlayerJSTest_smarttip-" + prevStepId);

				mg$(he).off('mouseover focus blur click');

				if (rd.settings.smartTip && rd.settings.smartTip.type === 'guidence') {
					if (tooltip) mg$(tooltip).remove();
				}

				if (rd.settings.smartTip && rd.settings.smartTip.type === 'validation') {
					if (validationMessage) mg$(validationMessage).remove();
				}

				if (!rd.isPreview) {

					if (prevTourId) {
						mg$('.mgPlayerJSTest_guidence-message-' + prevTourId).remove();
						mg$(he).removeClass(getGuidenceMessageElmClass(prevStepId, prevTourId));

						GmCXt.log(42, "REMOVED PREV: " + GmCXt.stepLog(prevStepId, prevTourId));
						GmCXt.updateOnScreenTooltipGuideInfo(rd.tour, prevTourId, prevStepId, false, rd.settings.smartTip);
					}
				}

				if (rd.settings.smartTip && rd.settings.smartTip.type === 'disableElement') {
					if (ductTapeTooltip) mg$(ductTapeTooltip).remove();
				}

				deleteJob(prevJobId);

				removeNoWatch(he);
				mg$(he).removeClass(className);
			}
		}
	}

	function watchSmartTip(jobId) {

		var job = jobs[jobId];
		if (!job) return;

		var rd = job.req.data;

		if (GmCXt.smarttipAreHidden) {

			if (rd.isPreview && GmCXt.APP_PANEL_OPEN) {
				deleteJob(jobId);
				return;
			}

			if (!GmCXt.smartTipPreviewOn) {
				return;
			}

		}

		var he = job.resp.he;
		var de = job.resp.de;
		var step = rd.step;
		var pos = job.resp.elemPos;
		var isPreview = rd.isPreview;
		var smartTip = rd.settings.smartTip;
		
		if (GmCXt.isEmpty(smartTip)) return;

		var type = rd.settings.smartTip.type;
		var isTextChanged = (job.resp.text !== he.textContent) && !de.criteria.ignoreText && type !== 'injector';

		

		var rect = GmCXt.getBoundingRect(he);

		if (job.posChanged === undefined) {
			job.posChanged = false;
		}

		// Find element again,
		// if DOM is refreshed and resp.he instance is cleared 
		if (!rect.top && !rect.left && !rect.width && !rect.height) {
			GmCXt.log(43, "Tooltip dom refreshed Find element again: " + GmCXt.stepLog(step.step_id, step.tour_id));
			var newHe = getDOMElementForRule(de, rd.frame, GmCXt.getStepInfoLog(step));
			if (newHe) {
				he = newHe;
				if (de.criteria.precision_type === GmCXt.DOM_CRITERIA_CUSTOM && de.criteria.precision_level === 'High') {
					removePrevTooltip(he, jobId, rd, step);
				}
				rect = GmCXt.getBoundingRect(he);
				job.resp.he = he;
				mg$(he).addClass('mg-smarttip-' + jobId);
			}
		}

		var isHidden = !mg$(he).is(":visible") || GmCXt.getElVisibility(he) === 'hidden' || isTextChanged;

		if (mg$(he).hasClass('mgPlayerJSTest_no-watch') && !isHidden) return true;

		if (isHidden && he && de.targetInfo && GmCXt.dom.isWDTextArea(de)) {
			var expandedHe = GmCXt.dom.checkForExpandedTextBox(he, de.meta);
			if (expandedHe) {
				he = expandedHe;
				isHidden = false;
			}
		}

		var tooltip = mg$(".mgPlayerJSTest_smarttip-icon-wrapper-" + step.step_id);
		var validationMessage = mg$("#mgPlayerJSTest_smarttip-" + step.step_id);

		if (!rect) {
			if (!isPreview) {
				if (tooltip) mg$(tooltip).remove();
				if (validationMessage) mg$(validationMessage).remove();
				GmCXt.updateOnScreenTooltipGuideInfo(rd.tour, rd.tour.tour_id, jobId.slice(1), false, smartTip);
			}
			return;
		}

		var ductTape = mg$("." + getDuctTapeClass(step.step_id));

		if (pos && (pos.top !== rect.top || pos.left !== rect.left)) {
			jobs[jobId].resp.elemPos = rect;
			job.posChanged = true;
		}

		if (isHidden) {

			if (job.elVisible !== "hidden") {
				GmCXt.hideTooltip(step);

				if (validationMessage) {
					GmCXt.hideValidationTooltip(step);
				}
			}
			job.elVisible = "hidden";

			if (ductTape.length) {
				if (smartTip.disableElementType === 'color') {
					ductTape.removeClass(getDuctTapeClass(job.resp.requestId));
				}
			}

			// If element is removed from DOM then change the state for the job. 
			// Scenario - Element on Popup window
			// rect.width && rect.height will always be 0 if element get removed from webpage and get recreate by javascript 
			// So removing watch job, new job will initiated on page click. 

			if (!he.parentNode || (rect.width === 0 && rect.height === 0) || isTextChanged) {
				if (tooltip) mg$(tooltip).remove();
				if (validationMessage) mg$(validationMessage).remove();
				if (!isPreview) GmCXt.updateOnScreenTooltipGuideInfo(rd.tour, rd.tour.tour_id, jobId.slice(1), false, smartTip);

				if (!isPreview) {
					deleteJob(jobId);
				}

				removeNoWatch(he);
			}

		} else {

			mg$(tooltip).show();
			job.elVisible = "visible";

			if (job.posChanged) {
				job.posChanged = false;
				positionSmartTip(jobId, he, true);
			}

			if (rd.isPreview) GmCXt.previewSmartTips(step.step_id);
		}
	}

	function getDuctTapeOpacity(s) {
		var smartTip = s.step_settings.smartTip;
		var opacity = 1;
		if (smartTip.ductTapeOpacity) {
			opacity = smartTip.ductTapeOpacity / 10;
		} else if (smartTip.ductTapeOpacity === 0) {
			opacity = 0;
		}

		return opacity;
	}

	function getDuctTapeClass(id) {
		return 'mgPlayerJSTest_duct-tape-' + id;
	}

	function addDuctTape(he, opt, w, h, job, rect) {
		if (job) {
			var type = opt.disableElementType;
			var isPreview = job.req.data.isPreview;
			var settings = job.req.data.settings;

			mg$(he).addClass(getDuctTapeClass(job.resp.requestId));

			if (type === 'opacity') {

				if (isPreview)
					mg$(he).addClass('mgPlayerJSTest_duct-tape-invisible-preview mgPlayerJSTest_duct-tape-smarttip-tour-' + job.req.data.step.tour_id);
				else
					mg$(he).addClass('mgPlayerJSTest_duct-tape-invisible mgPlayerJSTest_duct-tape-smarttip-tour-' + job.req.data.step.tour_id);

			} else if (type === 'color') {
				if (settings.stickTargetElement) {
					mg$(he).parent().addClass('mgPlayerJSTest_relative-position');
					mg$(he).removeClass('mgPlayerJSTest_relative');
				} else {
					mg$(he).addClass('mgPlayerJSTest_relative');
					mg$(he).parent().removeClass('mgPlayerJSTest_relative-position');
				}
				positionDuctTape(job, he, opt, w, h, rect);
			} else if (type === 'delete') {
				mg$(he).remove();
			} else if (type === 'replace') {
				var replaceText = job.req.data.step.step_settings.smartTip.replaceTextInput;
				if (he) {
					if (he.tagName === 'INPUT' && he.type === 'submit' && he.value) {
						he.value = replaceText;
					} else if (he.tagName !== 'SELECT') {
						he.innerText = replaceText;
					}
				}
			}

			if (!isPreview) {
				GmCXt.updateOnScreenTooltipGuideInfo(job.req.data.tour, job.req.data.tour.tour_id, job.resp.requestId, true, opt, GmCXt.urlParts.fullUrl);
				GmCXt.updateTooltipActionInfo(job.req.data.tour.tour_id, job.req.data.step.step_id, opt, "display");
			}
		}
	}

	function getDuctTapeHtml(job, w, h, opt, posClass) {

		var opacity = getDuctTapeOpacity(job.req.data.step);
		var isPreview = job.req.data.isPreview;
		var d = opt.disableElement || GmCXt.getDiableEleDefaultVal();
		var zIndex = "";
		if (!GmCXt.isEmpty(opt.zIndexVal)) {
			zIndex = opt.zIndexVal;
		}
		var id = 'mgPlayerJSTest_smarttip-' + job.req.data.step.step_id;
		var tourClass = 'mgPlayerJSTest_smarttip-tour-' + job.req.data.step.tour_id;

		var preview = "";
		if (isPreview) preview = "mgPlayerJSTest_preview-smarttip";

		var html = "<wmgPlayerJSTest_ jobid='" + job.id + "' id='" + id + "'" +
			" class='mgPlayerJSTest_duct-tape " + preview + " " + tourClass + " " + posClass + "'" +
			" style='width:" + w + "px;height:" + h + "px;background:" + d.color + ";opacity:" + opacity + ";z-index:" + zIndex + "'>" +
			"</wmgPlayerJSTest_>";

		return html;
	}

	function positionDuctTape(job, he, opt, w, h, rect) {
		if (!job) return;

		var requestData = job.req.data;

		var pos = he.getBoundingClientRect();
		if (!pos) return;

		var opt = requestData.settings.smartTip;

		var id = '#mgPlayerJSTest_smarttip-' + job.req.data.step.step_id;

		var posClass = '';

		var zIndex = GmCXt.dom.getElementZindex(he);

		if (requestData.settings.stickTargetElement) {

			var parentEl = mg$(he).parent()[0];
			var parentPos = parentEl.getBoundingClientRect();
			posClass = 'mgPlayerJSTest_absolute-position';
			mg$(id).removeClass('mgPlayerJSTest_fixed-position');

		} else {

			var scrollTop = mg$(window).scrollTop();
			var scrollLeft = mg$(window).scrollLeft();

			var cssPosition = GmCXt.dom.getElementFixedPosition(he);
			var posClass = GmCXt.getPosition(cssPosition);


		}

		var style = {
			left: requestData.settings.stickTargetElement ? pos.left - parentPos.left : pos.left,
			top: requestData.settings.stickTargetElement ? pos.top - parentPos.top : pos.top
		};

		if (!requestData.settings.stickTargetElement) {
			if (posClass === 'mgPlayerJSTest_absolute-position') {
				mg$(id).removeClass('mgPlayerJSTest_fixed-position');
				mg$(id).addClass('mgPlayerJSTest_absolute-position');
				style.top += scrollTop;
				style.left += scrollLeft;
			} else {
				mg$(id).removeClass('mgPlayerJSTest_absolute-position');
				mg$(id).addClass('mgPlayerJSTest_fixed-position');
			}
		}


		if (mg$(id).length) {
			mg$(id).show().css(style);
		} else {

			if (zIndex && !opt.zIndexVal) style.zIndex = zIndex;

			var ductEl = mg$(getDuctTapeHtml(job, w, h, opt, posClass));

			if (requestData.settings.stickTargetElement) {
				ductEl.css(style).insertAfter(he);
			} else {
				ductEl.css(style).appendTo('html:first');
			}

			if (opt.ductTapeAlert) {

				mg$(document).off('click', id);
				mg$(document).off('mouseenter', id);
				mg$(document).off('mouseleave', id);

				mg$(id).click(function(){
					onDuctTapeClick(e);
					GmCXt.hideTooltipDelay(requestData.step, opt);
				});

				mg$(id).mouseenter(function(){
					if (!GmCXt.isInspectToolON()) {
						GmCXt.clearTooltipTimeout();
						showTooltip(he, opt, rect, requestData, "hover");
					}
				});

				mg$(id).mouseleave(function(){
					GmCXt.hideTooltipDelay(requestData.step, opt);
				});

			}
		}
	}

	var onDuctTapeClick = function(e) {
		var jobId = mg$(e.target).attr('jobId');

		if (!jobId) return;

		if (!jobs[jobId]) return;

		var d = jobs[jobId].req.data;
		var opt = d.step.step_settings.smartTip;

		if (opt.ductTapeDescription) {
			opt.ductTapeDescription = GmCXt.restoreAssetSrc("<p>"+opt.ductTapeDescription+"</p>");
			if (!d.isPreview) {
				GmCXt.updateOnScreenTooltipGuideInfo(d.tour, d.tour.tour_id, d.step.step_id, false, opt);

				GmCXt.updateTooltipActionInfo(d.tour.tour_id, d.step.step_id, opt, "click");
			}

			if (!d.step.step_settings.smartTip.showDuctTapeOnClick) {
				deleteJob(jobId);
				mg$(e.target).remove();
				deletedDuctTape.push(jobId);
			}

			var data = {
				desc: opt.ductTapeDescription
			};

		}
	};

	function updateColumnIndex(he, cs) {
		var td = mg$(he).is('td') ? he : mg$(he).parents('TD');
		cs.workday.columnIndex = mg$(td).index();
		return cs;
	}

	function isWorkdayTablePowerform(applyToColumn, cs) {
		if (applyToColumn &&
			cs && cs.workday &&
			cs.workday.isTableHeader) {
			return true;
		}
		return false;
	}

	function positionSmartTip(jobId, he, posChanged) {
		var job = jobs[jobId];
		if (!job) return;

		var rd = job.req.data;
		var de = job.resp.de;
		var tourId = rd.step.tour_id;

		var smartTip = rd.settings.smartTip;
		if(GmCXt.isEmpty(smartTip)) return;

		if (isWorkdayTablePowerform(de.applyToColumn, de.customSettings)) {
			de.customSettings = updateColumnIndex(he, de.customSettings);

			if (!rd.isPreview) {
				GmCXt.updateOnScreenTooltipGuideInfo(rd.tour, tourId, rd.step.step_id, true, smartTip, GmCXt.urlParts.fullUrl);
			}
			return; // Power HTML tooltip in column header
		}

		var rect = he.getBoundingClientRect();
		if (!rect) return;

		var opt = rd.settings.smartTip;
		opt.guidanceMessage = GmCXt.restoreAssetSrc("<p>"+opt.guidanceMessage+"</p>");

		var hePosition = GmCXt.dom.getElementFixedPosition(he);
		opt.tipPosition = GmCXt.getPosition(hePosition);

		if ((opt.type === 'guidance' || opt.type === 'both') && opt.guidanceMessage) {
			addGuidanceTip(he, opt, rd, rect);
		}

		if ((opt.type === 'validation' || opt.type === 'both')) {
			addValidationTip(he, opt, rd, posChanged, job);
		}

		if (opt.type === 'injector' && opt.htmlContent) {
			if (GmCXt.dom.isWDTextArea(de) && opt.formInjector && he) {
				disableMaximize(he);
			}
			bindSmartipHtml(he, opt, rd, jobId);
		}

		if (opt.type === 'disableElement') {
			updateElement(he, addDuctTape, opt, job, rect);
		}

		if (opt.type === 'formSubmit') {
			mg$('.' + getFormSubmitClass(tourId, rd.isPreview)).removeClass(getFormSubmitClass(tourId, rd.isPreview));
			addFormSubmitTip(he, rd);
		}
	}

	function disableMaximize(he) {
		var tempHe = he;
		var level = 3;
		var i = 0;
		var maximizeB = null;
		while (i < level) {
			i++;
			maximizeB = mg$(tempHe).find('A.cke_button__maximizeworkday[title=Maximize]')[0];
			if (maximizeB) {
				mg$(maximizeB).css('pointer-events', 'none');
				break;
			}
			tempHe = tempHe.parentNode;
		}
	}

	function getFormSubmitClass(tourId, isPreview) {
		var previewClass = isPreview ? ' mgPlayerJSTest_form-submit-preview' : '';
		return 'gssSmarttip-form-submit-' + tourId + previewClass;
	}

	function addGuidanceTip(he, options, requestData, rect) {
		options.size = requestData.settings.smartTip.size;
		options.stickTargetElement = requestData.settings.stickTargetElement;
		if (!options.size) {
			options.size = {
				width: 20,
				height: 20
			};
		}

		if (options.stickTargetElement) {
			var parentEl = mg$(he).parent()[0];
			var parentPos = parentEl.getBoundingClientRect();
			options.parentPos = parentPos;
			options.msgPosition = true;
			var tooltipPositionForMsg = getTooltipLeftTop(options, rect, requestData);
			options.messagePos = getTooltipMessageLeftTop(options, tooltipPositionForMsg);

		}
		options.pos = getTooltipLeftTop(options, rect, requestData);

		if (!GmCXt.isEmpty(requestData.settings.smartTip.zIndexVal)) {
			options.zIndex = requestData.settings.smartTip.zIndexVal;
		} else {
			options.zIndex = GmCXt.dom.getElementZindex(he);
		}

		switch (options.displayOn) {
			case 'icon':
				setOnIconTip(he, options, rect, requestData);
				break;

			case 'element':
				setOnElementTip(he, options, rect, requestData);
				break;

			case 'pageload':
				setAlwaysShowTip(he, options, rect, requestData);
				break;
		}
	}

	function setOnElementTip(he, options, rect, requestData) {

		var step = requestData.step;

		mg$(he)
			.off('mouseover').on('mouseover', function() {
				if (!GmCXt.isInspectToolON()) {
					GmCXt.clearTooltipTimeout();
					showTooltip(he, options, rect, requestData, "hover");
				}

			}).off('mouseout').on('mouseout', function() {
				GmCXt.hideTooltipDelay(step, options);

			}).off('focus').on('focus', function() {
				if (!GmCXt.isInspectToolON())
					showTooltip(he, options, rect, requestData, "focus");

			}).off('blur').on('blur', function() {
				GmCXt.hideTooltip(step);

			}).off('click').off('click').on('click', function(e) {
				if (!requestData.isPreview)
					GmCXt.tooltipAction(e, requestData.settings.smartTip, step);
			});
	}

	function setAlwaysShowTip(he, options, rect, requestData) {
		var hideTime = options.hideAfter ? options.hideAfter : 10;
		showTooltip(he, options, rect, requestData, 'pageload');
		if (hideTime !== 'showAlways') {
			setOnElementTip(he, options, rect, requestData);
			GmCXt.timeout(function() {
				GmCXt.hideTooltip(requestData.step);
				options.displayOn = 'element';
			}, hideTime * 1000);
		}
	}

	function playGuideFromEmbedUrl(e) {

		GmCXt.log(33, "Playing Guide from Embed URL");

		var guideTourId = e.target.getAttribute('data-guideMe-toursId');
		var automation = e.target.getAttribute('data-automation');

		if (guideTourId) {
			automation = automation == "true" ? true : false;
			var data = {
				tourId: guideTourId
			};
			if (automation) {
				data.initiator = 'doitforme';
			}
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:play_guide_from_link', data);
		}
	}

	function onTooltipClick(e, req) {
		let isAnchorTag = e.target.tagName.toLowerCase() == 'a';
		let isEmbedGuide = e.target.className == 'mgPlayerJSTest_tooltip-embed-url';

		//Tooltip click actions to be overridden if embed guide is present 
		if (isEmbedGuide) {
			playGuideFromEmbedUrl(e);
		}

		if (!req.isPreview && !isAnchorTag && !isEmbedGuide) {
			GmCXt.tooltipAction(e, req.settings.smartTip, req.step);
		}
	}

	function addEventstoTooltip(style, he, requestData, options, step, updatedUrl) {
		if (options.stickTargetElement) {
			mg$(getTooltipHtml(he, requestData, options.size, options, updatedUrl))
				.css(style)
				.insertAfter(he)
				.on('click', function(e) {
					onTooltipClick(e, requestData);
				})
				.on('mouseover', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex, true); //passing true for incrementing z-index
					if (!requestData.isPreview) {
						GmCXt.updateTooltipActionInfo(step.tour_id, step.step_id, requestData.settings.smartTip, "hover");
					}
				})
				.on('mouseout', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex);
				});

			var msgStyle = {
				left: options.messagePos.left,
				top: options.messagePos.top
			};
			var gId = "smarttip-guidance-msg-" + requestData.step.step_id;
			if(mg$("#"+gId).length) {
				mg$("#"+gId).remove();
			}

			mg$(getTooltipMessageHtml(he, requestData, options)).css(msgStyle).appendTo('html:first');

			var iconId = 'mgPlayerJSTest_smarttip-icon-' + requestData.step.step_id;

			var iconEL = document.getElementById(iconId);
			var guidanceEl = document.getElementById(gId);
			iconEL.addEventListener('mouseenter', function() {
				guidanceEl.style.visibility = 'visible';
				guidanceEl.style.opacity = 1;
			});
			iconEL.addEventListener('mouseleave', function() {
				guidanceEl.style.visibility = 'hidden';
				guidanceEl.style.opacity = 0;
			});

		} else {
			mg$(getTooltipHtml(he, requestData, options.size, options, updatedUrl))
				.css(style)
				.appendTo('html:first')
				.on('click', function(e) {
					onTooltipClick(e, requestData);
				})
				.on('mouseover', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex, true); //passing true for incrementing z-index
					if (!requestData.isPreview) {
						GmCXt.updateTooltipActionInfo(step.tour_id, step.step_id, requestData.settings.smartTip, "hover");
					}
				})
				.on('mouseout', function() {
					this.style.zIndex = GmCXt.updateZIndex(this.style.zIndex);
				});
		}
	}

	function setOnIconTip(he, options, rect, requestData) {
		var step = requestData.step;
		var style = {
			left: options.pos.left,
			top: options.pos.top
		};
		var iconId = 'mgPlayerJSTest_smarttip-icon-' + step.step_id;

		if (GmCXt.getElVisibility(he) === 'hidden') {
			style.display = 'none';
		}

		if (mg$('#' + iconId).length) {

			mg$('#' + iconId).parent().css(style);

			var gId = "smarttip-guidance-msg-" + requestData.step.step_id;

			mg$('#' + gId).attr('style', function(i, style) {
				var props = style.split(';');
				var updatedStyle = "";
				for (var j = 0; j < props.length; j++) {
					if (props[j].indexOf('border-color') !== -1) {
						updatedStyle += 'border-color: ' + requestData.os.tooltipColor + ' !important;';
					} else if (props[j] && props[j] != " ") {
						updatedStyle += props[j] + ";";
					}
				}
				return updatedStyle;

			});

			if (options.stickTargetElement) {
				var style = {
					left: options.messagePos.left,
					top: options.messagePos.top
				};
				mg$('#' + gId).css(style);
			}



		} else {

			if (options.zIndex) style.zIndex = options.zIndex;

			var updatedUrl = false;
			var url = requestData.settings.smartTip.icon;
			addEventstoTooltip(style, he, requestData, options, step, updatedUrl);

			var tipClass = 'mgPlayerJSTest_smarttip-icon-wrapper-' + requestData.step.step_id;
			GmCXt.imageSizeStyle('.' + tipClass + ' .smarttip-msg-inner img');

			GmCXt.zoomImage(options.guidanceMessage, ".smarttip-msg-inner");
			if (options.guidanceMessage.indexOf('target = "gssPlayGuide"' !== -1)) {
				GmCXt.setLinkGuidePlay(options.guidanceMessage, ".smarttip-msg-inner");
			}
			
			var linkData = {
				tid: step.tour_id,
				sid: step.step_id,
				opt: options
			};
			
			GmCXt.setTooltipLinkClickhandler(options.guidanceMessage, ".smarttip-msg-inner", linkData);
		}

		if (!requestData.isPreview) {
			GmCXt.updateOnScreenTooltipGuideInfo(requestData.tour, step.tour_id, step.step_id, true, options, GmCXt.urlParts.fullUrl);
		}
	}

	function getElValue(he) {

		var elTagName = mg$(he)[0].tagName.toLowerCase();

		if (mg$(he).get(0).isContentEditable && elTagName !== 'input') {
			return mg$(he).get(0).textContent;
		} else {
			return mg$(he).val();
		}
	}

	function saveInput(he, requestData) {

		requestData.step.innerHTML = mg$(he).html();
		requestData.step.value = getElValue(he);
	}

	function getLongestB(he) {
		var b = mg$(he).find('li');
		var max = 0;
		b.each(function(i, n) {
			var l = mg$(n).text().length;
			if (l > max) max = l;
		});
		return max;
	}

	function valMaxChar(value, rules) {
		var rulesVal = rules.value.charCount || rules.value;

		if (value.length > rulesVal.max) return true;
		else return false;
	}

	function valMinChar(value, rules) {
		var rulesVal = rules.value.charCount || rules.value;

		if (value.length < rulesVal.min) return true;
		else return false;
	}

	function valMinBullet(innerHTML, rules, he) {
		var bCount = GmCXt.getBulletCount(innerHTML);
		var rulesVal = rules.value.bulletCount || rules.value;

		if (bCount < rulesVal.min) return true;
	}

	function valMaxBullet(innerHTML, rules, he) {
		var bCount = GmCXt.getBulletCount(innerHTML);
		var rulesVal = rules.value.bulletCount || rules.value;
		var charsInBullet = getLongestB(he);

		if (bCount > rulesVal.max) return true; // validate number of bullets
		else if (charsInBullet > rulesVal.maxPerBullet) return true; // validate chars per bullet
		else return false;
	}

	function restoreInput(he, requestData) {
		if (mg$(he).get(0).isContentEditable && requestData.step.innerHTML) {
			he.innerHTML = requestData.step.innerHTML;
			mg$(he).blur();
		} else if (requestData.step.value)
			mg$(he).val(requestData.step.value);
	}

	function triggerValidation(he, options, requestData, job, isFirst) {

		var flag = false;
		var rules = options.rules;
		var innerHTML = mg$(he).html();
		var step = requestData.step;
		var v = GmCXt.getValidationTypes();
		requestData.step.hardStop = false;

		var value = getElValue(he);

		if (rules.date === true && !GmCXt.validateDateFormat(value)) {
			v.date = flag = true;
		}

		if (rules.email === true && !GmCXt.validateEmail(value)) {
			v.email = flag = true;
		}

		if (rules.numeric === true && !GmCXt.validateNumeric(value)) {
			v.numeric = flag = true;
		}

		if (rules.phone === true && !GmCXt.validatePhonenumber(value)) {
			v.phone = flag = true;
		}

		if (rules.required === true && !value) {
			v.required = flag = true;
		}

		if (rules.time === true && !GmCXt.validateTimeFormat(value)) {
			v.time = flag = true;
		}

		if (rules.url === true && !GmCXt.validateWebUrl(value)) {
			v.url = flag = true;
		}

		var maxCharFails = false;
		var maxBulFails = false;

		if (rules.charCount === true) {
			maxCharFails = valMaxChar(value, rules);
			v.charCount = maxCharFails || valMinChar(value, rules);
			if (v.charCount) flag = true;
		}

		if (rules.bulletCount === true) {
			maxBulFails = valMaxBullet(innerHTML, rules, he);
			v.bulletCount = maxBulFails || valMinBullet(innerHTML, rules, he);
			if (v.bulletCount) flag = true;
		}

		var regexValue = rules.value;
		var regValue = regexValue.regex || regexValue;

		if (rules.regex === true && !GmCXt.validateRegex(regValue, value)) {
			v.regex = true;
			flag = true;
		}

		var tourId = step.tour_id;
		var stepId = step.step_id;

		if (flag === true) {

			options.validationType = v;

			updateValidationList(stepId, tourId, false);

			addToTriggeredList(stepId, true);
			if (!isFirst) {
				showValidationTooltip(he, options, step, requestData.isPreview, requestData.tour);
			}

			showFormSubmitTooptip(step, requestData.isPreview, options, job);

		} else {

			updateValidationList(stepId, tourId, true);
			addToTriggeredList(stepId, false);

			var showGuidanceTooltip = toggleTooltipAndValidation(options, true);
			GmCXt.hideValidationTooltip(step, showGuidanceTooltip);

			if (isTooltipValid(tourId))
				hideFormSubmitTip(tourId, requestData.isPreview, options, job);
		}
	}

	function isTooltipValid(tourId) {

		var t = tracker["tour_" + tourId];
		var flag = true;

		t.forEach(function(s) {
			if (!s.isValid) flag = false;
		});

		return flag;
	}

	function updateValidationList(stepId, tourId, value) {

		var list = tracker["tour_" + tourId];
		var isUpdated = false;

		if (!list) {

			list = [];
			list.push({
				'stepId': stepId,
				isValid: value
			});

		} else {

			for (var i = 0; i < list.length; i++) {
				if (list[i].stepId === stepId) {
					list[i].isValid = value;
					isUpdated = true;
				}
			}

			if (!isUpdated)
				list.push({
					'stepId': stepId,
					isValid: value
				});
		}

		tracker["tour_" + tourId] = list;
	}

	function addValidationTip(he, options, requestData, posChanged, job) {

		var step = requestData.step;
		var tourId = step.tour_id;

		updateValidationList(step.step_id, tourId, true);

		if (posChanged) {
			repositionValidationTip(he, options, requestData);
		}

		if (requestData.isPreview && !GmCXt.smartTipPreviewOn) {
			return;
		}

		if (!requestData.isPreview) {
			GmCXt.updateOnScreenTooltipGuideInfo(requestData.tour, tourId, step.step_id, true, options, GmCXt.urlParts.fullUrl);
		}

		mg$(he)
			.off('focus').on('focus', function() {
				var showGuidanceTooltip = toggleTooltipAndValidation(options, true);
				GmCXt.hideValidationTooltip(step, showGuidanceTooltip);
			})
			.off('blur').on('blur', function() {
				triggerValidation(he, options, requestData, job);
			})
			.off('keyup').on('keyup', function() {
				triggerValidation(he, options, requestData, job);
			});

		const durationMs = GmCXt.getOrgStepWaitTime() || 10000;
		const intervalMs = 1000;
		let count = 0;

		const maxCount = durationMs / intervalMs;

		const intervalId = setInterval(function() {
			triggerValidation(he, options, requestData, job, true);
			count++;

			if (count >= maxCount) {
				clearInterval(intervalId); // Stop after reaching the total duration
			}
		}, intervalMs);
	}

	function repositionValidationTip(he, options, requestData) {

		var step = requestData.step;

		if (autoTriggered[step.step_id]) {
			showValidationTooltip(he, options, step, requestData.isPreview, requestData.tour);
		}
	}

	function addFormSubmitTip(he, requestData) {

		var step = requestData.step;
		var tourId = step.tour_id;

		var smartTip = requestData.settings.smartTip;

		mg$(he).addClass(getFormSubmitClass(tourId, requestData.isPreview));

		if (!requestData.isPreview) {
			GmCXt.updateOnScreenTooltipGuideInfo(requestData.tour, tourId, step.step_id, true, smartTip, GmCXt.urlParts.fullUrl);
		}
	}

	function showFormSubmitTooptip(step, isPreview, options, job) {
		var el = mg$('.' + getFormSubmitClass(step.tour_id, isPreview).replace(/\s+/g, '.'));
		if (!el.length && window.top !== window.self) {
			el = mg$(window.top.document).find('.' + getFormSubmitClass(step.tour_id, isPreview).replace(/\s+/g, '.'));
		}

		function update(he) {
			mg$(he).addClass('gssSmarttip-form-submit');
		}

		updateElement(el[0], update, options, job);
	}

	function hideFormSubmitTip(tourId, isPreview, options, job) {
		var el = mg$('.' + getFormSubmitClass(tourId, isPreview).replace(/\s+/g, '.'));
		if (!el.length && window.top !== window.self) {
			el = mg$(window.top.document).find('.' + getFormSubmitClass(tourId, isPreview).replace(/\s+/g, '.'));
		}

		function update(he) {
			mg$(he).removeClass('gssSmarttip-form-submit');
		}

		updateElement(el[0], update, options, job);
	}

	function updateElement(he, update, options, job, rect) {
		if (!he) return;

		var settings = job.req.data.settings;

		var w = mg$(he).outerWidth();
		var h = mg$(he).outerHeight();

		update(he, options, w, h, job, rect);

		if (!settings.stickTargetElement || (options.type !== 'disableElement' && settings.stickTargetElement)) {
			var p = mg$(he).parent()[0];
			var pw = mg$(p).outerWidth();
			var ph = mg$(p).outerHeight();

			if (w === pw && h === ph) {
				updateElement(p, update, options, job);
			}
		}
	}

	function getGuidanceMessageAlignment(he, align) {

		var spaceToLeft = mg$(he).offset().left;
		var spaceToRight = mg$(window).width() - (mg$(he).offset().left + mg$(he).outerWidth());
		var spaceOnTop = mg$(he).offset().top;
		var spaceAtBottom = mg$(window).height() - (mg$(he).offset().top + mg$(he).outerHeight());
		var msgBoxWidth = 238;
		var msgBoxHeight = 70;

		switch (align) {
			case "left":
				if ((spaceToLeft - msgBoxWidth) < 0) {
					align = "right";
				}
				break;
			case "right":
				if ((spaceToRight - msgBoxWidth) < 0) {
					align = "left";
				}
				break;
			case "top":
				if ((spaceOnTop - msgBoxHeight) < 0) {
					align = "bottom";
				}
				break;
			case "bottom":
				if ((spaceAtBottom - msgBoxHeight) < 0) {
					align = "top";
				}
				break;
		}
		return align;
	}

	function getGuidenceClsPrefix() {
		// Do NOT change this because parsing of stepId and tourId 
		// is strictly dependent 
		return 'mg-has-guidence-message-';
	}

	function getGuidenceMessageElmClass(stepId, tourId) {
		return getGuidenceClsPrefix() + stepId + "-" + tourId;
	}

	function showTooltip(he, options, rect, requestData, actionType) {

		if (options.type == 'disableElement') {
			options.displayOn = 'element';
		}

		var isPreview = requestData.isPreview;
		var tourId = requestData.step.tour_id;

		if (isPreview && !GmCXt.smartTipPreviewOn) return;

		var step = requestData.step;
		var iconId = 'mgPlayerJSTest_smarttip-icon-' + step.step_id;

		mg$(he).addClass(getGuidenceMessageElmClass(step.step_id, tourId));

		if (options.displayOn === 'icon')
			rect = document.getElementById(iconId).getBoundingClientRect();
		if (options.displayOn === 'element') {
			rect = he.getBoundingClientRect();
			options.pos = getTooltipLeftTop(options, rect, requestData);
		}

		var d = {
			options: options,
			stepId: step.step_id,
			alignment: options.alignment,
			left: options.pos.left,
			top: options.pos.top,
			highlightedArea: rect,
			displayOn: options.displayOn,
			type: options.type,
			step: step,
			rect: rect,
			derivedType: 'guidance',
			tipPosition: options.tipPosition,
			scrollTop: mg$(window).scrollTop(),
			isPreview: isPreview,
			tourId: tourId,
			actionType: actionType,
			inTopWindow: (window.self === window.top),
			os: requestData.os,
			tour: requestData.tour,
			reqId: GmCXt.id
		};

		if (options.zIndex) d.zIndex = options.zIndex;

		if (window.self === window.top) {
			GmCXt.requestHandler.showSmarttip(d);
			GmCXt.addEventOnTooltip(requestData);
		} else {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:show_smarttip', d);
		}
	}

	function getTooltipHtml(he, requestData, size, options, updatedUrl) {
		let as = GmCXt.getAppSetting();

		if (options.stickTargetElement) {
			mg$(he).parent().addClass('mgPlayerJSTest_relative-position');
		} else {
			mg$(he).parent().removeClass('mgPlayerJSTest_relative-position');
		}
		var id = 'mgPlayerJSTest_smarttip-icon-' + requestData.step.step_id;

		var tipClass = 'mgPlayerJSTest_smarttip-icon mg-smarttip-icon mgPlayerJSTest_smarttip-icon-wrapper-' + requestData.step.step_id + ' ' + 'mgPlayerJSTest_smarttip-tour-' + requestData.step.tour_id;

		if (GmCXt.smarttipAreHidden === true && !requestData.isPreview) {
			tipClass += ' tooltip-hidden';
		}

		if (options.tipPosition)
			tipClass += ' ' + options.tipPosition.replace('mgPlayerJSTest_', 'mg-');

		if (requestData.isPreview) tipClass += ' mgPlayerJSTest_preview-smarttip';

		var img = requestData.settings.smartTip.icon ? requestData.settings.smartTip.icon : as.tooltip_img;

		if (img && img.indexOf(GmCXt.model.organization.settings._obj.tooltip_img._default) === -1) {
			img = GmCXt.restoreAssetSrc(img);
		} else {
			img = GmCXt.conf.staticContentPath + GmCXt.model.organization.settings._obj.tooltip_img._default;
		}

		var os = requestData.os;

		var tTheme = GmCXt.tooltipTheme(os, 'wmgPlayerJSTest_', options);

		var popupFooter = "<wmgPlayerJSTest_ class='mgPlayerJSTest_smarttip-popup-footer mgPlayerJSTest_width-100 mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-start'>" +
			"                 <img class='mgPlayerJSTest_custom-image' src='" + GmCXt.brandLogo() + "'>" +
			"              </wmgPlayerJSTest_>";

		var html = "<wmgPlayerJSTest_ class='" + tipClass + " ' style='width:" +
			size.width + "px; height:" + size.height + "px' >" +
			"   <img class='mgPlayerJSTest_custom-image' id='" + id + "'" +
			"       src='" + img + "' " +
			"       style='width:" + size.width + "px; height:" + size.height + "px' />" +
			(options.stickTargetElement ? '' : getTooltipMessageHtml(he, requestData, options)) +
			"   </wmgPlayerJSTest_>" +
			"</wmgPlayerJSTest_>";

		return html;
	}

	function getTooltipMessageHtml(he, requestData, options) {

		var msgPos = requestData.step.step_settings.smartTip.msg_pos;
		var guidanc_class = 'smarttip-guidance-msg-' +
			getGuidanceMessageAlignment(he, options.alignment);

		if (msgPos) {
			guidanc_class = 'smarttip-guidance-msg-' + msgPos;
		}

		var os = requestData.os;

		var tTheme = GmCXt.tooltipTheme(os, 'wmgPlayerJSTest_', options);

		var gId = "smarttip-guidance-msg-" + requestData.step.step_id;

		var popupSize = requestData.settings.smartTip.popupSize;
		var popupStyle = "";

		if (!popupSize) {
			popupSize = {};
		}

		var popupWidth = popupSize.popupWidth ? popupSize.popupWidth : '250';
		var popupHeight = popupSize.popupHeight ? popupSize.popupHeight : '250';
		popupStyle = "max-width:" + popupWidth + "px; max-height:" + popupHeight + "px; ";

		var tooltipHtml = GmCXt.updateOrgAndAddSignature(GmCXt.replaceVariableWithValue(options.guidanceMessage));

		const currentUrl = new URL(window.location.href);

		// regex to check if <a> tag is present with guideMe-tourId param present in url.
		const regex = /<a([^>]*)href="([^"]*guideMe-tourId=([^"&]*)(?:[^"]*?(?:&|&amp;)automation=([^"&]*))?[^"]*)"([^>]*)target="_self"([^>]*)>(.*?)<\/a>/g;
		tooltipHtml = tooltipHtml.replace(regex, (match, p1, href, toursId, automation, p2, p3, content) => {
			const hrefUrl = new URL(href);
			if (hrefUrl.hostname === currentUrl.hostname && hrefUrl.pathname === currentUrl.pathname) {
				return `<span class="mgPlayerJSTest_tooltip-embed-url" data-guideMe-toursId="${toursId}" data-automation="${automation || false}">${content}</span>`;
			}
			return match;
		});

		var c = GmCXt.singleLineTitle(tooltipHtml);

		var popupFooter = "<wmgPlayerJSTest_ class='mgPlayerJSTest_smarttip-popup-footer mgPlayerJSTest_width-100 mgPlayerJSTest_display-flex mgPlayerJSTest_align-items-center mgPlayerJSTest_justify-content-flex-start'>" +
			"                 <img class='mgPlayerJSTest_custom-image' src='" + GmCXt.brandLogo() + "'>" +
			"              </wmgPlayerJSTest_>";

		var html = "<wmgPlayerJSTest_ id ='" + gId + "'class='smarttip-guidance-msg " + guidanc_class + " " + c + " ' style='" + (tTheme.tooltipBorderC ? tTheme.tooltipBorderC : '') + (tTheme.tooltipBgColor ? tTheme.tooltipBgColor : '') + (tTheme.tooltipBorderW ? tTheme.tooltipBorderW : '') + (tTheme.tooltipBorderRadius ? tTheme.tooltipBorderRadius : '') + (tTheme.tooltipPaddingTop ? tTheme.tooltipPaddingTop : '') + (tTheme.tooltipPaddingBottom ? tTheme.tooltipPaddingBottom : '') + (tTheme.tooltipPaddingLeft ? tTheme.tooltipPaddingLeft : '') + (tTheme.tooltipPaddingRight ? tTheme.tooltipPaddingRight : '') + "'>" +
			"       <wmgPlayerJSTest_ class='smarttip-msg-inner' style='" + popupStyle + (tTheme.tooltipBorderRadius ? tTheme.tooltipBorderRadius : '') + (tTheme.tooltipDescColor ? tTheme.tooltipDescColor : '') + (tTheme.tooltipDescFsize ? tTheme.tooltipDescFsize : '') + (tTheme.tooltipDescFfamily ? tTheme.tooltipDescFfamily : '') + (tTheme.tooltipWidth ? tTheme.tooltipWidth : '') + "'>" + tooltipHtml +
			"       </wmgPlayerJSTest_>" +
			((os.tooltipTheme && !os.hideBrandLogo) ? popupFooter : '');

		return html;

	}


	function getTooltipLeftTop(options, rect, rd) {

		var left = 0;
		var top = 0;

		//get Size Based on window size
		var originalEl = rd.settings.element.position;

		var size = {
			width: options.size.width,
			height: options.size.width
		};

		switch (options.alignment) {

			case 'left':
				if (options.stickTargetElement && !options.msgPosition) {
					left = (rect.left - options.parentPos.left) - size.width - 5;
					top = ((rect.top - options.parentPos.top) + rect.height / 2) - (size.height / 2);
				} else {
					left = rect.left - size.width - 5;
					top = (rect.top + rect.height / 2) - (size.height / 2);
				}
				break;

			case 'right':
				if (options.stickTargetElement && !options.msgPosition) {
					left = (rect.left - options.parentPos.left) + rect.width + 5;
					top = ((rect.top - options.parentPos.top) + rect.height / 2) - (size.height / 2);
				} else {
					left = rect.left + rect.width + 5;
					top = (rect.top + rect.height / 2) - (size.height / 2);
				}
				break;

			case 'top':
				if (options.stickTargetElement && !options.msgPosition) {
					left = ((rect.left - options.parentPos.left) + rect.width / 2) - (size.width / 2);
					top = (rect.top - options.parentPos.top) - size.height - 5;
				} else {
					left = (rect.left + rect.width / 2) - (size.width / 2);
					top = rect.top - size.height - 5;
				}
				break;

			case 'bottom':
				if (options.stickTargetElement && !options.msgPosition) {
					left = ((rect.left - options.parentPos.left) + rect.width / 2) - (size.width / 2);
					top = (rect.top - options.parentPos.top) + rect.height + 5;
				} else {
					left = (rect.left + rect.width / 2) - (size.width / 2);
					top = rect.top + rect.height + 5;
				}
				break;

			case 'center':
				if (options.stickTargetElement && !options.msgPosition) {
					left = ((rect.left - options.parentPos.left) + rect.width / 2) - (size.width / 2);
					top = ((rect.top - options.parentPos.top) + rect.height / 2) - (size.height / 2);
				} else {
					left = (rect.left + rect.width / 2) - (size.width / 2);
					top = (rect.top + rect.height / 2) - (size.height / 2);
				}
				break;

			case 'custom':
				if (options.customPosition.left_pos === '%') {
					if (options.displayOn === 'icon') {
						var w = ((rect.width * options.customPosition.left) / 100) - (options.size.width / 2);
					} else {
						var w = ((rect.width * options.customPosition.left) / 100);
					}
				} else {
					var w = options.customPosition.left * (rect.width / originalEl.width);
				}
				if (options.customPosition.top_pos === '%') {
					if (options.displayOn === 'icon') {
						var h = ((rect.height * options.customPosition.top) / 100) - (options.size.height / 2);
					} else {
						var h = ((rect.height * options.customPosition.top) / 100);
					}

				} else {
					var h = options.customPosition.top * (rect.height / originalEl.height);
				}
				if (options.stickTargetElement && !options.msgPosition) {
					left = (rect.left - options.parentPos.left) + w;
					top = (rect.top - options.parentPos.top) + h;
				} else {
					left = rect.left + w;
					top = rect.top + h;
				}
		}

		if (!options.stickTargetElement) {
			if (options.tipPosition === "mgPlayerJSTest_absolute-position") {
				top = top + mg$(window).scrollTop();
				left = left + mg$(window).scrollLeft();
			}
		}

		if (options.msgPosition) {
			options.msgPosition = false;
		}

		return {
			left: left,
			top: top
		};
	}


	function getTooltipMessageLeftTop(options, tipPos) {

		var left = tipPos.left;
		var top = tipPos.top;

		var size = {
			width: options.size.width,
			height: options.size.width
		};

		switch (options.msg_pos) {

			case 'left':
				left = left + size.width / 2 - 5;
				top = top + size.height / 2;
				break;

			case 'right':
				left = left + size.width / 2 + 5;
				top = top + size.height / 2;
				break;

			case 'top':
				top = top;
				left = left + size.width / 2;
				break;

			case 'bottom':
				top = top + size.height / 2;
				left = left + size.width / 2;
				break;

		}

		top = top + mg$(window).scrollTop();
		left = left + mg$(window).scrollLeft();



		return {
			left: left,
			top: top
		};

	}

	function getValidationLeftTop(options, rect) {

		var left = 0;
		var top = 0;

		switch (options.rules.alignment) {

			case 'left':
				left = rect.left - 5;
				top = (rect.top + rect.height / 2);
				break;

			case 'right':
				left = rect.left + rect.width + 5;
				top = (rect.top + rect.height / 2);
				break;

			case 'top':
				left = (rect.left + rect.width / 2);
				top = rect.top - 5;
				break;

			case 'bottom':
				left = (rect.left + rect.width / 2);
				top = rect.top + rect.height + 5;
				break;

			case 'custom':
				left = rect.left + options.rules.customPosition.left;
				top = rect.top + options.rules.customPosition.top;
		}

		if (options.tipPosition === "mgPlayerJSTest_absolute-position") {
			top = top + mg$(window).scrollTop();
			left = left + mg$(window).scrollLeft();
		}

		return {
			left: left,
			top: top
		};
	}

	function showValidationTooltip(he, options, step, isPreview, tour) {

		if (isPreview && !GmCXt.smartTipPreviewOn) return;

		var rect = GmCXt.getRectObject(he.getBoundingClientRect());

		//var newLeft = rect.left + rect.width / 2;
		//var newTop = rect.top;
		var zIndex = GmCXt.dom.getElementZindex(he);

		if (!options.rules.alignment) options.rules.alignment = 'top';

		options.pos = getValidationLeftTop(options, rect);
		var newLeft = options.pos.left;
		var newTop = options.pos.top;

		var hideTooltip = toggleTooltipAndValidation(options);

		var d = {
			options: options,
			stepId: step.step_id,
			left: newLeft,
			top: newTop,
			highlightedArea: rect,
			type: options.type,
			step: step,
			rect: rect,
			derivedType: 'validation',
			scrollTop: mg$(window).scrollTop(),
			isPreview: isPreview,
			tourId: step.tour_id,
			actionType: 'validation',
			tipPosition: options.tipPosition,
			inTopWindow: (window.self === window.top),
			hideTooltip: hideTooltip,
			tour: tour,
			reqId: GmCXt.id
		};
		if (zIndex) d.zIndex = zIndex;

		if (window.self === window.top) {
			GmCXt.requestHandler.showSmarttip(d);
		} else {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:show_smarttip', d);
		}
	}

	function findRuleElement(jobId) {

		var job = jobs[jobId];
		var req = job.req;
		var resp = job.resp;
		var de = req.data.element;
		var tourLog = GmCXt.tourLog(req.data.job.tour);

		var info = "[El Rule] -" + tourLog + req.data.rule.value;

		function notFound() {

			GmCXt.log(6, "NOT FOUND rule element " + tourLog, 1);
			GmCXt.printMatchingAlgoLogs();

			if (!resp.he) {
				resp.valid = false;
				if (req.data.rule && (req.data.rule.condition === GmCXt.NOT_EXISTS || req.data.rule.condition === GmCXt.NOT_VISIBLE)) {
					resp.valid = true;
				}
			}
			if (de) removeDeForRules(JSON.stringify(de.selector), tourLog);
			delete jobs[jobId];
			if (req.cb) req.cb(resp);
		}

		if (Date.now() > job.timeout) {
			GmCXt.log(6, "RULE TIMEOUT " + tourLog, 1);
			notFound();
			return;
		}

		if (de) {

			if (alreadySearchingHeForRules(de, jobId, tourLog)) {
				return;
			}

			if (GmCXt.decodeVersion(de.version) <= 5033401) {
				var newDe = mg$.extend(true, {}, de);
				var he = getDOMElementForRule(de, null, info);
			} else {

				var newDe = GmCXt.migrateMatchAlgoSetting(de);
				if (!isTargetFrame(newDe, req.data.frame, job.startTime)) {
					return;
				}

				var ruleEl = true;
				if (req.data.rule.condition === GmCXt.EXISTS || req.data.rule.condition === GmCXt.NOT_EXISTS || req.data.rule.condition === GmCXt.VISIBLE || req.data.rule.condition === GmCXt.NOT_VISIBLE) {
					ruleEl = false;
				}

				var he = getDOMElementForRule(newDe, null, info, null, ruleEl);

			}

			if (he) {

				var elemPos = he.getBoundingClientRect();

				if (elemPos) {

					resp.valid = validateRules(he, req.data.rule, newDe, jobId);
					resp.he = he;

					saveHeForRules(de, he, jobId, tourLog);

					if (resp.valid && req.cb) {
						delete jobs[jobId];
						req.cb(resp);
					} else if (req.cb) {
						req.cb(resp);
					}
				}
			}
		}
	}

	function returnRulesCallBack(he, jobId) {
		var job = jobs[jobId];
		if (job) {
			var req = job.req;
			var resp = job.resp;
			var de = req.data.element;
			var tourLog = GmCXt.tourLog(req.data.job.tour);

			GmCXt.log(6, "Executing rules callback " + tourLog);

			resp.valid = validateRules(he, req.data.rule, de, jobId);
			if (resp.valid) {
				if (req.data.rule.condition === GmCXt.EXISTS) {
					resp.valid = he && mg$(he).length ? true : false;
				} else if (req.data.rule.condition === GmCXt.VISIBLE) {
					resp.valid = GmCXt.getElVisibility(he) === "visible" ? true : false;
				} else {
					resp.valid = mg$(he).is(':visible');
				}
			}
			resp.he = he;

			if (resp.valid) {
				delete jobs[jobId];
			}
			if (req.cb) {
				req.cb(resp);
			}
		}
	}

	function alreadySearchingHeForRules(de, jobId, tourLog) {

		var deExist = false;

		for (var i = 0; i < GmCXt.domElStore.length; i++) {

			if (GmCXt.domElStore[i].deSel === JSON.stringify(de.selector)) {

				deExist = true;
				GmCXt.log(6, tourLog + "DE MATCHED");

				if (GmCXt.domElStore[i].he) {
					if (mg$.contains(window.document, mg$(GmCXt.domElStore[i].he)[0])) {
						GmCXt.log(6, tourLog + "Cached element exists in the DOM");
						returnRulesCallBack(GmCXt.domElStore[i].he, jobId);
					} else {
						GmCXt.log(6, tourLog + "Element was earlier found for a matching selector, but does not exist in the DOM presently.");
						removeDeForRules(i, tourLog);
						deExist = false;
						break;
					}
				} else if (GmCXt.domElStore[i].origJobId === jobId) {
					GmCXt.log(6, tourLog + "Continuing finding he. . . ");
					return false;
					// Requests from the original job should be passed to finding
					// For all other jobs associated with the same el, declare already finding
				}

				GmCXt.domElStore[i].jobId.push(jobId);
				break;
			}
		}

		if (!deExist) {
			GmCXt.log(6, tourLog + "Adding new DE in cache. . .");
			saveDeForRules(de, jobId, tourLog);
		}

		return deExist;
	}

	function removeDeForRules(selector, tourLog) {
		GmCXt.log(6, tourLog + "Removing DE entry from cache. . .");

		if (GmCXt.isNumeric(selector)) {
			GmCXt.domElStore.splice(selector, 1);
		} else {
			for (var i = 0; i < GmCXt.domElStore.length; i++) {
				if (GmCXt.domElStore[i].deSel === selector) {
					GmCXt.domElStore.splice(i, 1);
					break;
				}
			}
		}
	}

	function saveDeForRules(de, jobId, tourLog) {
		var obj = {};
		obj.deSel = JSON.stringify(de.selector);
		obj.jobId = [];
		obj.jobId.push(jobId);
		obj.origJobId = jobId;

		GmCXt.domElStore.push(obj);
	}

	function saveHeForRules(de, he, jobId, tourLog) {
		GmCXt.log(6, "Save HE in cache" + tourLog);

		for (var i = 0; i < GmCXt.domElStore.length; i++) {

			if (GmCXt.domElStore[i].deSel === JSON.stringify(de.selector)) {

				GmCXt.domElStore[i].he = he;

				for (var j = 0; j < GmCXt.domElStore[i].jobId.length; j++) {

					var jID = GmCXt.domElStore[i].jobId[j];
					if (jobId !== jID) {
						returnRulesCallBack(he, jID);
					}
				}
				break;
			}
		}
	}

	function findMatchingAlgoElement(jobId) {

		var job = jobs[jobId];
		var req = job.req;
		var resp = job.resp;
		var de = req.data.element;
		var he = null;
		var elemPos = null;

		function notFound() {
			resp.found = false;
			delete jobs[jobId];
			if (req.cb) req.cb(resp);
		}

		if (Date.now() > job.timeout) {
			GmCXt.log(12, "NOT FOUND element", job);

			notFound();
			return;
		}

		if (de) {

			var de = GmCXt.migrateMatchAlgoSetting(de);

			if (!isTargetFrame(de, req.data.frame, job.startTime)) {
				return;
			}

			he = getDOMElementForRule(de, null, false, null);

			if (he) {

				c = de.criteria;

				if (!c.availableAttr) {
					de = GmCXt.dom.getElement(he, de.criteria, req.data.frame);
				}

				elemPos = he.getBoundingClientRect();

				if (elemPos) {

					GmCXt.log(12, "FOUND element", job);

					resp.found = true;
					resp.he = he;
					resp.de = de;

					editJob = mg$.extend(true, {}, job);
					delete jobs[jobId];
					req.cb(resp);
				}
			}
		}
	}

	function validateColumnRules(he, rule, jobId) {
		var table = he;
		var cellText, index;

		for (var i = 0; i < rule.columnConditions.length; i++) {
			rule.columnConditions[i].index = parseInt(rule.columnConditions[i].key);
		}

		var columnsValid = 0;
		for (var i = 1; i < table.rows.length; i++) {

			columnsValid = 0;

			for (var j = 0; j < rule.columnConditions.length; j++) {
				index = rule.columnConditions[j].index;
				cellText = table.rows[i].children[index].textContent.trim().replace(/\n/g, '');

				if (cellText === rule.columnConditions[j].value.trim()) {
					columnsValid++;
				}
			}
			if (columnsValid === rule.columnConditions.length) {
				beaconHe[jobId.split("_")[2]] = table.rows[i];
				return true;
			}
		}
		return false;
	}

	function validateRules(he, rule, de, jobId) {

		var condition = rule.condition;
		var value = rule.value;

		var elValue = GmCXt.getElementText(he);

		if (de && de.pathFromLabel && !GmCXt.isEmpty(de.targetInfo) && GmCXt.isEmpty(de.targetInfo.text)) {
			// Using "primary element" text not the "label" text for text based rules from version 2020.6.31.02
			he = GmCXt.dom.finder(de);
			elValue = he.textContent;
		}

		var isValid = GmCXt.ruleEngine.validateElRule(condition, value, he, elValue, GmCXt.legacyWildChar(de.version));

		if (rule.type === "Select Table" && isValid) {
			return validateColumnRules(he, rule, jobId);
		}
		return isValid;
	}

	function addAttrsForIntel(el, req) {

		var tourId = req.data.tourId;
		var stepId = req.data.requestId;
		var wfId = el.getAttribute('wfId');

		var jobId = "_" + req.data.requestId;
		var job = jobs[jobId];

		if (!wfId) {
			wfId = [];
		} else {
			wfId = GmCXt.parseJSON(wfId);
		}

		//check if step event already added
		var eventExist = false;
		wfId.forEach(function(m) {
			if (m.stepId == stepId) {
				GmCXt.log(28, "EVENT EXIST " + GmCXt.stepLog(stepId, tourId));
				eventExist = true;
				return;
			}
		});

		if (eventExist) return;

		wfId.push({
			tourId: tourId,
			stepId: stepId
		});

		job.req.data.wfId = wfId;

		el.setAttribute('wfId', JSON.stringify(wfId));
	}

	function removeActiveEvents(elem) {

		mg$(elem).off("mouseup", onMouseUpRightClickElement);
		var aTags = mg$(elem).find('a');

		if (aTags.length === 1) {
			aTag = aTags[0];
			mg$(aTag).off("mousedown touchstart", onMouseUpElement);
			mg$(aTag).off("mouseup touchend", onMouseUpElement);
		} else {
			mg$(elem).off("mouseup touchend", onMouseUpElement);
			mg$(elem).off("mousedown touchstart", onMouseUpElement);
		}
		mg$(elem).off("click", onMouseUpElement);
		mg$(elem).off("change", onChangeElement);
		mg$(elem).off("mouseover", onMouseOverElement);
	}

	pub.triggerDomClick = function(d) {

		var jobId = "_" + d.requestId;
		var job = jobs[jobId];

		if (job && job.resp) {
			var req = job.req;
			GmCXt.triggerClick(job.resp.he, req);
		}
	};

	function addToTriggeredList(sId, val) {
		autoTriggered[sId] = val;
	}

	pub.removeBeaconJob = function(tourId) {

		var jobId = "_" + tourId;
		var job = jobs[jobId];
		if (job) {
			var rd = job.req.data;
			var tourTitle = rd.tourTitle;
			var beaconImg = mg$(".mgPlayerJSTest_beacon-icon.mgPlayerJSTest_beacon-icon-tour-" + rd.tourId);

			removeBeacon(jobId, rd, beaconImg, tourTitle);
		} else {
			var beaconImg = mg$(".mgPlayerJSTest_beacon-icon.mgPlayerJSTest_beacon-icon-tour-" + tourId);

			if (beaconImg.length) {
				removeBeacon(jobId, null, beaconImg, null, tourId);
			}

		}
	};

	function toggleTooltipAndValidation(options, show) {
		var toggle = false;
		toggle = !GmCXt.isEmpty(options.guidanceMessage);

		if (show) {
			toggle = toggle && options.hideAfter === 'showAlways';
		}
		return toggle;
	}

	pub.clearIframeWatch = function() {
		for (var id in jobs) {

			var job = jobs[id];

			if (job.state === 'watchSmarttip') {

				var data = job.req.data;
				if (data.settings.smartTip && data.settings.smartTip.type === 'validation') {
					GmCXt.hideValidationTooltip(data.step);
				}
				var smartTip = data.settings.smartTip;
				GmCXt.updateOnScreenTooltipGuideInfo(data.tour, data.tour.tour_id, id.slice(1), false, smartTip);
			}
		}
	};

	return pub;
})();
// This code is executed only once, immediately after content script is injected
// into a webpage.

GmCXt.bootScript = function() {

	GmCXt.domElStore = [];

	// Add a unique identifier to each content script loaded in various frames.
	if (GmCXt.id === undefined) {
		var idPref = 'GmCXt-';
		if (window.self !== window.top) {
			idPref = "I" + idPref;
		}
		GmCXt.id = idPref + parseInt(Math.random() * 100000);
	}

	// Returns a function, that, as long as it continues to be invoked, will not
	// be triggered. The function will be called after it stops being called for
	// N milliseconds. If `immediate` is passed, trigger the function on the
	// leading edge, instead of the trailing.
	GmCXt.debounce = function(func, wait, immediate) {
		var timeout;
		return function() {
			var context = this,
				args = arguments;
			var later = function() {
				timeout = null;
				if (!immediate) func.apply(context, args);
			};
			var callNow = immediate && !timeout;
			clearTimeout(timeout);
			timeout = GmCXt.timeout(later, wait);
			if (callNow) func.apply(context, args);
		};
	};

	if(window.self === window.top) {
		// Global window message listener to initialise ports communication
		window.addEventListener('message', function(e) {
			if (e.data && typeof e.data === 'string') {
				if(e.data.includes('action":"myguide_action:paste_tour_from_myguide_library')){
					if (!GmCXt.FT.isPlayer)  GmCXt.listenTopWinCreator(e);
				}
			}
			if (!e.ports.length) return;
			switch (e.data) {
				case 'Guide:sidePanel':
					GmCXt.sidePanelPort = e.ports[0];
					if (GmCXt.FT.isPlayer) {
						GmCXt.sendMessageToApp("mgPlayerJSTest_action:update_guideme_config");
						GmCXt.sidePanelPort.onmessage = GmCXt.listenTopWinPlayer;
					} else {
						GmCXt.sidePanelPort.onmessage = GmCXt.listenTopWinCreator;
					}
					break;

				case 'Guide:toolbarPanel':
					GmCXt.toolbarPanelPort = e.ports[0];
					GmCXt.toolbarPanelPort.onmessage = GmCXt.listenTopWinCreator;	
					break;

				case 'Guide:workerSelf':
					GmCXt.workerSelfPort = e.ports[0];
					GmCXt.workerSelfPort.onmessage = GmCXt.FT.isPlayer ? GmCXt.listenTopWinPlayer : GmCXt.listenTopWinCreator;
					break;

				case 'Guide:audioIframe':
					GmCXt.audioPort = e.ports[0];
					GmCXt.audioPort.onmessage = GmCXt.FT.isPlayer ? GmCXt.listenTopWinPlayer : GmCXt.listenTopWinCreator;
					break;
			}
			if (e.data && typeof e.data === 'string' && e.data.indexOf('Guide:newIframe-') !== -1) {
				var iframeId = e.data.substr(16);
				GmCXt.iframePorts[iframeId] = e.ports[0];
				GmCXt.iframePorts[iframeId].onmessage = GmCXt.FT.isPlayer ? GmCXt.listenTopWinPlayer : GmCXt.listenTopWinCreator;
				GmCXt.iframeEls[iframeId] = e.source;
				GmCXt.requestHandler.newIframeFound(iframeId);
			}
		});
	}
	
	//Need to delay this or send from another file after GmCXt.main() has completed loading since its top-window receiver is in that function
	var sendIframeInitialiseMessage = function() { 
		if (!GmCXt.isMyGuideIframe(GmCXt._location().href) && window.self !== window.top) {
			if (mg$(window).width() >= 1 || mg$(window).height() >= 1) {

				var msg = 'Guide:newIframe-' + GmCXt.id;
				if (window.parent !== window.top) {
					window.parent.postMessage(msg, '*', [GmCXt.msgChannel.port2]);
				} else {
					window.top.postMessage(msg, '*', [GmCXt.msgChannel.port2]);
				}
			}	
		}
	};

	GmCXt.timeout(sendIframeInitialiseMessage,GmCXt.t_.ms5);

	mg$(window).on('visibilitychange', function() {
		var pi = GmCXt.playerI;
		if (pi) {
			if (GmCXt.currentIframeId === GmCXt.id) {
				GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:close_step');
			}
		}
		GmCXt.highlighter.clearIframeWatch();
	});

	if (GmCXt.FT.creatorApp) {
		mg$(window).on('keyup', function(e) {
			if (e.which === 16) {
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:toggle_capture_and_navigate_tool:inform');
			}
		});
	}

	GmCXt.clickEl = null;

	GmCXt.onClickOnPage = function(e) {

		if (!GmCXt.checkPrecedence()) {
			return;
		}

		var el = mg$(e.target);

		// Disable Insights: click and workflow tracking
		//if (GmCXt.isPlayer() && GmCXt.domainInApp && GmCXt.trackerUtil && GmCXt.trackerUtil.pageTracking) {
			//GmCXt.mutationObserver(e.target);
		//}

		if (!GmCXt.isClickInStepPopup(e) && !GmCXt.isClickInSurveyPopup(e)) {
			var d = GmCXt.highlighter.onDocumentClick(e);
			if (GmCXt.playerI) {
				GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:click_event_for_guide', d);
			}

			GmCXt.highlighter.onDocumentClickForTooltip(e);
		}

		if (GmCXt.user && !GmCXt.isGmElement(el) && !GmCXt.isMyGuideAction()) {
			if (window.self === window.top) {
				GmCXt.triggerChangeListeners('page_click');
			} else {
				GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:page_clicked');
			}

			if (GmCXt.FT.isPlayer) {
				var tagDetails = GmCXt.isTagged(el);
				if(tagDetails) {
					var data = GmCXt.getTagStepAndTourId(tagDetails);
					if (window.self === window.top) {
						GmCXt.trackerV1.trackFeatureClick(data);
					} else {
						GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:track_feature_click', data);
					}
				}
			}
		}
	};

	if (!GmCXt.isMyGuideIframe(GmCXt._location().href)) {
		window.addEventListener("mouseup", GmCXt.onClickOnPage, true);
		document.addEventListener('mousedown', GmCXt.onDocumentMouseDown);
	}

	if (window.self !== window.top) {

		GmCXt.msgChannel.port1.onmessage = GmCXt.FT.isPlayer ? GmCXt.listenIframePlayer : GmCXt.listenIframeCreator;
	
		// Global window message listener to initialise ports communication
		window.addEventListener('message', function(e) {
			if (!e.ports.length) return;

			if (e.data && typeof e.data === 'string' && e.data.indexOf('Guide:newIframe-') !== -1) {
				var iframeId = e.data.substr(16);
				GmCXt.iframePorts[iframeId] = e.ports[0];
				GmCXt.iframePorts[iframeId].onmessage = GmCXt.FT.isPlayer ? GmCXt.listenIframePlayer : GmCXt.listenIframeCreator;
				GmCXt.iframeEls[iframeId] = e.source;
				window.parent.postMessage(e.data, "*", e.ports);
			}
		});
	}

	window.addEventListener('error', function(event) {
		if (event && event.target) {
			GmCXt.onImageLoadError(mg$(event.target));
		}
	}, true);
};

try {
	if (GmCXt._location().href.indexOf('echosign.com') !== -1 || GmCXt.isWestpacOneUI()) {
		console.dir("MG script is not loaded in " + GmCXt._location().href);
	} else {
		GmCXt.bootScript();
	}
} catch (e) {
	GmCXt.bootScript();
}
/**
	* @file DOM selector module
	* @author Nilesh Pachpande
	*/

GmCXt.selector = function(options) {

	options = options || {};

	var pub = {};

	var self = {
		cb: options.cb || false,
		id: 'r_' + Math.floor(Math.random() * 1000),
		elements: {},
		frame: options.frame,
		identifier: options.identifier,
		type: options.type
	};

	var shadowRoots = [];

	var currentHe;

	pub.status = 'inactive';

	pub.documentClickEventFlag = false;

	pub.start = function() {
		pub.status = 'active';
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:dom_selctor_started');
		showOutline();
		createOutlineElements();
		subscribeEvents();
	};

	pub.stop = function() {
		GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:dom_selctor_stopped');
		unsubscribeEvents();
	};

	pub.setCurrentHe = function() {
		self.he = GmCXt.currentHe;
	};

	pub.removeOutline = function() {
		mg$('.mgPlayerJSTest_select-tool-outline').remove();
	};

	pub.removeOutlineNew = function() {
		mg$('.mgPlayerJSTest_new-outline').remove();
	};

	pub.hideOutline = function() {
		mg$('.mgPlayerJSTest_select-tool-outline').hide();
	};

	pub.clearBlackoutArea = function() {
		mg$('.mgPlayerJSTest_selector-blackout').remove();
	};

	pub.removeBlackoutOutline = function() {
		mg$('.mgPlayerJSTest_blackout-tool-outline').remove();
	};

	pub.removeRulesEngineOutline = function() {
		mg$('.mgPlayerJSTest_rules-engine-tool-outline').remove();
	};

	pub.getElementPrecision = function(criteria) {
		var el = null;

		if (self.labelData && self.labelData.labelHe && self.labelData.pathFromLabel) {
			el = GmCXt.dom.getElement(self.labelData.labelHe, criteria, self.frame);
			if (el) {
				el.pathFromLabel = self.labelData.pathFromLabel;
				el.targetInfo = self.labelData.targetInfo;
				el.customSettings = self.customSettings;
			}
		} else {
			el = GmCXt.dom.getElement(self.he, criteria, self.frame);
		}

		return el;
	};

	pub.getElemenetUsingJQ = function(jQ, openPanel) {
		var checkjQ = validateJQuery(jQ);
		var message = {
			found: false,
			openPanel: openPanel
		};
		if (checkjQ.he) {
			self.he = checkjQ.he;
			createOutline(checkjQ.he);
			showOutline();

			if (openPanel) sendResponse(jQ);

			var message = {
				found: true,
				openPanel: openPanel
			};
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:clear_invalid_jQuery_message;action:inform', message);
		}

		if (checkjQ.nodeCount > 1) {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:show_unique_elem_not_found;action:inform');
		}
	};

	function showChangedElement(he) {
		createOutlineElements();
		createOutline(he);
		showOutline();
		unsubscribeEvents();
		return pub.getElData(he);
	}

	pub.expandElementSelection = function(he) {
		if (!currentHe && he) {
			currentHe = he;
		}

		if (currentHe) {
			self.labelData = null;
			self.he = currentHe.parentElement;
			if (!currentHe.hasAttribute('gm_visited')) {
				currentHe.setAttribute('gm_visited', 'true');
			}
		}
		self.he.setAttribute('gm_visited', 'true');

		return showChangedElement(self.he);
	};

	pub.narrowElementSelection = function(he) {
		if (currentHe) {
			self.he = currentHe;
		} else if (he) {
			self.he = he;
		}

		if (self.he.childElementCount === 1 || mg$(self.he).children('[gm_visited="true"]').length) {
			if (self.he.hasAttribute("gm_visited")) {
				self.he.removeAttribute("gm_visited");
			}

			self.labelData = null;

			if (mg$(self.he).children('[gm_visited="true"]').length) {
				self.he = mg$(self.he).children('[gm_visited="true"]')[0];
			} else
				self.he = self.he.children[0];

		}
		return showChangedElement(self.he);

	};

	function subscribeEvents() {
		self.elementSelected = false;

		unsubscribeEvents();
		window.addEventListener('click', stopEventPropagationforClickEvent, true);
		window.addEventListener('mousedown', documentClickEvent, true);
		window.addEventListener('mouseup', stopEventPropagation, true);

		window.addEventListener('blur', stopEventPropagation, true);
		window.addEventListener('focusout', stopEventPropagation, true);
		window.addEventListener('focus', stopEventPropagation, true);

		var el = 'body';
		var siblings = mg$('body').siblings();
		var skip = ['STYLE', 'HEAD'];
		for (var i = 0; i < siblings.length; i++) {
			var node = siblings[i];
			if (!(skip.includes(node.nodeName) || GmCXt.isMyGuideEl(node))) {
				el = 'html';
				break;
			}
		}

		if (GmCXt.stepReq && GmCXt.stepReq.action && GmCXt.stepReq.action.includes('type:automation')) {
			el = 'html';
		}

		mg$(document).on('mouseenter', onBodyMouseEnter)
			.on('mouseleave', hideOutline);

		mg$(el).on('mouseenter', onBodyMouseEnter)
			.on('mousemove mouseover', updateOutlinePosition)
			.on('mouseleave', hideOutline)
			.on('keyup', stopOnEscape)
			.one('mousemove', onBodyMouseEnter);

	}

	var removeAllShadowRootEvents = function() {
		for (var i = 0; i < shadowRoots.length; i++) {
			shadowRoots[i].shadowRoot.removeEventListener('mousemove', updateOutlinePosition);
		}
	};

	function unsubscribeEvents() {
		self.elementSelected = false;

		window.removeEventListener('click', stopEventPropagationforClickEvent, true);
		window.removeEventListener('mousedown', documentClickEvent, true);
		window.removeEventListener('mouseup', stopEventPropagation, true);

		window.removeEventListener('blur', stopEventPropagation, true);
		window.removeEventListener('focusout', stopEventPropagation, true);
		window.removeEventListener('focus', stopEventPropagation, true);
		window.removeEventListener('mouseout', stopEventPropagation, true);

		var el = 'body';

		mg$(document).off('mouseenter', onBodyMouseEnter)
			.off('mouseleave', hideOutline);

		mg$(el).off('mouseenter', onBodyMouseEnter)
			.off('mousemove mouseover', updateOutlinePosition)
			.off('mouseleave', hideOutline)
			.off('keyup', stopOnEscape);

		removeAllShadowRootEvents();
	}

	function onBodyMouseEnter() {
		if (!GmCXt.jQElementFound && !GmCXt.enableNavigateTool) {
			mg$('.mgPlayerJSTest_select-tool-outline').show();

			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:clear_outline;action:inform', {
				scriptId: GmCXt.id
			});
		}
	}

	function stopOnEscape(e) {
		if (e.keyCode === 27) {
			pub.stop();
			GmCXt.displayWidget();

			GmCXt.clearStepReqObj();

			GmCXt.timeout(function() {
				GmCXt.toggleStepSelectionToolbar(false);
			}, 1000);

			pub.removeOutline();
			pub.clearBlackoutArea();
			GmCXt.selectorTool.status = 'inactive';
		}
	}

	function hideOutline() {
		if (!GmCXt.jQElementFound)
			mg$('.mgPlayerJSTest_new-outline').hide();
	}

	function showOutline() {
		mg$('.mgPlayerJSTest_select-tool-outline').show();
	}

	function stopEventPropagationforClickEvent(e) {

		if (!pub.documentClickEventFlag) {
			documentClickEvent(e);
		}

		stopEventPropagation(e);
	}

	function stopEventPropagation(e) {
		if (GmCXt.enableNavigateTool === true) {
			return;
		}

		var stop = true;

		if (stop) {
			e.preventDefault();
			e.stopImmediatePropagation();
		}
	}

	function clickOnToolbar(e) {

		if (e.target.className === 'mgPlayerJSTest_toolbar-tooltip-capture' ||
			e.target.className === 'mgPlayerJSTest_toolbar-tooltip-navigation' ||
			e.target.className === 'mgPlayerJSTest_toolbar-tooltip-title' ||
			e.target.className === 'mgPlayerJSTest_toolbar-tooltip-instruction' ||
			e.target.className === 'mgPlayerJSTest_toolbar-tooltip-delay-capture') {
			return true;
		} else return false;
	}

	function clickOnTooltip(e) {

		if (e.target.className === 'ok-got-it' ||
			e.target.className === 'mgPlayerJSTest_toolbar-close') {
			return true;
		} else return false;
	}

	function documentClickEvent(e) {
		
		if (!GmCXt.user && !(GmCXt.stepReq.isDesktop && GmCXt.stepReq.isWebHowto)) {
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:stop_inline_step_selection_mode');
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:close_inline_step_panel');
			return;
			
		}

		if (GmCXt.enableNavigateTool === true) return;

		if (clickOnToolbar(e)) return;

		if (clickOnTooltip(e)) {
			GmCXt.sendMessageToParentWindow('mgPlayerJSTest_action:hide_guideme_toolbar_tooltip');
			return;
		}

		var stop = true;

		if (stop) {
			e.preventDefault();
			e.stopImmediatePropagation();
		}

		if (!self.he) return;

		if (self.elementSelected) return;

		self.elementSelected = true;

		GmCXt.timeout(function() {
			pub.stop();
		}, 1000);

		window.addEventListener('mouseout', stopEventPropagation, true);

		self.he = GmCXt.skipTags(self.he);
		if (self.type === 'table' && self.he.tagName != 'TABLE') {
			skipToTableTag();
		}

		bringElementInViewport();

		sendResponse();

		pub.documentClickEventFlag = true;
	}

	function skipSlot() {
		if (self.he.tagName === 'SLOT') {
			if (self.he.parentNode instanceof ShadowRoot) {
				self.he = self.he.parentNode.host;
			} else {
				self.he = self.he.parentNode;
			}
		}
	}

	function skipToTableTag() {
		var he = self.he;
		var i = 0;
		while (i < 15 && he.parentNode) {
			if (!he.parentNode) break;
			if (he.tagName === 'TABLE') {
				self.he = he;
				break;
			}
			he = he.parentNode;
		}
	}

	function validateJQuery(jQ) {
		var he;
		var found = false;
		var len = 0;
		try {
			var nodes = mg$(jQ);
			len = nodes.length;
			if (!len) {
				if (jQ.indexOf(':visible') === -1) {
					jQ += ':visible';
				}
				nodes = mg$(jQ);
			}

			if (GmCXt.isOne(nodes)) {
				he = nodes[0];
				found = true;
			}
		} catch (error) {
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:clear_invalid_jQuery_message;action:inform', {
				found: found
			});
		}
		var returnObj = {
			he: he,
			nodeCount: len,
			found: found
		};
		return returnObj;
	}

	function checkSfSelectEl(el) {
		if (GmCXt.checkSalesForceSite() && el.customSettings && el.customSettings.salesforce) {
			return el.customSettings.salesforce.customSelect;
		}
	}

	function findLabelElement(he, el) {

		var data = null;
		var workdayInput = GmCXt.checkWorkdayTextfield(el);
		var customSelect = checkSfSelectEl(el);
		var isSFTextArea = GmCXt.dom.sfTextArea(el);
		var origHe = he;

		if ((he.tagName === 'INPUT' && (he.type !== 'submit' && he.type !== 'button')) ||
			he.tagName === 'SELECT' ||
			he.tagName === 'TEXTAREA' ||
			he.tagName === 'BUTTON' || workdayInput || customSelect || isSFTextArea) {

			var labelElements = mg$('label:visible');
			var siblings = mg$(he).siblings();
			var labelSiblings = siblings.filter(labelElements);
			var labelChildren = siblings.find(labelElements);

			var pathFromLabel = [];
			var labelHe = null;
			var pathFromChildLabel = 0;

			if (mg$(he).find('label').length === 1 && workdayInput &&
				mg$(he).find('input, select, TEXTAREA').length === 1) {
				labelHe = mg$(he).find('label')[0];

				var tempLabel = labelHe;
				while (tempLabel && tempLabel !== he) {
					pathFromChildLabel++;
					tempLabel = tempLabel.parentNode;
				}
			}

			if (!pathFromChildLabel) {

				if (labelSiblings.length === 1) {
					labelHe = labelSiblings[0];
					pathFromLabel.push(-1);
				} else if (labelChildren.length === 1) {
					labelHe = labelChildren[0];
					pathFromLabel.push(-1);
				} else {
					var parent = null;
					var obj = {};
					var tempHe = null;

					if (checkHost() && (customSelect || isSFTextArea)) {
						obj = labelElForSalesForce(he, customSelect, isSFTextArea);
						pathFromLabel = obj.pathFromLabel;
						he = obj.he;

					} else if (GmCXt.checkWorkdaySite() && workdayInput) {
						var obj = labelPathForWorkday(he, el, parent);
						pathFromLabel = obj.pathFromLabel;
						he = obj.he;
					}

					if (!pathFromLabel.length) {
						var level = checkHost() ? 7 : 4; // Find label up to level 4 || 7(for salesforce) 
						tempHe = origHe;

						while (!tempHe.previousElementSibling && level > 0) {
							parent = tempHe.parentNode;
							level--;
							var index = getIndexInParent(parent, tempHe);
							if (index !== -1) {
								pathFromLabel.push(index);
								tempHe = parent;
							}
							if (checkHost() && tempHe.tagName === 'TD') {
								break;
							}
						}
					}

					if (pathFromLabel.length && !tempHe) {
						tempHe = he;
					}

					if (tempHe && mg$(tempHe).siblings().length > 0 && tempHe.previousElementSibling) {
						labelHe = tempHe.previousElementSibling;
						if (workdayInput || isSFTextArea) {

							labelHe = mg$(labelHe).find('label')[0] || labelHe;
						}
					}
				}

			}
		}

		if ((pathFromLabel && pathFromLabel.length) || pathFromChildLabel) {

			if (!pathFromLabel.length) {
				pathFromLabel = pathFromChildLabel;
			}

			if (labelHe && mg$(labelHe).is(':visible') &&
				(GmCXt.validateText(labelHe.textContent) ||
					GmCXt.validateText(escapeNonTextNodes(labelHe)))) {
				data = {
					targetInfo: {
						tagName: origHe.tagName,
						type: origHe.type
					},
					labelHe: labelHe,
					pathFromLabel: pathFromLabel
				};
			}
		}

		return data;
	}

	function escapeNonTextNodes(labelHe) {
		var nodeList = labelHe.childNodes;
		var length = nodeList.length;
		var str = '';
		var i = 0;
		var text = false;

		while (i < length) {
			if (nodeList[i].nodeType === Node.TEXT_NODE) {
				str += nodeList[i].nodeValue;
				text = true;
			} else if (text) {
				break;
			}
			i++;
		}
		return str.trim();
	}

	function checkHost() {
		var host = GmCXt._location().hostname;

		return host.indexOf("csod.com") !== -1 ||
			host.indexOf("salesforce.com") !== -1 ||
			host.indexOf("force.com") !== -1;
	}

	function labelElForSalesForce(he, customSelect, isSFTextArea) {
		var pathFromLabel = [];
		var level = 7;

		function getParent(he) {
			var parent = he.parentNode;
			level--;
			var index = getIndexInParent(parent, he);
			if (index !== -1) {
				pathFromLabel.push(index);
				he = parent;
			}
			return he;
		}

		if (isSFTextArea) {
			level = 5;
			while (he && !he.matches('.blockDiv') && level > 0) {
				level--;
				he = he.parentNode;
			}
			if (he && he.matches('.blockDiv')) {
				he = getParent(he);
			}

		} else {
			if (customSelect) {
				switch (customSelect) {
					case 1:
						while (!he.matches('.slds-form-element__control') && level > 0) {
							he = getParent(he);
						}
						break;

					case 2:
						while (!he.matches('.uiInputDate') && level > 0) {
							he = getParent(he);
						}
						break;

					case 3:
						while (!he.matches('.uiMenu') && !he.previousElementSibling &&
							level > 0) {
							he = getParent(he);
						}
						break;

					case 4:
						while ((!he.matches('.contentWrapper') || !he.matches('.slds-form-element')) && level > 0) {
							level--;
							he = he.parentNode;
							if (he && he.matches('.contentWrapper') || he.matches('.slds-form-element')) {
								he = getParent(he);
								break;
							}
						}
						break;
				}
			}
		}

		var obj = {
			pathFromLabel: pathFromLabel,
			he: he
		};
		return obj;
	}

	function getPathFromLabel(he, parent) {
		var pathFromLabel = [];
		while (!he.previousElementSibling && checkOffset(he)) {
			parent = he.parentNode;
			var index = getIndexInParent(parent, he);
			if (index !== -1) {
				pathFromLabel.push(index);
				he = parent;
			}
		}

		var returnObj = {
			pathFromLabel: pathFromLabel,
			he: he
		};

		return returnObj;
	}

	function labelPathForWorkday(he, el, parent) {
		var workday = el.customSettings.workday;
		var pathFromLabel = [];
		var obj = {};
		if (workday.isTextarea) {
			var level = 5;
			while (!he.previousElementSibling || (he.previousElementSibling.tagName !== 'TEXTAREA') && level > 0) {
				parent = he.parentNode;
				level--;
				var index = getIndexInParent(parent, he);
				if (index !== -1) {
					pathFromLabel.push(index);
					he = parent;
				}
			}
			if (he.previousElementSibling.tagName === 'TEXTAREA') {
				parent = he.parentNode;
				var index = getIndexInParent(parent, he);
				if (index !== -1) {
					pathFromLabel.push(index);
					he = parent;
				}
				var obj = getPathFromLabel(he, parent);
				pathFromLabel = pathFromLabel.concat(obj.pathFromLabel);
			}

		} else if (workday.isWDCustomSelect) {

			var level = 8;

			while (mg$(he).attr('data-automation-id') !== "multiselectInputContainer" &&
				mg$(he).find('[data-automation-id= "multiselectInputContainer"]').length !== 1 &&
				level > 0) {
				parent = he.parentNode;

				level--;
				he = parent;
			}

			level = 8;
			while (!he.previousElementSibling && level > 0) {
				parent = he.parentNode;
				var index = getIndexInParent(parent, he);
				if (index !== -1) {
					pathFromLabel.push(index);
					he = parent;
				}
			}

			var obj = getPathFromLabel(he, parent);
			pathFromLabel = pathFromLabel.concat(obj.pathFromLabel);

		} else {
			if (he.previousElementSibling && he.previousElementSibling.type === 'checkbox') {
				he = he.parentNode;
			}
			var obj = getPathFromLabel(he, parent);
			pathFromLabel = obj.pathFromLabel;
		}

		var returnObj = {
			pathFromLabel: pathFromLabel,
			he: obj.he
		};

		return returnObj;
	}

	function checkOffset(he) {
		var parent = he.parentNode;
		var Xdiff = Math.abs(mg$(parent).offset().top - mg$(he).offset().top);
		var Ydiff = Math.abs(mg$(parent).offset().left - mg$(he).offset().left);

		return Xdiff < 30 && Ydiff < 30;
	}

	function getIndexInParent(parent, he) {
		if (parent && parent.childNodes) {
			for (var i = 0, len = parent.childNodes.length; i < len; ++i) {
				if (parent.childNodes[i] === he) {
					return i;
				}
			}
		}
		return -1;
	}

	function scoreUpdate(he, el) {
		m = el.meta;
		c = el.criteria;
		if (m.score < 3) {
			c.jquery_selector = m.textNode.jquery_selector;
			m.jqueryInfo = GmCXt.dom.getJqueryEqInfo(he, c.jquery_selector);
			m.score = GmCXt.dom.getCustomQueryScore(m.jqueryInfo);
		}
		return el;
	}

	function getText(he, el) {

		var textData = {};

		if (self.identifier === "rules-engine-request") {
			textData.ruleElText = GmCXt.getElementText(he);
		}

		var text = he.textContent || he.placeholder;

		if (!text && (he.type === 'submit' || he.type === 'button')) text = he.value;

		if (text) {
			text = text.trim();
		}

		if (GmCXt.checkWorkdayTextfield(el, self.identifier) || checkSfSelectEl(el) || GmCXt.dom.sfTextArea(el)) {
			text = "";
		}

		textData.elText = text;

		return textData;
	}

	pub.getElData = function(he) {

		var el = GmCXt.dom.getElement(he, null, self.frame);

		if (he.jQuery) {
			GmCXt.dom.setDefaultCriteria();
			GmCXt.dom.matchCriteria = {
				precision_type: GmCXt.DOM_CRITERIA_CUSTOM,
				precision_level: "High",
				jquery_selector: he.jQuery
			};
			el = GmCXt.dom.getElement(he, GmCXt.dom.matchCriteria, self.frame);
		}

		mg$(self.elements.score).remove();

		var textData = getText(he, el);

		self.labelData = null;

		if (!textData.elText || he.tagName === "SELECT") self.labelData = findLabelElement(he, el);

		var title = '';

		if (self.labelData) {
			var pos = mg$.extend(true, {}, el.position);
			var customSettings = el.customSettings;

			el = GmCXt.dom.getElement(self.labelData.labelHe, null, self.frame);
			el.position = pos;
			el.pathFromLabel = self.labelData.pathFromLabel;
			el.targetInfo = self.labelData.targetInfo;
			el.customSettings = customSettings;

			if (textData.ruleElText) el.targetInfo.text = textData.ruleElText;

			if (GmCXt.checkWorkdayTextfield(el)) {
				el = scoreUpdate(self.labelData.labelHe, el);
			}

			title = getTitleSuggestionForLabel(self.labelData.labelHe);

		} else {
			if ((he.tagName === "SELECT" && textData.elText) || self.type === 'variable') {
				el.criteria.ignoreText = true;
			}
			if (self.identifier === "rules-engine-request" && textData.ruleElText) {
				el.targetInfo = {
					text: textData.ruleElText
				};
			}

			title = getTitleSuggestion();
		}

		el.elOptions = GmCXt.getElOptions(he);

		var data = {
			id: self.id,
			element: el,
			titleSuggestion: title,
			he: he
		};

		currentHe = he;
		if (!self.identifier) {
			GmCXt.currentHe = currentHe;
		}
		mg$('.mgPlayerJSTest_new-outline').removeClass('mgPlayerJSTest_new-outline');
		return data;
	};

	function sendResponse(jQuery) {
		function r_cb() {
			if (self.cb.length === 2) {
				var autoCorrectData = {
					he: data.he,
					frame: self.frame
				};
				self.cb(data, autoCorrectData);
			} else {
				self.cb(data);
			}
		}

		var he = self.he;
		if(jQuery) he.jQuery = jQuery;
		var data = pub.getElData(he);
		var inTopWindow = data.element.meta.inTopWindow;

		if (inTopWindow) {
			r_cb();
		} else {
			setTimeout(function() {
				r_cb();
			}, 600);
		}
	}

	function getTitleSuggestionForLabel() {
		var text = self.labelData.labelHe.textContent.trim();

		if (!GmCXt.validateText(text) && GmCXt.validateText(escapeNonTextNodes(self.labelData.labelHe))) {
			text = escapeNonTextNodes(self.labelData.labelHe);
		}

		var prefix = "";
		if (self.he) {
			if (self.he.tagName === "INPUT" || self.he.tagName === 'TEXTAREA') {
				prefix = "Enter ";
			} else if (self.he.tagName === "SELECT") {
				prefix = "Select ";
			}
		}

		return {
			prefix: prefix,
			text: text
		};
	}

	// Brings elements in viewport which are partly visible
	function bringElementInViewport() {
		try {
			if (!mg$(self.he).is(':visible') && mg$(self.he).height() < screen.height) {
				self.he.scrollIntoView();
				var rect = self.he.getBoundingClientRect();

				// To vertically center align the selected element
				var scrollBy = (mg$(window).height() - rect.height) / 2;
				if (scrollBy > 0 && scrollBy !== rect.top) {
					window.scrollBy(0, -scrollBy);
				}
			}
		} catch (e) {}
	}

	function getTitleSuggestion() { 
		if (!GmCXt.label) GmCXt.label = GmCXt.getCreatorLabels();

		var text = '';
		var prefix = '';

		if (self.he) {

			if ((self.he.tagName === 'INPUT' && self.he.type === 'text') ||
				self.he.tagName === 'TEXTAREA') {

				if (self.he.placeholder) {
					text = self.he.placeholder;
				} else {
					text = self.he.name;
					prefix = GmCXt.label.preEnter;
				}

			} else if ((self.he.tagName === 'INPUT' || self.he.tagName === 'BUTTON') &&
				(self.he.type === 'button' || self.he.type === 'submit')) {

				prefix = GmCXt.label.preClickOn;
				text = self.he.value || self.he.textContent;

			} else if (self.he.tagName === 'INPUT' && (self.he.type === 'checkbox' || self.he.type === 'radio')) {

				prefix = GmCXt.label.select;
				text = self.he.textContent;

			} else if (self.he.tagName === 'SELECT' && self.he.type === 'select-one') {
				prefix = GmCXt.label.select;
				text = self.he.name;

			} else if (self.he.name) {
				prefix = GmCXt.label.preClickOn;
				text = self.he.name;

			} else if (self.he.textContent) {
				prefix = GmCXt.label.preClickOn;
				text = self.he.textContent;
			} 

			if(text === '' && prefix === ''){
				prefix =  GmCXt.label.preClickOn;
				text ='';
			}

			text = text.trim().substring(0, 230);
		}

		return {
			prefix: prefix,
			text: text
		};
	}

	var showingScoreOf = null;

	function setConfidenceScoreCss(color, score) {
		mg$('.mgPlayerJSTest_scoreEl').css({
			boxShadow: "#a0a0a0 2px 2px 5px 0px",
			display: "block",
			position: "relative",
			fontSize: "12px",
			width: "40px",
			height: "40px",
			"border-radius": "50%"
		});

		mg$('.mgPlayerJSTest_figcaption').css({
			"text-align": "center",
			color: color,
			width: "100%",
			position: "absolute",
			left: "0",
			top: "32%",
			zIndex: "2",
			"font-family": "Arial",
			"font-weight": "bold"
		});

		mg$('.mgPlayerJSTest_scoreEl svg').css({
			display: "block",
			height: "100%",
			width: "100%",
			position: "absolute",
			top: "0",
			left: "0",
			overflow: "visible"
		});

		if (mg$('.mgPlayerJSTest_circle').css('stroke-dashoffset') === '0px') {
			mg$('.mgPlayerJSTest_circle').css({
				stroke: color,
				fill: 'rgba(0,0,0,0)',
				'stroke-width': '15%',
				'stroke-dashoffset': '25'
			});
		} else {
			mg$('.mgPlayerJSTest_circle').css({
				background: '#fff',
				"animation": "mgPlayerJSTest_pie" + score + " 4s infinite ease both",
				"-webkit-animation": "mgPlayerJSTest_pie" + score + " 2s infinite ease both"
			});
		}
	}

	function showConfidenceScore(he, pos) {
		function getElAttrHtml(){
			var html = '';
			for (var key in el.meta.elAttributes) {
				if(key && (key === "tagName" || key === "class" || key === "value")){
			  		html = html+'<div> <div class="mgPlayerJSTest_element-attr-key">'+key+'</div> <div class="mgPlayerJSTest_element-attr-val">'+el.meta.elAttributes[key]+'</div></div>';
			  	}
			}
			return html;
		}

		if (showingScoreOf === he) return;

		self.elements.score.html("");
		var hoverEl = true; // Do not log every element on hover
		var el = GmCXt.dom.getElement(he, null, self.frame, hoverEl);
		var sc = GmCXt.getMatchConfidence(el.meta.score);
		var el_attr_html = getElAttrHtml(el.meta.elAttributes);

		var scoreEl = '<div class="mgPlayerJSTest_element-details-wrapper">'+
						'<div class="mgPlayerJSTest_element-attributes">'+
							el_attr_html +
						'</div>'+
						'<div class="mgPlayerJSTest_scoreEl">' +
							'<figcaption class="mgPlayerJSTest_figcaption" style="color:' + sc.color + ';">' + sc.val + '</figcaption>' +
							'<svg viewBox="0 0 40 40">' +
								'<circle stroke="#f3f3f3" stroke-width="15%" fill="none" cx="20" cy="20" r="15"/>' +
								'<circle class="mgPlayerJSTest_pie1 ' + sc.class_ + ' mgPlayerJSTest_circle" cx="20" cy="20" r="15"/>' +
							'</svg>' +
						'</div>'+
					'</div>';

		var pos = he.getBoundingClientRect();
		pos = mg$.extend(true, {}, pos);

		var css_ = {
			top: pos.top - 100,
			left: pos.left,
			background: "rgba(255, 255, 255, 0)"
		};

		if (pos.top < 100) {
			css_.top = pos.top + pos.height + 5;
		}

		if(pos.left > window.innerWidth-230){
			css_.left = window.innerWidth-230;
		}

		self.elements.score.css(css_);

		mg$(scoreEl).appendTo(self.elements.score);

		setConfidenceScoreCss(sc.color, el.meta.score);

		showingScoreOf = he;
	}

	function createOutline(he) {
		var pos = he.getBoundingClientRect();
		pos = mg$.extend(true, {}, pos);

		var b = 2;
		var backgroundColor = '';

		var os = GmCXt.getStepSettings();

		if (os) {
			b = os.selectorStyle.borderWidth;
			backgroundColor = os.selectorStyle.borderColor;
		}

		pos.top = pos.top - b;
		pos.left = pos.left - b;
		pos.width = pos.width + (b * 2);
		pos.height = pos.height + (b * 2);
		var position = 'fixed';

		self.elements.score.css({
			position: position
		});

		showConfidenceScore(he, pos);

		self.elements.top.css({
			top: Math.max(0, pos.top),
			left: pos.left,
			width: pos.width,
			height: b,
			background: backgroundColor,
			position: position
		});
		self.elements.bottom.css({
			top: pos.top + pos.height - b,
			left: pos.left,
			width: pos.width,
			height: b,
			background: backgroundColor,
			position: position
		});
		self.elements.left.css({
			top: pos.top,
			left: Math.max(0, pos.left),
			width: b,
			height: pos.height,
			background: backgroundColor,
			position: position
		});
		self.elements.right.css({
			top: pos.top,
			left: pos.left + pos.width - b,
			width: b,
			height: pos.height,
			background: backgroundColor,
			position: position
		});
	}

	function updateOutlinePosition(e) {
		onBodyMouseEnter(); // clear outline from other frame every time when mousemove or mouseover event occurs
		e.stopPropagation();

		if ((GmCXt.enableNavigateTool === true && !GmCXt.enableManualJQuerySelector) ||
			(GmCXt.enableManualJQuerySelector && !GmCXt.jQElementFound)) {
			hideOutline();
			return;
		} else if (GmCXt.jQElementFound) {
			return;
		}

		if (typeof e.target.className == "string" &&
			e.target.className.indexOf('mgPlayerJSTest_select-tool-outline') !== -1) {
			return;
		}

		if (e.target.tagName === 'IFRAME') {
			return;
		}

		if (e.target.shadowRoot && !shadowRoots.includes(e.target)) {
			e.target.shadowRoot.addEventListener('mousemove', updateOutlinePosition);
			shadowRoots.push(e.target);
		}

		showOutline();

		self.he = e.target;
		skipSlot();

		createOutline(self.he);
	}

	function createOutlineElements() {

		var c = 'mgPlayerJSTest_select-tool-outline ' + self.id + ' mgPlayerJSTest_new-outline';

		if (self.identifier && self.identifier == 'blackout-request') {
			c += ' mgPlayerJSTest_blackout-tool-outline';
		} else if (self.identifier && self.identifier === 'rules-engine-request') {
			c += ' mgPlayerJSTest_rules-engine-tool-outline';
		}
		var st = '';
		var div = '<div class="' + c + '"' + st + '></div>';

		self.elements.top = mg$(div).appendTo('html');
		self.elements.bottom = mg$(div).appendTo('html');
		self.elements.left = mg$(div).appendTo('html');
		self.elements.right = mg$(div).appendTo('html');
		self.elements.score = mg$(div).appendTo('html');
	}
	return pub;
};

GmCXt.getMatchConfidence = function(score) {

	var val = '0/5';
	var color = '#ff0000';
	var class_ = 'mgPlayerJSTest_level-0';

	if (score === 5) {
		val = '5/5';
		color = '#0069d9';
		class_ = 'mgPlayerJSTest_level-5';
	} else if (score === 4) {
		val = '4/5';
		color = '#6bc9b8';
		class_ = 'mgPlayerJSTest_level-4';
	} else if (score === 3) {
		val = '3/5';
		color = '#F9AF6A';
		class_ = 'mgPlayerJSTest_level-3';
	} else if (score === 2) {
		val = '2/5';
		color = '#DE350B';
		class_ = 'mgPlayerJSTest_level-2';
	} else if (score === 1) {
		val = '1/5';
		color = '#B3463F';
		class_ = 'mgPlayerJSTest_level-1';
	}

	return {
		val: val,
		color: color,
		class_: class_
	};
};
/**
 * @file TestMe module
 * @author Nilesh Pachpande
 */

GmCXt.testMeWatcher = function(options) {
	options = options || {};

	var pub = {};

	var self = {
		frame: options.frame
	};

	GmCXt.selectorTool = GmCXt.selector({
		cb: null,
		frame: self.frame
	});

	pub.start = function() {
		GmCXt.TestMeActive = true;
		subscribeEvents();
		GmCXt.log(58, "START WATCHING events for MyTest");
	};

	pub.stop = function() {
		GmCXt.TestMeActive = false;
		unsubscribeEvents();
		GmCXt.log(58, "STOP WATCHING events for MyTest");
	};

	function subscribeEvents() {
		unsubscribeEvents();
		window.addEventListener('mousedown', mouseDownEvent);
		window.addEventListener('mouseover', mouseOverEventDebouce);
	}

	function unsubscribeEvents() {
		window.removeEventListener('mousedown', mouseDownEvent);
		window.removeEventListener('mouseover', mouseOverEventDebouce);
	}

	function stopOnEscape(e) {
		if (e.keyCode === 27) {
			pub.stop();
		}
	}

	function checkTestMeWidgetClick(e) {
		if (e.target.className === 'mgPlayerJSTest_testme-active' ||
			e.target.className === 'mgPlayerJSTest_testme-active-head' ||
			e.target.className === 'mgPlayerJSTest_play-pause-position-top' ||
			e.target.className === 'mgPlayerJSTest_play-pause-position-bottom' ||
			e.target.className === 'mgPlayerJSTest_testme-active-close' ||
			e.target.className === 'mgPlayerJSTest_testme-active-inner' ||
			e.target.className === 'mgPlayerJSTest_testme-active-title' ||
			e.target.className === 'mgPlayerJSTest_testme-active-stop') {

			return true;
		} else {
			return false;
		}
	}

	function skipSvgIcon() {
		if (GmCXt.isSvgTag(self.he.tagName)) {

			self.he = self.he.parentNode;

			while (GmCXt.isSvgTag(self.he.tagName)) {
				self.he = self.he.parentNode;
			}
		}
	}

	function skipSalesforcePrimitiveEl() {
		if (GmCXt.checkSalesForceSite()) {
			if (self.he.tagName === 'LIGHTNING-PRIMITIVE-ICON') {
				self.he = self.he.parentNode;
			}

			var parent = self.he.parentNode;
			if (self.he.tagName === 'BUTTON' &&
				(parent.tagName === 'LIGHTNING-BUTTON-ICON' || parent.tagName === 'LIGHTNING-BUTTON')) {
				self.he = parent;
			}
		}
	}

	function recordEvent(e, eventName) {
		if (!checkTestMeWidgetClick(e)) {

			self.he = e.target;

			skipSvgIcon();
			skipSalesforcePrimitiveEl();

			var tempHe = self.he;
			var element = [];
			for (var i = 0; i < 3; i++) {
				if (tempHe) {
					element[i] = GmCXt.selectorTool.getElData(tempHe).element;
					tempHe = tempHe.parentNode;
				}
			}

			var data = {
				event: eventName,
				element: element
			};
			GmCXt.sendMessageToTheTopWindow('mgPlayerJSTest_action:record_event;testMe', data);
		}
	}

	function mouseDownEvent(e) {
		recordEvent(e, 'click');
	}

	function mouseOverEvent(e) {
		recordEvent(e, 'mouseover');
	}

	var mouseOverEventDebouce = GmCXt.debounce(mouseOverEvent, 10);
	return pub;
};

GmCXt.getEmbedCode = function() {
    var embedCode = "if(!window.guideMe)window.guideMe={}; " +
        "window.guideMe.baseUrl='" + GmCXt.conf.clientJsBaseUrl + "';" +
        "var a=document.createElement('script');" +
        "a.src=guideMe.baseUrl+'guideme.js';" +
        "document.head.appendChild(a);";

    return embedCode;
};


GmCXt.injectGuideMeInIframes = function(windowInstance) {

    var frames_ = windowInstance.frames;
    var randomNumGenerated = function() {
        return crypto.getRandomValues(new Uint32Array(1))[0] / Math.pow(2, 32);
    };
    for (var i = 0; i < frames_.length; i++) {

        try {
            if (!frames_[i].name) {
                frames_[i].name = 'name_' + randomNumGenerated();
            }

            if (GmCXt.isAllowedIframe(frames_[i].name)) {

                if (!frames_[i].GmCXt && (frames_[i].innerWidth > 1) && (frames_[i].innerHeight > 1)) {
                    var embedScript = document.createTextNode(GmCXt.getEmbedCode());

                    var newScript = document.createElement("script");
                    newScript.appendChild(embedScript);

                    var frameContent = frames_[i].document.head;
                    frameContent.appendChild(newScript);

                }

                if (frames_[i].window.frames.length) {
                    GmCXt.injectGuideMeInIframes(frames_[i].window);
                }
            }
        } catch (e) {}
    }
};
(function() {
	function load(cssId, path) {
		if (!document.getElementById(cssId)) {
			var head = document.getElementsByTagName('head')[0];
			var link = document.createElement('link');
			link.id = cssId;
			link.rel = 'stylesheet';
			link.type = 'text/css';

			if (GmCXt.conf.baseUrl) {
				link.href = GmCXt.conf.baseUrl + path;
			} else {
				link.href = GmCXt.conf.clientJsBaseUrl + path;
			}

			link.media = 'all';
			head.appendChild(link);
		}
	}

	load('guideme-clientframe-css', 'content_script/dom_selector/css/style_1749722599831.css');
})();